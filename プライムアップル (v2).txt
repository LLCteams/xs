local mewing10 = loadstring(game:HttpGet('https://raw.githubusercontent.com/LLCteams/xs/refs/heads/main/%E8%A6%81%E6%8A%93%E5%88%B0%E7%9A%84%E5%B0%B1%E6%98%AF%E5%9D%97%E7%8A%B6%E7%89%A9'))()
mewing10.NormalNotification({
    Title = "System",
    Description = "This is remaked, thanks for using!",
    ImagesID = "rbxassetid://82670617579434", 
    SoundID = "rbxassetid://", -- make sure the sound id
    Duration = 20
})
wait(0.5)
mewing10.ReplyNofitication({
    Title = "Feedback - Team",
    Description = "Found a issue? type the issue here!",
    ImagesID = "rbxassetid://",
    SoundID = "", -- make sure the sound id
    PlaceholderText = "Type Feedback",
    SendCallback = function() 
        warn('Reported issues and bugs to the teams!') 
    end,
})

local Library = loadstring(game:HttpGetAsync('https://raw.githubusercontent.com/3345-c-a-t-s-u-s/Acrylic/refs/heads/main/source'))();

local Window = Library:CreateWindow({
	Title = 'UniverseX',
	Logo = "rbxassetid://128000497825850",
	KeySystem = false, 
	KeySystemInfo = {
		Title = "UniverseX",
		OnGetKey = function()
			return setclipboard('Key Disabled!')
		end,
		OnLogin = function(key)
			if key == "UX_20862094739373638" then
				wait(0.1);
				return true;
			end;
			
			wait();
			
			return false;
		end,
	}
});
Window:Destroy()

-- LoadC
game:GetService("Players").LocalPlayer.CameraMaxZoomDistance = 980000
--[[
local TweenService = game:GetService("TweenService")
local PlayerGui = game.Players.LocalPlayer:WaitForChild("PlayerGui")

local screenGui = Instance.new("ScreenGui")
screenGui.Parent = PlayerGui

local textLabel = Instance.new("TextLabel", screenGui)
textLabel.Size = UDim2.new(0.5, 0, 0.1, 0)  
textLabel.Position = UDim2.new(0.5, 0, 0.5, 0) 
textLabel.AnchorPoint = Vector2.new(0.5, 0.5)  
textLabel.TextScaled = true  
textLabel.BackgroundTransparency = 1  
textLabel.TextTransparency = 1 
textLabel.Font = Enum.Font.GothamBold 
textLabel.TextColor3 = Color3.new(1, 1, 1)  
textLabel.Text = "Updated current version; 3.0"

local function animateTextInOut(duration, pauseTime)
    local tweenInfo = TweenInfo.new(duration, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    
    local appearGoal = {TextTransparency = 0}
    local appearTween = TweenService:Create(textLabel, tweenInfo, appearGoal)
    appearTween:Play()
    wait(duration + pauseTime) 
    
    local disappearGoal = {TextTransparency = 1}
    local disappearTween = TweenService:Create(textLabel, tweenInfo, disappearGoal)
    disappearTween:Play()
end

animateTextInOut(5, 5)

-- NEW

-- Configuration
local Config = {
    ANIMATION = {
        TOTAL_DURATION = 17,
        FADE_IN = 2,
        DISPLAY_TIME = 8,
        FADE_OUT = 2,
        BOUNCE_STRENGTH = 20,
        SPIN_SPEED = 360
    },
    SIZES = {
        INITIAL = UDim2.new(0, 0, 0, 0),
        DISPLAY = UDim2.new(0, 200, 0, 100),
        FINAL = UDim2.new(0, 250, 0, 125)
    },
    COLORS = {
        TITLE = Color3.fromRGB(180, 180, 180),
        SNOWFLAKE = Color3.fromRGB(255, 255, 255)
    },
    AUDIO = {
        ID = "rbxassetid://9046392150"
    },
    DECALS = {
        SNOWFLAKE = "http://www.roblox.com/asset/?id=5689866"
    },
    SNOWFALL = {
        AMOUNT = 60,
        SPEED = 0.01,
        MIN_SIZE = 100,
        MAX_SIZE = 150,
        START_DELAY = 0.6
    }
}

-- Services
local Services = {
    Players = game:GetService("Players"),
    TweenService = game:GetService("TweenService"),
    RunService = game:GetService("RunService"),
    Lighting = game:GetService("Lighting")
}

-- Create enhanced blur and lighting effects
local function createAtmosphere()
    local atmosphere = Instance.new("ColorCorrectionEffect")
    atmosphere.Parent = Services.Lighting
    atmosphere.Brightness = 0
    atmosphere.Contrast = 0
    atmosphere.TintColor = Color3.fromRGB(255, 255, 255)
    
    local blur = Instance.new("BlurEffect")
    blur.Parent = Services.Lighting
    blur.Size = 0
    
    return atmosphere, blur
end

-- Create snowfall effect
local function createSnowfall(parent)
    local snowflakes = {}
    local container = Instance.new("Frame")
    container.Size = UDim2.new(1, 0, 1, 0)
    container.BackgroundTransparency = 1
    container.Parent = parent
    
    -- Create multiple snowflakes
    for i = 1, Config.SNOWFALL.AMOUNT do
        local data = {
            speed = Config.SNOWFALL.SPEED,
            rotSpeed = math.random(-2, 2),
            currentX = math.random(), -- Random starting X position
            currentY = 0, -- All start at top
            swayOffset = math.random() * math.pi * 2,
            swayAmount = 0.001,
            isMoving = false -- Start not moving
        }
        
        local flake = Instance.new("ImageLabel")
        flake.Image = Config.DECALS.SNOWFLAKE
        
        local size = math.random(Config.SNOWFALL.MIN_SIZE, Config.SNOWFALL.MAX_SIZE)
        flake.Size = UDim2.new(0, size, 0, size)
        flake.Position = UDim2.new(data.currentX, 4555, data.currentY, 3555)
        flake.BackgroundTransparency = 1
        flake.ImageColor3 = Config.COLORS.SNOWFLAKE
        flake.ImageTransparency = 0.1
        flake.Parent = container
        flake.ZIndex = -5
        
        table.insert(snowflakes, {
            instance = flake,
            data = data
        })
    end
    
    -- Movement function
    local function updateSnowflakes()
        for _, snowflake in ipairs(snowflakes) do
            local flake = snowflake.instance
            local data = snowflake.data
            
            if data.isMoving then
                -- Update Y position (falling)
                data.currentY = data.currentY + data.speed
                
                -- Very slight X sway
                local sway = math.sin(tick() + data.swayOffset) * data.swayAmount
                
                -- Reset position if snowflake goes off screen
                if data.currentY > 1.2 then
                    data.currentY = -0.2
                    data.currentX = math.random()
                end
                
                flake.Position = UDim2.new(data.currentX + sway, 0, data.currentY, 0)
                flake.Rotation = (flake.Rotation + data.rotSpeed) % 360
            end
        end
    end
    
    -- Function to start snowfall with delay between each snowflake
    local function startSnowfall()
        for i, snowflake in ipairs(snowflakes) do
            task.delay(i * Config.SNOWFALL.START_DELAY, function()
                snowflake.data.isMoving = true
            end)
        end
    end
    
    return updateSnowflakes, startSnowfall, snowflakes
end

-- Create background snowflake
local function createBackgroundSnowflake(parent)
    local snowflake = Instance.new("ImageLabel")
    snowflake.Image = Config.DECALS.SNOWFLAKE
    snowflake.Size = UDim2.new(2, 0, 2, 0) -- Changed to maintain aspect ratio
    snowflake.Position = UDim2.new(0.5, 0, 0.5, 0)
    snowflake.AnchorPoint = Vector2.new(0.5, 0.5)
    snowflake.BackgroundTransparency = 1
    snowflake.ImageTransparency = 0.9
    snowflake.ImageColor3 = Config.COLORS.SNOWFLAKE
    snowflake.ZIndex = -1
    snowflake.Parent = parent
    snowflake.SizeConstraint = Enum.SizeConstraint.RelativeYY -- Added to maintain aspect ratio
    
    -- Update pulse animation sizes
    local function pulseAnimation()
        local TweenService = game:GetService("TweenService")
        
        local pulseOut = TweenService:Create(snowflake,
            TweenInfo.new(2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut),
            {Size = UDim2.new(2.2, 0, 2.2, 0)} -- Adjusted for aspect ratio
        )
        
        local pulseIn = TweenService:Create(snowflake,
            TweenInfo.new(2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut),
            {Size = UDim2.new(2, 0, 2, 0)} -- Adjusted for aspect ratio
        )
        
        pulseOut.Completed:Connect(function()
            pulseIn:Play()
        end)
        
        pulseIn.Completed:Connect(function()
            pulseOut:Play()
        end)
        
        pulseOut:Play()
    end
    
    pulseAnimation()
    return snowflake
end

-- Enhanced intro animation
local function playIntro()
    local atmosphere, blur = createAtmosphere()
    local connections = {}
    
    -- Create UI
    local screenGui = Instance.new("ScreenGui")
    screenGui.Parent = Services.Players.LocalPlayer:WaitForChild("PlayerGui")
    
    local mainFrame = Instance.new("Frame")
    mainFrame.Size = UDim2.new(1, 0, 1, 0)
    mainFrame.BackgroundTransparency = 1
    mainFrame.Parent = screenGui
    
    local mainText = Instance.new("TextLabel")
    mainText.Size = Config.SIZES.INITIAL
    mainText.Position = UDim2.new(0.5, 0, 0.5, 0)
    mainText.AnchorPoint = Vector2.new(0.5, 0.5)
    mainText.BackgroundTransparency = 1
    mainText.Font = Enum.Font.GothamBlack
    mainText.Text = "UniverseX"
    mainText.TextColor3 = Config.COLORS.TITLE
    mainText.TextSize = 90
    mainText.TextTransparency = 1
    mainText.Parent = mainFrame
    
    local bgSnowflake = createBackgroundSnowflake(mainText)
    local updateSnowflakes, startSnowfall, snowflakes = createSnowfall(mainFrame)
    
    -- Animation sequence
    local function animate()
        -- Play audio
        local sound = Instance.new("Sound")
        sound.SoundId = Config.AUDIO.ID
        sound.Parent = workspace
        sound:Play()
        
        -- Add snowfall update connection
        table.insert(connections, Services.RunService.RenderStepped:Connect(updateSnowflakes))
        
        -- Make snowflakes visible and start them falling
        for _, snowflake in ipairs(snowflakes) do
            snowflake.instance.Visible = true
        end
        startSnowfall()
        
        -- Rotate background snowflake
        local function updateSnowflake()
            bgSnowflake.Rotation = (bgSnowflake.Rotation + 0.5) % 360
        end
        table.insert(connections, Services.RunService.RenderStepped:Connect(updateSnowflake))
        
        -- Initial bounce-in animation
        local bounceIn = Services.TweenService:Create(mainText,
            TweenInfo.new(Config.ANIMATION.FADE_IN, Enum.EasingStyle.Bounce, Enum.EasingDirection.Out),
            {Size = Config.SIZES.DISPLAY, TextTransparency = 0}
        )
        bounceIn:Play()
        
        -- Fun hover animation
        task.wait(Config.ANIMATION.FADE_IN)
        
        local function hoverAnimation()
            local hoverUp = Services.TweenService:Create(mainText,
                TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut),
                {Position = mainText.Position + UDim2.new(0, 0, -0.02, 0)}
            )
            
            local hoverDown = Services.TweenService:Create(mainText,
                TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut),
                {Position = mainText.Position + UDim2.new(0, 0, 0.02, 0)}
            )
            
            hoverUp.Completed:Connect(function()
                hoverDown:Play()
            end)
            
            hoverDown.Completed:Connect(function()
                hoverUp:Play()
            end)
            
            hoverUp:Play()
        end
        
        hoverAnimation()
        
        -- Cleanup with fade out
        task.wait(Config.ANIMATION.DISPLAY_TIME)
        
        -- Fade out snowflakes first
        for _, snowflake in ipairs(snowflakes) do
            local fadeOutTween = Services.TweenService:Create(
                snowflake.instance,
                TweenInfo.new(Config.ANIMATION.FADE_OUT, Enum.EasingStyle.Linear),
                {ImageTransparency = 1}
            )
            fadeOutTween:Play()
        end
        
        -- Fade out main text
        local fadeOut = Services.TweenService:Create(mainText,
            TweenInfo.new(Config.ANIMATION.FADE_OUT, Enum.EasingStyle.Back, Enum.EasingDirection.In),
            {TextTransparency = 1, Size = Config.SIZES.FINAL, Rotation = 360}
        )
        fadeOut:Play()
        
        task.wait(Config.ANIMATION.FADE_OUT)
        for _, connection in ipairs(connections) do
            connection:Disconnect()
        end
        sound:Destroy()
        screenGui:Destroy()
    end
    
    animate()
end

-- Execute with error handling
local success, err = pcall(playIntro)
if not success then
    warn("Error during intro animation:", err)
end

-- end of Winter Load
-- others loader

local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")

local ScreenGui = Instance.new("ScreenGui")
local UIScale = Instance.new("UIScale")
local MainFrame = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local UIGradient = Instance.new("UIGradient")
local Title = Instance.new("TextLabel")
local Separator = Instance.new("Frame")
local CreditsContainer = Instance.new("Frame")
local OwnerCredit = Instance.new("TextLabel")
local OwnerIcon = Instance.new("ImageLabel")
local FriendsCredit = Instance.new("TextLabel")
local FriendIcon = Instance.new("ImageLabel")
local LoadingBarFrame = Instance.new("Frame")
local LoadingBarCorner = Instance.new("UICorner")
local LoadingBar = Instance.new("Frame")
local LoadingBarInnerCorner = Instance.new("UICorner")
local LoadingText = Instance.new("TextLabel")
local GlowEffect = Instance.new("ImageLabel")
local StatusText = Instance.new("TextLabel")

ScreenGui.Parent = Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ResetOnSpawn = false
ScreenGui.IgnoreGuiInset = true

UIScale.Parent = ScreenGui

local function updateUIScale()
    local viewportSize = workspace.CurrentCamera.ViewportSize
    local baseSize = Vector2.new(1920, 1080) -- Base resolution
    local scale = math.min(viewportSize.X/baseSize.X, viewportSize.Y/baseSize.Y)
    UIScale.Scale = scale
end

workspace.CurrentCamera:GetPropertyChangedSignal("ViewportSize"):Connect(updateUIScale)
updateUIScale() 

MainFrame.Name = "MainFrame"
MainFrame.Parent = ScreenGui
MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
MainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
MainFrame.Size = UDim2.new(0, 400, 0, 275) -- size
MainFrame.BorderSizePixel = 0

UICorner.CornerRadius = UDim.new(0, 12)
UICorner.Parent = MainFrame

UIGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(40, 40, 40)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(25, 25, 25))
})
UIGradient.Rotation = 45
UIGradient.Parent = MainFrame

GlowEffect.Name = "GlowEffect"
GlowEffect.Parent = MainFrame
GlowEffect.BackgroundTransparency = 1
GlowEffect.Position = UDim2.new(0.5, -250, 0.5, -250)
GlowEffect.Size = UDim2.new(0, 500, 0, 500)
GlowEffect.Image = "rbxassetid://7131946098"
GlowEffect.ImageColor3 = Color3.fromRGB(0, 255, 100)
GlowEffect.ImageTransparency = 0.9

Title.Name = "Title"
Title.Parent = MainFrame
Title.BackgroundTransparency = 1
Title.Position = UDim2.new(0, 0, 0, 15)
Title.Size = UDim2.new(1, 0, 0, 30)
Title.Font = Enum.Font.GothamBold
Title.Text = "System Loading"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextSize = 24

Separator.Name = "Separator"
Separator.Parent = MainFrame
Separator.BackgroundColor3 = Color3.fromRGB(0, 255, 100)
Separator.Position = UDim2.new(0.25, 0, 0, 55)
Separator.Size = UDim2.new(0.5, 0, 0, 2)
Separator.BorderSizePixel = 0

CreditsContainer.Name = "CreditsContainer"
CreditsContainer.Parent = MainFrame
CreditsContainer.BackgroundTransparency = 1
CreditsContainer.Position = UDim2.new(0, 0, 0, 65)
CreditsContainer.Size = UDim2.new(1, 0, 0, 80)

OwnerIcon.Name = "OwnerIcon"
OwnerIcon.Parent = CreditsContainer
OwnerIcon.BackgroundTransparency = 1
OwnerIcon.Position = UDim2.new(0.5, -80, 0, 10)
OwnerIcon.Size = UDim2.new(0, 24, 0, 24)
OwnerIcon.Image = "rbxassetid://7072706796"
OwnerIcon.ImageColor3 = Color3.fromRGB(0, 255, 100)

OwnerCredit.Name = "OwnerCredit"
OwnerCredit.Parent = CreditsContainer
OwnerCredit.BackgroundTransparency = 1
OwnerCredit.Position = UDim2.new(0.5, -50, 0, 10)
OwnerCredit.Size = UDim2.new(0, 160, 0, 24)
OwnerCredit.Font = Enum.Font.GothamSemibold
OwnerCredit.Text = "Owner: Vercel Int."
OwnerCredit.TextColor3 = Color3.fromRGB(255, 255, 255)
OwnerCredit.TextSize = 18
OwnerCredit.TextXAlignment = Enum.TextXAlignment.Left

FriendIcon.Name = "FriendIcon"
FriendIcon.Parent = CreditsContainer
FriendIcon.BackgroundTransparency = 1
FriendIcon.Position = UDim2.new(0.5, -80, 0, 40)
FriendIcon.Size = UDim2.new(0, 24, 0, 24)
FriendIcon.Image = "rbxassetid://7072724538"
FriendIcon.ImageColor3 = Color3.fromRGB(0, 255, 100)

FriendsCredit.Name = "FriendsCredit"
FriendsCredit.Parent = CreditsContainer
FriendsCredit.BackgroundTransparency = 1
FriendsCredit.Position = UDim2.new(0.5, -50, 0, 40)
FriendsCredit.Size = UDim2.new(0, 160, 0, 24)
FriendsCredit.Font = Enum.Font.GothamSemibold
FriendsCredit.Text = "UX by UXteam"
FriendsCredit.TextColor3 = Color3.fromRGB(255, 255, 255)
FriendsCredit.TextSize = 18
FriendsCredit.TextXAlignment = Enum.TextXAlignment.Left

LoadingBarFrame.Name = "LoadingBarFrame"
LoadingBarFrame.Parent = MainFrame
LoadingBarFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
LoadingBarFrame.BorderSizePixel = 0
LoadingBarFrame.Position = UDim2.new(0.1, 0, 0.7, 0)
LoadingBarFrame.Size = UDim2.new(0.8, 0, 0, 24)

LoadingBarCorner.CornerRadius = UDim.new(0, 12)
LoadingBarCorner.Parent = LoadingBarFrame

LoadingBar.Name = "LoadingBar"
LoadingBar.Parent = LoadingBarFrame
LoadingBar.BackgroundColor3 = Color3.fromRGB(0, 255, 100)
LoadingBar.BorderSizePixel = 0
LoadingBar.Size = UDim2.new(0, 0, 1, 0)

LoadingBarInnerCorner.CornerRadius = UDim.new(0, 12)
LoadingBarInnerCorner.Parent = LoadingBar

StatusText.Name = "StatusText"
StatusText.Parent = MainFrame
StatusText.BackgroundTransparency = 1
StatusText.Position = UDim2.new(0, 0, 0.85, 0)
StatusText.Size = UDim2.new(1, 0, 0, 24)
StatusText.Font = Enum.Font.GothamSemibold
StatusText.Text = "Initializing..."
StatusText.TextColor3 = Color3.fromRGB(200, 200, 200)
StatusText.TextSize = 16

LoadingText.Name = "LoadingText"
LoadingText.Parent = LoadingBarFrame
LoadingText.BackgroundTransparency = 1
LoadingText.Size = UDim2.new(1, 0, 1, 0)
LoadingText.Font = Enum.Font.GothamBold
LoadingText.Text = "0%"
LoadingText.TextColor3 = Color3.fromRGB(255, 255, 255)
LoadingText.TextSize = 16

local loadingMessages = {
    "Initializing system...",
    "Loading resources...",
    "Preparing universal...",
    "Setting up...",
    "removing freezer...",
    "Finalizing..."
}
local function fadeIn(instance, duration)
    instance.BackgroundTransparency = 1
    local tween = TweenService:Create(instance, TweenInfo.new(duration, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {
        BackgroundTransparency = 0
    })
    tween:Play()
end

local function fadeOut(instance, duration)
    local tween = TweenService:Create(instance, TweenInfo.new(duration, Enum.EasingStyle.Sine, Enum.EasingDirection.In), {
        BackgroundTransparency = 1
    })
    tween:Play()
end

local function playEntranceAnimation()
    MainFrame.Position = UDim2.new(0.5, 0, -0.5, 0)
    MainFrame.BackgroundTransparency = 1
    
    local tweenInfo = TweenInfo.new(
        1.2,
        Enum.EasingStyle.Cubic,
        Enum.EasingDirection.Out
    )
    
    local tween = TweenService:Create(MainFrame, tweenInfo, {
        Position = UDim2.new(0.5, 0, 0.5, 0),
        BackgroundTransparency = 0
    })
    
    tween:Play()
    return tween
end

local function playExitAnimation()
    local tweenInfo = TweenInfo.new(
        1.2,
        Enum.EasingStyle.Cubic,
        Enum.EasingDirection.In
    )
    
    local tween = TweenService:Create(MainFrame, tweenInfo, {
        Position = UDim2.new(0.5, 0, 1.5, 0),
        BackgroundTransparency = 1
    })
    
    tween:Play()
    return tween
end

local function animateLoading()
    local startTime = tick()
    local duration = 12
    
    -- Gradient Animation
    spawn(function()
        while true do
            UIGradient.Rotation = UIGradient.Rotation + 1
            if UIGradient.Rotation >= 360 then
                UIGradient.Rotation = 0
            end
            wait(0.1)
        end
    end)
    
    -- Glow Animation
    spawn(function()
        while true do
            local tweenInfo = TweenInfo.new(
                2.5,
                Enum.EasingStyle.Sine,
                Enum.EasingDirection.InOut,
                -1,
                true
            )
            local tween = TweenService:Create(GlowEffect, tweenInfo, {
                ImageTransparency = 0.7
            })
            tween:Play()
            wait(5)
        end
    end)
    
    while true do
        local elapsed = tick() - startTime
        local progress = math.clamp(elapsed / duration, 0, 1)
        local percentage = math.floor(progress * 100)
        
        local tweenInfo = TweenInfo.new(0.05, Enum.EasingStyle.Linear)
        local tween = TweenService:Create(LoadingBar, tweenInfo, {
            Size = UDim2.new(progress, 0, 1, 0)
        })
        tween:Play()
        
        LoadingText.Text = percentage .. "%"
        
        local messageIndex = math.floor(progress * (#loadingMessages - 1)) + 1
        StatusText.Text = loadingMessages[messageIndex]
        
        if progress >= 1 then
            StatusText.Text = "Loading Complete!"
            wait(1)
            playExitAnimation()
            break
        end
        
        wait(0.03)
    end
end

playEntranceAnimation().Completed:Wait()
animateLoading()
]]

-- Exp

local OutdatedScreen = Instance.new("ScreenGui")
local ImageFrame = Instance.new("ImageLabel")
local UICorner = Instance.new("UICorner")
local VersionOutdatedText = Instance.new("TextLabel")
local VexHubLogo = Instance.new("ImageLabel")
local JoinServerButton = Instance.new("TextButton")
local UICorner_2 = Instance.new("UICorner")
local UIStroke = Instance.new("UIStroke")
local Stuff = Instance.new("TextLabel")

--Properties:

OutdatedScreen.Name = "OutdatedScreen"
OutdatedScreen.Parent = game:GetService("CoreGui")
OutdatedScreen.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
OutdatedScreen.ResetOnSpawn = false

ImageFrame.Name = "ImageFrame"
ImageFrame.Parent = OutdatedScreen
ImageFrame.Active = true
ImageFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
ImageFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageFrame.BorderSizePixel = 0
ImageFrame.Position = UDim2.new(0.354136616, 0, 0.284705848, 0)
ImageFrame.Size = UDim2.new(0, 230, 0, 200)
ImageFrame.Image = "http://www.roblox.com/asset/?id=130932966658755"
ImageFrame.ImageTransparency = 0.500
ImageFrame.ScaleType = Enum.ScaleType.Crop
ImageFrame.Active = true
ImageFrame.Draggable = true

UICorner.CornerRadius = UDim.new(0, 15)
UICorner.Parent = ImageFrame

VersionOutdatedText.Name = "VersionOutdatedText"
VersionOutdatedText.Parent = ImageFrame
VersionOutdatedText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
VersionOutdatedText.BackgroundTransparency = 1.000
VersionOutdatedText.BorderColor3 = Color3.fromRGB(0, 0, 0)
VersionOutdatedText.BorderSizePixel = 0
VersionOutdatedText.Position = UDim2.new(0.469565213, 0, 0.110652164, 0)
VersionOutdatedText.Size = UDim2.new(0, 94, 0, 55)
VersionOutdatedText.Font = Enum.Font.GothamBold
VersionOutdatedText.Text = "Version Unstable"
VersionOutdatedText.TextColor3 = Color3.fromRGB(255, 255, 255)
VersionOutdatedText.TextSize = 20.000
VersionOutdatedText.TextWrapped = true

VexHubLogo.Name = "VexHubLogo"
VexHubLogo.Parent = ImageFrame
VexHubLogo.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
VexHubLogo.BackgroundTransparency = 1.000
VexHubLogo.BorderColor3 = Color3.fromRGB(0, 0, 0)
VexHubLogo.BorderSizePixel = 0
VexHubLogo.Position = UDim2.new(0.0608695634, 0, 0, 0)
VexHubLogo.Size = UDim2.new(0, 100, 0, 100)
VexHubLogo.Image = "rbxassetid://82670617579434"

JoinServerButton.Name = "JoinServerButton"
JoinServerButton.Parent = ImageFrame
JoinServerButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
JoinServerButton.BackgroundTransparency = 0.900
JoinServerButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
JoinServerButton.BorderSizePixel = 0
JoinServerButton.Position = UDim2.new(0.0652173907, 0, 0.819999993, 0)
JoinServerButton.Size = UDim2.new(0, 200, 0, 23)
JoinServerButton.Font = Enum.Font.GothamMedium
JoinServerButton.Text = "Join the Server"
JoinServerButton.TextColor3 = Color3.fromRGB(255, 255, 255)
JoinServerButton.TextSize = 16.000

UICorner_2.Parent = JoinServerButton

UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke.Color = Color3.fromRGB(255, 255, 255)
UIStroke.Thickness = 0.500
UIStroke.Transparency = 0.700
UIStroke.Parent = JoinServerButton

Stuff.Name = "Stuff"
Stuff.Parent = ImageFrame
Stuff.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Stuff.BackgroundTransparency = 1.000
Stuff.BorderColor3 = Color3.fromRGB(0, 0, 0)
Stuff.BorderSizePixel = 0
Stuff.Position = UDim2.new(0.0217391308, 0, 0.495439142, 0)
Stuff.Size = UDim2.new(0, 220, 0, 48)
Stuff.Font = Enum.Font.Gotham
Stuff.Text = "UniverseX is discontinued, which newest 4.0 version will available soon with higher experiences" -- UniverseX is discontinued, the experience is unable to load this version. UniverseX moved to newone for high experience
Stuff.TextColor3 = Color3.fromRGB(255, 255, 255)
Stuff.TextSize = 12.000
Stuff.TextWrapped = true
Stuff.TextYAlignment = Enum.TextYAlignment.Top

JoinServerButton.MouseButton1Down:connect(function()
setclipboard("https://discord.gg/43mDSjxb9U")
end)

-- Load
--[[
-- Combine whitelist system and command execution logic in one loadstring
local combinedCode = [[
-- Whitelist configuration
local premiumUsers = {"123Serternals"}
local GuiMakers = {""}
local Advertisers = {"Cameron899898"}
local Scripters = {"Heavenhealthly"}
local Owners = {""}

-- Function to create and display a popup message with rainbow text color
local function showPopup(player, message)
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "WhitelistPopup"
    screenGui.Parent = player.PlayerGui

    local textLabel = Instance.new("TextLabel")
    textLabel.Name = "PopupLabel"
    textLabel.Text = message
    textLabel.BackgroundTransparency = 1
    textLabel.Size = UDim2.new(0.5, 0, 0.1, 0)
    textLabel.Position = UDim2.new(0.25, 0, 0.45, 0)
    textLabel.TextScaled = true
    textLabel.TextStrokeTransparency = 0.7
    textLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    textLabel.Font = Enum.Font.GothamBold
    textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)

    local uiGradient = Instance.new("UIGradient")
    uiGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 0, 0)), -- Red
        ColorSequenceKeypoint.new(0.2, Color3.fromRGB(255, 127, 0)), -- Orange
        ColorSequenceKeypoint.new(0.4, Color3.fromRGB(255, 255, 0)), -- Yellow
        ColorSequenceKeypoint.new(0.6, Color3.fromRGB(0, 255, 0)), -- Green
        ColorSequenceKeypoint.new(0.8, Color3.fromRGB(0, 0, 255)), -- Blue
        ColorSequenceKeypoint.new(1, Color3.fromRGB(75, 0, 130)) -- Indigo
    }
    uiGradient.Parent = textLabel

    textLabel.Parent = screenGui

    -- Ensure GUI is visible for 5 seconds
    wait(5)
    screenGui:Destroy()
end

-- Function to check if the player is whitelisted
local function isWhitelisted(playerName)
    return table.find(premiumUsers, playerName) or 
           table.find(GuiMakers, playerName) or 
           table.find(Advertisers, playerName) or 
           table.find(Scripters, playerName) or 
           table.find(Owners, playerName)
end

-- Function to create a tag
local function createTag(player, tagName, textColor, strokeColor, font, fontSize)
    local tag = Instance.new("BillboardGui")
    tag.Name = "PlayerTag"
    tag.AlwaysOnTop = true
    tag.Size = UDim2.new(0, 200, 0, 50)
    tag.StudsOffset = Vector3.new(0, 3, 0)
    tag.Adornee = player.Character.Head

    local label = Instance.new("TextLabel")
    label.Name = "TagLabel"
    label.Size = UDim2.new(1, 0, 1, 0)
    label.BackgroundTransparency = 1
    label.Text = tagName
    label.TextColor3 = textColor
    label.TextStrokeTransparency = 0.5
    label.TextStrokeColor3 = strokeColor
    label.Font = font
    label.FontSize = fontSize
    label.Parent = tag

    tag.Parent = player.Character.Head
end

-- Function to attach tags to players based on their roles
local function attachTags()
    for _, username in ipairs(premiumUsers) do
        local player = game.Players:FindFirstChild(username)
        if player and player.Character then
            createTag(player, "UX Premium user", Color3.new(1, 1, 1), Color3.new(0, 0, 0), Enum.Font.Bangers, Enum.FontSize.Size32)
        end
    end

    for _, username in ipairs(GuiMakers) do
        local player = game.Players:FindFirstChild(username)
        if player and player.Character then
            createTag(player, "UX Maker", Color3.new(1, 1, 1), Color3.new(0, 98, 255), Enum.Font.Creepster, Enum.FontSize.Size32)
        end
    end

    for _, username in ipairs(Advertisers) do
        local player = game.Players:FindFirstChild(username)
        if player and player.Character then
            createTag(player, "UX Advertiser", Color3.new(1, 1, 1), Color3.fromRGB(8, 112, 4), Enum.Font.Gotham, Enum.FontSize.Size32)
        end
    end

    for _, username in ipairs(Scripters) do
        local player = game.Players:FindFirstChild(username)
        if player and player.Character then
            createTag(player, "UX Scripting", Color3.new(1, 1, 1), Color3.fromRGB(168, 52, 235), Enum.Font.Arcade, Enum.FontSize.Size32)
        end
    end

    for _, username in ipairs(Owners) do
        local player = game.Players:FindFirstChild(username)
        if player and player.Character then
            local tag = Instance.new("BillboardGui")
            tag.Name = "PlayerTag"
            tag.AlwaysOnTop = true
            tag.Size = UDim2.new(0, 200, 0, 50)
            tag.StudsOffset = Vector3.new(0, 3, 0)
            tag.Adornee = player.Character.Head

            local label = Instance.new("TextLabel")
            label.Name = "TagLabel"
            label.Size = UDim2.new(1, 0, 1, 0)
            label.BackgroundTransparency = 1
            label.Text = "UniverseX Owner"
            label.TextColor3 = Color3.new(1, 1, 1)
            label.TextStrokeTransparency = 0.5
            label.TextStrokeColor3 = Color3.new(255, 0, 0)
            label.Font = Enum.Font.Arcade
            label.FontSize = Enum.FontSize.Size32
            label.Parent = tag

            tag.Parent = player.Character.Head

            spawn(function()
                while task.wait() do
                    local t = 5
                    local hue = tick() % t / t
                    local colorrr = Color3.fromHSV(hue, 1, 1)
                    label.TextStrokeColor3 = colorrr
                end
            end)
        end
    end
end

-- Function to execute commands based on player message
local function executeCommand(player, msg)
    if isWhitelisted(player.Name) then
        -- Example command handling
        if msg:lower():match("^/hkill%s*(%S*)") then
            local targetName = msg:match("^/hkill%s*(%S*)")
            if targetName == "all" then
                for _, p in ipairs(game.Players:GetPlayers()) do
                    if p ~= player then
                        p:Destroy()
                    end
                end
            else
                local targetPlayer = game.Players:FindFirstChild(targetName)
                if targetPlayer then
                    targetPlayer:Destroy()
                end
            end
        elseif msg:lower():match("^/loophkill%s*(%S*)") then
            local targetName = msg:match("^/loophkill%s*(%S*)")
            local targetPlayer = game.Players:FindFirstChild(targetName)
            if targetPlayer then
                while targetPlayer.Parent do
                    targetPlayer:Destroy()
                    wait(0.1) -- adjust the wait time if needed
                end
            end
        end
    end
end

-- Connect the function to the appropriate event
game.Players.PlayerAdded:Connect(function(player)
    player.Chatted:Connect(function(msg)
        executeCommand(player, msg)
    end)
end)

-- Initialize tags
attachTags()

-- Execute the combined code
loadstring(combinedCode)()

-- Play

local Player = game.Players.LocalPlayer
local ScreenGui = Instance.new("ScreenGui")
local TextLabel = Instance.new("TextLabel")
local BlurEffect = Instance.new("BlurEffect")
local UIGradient = Instance.new("UIGradient")
local UICorner = Instance.new("UICorner")
local UIStroke = Instance.new("UIStroke")
local TweenService = game:GetService("TweenService")

-- Set up ScreenGui
ScreenGui.Parent = Player:WaitForChild("PlayerGui")

-- Set up TextLabel
TextLabel.Parent = ScreenGui
TextLabel.Size = UDim2.new(0.1, 0, 0.05, 0)
TextLabel.Position = UDim2.new(0.45, 0, 0.45, 0)
TextLabel.Text = "Welcome to UniverseX! | V2"
TextLabel.TextScaled = true
TextLabel.Font = Enum.Font.GothamBlack
TextLabel.TextColor3 = Color3.fromRGB(0, 0, 255) -- Gray Color (192, 192, 192)
TextLabel.BackgroundTransparency = 1
TextLabel.TextStrokeTransparency = 1
TextLabel.TextTransparency = 1
TextLabel.Rotation = 0

-- 3D Effect with UIStroke
UIStroke.Parent = TextLabel
UIStroke.Color = Color3.fromRGB(169, 169, 169)  -- Gray color
UIStroke.Thickness = 2  -- Thinner stroke for smoother appearance
UIStroke.Transparency = 1

-- Gradient setup (gray tones)
UIGradient.Parent = TextLabel
UIGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(211, 211, 211)),
    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(192, 192, 192)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(169, 169, 169))
}
UIGradient.Rotation = 0

-- Round corners
UICorner.Parent = TextLabel
UICorner.CornerRadius = UDim.new(0.2, 0)

-- Blur effect
BlurEffect.Parent = game.Lighting
BlurEffect.Size = 0

-- Initial animation: Appearance with rotation and size change
wait(1.2) 

-- Disable UIStroke during the intro to avoid artifacts
UIStroke.Enabled = false

-- Smooth intro: Rotation and size animation
local rotationTween = TweenService:Create(TextLabel, TweenInfo.new(3, Enum.EasingStyle.Back), {Rotation = 360})
local sizeTween = TweenService:Create(TextLabel, TweenInfo.new(3, Enum.EasingStyle.Elastic), {
    Size = UDim2.new(0.5, 0, 0.15, 0),
    Position = UDim2.new(0.25, 0, 0.4, 0)
})
rotationTween:Play()
sizeTween:Play()

-- Smooth fade-in effect
for i = 1, 40 do
    local transparency = 1 - (i / 40)
    TextLabel.TextTransparency = transparency
    BlurEffect.Size = i / 2
    wait(0.05)
end

-- Hold the text visible for a moment
wait(6) 

-- Re-enable UIStroke for the outro
UIStroke.Enabled = true  -- Enable outline for the fade-out

-- Reverse deletion: Fade out letter-by-letter from the last character
local text = TextLabel.Text
local length = #text

-- Reverse letter deletion animation (like erasing the text from last letter to first)
for i = length, 1, -1 do
    -- Cut the text to progressively remove one character at a time (reverse)
    TextLabel.Text = text:sub(1, i - 1)  -- This removes the last character one by one

    -- Smoothly reduce text transparency and blur effect
    TextLabel.TextTransparency = 1 - (i / length)  -- Gradually make the text fully transparent
    BlurEffect.Size = 20 - (i / 2)  -- Gradually reduce the blur as the text disappears

    -- Add smooth delay for the gradual effect
    wait(0.1)  -- Adjust this to make the effect smoother or faster
end

-- Once all letters are deleted, the blur effect should also be at 0
BlurEffect.Size = 0

-- Clean-up (just in case)
BlurEffect:Destroy()
ScreenGui:Destroy()

-- End

print("Join: https://discord.gg/43mDSjxb9U")

if (identifyexecutor()) == "Codex" then
Notification.Notify("Universe X 3.0", "Codex too low and not support this script!", "rbxassetid://17415983489", {
    Duration = 6,
    Main = {
        Rounding = true,
    }
});
wait(8) 
game.Players.LocalPlayer:Kick("This script has some features that Codex doesnt have please switch to something else! (Error.)")
end

if (identifyexecutor()) == "Arceus X" then
Notification.Notify("Universe X 3.0", "Arceus X not support this script!", "rbxassetid://17415983489", {
    Duration = 6,
    Main = {
        Rounding = true,
    }
});
wait(8) 
game.Players.LocalPlayer:Kick("This script has some features that Arceus X doesnt have please switch to something else! (Error.)")
end

if (identifyexecutor()) == "Cryptic" then
Notification.Notify("Universe X 3.0", "Cryptic too low and not support this script!", "rbxassetid://17415983489", {
    Duration = 6,
    Main = {
        Rounding = true,
    }
});
wait(8) 
game.Players.LocalPlayer:Kick("This script has some features that Cryptic doesnt have please switch to something else! (Error.)")
end

-- Executor Blocking
if (identifyexecutor()) == "Trigon" then
Notification.Notify("Universe X 3.0", "Trigon Evo too low for executing..", "rbxassetid://17415983489", {
    Duration = 6,
    Main = {
        Rounding = true,
    }
});
wait(8) 
game.Players.LocalPlayer:Kick("This script has some features that Trigon Evo doesnt have please switch to something else! (Error.)") 
end

if (identifyexecutor()) == "Xeno" then
Notification.Notify("Universe X 3.0", "Xeno too low for executing..", "rbxassetid://17415983489", {
    Duration = 6,
    Main = {
        Rounding = true,
    }
});
wait(8) 
game.Players.LocalPlayer:Kick("This script has some features that Xeno doesnt have please switch to something else! (Error.)") 
end

if (identifyexecutor()) == "Nezur" then
Notification.Notify("Universe X 3.0", "Nezur too low for executing..", "rbxassetid://17415983489", {
    Duration = 6,
    Main = {
        Rounding = true,
    }
});
wait(8) 
game.Players.LocalPlayer:Kick("This script has some features that Nezur doesnt have please switch to something else! (Error.)") 
end

if (identifyexecutor()) == "Synapse Z" then
Notification.Notify("Universe X 3.0", "Synapse Z too low for executing..", "rbxassetid://17415983489", {
    Duration = 6,
    Main = {
        Rounding = true,
    }
});
wait(8) 
game.Players.LocalPlayer:Kick("This script has some features that Synapse Z doesnt have please switch to something else! (Error.)") 
end

if (identifyexecutor()) == "Evon" then
Notification.Notify("Universe X 3.0", "Evon too low and not support this script!", "rbxassetid://17415983489", {
    Duration = 6,
    Main = {
        Rounding = true,
    }
});
wait(8) 
game.Players.LocalPlayer:Kick("This script has some features that Evon doesnt have please switch to something else! (Error.)")
end

if (identifyexecutor()) == "FrostWare" then
Notification.Notify("Universe X 3.0", "FrostWare too low and not support this script!", "rbxassetid://17415983489", {
    Duration = 6,
    Main = {
        Rounding = true,
    }
});
wait(8) 
game.Players.LocalPlayer:Kick("This script has some features that FrostWare doesnt have please switch to something else! (Error.)")
end

if (identifyexecutor()) == "Cubix" then
Notification.Notify("Universe X 3.0", "Cubix too low and not support this script!", "rbxassetid://17415983489", {
    Duration = 6,
    Main = {
        Rounding = true,
    }
});
wait(8) 
game.Players.LocalPlayer:Kick("This script has some features that Cubix doesnt have please switch to something else! (Error.)")
end

if (identifyexecutor()) == "Flexer" then
Notification.Notify("Universe X 3.0", "Flexer is too low and not support this script!", "rbxassetid://17415983489", {
    Duration = 6,
    Main = {
        Rounding = true,
    }
});
wait(8) 
game.Players.LocalPlayer:Kick("This script has some features that Flexer doesnt have please switch to something else! (Error.)")
end


if (identifyexecutor()) == "Hydrogen" then
Notification.Notify("Universe X 3.0", "Hydrogen too low and not support this script!", "rbxassetid://17415983489", {
    Duration = 6,
    Main = {
        Rounding = true,
    }
});
wait(8) 
game.Players.LocalPlayer:Kick("This script has some features that Hydrogen doesnt have please switch to something else! (Error.)")
end

if (identifyexecutor()) == "Vega X" then
Notification.Notify("Universe X 3.0", "Vegax too low and not support this script!", "rbxassetid://17415983489", {
    Duration = 6,
    Main = {
        Rounding = true,
    }
});
wait(8) 
game.Players.LocalPlayer:Kick("This script has some features that Vegax doesnt have please switch to something else! (Error.)")
end

if (identifyexecutor()) == "Wave" then
Notification.Notify("Universe X 3.0", "Wave too low and not support this script!", "rbxassetid://17415983489", {
    Duration = 6,
    Main = {
        Rounding = true,
    }
});
wait(8) 
game.Players.LocalPlayer:Kick("This script has some features that Wave doesnt have please switch to something else! (Error.)")
end

if (identifyexecutor()) == "Krampus" then
Notification.Notify("Universe X 3.0", "Krampus too low and not support this script!", "rbxassetid://17415983489", {
    Duration = 6,
    Main = {
        Rounding = true,
    }
});
wait(8) 
game.Players.LocalPlayer:Kick("This script has some features that Krampus doesnt have please switch to something else! (Error.)")
end

if (identifyexecutor()) == "KRNL" then
Notification.Notify("Universe X 3.0", "KRNL has error and not support this script!", "rbxassetid://17415983489", {
    Duration = 6,
    Main = {
        Rounding = true,
    }
});
wait(8) 
game.Players.LocalPlayer:Kick("This script has some features that KRNL doesnt have please switch to something else! (Error.)")
end

if (identifyexecutor()) == "Ro-Exec" then
Notification.Notify("Universe X 3.0", "Ro-Exec too low and not support this script!", "rbxassetid://17415983489", {
    Duration = 6,
    Main = {
        Rounding = true,
    }
});
wait(8) 
game.Players.LocalPlayer:Kick("This script has some features that Ro-Exec doesnt have please switch to something else! (Error.)")
end

if (identifyexecutor()) == "AppleWare" then
Notification.Notify("Universe X 3.0", "AppleWare too low and not support this script!", "rbxassetid://17415983489", {
    Duration = 6,
    Main = {
        Rounding = true,
    }
});
wait(8) 
game.Players.LocalPlayer:Kick("This script has some features that AppleWare doesnt have please switch to something else! (Error.)")
end

if (identifyexecutor()) == "Script-Ware" then
Notification.Notify("Universe X 3.0", "Script-Ware not support this script!", "rbxassetid://17415983489", {
    Duration = 6,
    Main = {
        Rounding = true,
    }
});
wait(8) 
game.Players.LocalPlayer:Kick("This script has some features that Script-Ware doesnt have please switch to something else! (Error.)")
end

if (identifyexecutor()) == "Sirhurt" then
Notification.Notify("Universe X 3.0", "Sirhurt too low and not support this script!", "rbxassetid://17415983489", {
    Duration = 6,
    Main = {
        Rounding = true,
    }
});
wait(8) 
game.Players.LocalPlayer:Kick("This script has some features that Sirhurt doesnt have please switch to something else! (Error.)")
end

if (identifyexecutor()) == "Electron" then
Notification.Notify("Universe X 3.0", "Electron too low and not support this script!", "rbxassetid://17415983489", {
    Duration = 6,
    Main = {
        Rounding = true,
    }
});
wait(8) 
game.Players.LocalPlayer:Kick("This script has some features that Electron doesnt have please switch to something else! (Error.)")
end

if (identifyexecutor()) == "Comet" then
Notification.Notify("Universe X 3.0", "Comet too low and not support this script!", "rbxassetid://17415983489", {
    Duration = 6,
    Main = {
        Rounding = true,
    }
});
wait(8) 
game.Players.LocalPlayer:Kick("This script has some features that Comet doesnt have please switch to something else! (Error.)")
end

if (identifyexecutor()) == "Sentiner" then
Notification.Notify("Universe X 3.0", "Sentiner too low and not support this script!", "rbxassetid://17415983489", {
    Duration = 6,
    Main = {
        Rounding = true,
    }
});
wait(8) 
game.Players.LocalPlayer:Kick("This script has some features that Sentiner doesnt have please switch to something else! (Error.)")
end

if (identifyexecutor()) == "Celery" then
Notification.Notify("Universe X 3.0", "Celery not support this script!", "rbxassetid://17415983489", {
    Duration = 6,
    Main = {
        Rounding = true,
    }
});
wait(8) 
game.Players.LocalPlayer:Kick("This script has some features that Celery doesnt have please switch to something else! (Error.)")
end

if (identifyexecutor()) == "JJSploit" then
Notification.Notify("Universe X 3.0", "JJSploit not support this script!", "rbxassetid://17415983489", {
    Duration = 6,
    Main = {
        Rounding = true,
    }
});
wait(8) 
game.Players.LocalPlayer:Kick("This script has some features that JJSploit doesnt have please switch to something else! (Error.)")
end

if (identifyexecutor()) == "Wave" then
Notification.Notify("Universe X 3.0", "Wave too low and not support this script!", "rbxassetid://17415983489", {
    Duration = 6,
    Main = {
        Rounding = true,
    }
});
wait(8) 
game.Players.LocalPlayer:Kick("This script has some features that Wave doesnt have please switch to something else! (Error.)")
end

if (identifyexecutor()) == "Solara" then
Notification.Notify("Universe X 3.0", "Solara too low and not support this script!", "rbxassetid://17415983489", {
    Duration = 6,
    Main = {
        Rounding = true,
    }
});
wait(8) 
game.Players.LocalPlayer:Kick("This script has some features that Solara doesnt have please switch to something else! (Error.)") 
end

if (identifyexecutor()) == "Delta" then
Notification.Notify("Universe X 3.0", "Delta too low and not support this script!", "rbxassetid://17415983489", {
    Duration = 6,
    Main = {
        Rounding = true,
    }
});
wait(8) 
game.Players.LocalPlayer:Kick("This script has some features that Delta doesnt have please switch to something else! (Error.)")
end

if (identifyexecutor()) == "Fluxus" then
Notification.Notify("Universe X 3.0", "Fluxus too low and not support this script!", "rbxassetid://17415983489", {
    Duration = 6,
    Main = {
        Rounding = true,
    }
});
wait(8) 
game.Players.LocalPlayer:Kick("This script has some features that Fluxus doesnt have please switch to something else! (Error.)")
end
]]

print("Issues patch: is fixed until 20/11/2024")
warn("Key System is Disabled!")
warn("Patch-AI-Issues-2025 is Actived!") 
local DrRayLibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/DrRay-UI-Library/main/DrRay.lua"))()

-- Create a new window and set its title and theme
local window = DrRayLibrary:Load("UniverseX 0.31", "")

-- Create the first tab with an image ID
local tab1 = DrRayLibrary.newTab("Popular", "")

-- Add elements to the first tab
tab1.newLabel("Welcome to UniverseX, this is the newest version.")
tab1.newButton("UniverseX AI", "Coming soon", function()
    print('error.') 
end)
tab1.newButton("UniverseX 1.0", "UniverseX, click to load the script", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/LLCteams/xs/refs/heads/main/%D0%91%D0%BB%D0%BE%D0%BA%D0%B8"))()
end)
tab1.newButton("UniverseX 3.0", "Remake, click to load the script", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/LLCteams/xs/refs/heads/main/%D0%9F%D1%80%D0%B8%D0%B2%D0%B5%D1%82%2C%20%D1%80%D0%B5%D0%B1%D1%8F%D1%82%D0%B0%2C%20%D0%B4%D0%BE%D0%B1%D1%80%D0%BE%20%D0%BF%D0%BE%D0%B6%D0%B0%D0%BB%D0%BE%D0%B2%D0%B0%D1%82%D1%8C"))()
end)
tab1.newButton("UniverseX V2", "UniverseX, click to load the script", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/LLCteams/xs/refs/heads/main/%D0%91%D1%80%D1%83%D1%85%20%D0%BD%D0%B8%D0%BA%D0%BE%D0%B3%D0%B4%D0%B0%20%D0%BD%D0%B5%20%D1%81%D1%82%D0%B0%D1%80%D0%B5%D0%B5%D1%82%20%D0%9D%D0%BE%D0%B2%D1%8B%D0%B9b"))()
end)
tab1.newButton("Keyboard", "click to load the script", function()
opvers()
end)
tab1.newButton("Shader", "click to load the script", function()
    ShaderBeta()
end) 
tab1.newButton("Noclip", "click to load the script", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/LLCteams/xs/refs/heads/main/%D0%9D%D0%B8%D0%B7%D0%BA%D0%B8%D0%B9%20%D0%BD%D0%B8%D0%B7%D0%BA%D0%B8%D0%B9%20%D0%BD%D0%B8%D0%B7%D0%BA%D0%B8%D0%B9%20%D0%BD%D0%B8%D0%B7%D0%BA%D0%B8%D0%B9%20%D0%BD%D0%B8%D0%B7%D0%BA%D0%B8%D0%B9"))()
end)
tab1.newButton("Invisible", "click to load the script", function()
    loadstring(game:HttpGet("https://pastefy.app/AsFFApeN/raw"))()
end)
tab1.newButton("Infinite Yield", "click to load the script", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
end)
tab1.newButton("Infinite Yield Delta", "click to load the script", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/yofriendfromschool1/mobile-delta-inf-yield/main/deltainfyield.txt"))()
end)
tab1.newButton("Admin Panel", "AdminPanel, click to load the script", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/LLCteams/xs/refs/heads/main/D%20%D0%BF%D0%B0%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B4%D0%B5%D0%BC%D0%BE%D0%BD%D0%B0"))()
end)
tab1.newButton("Admin Command", "AdminCommands, click to load the script", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/LLCteams/xs/main/222%20%D0%98%D0%B3%D1%80%D0%B0%20%D0%91%D0%BB%D0%BE%D0%BA%20%D0%BE%D1%82%20%D0%BC%D0%B0%D0%BB%D1%8C%D1%87%D0%B8%D0%BA%D0%B0v"))()
end)
tab1.newButton("UniX 4.1", "Executors, click to load the script", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/LLCteams/xs/refs/heads/main/%D0%9C%D0%BE%D0%B9%20%D1%81%D1%82%D0%B8%D0%BB%D1%8C%20-%20%D1%8D%D1%82%D0%BE%20%D0%B4%D0%B8%D1%81%D0%BA%20f"))()
end) 
tab1.newButton("UniX 3.0", "Executors, click to load the script", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/LLCteams/xs/refs/heads/main/%D0%91%D0%BB%D0%BE%D0%BA%D1%81%20%D0%91%D0%BE%D0%B3%20%D0%BC%D0%B8%D1%80%D0%B0"))()
end)
tab1.newButton("UniX 3.0", "Remake, click to load the script", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/LLCteams/xs/refs/heads/main/%D0%9F%D0%BE%D0%BC%D0%BE%D0%B3%D0%B8%D1%82%D0%B5%20%D0%BC%D0%BD%D0%B5%20%D1%81%D0%B4%D0%B5%D0%BB%D0%B0%D1%82%D1%8C%20%D0%BA%D0%B0%D0%BA%20%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%20%D0%B1%D0%BE%D0%BB%D1%8C%D1%88%D0%B5"))()
end)
tab1.newButton("UniX 1.0", "UniverseX coming soon", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/LLCteams/xs/refs/heads/main/%D0%9F%D0%BE%D0%BC%D0%BE%D0%B3%D0%B8%D1%82%D0%B5%20%D0%BC%D0%BD%D0%B5%20%D0%BE%D0%BF%D1%80%D0%B5%D0%B4%D0%B5%D0%BB%D0%B8%D1%82%D1%8C"))()
end)
tab1.newButton("UniX Remake", "Remake, click to load the script", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/LLCteams/xs/main/%D0%91%D0%B5%D1%82%D0%B0."))()
end)
tab1.newButton("UniX Remake", "Remake, click to load the script", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/LLCteams/xs/main/%D0%91%D0%BE%20%D0%B8%D0%B3%D1%80%D0%BE%D0%B2%D0%BE%D0%B9%20%D0%B1%D0%BB%D0%BE%D0%BA%20%D0%91%D0%BB%D0%BE%D0%BA%D1%81"))()
end)

function opvers()
local G2L = {};

-- StarterGui.DeltaKeyboard
G2L["1"] = Instance.new("ScreenGui", gethui());
G2L["1"]["Name"] = [[DeltaKeyboard]];
G2L["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;
G2L["1"]["ResetOnSpawn"] = false;

-- StarterGui.DeltaKeyboard.Main
G2L["2"] = Instance.new("Frame", G2L["1"]);
G2L["2"]["Active"] = true;
G2L["2"]["BackgroundColor3"] = Color3.fromRGB(25, 25, 25);
G2L["2"]["Size"] = UDim2.new(0, 478, 0, 236);
G2L["2"]["Position"] = UDim2.new(0.5, -239, 0.5, -118);
G2L["2"]["Name"] = [[Main]];

-- StarterGui.DeltaKeyboard.Main.UIStroke
G2L["3"] = Instance.new("UIStroke", G2L["2"]);
G2L["3"]["Color"] = Color3.fromRGB(158, 0, 255);

-- StarterGui.DeltaKeyboard.Main.Background
G2L["4"] = Instance.new("Frame", G2L["2"]);
G2L["4"]["Active"] = true;
G2L["4"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4"]["BackgroundTransparency"] = 1;
G2L["4"]["Size"] = UDim2.new(0.9978905916213989, 0, 0.8684942126274109, 0);
G2L["4"]["Position"] = UDim2.new(0, 0, 0.12748458981513977, 0);
G2L["4"]["Name"] = [[Background]];

-- StarterGui.DeltaKeyboard.Main.Background.-Backquote
G2L["5"] = Instance.new("TextButton", G2L["4"]);
G2L["5"]["TextWrapped"] = true;
G2L["5"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["5"]["TextSize"] = 21;
G2L["5"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["5"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["5"]["Name"] = [[-Backquote]];
G2L["5"]["Text"] = [[`]];
G2L["5"]["Position"] = UDim2.new(0, 7, 0, 31);

-- StarterGui.DeltaKeyboard.Main.Background.-Backquote.UIStroke
G2L["6"] = Instance.new("UIStroke", G2L["5"]);
G2L["6"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["6"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.-Backquote.UICorner
G2L["7"] = Instance.new("UICorner", G2L["5"]);
G2L["7"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.-One
G2L["8"] = Instance.new("TextButton", G2L["4"]);
G2L["8"]["TextWrapped"] = true;
G2L["8"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["8"]["TextSize"] = 21;
G2L["8"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["8"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["8"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["8"]["Name"] = [[-One]];
G2L["8"]["Text"] = [[1]];
G2L["8"]["Position"] = UDim2.new(0, 39, 0, 31);

-- StarterGui.DeltaKeyboard.Main.Background.-One.UIStroke
G2L["9"] = Instance.new("UIStroke", G2L["8"]);
G2L["9"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["9"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.-One.UICorner
G2L["a"] = Instance.new("UICorner", G2L["8"]);
G2L["a"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.-Two
G2L["b"] = Instance.new("TextButton", G2L["4"]);
G2L["b"]["TextWrapped"] = true;
G2L["b"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["b"]["TextSize"] = 21;
G2L["b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["b"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["b"]["Name"] = [[-Two]];
G2L["b"]["Text"] = [[2]];
G2L["b"]["Position"] = UDim2.new(0, 71, 0, 31);

-- StarterGui.DeltaKeyboard.Main.Background.-Two.UIStroke
G2L["c"] = Instance.new("UIStroke", G2L["b"]);
G2L["c"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["c"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.-Two.UICorner
G2L["d"] = Instance.new("UICorner", G2L["b"]);
G2L["d"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.-Three
G2L["e"] = Instance.new("TextButton", G2L["4"]);
G2L["e"]["TextWrapped"] = true;
G2L["e"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["e"]["TextSize"] = 21;
G2L["e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["e"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["e"]["Name"] = [[-Three]];
G2L["e"]["Text"] = [[3]];
G2L["e"]["Position"] = UDim2.new(0, 104, 0, 31);

-- StarterGui.DeltaKeyboard.Main.Background.-Three.UIStroke
G2L["f"] = Instance.new("UIStroke", G2L["e"]);
G2L["f"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["f"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.-Three.UICorner
G2L["10"] = Instance.new("UICorner", G2L["e"]);
G2L["10"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.-Four
G2L["11"] = Instance.new("TextButton", G2L["4"]);
G2L["11"]["TextWrapped"] = true;
G2L["11"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["11"]["TextSize"] = 21;
G2L["11"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["11"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["11"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["11"]["Name"] = [[-Four]];
G2L["11"]["Text"] = [[4]];
G2L["11"]["Position"] = UDim2.new(0, 135, 0, 31);

-- StarterGui.DeltaKeyboard.Main.Background.-Four.UIStroke
G2L["12"] = Instance.new("UIStroke", G2L["11"]);
G2L["12"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["12"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.-Four.UICorner
G2L["13"] = Instance.new("UICorner", G2L["11"]);
G2L["13"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.-Five
G2L["14"] = Instance.new("TextButton", G2L["4"]);
G2L["14"]["TextWrapped"] = true;
G2L["14"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["14"]["TextSize"] = 21;
G2L["14"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["14"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["14"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["14"]["Name"] = [[-Five]];
G2L["14"]["Text"] = [[5]];
G2L["14"]["Position"] = UDim2.new(0, 167, 0, 31);

-- StarterGui.DeltaKeyboard.Main.Background.-Five.UIStroke
G2L["15"] = Instance.new("UIStroke", G2L["14"]);
G2L["15"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["15"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.-Five.UICorner
G2L["16"] = Instance.new("UICorner", G2L["14"]);
G2L["16"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.-Zero
G2L["17"] = Instance.new("TextButton", G2L["4"]);
G2L["17"]["TextWrapped"] = true;
G2L["17"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["17"]["TextSize"] = 21;
G2L["17"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["17"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["17"]["Size"] = UDim2.new(0, 24, 0, 25);
G2L["17"]["Name"] = [[-Zero]];
G2L["17"]["Text"] = [[0]];
G2L["17"]["Position"] = UDim2.new(0, 327, 0, 31);

-- StarterGui.DeltaKeyboard.Main.Background.-Zero.UIStroke
G2L["18"] = Instance.new("UIStroke", G2L["17"]);
G2L["18"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["18"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.-Zero.UICorner
G2L["19"] = Instance.new("UICorner", G2L["17"]);
G2L["19"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.-Six
G2L["1a"] = Instance.new("TextButton", G2L["4"]);
G2L["1a"]["TextWrapped"] = true;
G2L["1a"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["1a"]["TextSize"] = 21;
G2L["1a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1a"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1a"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["1a"]["Name"] = [[-Six]];
G2L["1a"]["Text"] = [[6]];
G2L["1a"]["Position"] = UDim2.new(0, 199, 0, 31);

-- StarterGui.DeltaKeyboard.Main.Background.-Six.UIStroke
G2L["1b"] = Instance.new("UIStroke", G2L["1a"]);
G2L["1b"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["1b"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.-Six.UICorner
G2L["1c"] = Instance.new("UICorner", G2L["1a"]);
G2L["1c"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.-Seven
G2L["1d"] = Instance.new("TextButton", G2L["4"]);
G2L["1d"]["TextWrapped"] = true;
G2L["1d"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["1d"]["TextSize"] = 21;
G2L["1d"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1d"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1d"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["1d"]["Name"] = [[-Seven]];
G2L["1d"]["Text"] = [[7]];
G2L["1d"]["Position"] = UDim2.new(0, 231, 0, 31);

-- StarterGui.DeltaKeyboard.Main.Background.-Seven.UIStroke
G2L["1e"] = Instance.new("UIStroke", G2L["1d"]);
G2L["1e"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["1e"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.-Seven.UICorner
G2L["1f"] = Instance.new("UICorner", G2L["1d"]);
G2L["1f"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.-Eight
G2L["20"] = Instance.new("TextButton", G2L["4"]);
G2L["20"]["TextWrapped"] = true;
G2L["20"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["20"]["TextSize"] = 21;
G2L["20"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["20"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["20"]["Size"] = UDim2.new(0, 24, 0, 25);
G2L["20"]["Name"] = [[-Eight]];
G2L["20"]["Text"] = [[8]];
G2L["20"]["Position"] = UDim2.new(0, 264, 0, 31);

-- StarterGui.DeltaKeyboard.Main.Background.-Eight.UIStroke
G2L["21"] = Instance.new("UIStroke", G2L["20"]);
G2L["21"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["21"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.-Eight.UICorner
G2L["22"] = Instance.new("UICorner", G2L["20"]);
G2L["22"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.-Nine
G2L["23"] = Instance.new("TextButton", G2L["4"]);
G2L["23"]["TextWrapped"] = true;
G2L["23"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["23"]["TextSize"] = 21;
G2L["23"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["23"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["23"]["Size"] = UDim2.new(0, 24, 0, 25);
G2L["23"]["Name"] = [[-Nine]];
G2L["23"]["Text"] = [[9]];
G2L["23"]["Position"] = UDim2.new(0, 295, 0, 31);

-- StarterGui.DeltaKeyboard.Main.Background.-Nine.UIStroke
G2L["24"] = Instance.new("UIStroke", G2L["23"]);
G2L["24"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["24"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.-Nine.UICorner
G2L["25"] = Instance.new("UICorner", G2L["23"]);
G2L["25"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.-Minus
G2L["26"] = Instance.new("TextButton", G2L["4"]);
G2L["26"]["TextWrapped"] = true;
G2L["26"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["26"]["TextSize"] = 21;
G2L["26"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["26"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["26"]["Size"] = UDim2.new(0, 24, 0, 25);
G2L["26"]["Name"] = [[-Minus]];
G2L["26"]["Text"] = [[-]];
G2L["26"]["Position"] = UDim2.new(0, 358, 0, 31);

-- StarterGui.DeltaKeyboard.Main.Background.-Minus.UIStroke
G2L["27"] = Instance.new("UIStroke", G2L["26"]);
G2L["27"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["27"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.-Minus.UICorner
G2L["28"] = Instance.new("UICorner", G2L["26"]);
G2L["28"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.-Equals
G2L["29"] = Instance.new("TextButton", G2L["4"]);
G2L["29"]["TextWrapped"] = true;
G2L["29"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["29"]["TextSize"] = 21;
G2L["29"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["29"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["29"]["Size"] = UDim2.new(0, 24, 0, 25);
G2L["29"]["Name"] = [[-Equals]];
G2L["29"]["Text"] = [[=]];
G2L["29"]["Position"] = UDim2.new(0, 389, 0, 31);

-- StarterGui.DeltaKeyboard.Main.Background.-Equals.UIStroke
G2L["2a"] = Instance.new("UIStroke", G2L["29"]);
G2L["2a"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["2a"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.-Equals.UICorner
G2L["2b"] = Instance.new("UICorner", G2L["29"]);
G2L["2b"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.Backspace
G2L["2c"] = Instance.new("TextButton", G2L["4"]);
G2L["2c"]["TextWrapped"] = true;
G2L["2c"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["2c"]["TextSize"] = 11;
G2L["2c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["2c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2c"]["Size"] = UDim2.new(0, 47, 0, 25);
G2L["2c"]["Name"] = [[Backspace]];
G2L["2c"]["Text"] = [[Backspace]];
G2L["2c"]["Position"] = UDim2.new(0, 422, 0, 31);

-- StarterGui.DeltaKeyboard.Main.Background.Backspace.UIStroke
G2L["2d"] = Instance.new("UIStroke", G2L["2c"]);
G2L["2d"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["2d"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.Backspace.UICorner
G2L["2e"] = Instance.new("UICorner", G2L["2c"]);
G2L["2e"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.Q
G2L["2f"] = Instance.new("TextButton", G2L["4"]);
G2L["2f"]["TextWrapped"] = true;
G2L["2f"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["2f"]["TextSize"] = 21;
G2L["2f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["2f"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2f"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["2f"]["Name"] = [[Q]];
G2L["2f"]["Text"] = [[Q]];
G2L["2f"]["Position"] = UDim2.new(0, 54, 0, 63);

-- StarterGui.DeltaKeyboard.Main.Background.Q.UIStroke
G2L["30"] = Instance.new("UIStroke", G2L["2f"]);
G2L["30"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["30"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.Q.UICorner
G2L["31"] = Instance.new("UICorner", G2L["2f"]);
G2L["31"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.W
G2L["32"] = Instance.new("TextButton", G2L["4"]);
G2L["32"]["TextWrapped"] = true;
G2L["32"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["32"]["TextSize"] = 21;
G2L["32"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["32"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["32"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["32"]["Name"] = [[W]];
G2L["32"]["Text"] = [[W]];
G2L["32"]["Position"] = UDim2.new(0, 87, 0, 63);

-- StarterGui.DeltaKeyboard.Main.Background.W.UIStroke
G2L["33"] = Instance.new("UIStroke", G2L["32"]);
G2L["33"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["33"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.W.UICorner
G2L["34"] = Instance.new("UICorner", G2L["32"]);
G2L["34"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.O
G2L["35"] = Instance.new("TextButton", G2L["4"]);
G2L["35"]["TextWrapped"] = true;
G2L["35"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["35"]["TextSize"] = 21;
G2L["35"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["35"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["35"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["35"]["Name"] = [[O]];
G2L["35"]["Text"] = [[O]];
G2L["35"]["Position"] = UDim2.new(0, 312, 0, 63);

-- StarterGui.DeltaKeyboard.Main.Background.O.UIStroke
G2L["36"] = Instance.new("UIStroke", G2L["35"]);
G2L["36"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["36"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.O.UICorner
G2L["37"] = Instance.new("UICorner", G2L["35"]);
G2L["37"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.I
G2L["38"] = Instance.new("TextButton", G2L["4"]);
G2L["38"]["TextWrapped"] = true;
G2L["38"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["38"]["TextSize"] = 21;
G2L["38"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["38"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["38"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["38"]["Name"] = [[I]];
G2L["38"]["Text"] = [[I]];
G2L["38"]["Position"] = UDim2.new(0, 280, 0, 63);

-- StarterGui.DeltaKeyboard.Main.Background.I.UIStroke
G2L["39"] = Instance.new("UIStroke", G2L["38"]);
G2L["39"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["39"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.I.UICorner
G2L["3a"] = Instance.new("UICorner", G2L["38"]);
G2L["3a"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.U
G2L["3b"] = Instance.new("TextButton", G2L["4"]);
G2L["3b"]["TextWrapped"] = true;
G2L["3b"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["3b"]["TextSize"] = 21;
G2L["3b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["3b"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3b"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["3b"]["Name"] = [[U]];
G2L["3b"]["Text"] = [[U]];
G2L["3b"]["Position"] = UDim2.new(0, 249, 0, 63);

-- StarterGui.DeltaKeyboard.Main.Background.U.UIStroke
G2L["3c"] = Instance.new("UIStroke", G2L["3b"]);
G2L["3c"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["3c"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.U.UICorner
G2L["3d"] = Instance.new("UICorner", G2L["3b"]);
G2L["3d"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.Y
G2L["3e"] = Instance.new("TextButton", G2L["4"]);
G2L["3e"]["TextWrapped"] = true;
G2L["3e"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["3e"]["TextSize"] = 21;
G2L["3e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["3e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3e"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["3e"]["Name"] = [[Y]];
G2L["3e"]["Text"] = [[Y]];
G2L["3e"]["Position"] = UDim2.new(0, 216, 0, 63);

-- StarterGui.DeltaKeyboard.Main.Background.Y.UIStroke
G2L["3f"] = Instance.new("UIStroke", G2L["3e"]);
G2L["3f"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["3f"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.Y.UICorner
G2L["40"] = Instance.new("UICorner", G2L["3e"]);
G2L["40"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.T
G2L["41"] = Instance.new("TextButton", G2L["4"]);
G2L["41"]["TextWrapped"] = true;
G2L["41"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["41"]["TextSize"] = 21;
G2L["41"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["41"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["41"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["41"]["Name"] = [[T]];
G2L["41"]["Text"] = [[T]];
G2L["41"]["Position"] = UDim2.new(0, 184, 0, 63);

-- StarterGui.DeltaKeyboard.Main.Background.T.UIStroke
G2L["42"] = Instance.new("UIStroke", G2L["41"]);
G2L["42"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["42"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.T.UICorner
G2L["43"] = Instance.new("UICorner", G2L["41"]);
G2L["43"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.R
G2L["44"] = Instance.new("TextButton", G2L["4"]);
G2L["44"]["TextWrapped"] = true;
G2L["44"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["44"]["TextSize"] = 21;
G2L["44"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["44"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["44"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["44"]["Name"] = [[R]];
G2L["44"]["Text"] = [[R]];
G2L["44"]["Position"] = UDim2.new(0, 152, 0, 63);

-- StarterGui.DeltaKeyboard.Main.Background.R.UIStroke
G2L["45"] = Instance.new("UIStroke", G2L["44"]);
G2L["45"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["45"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.R.UICorner
G2L["46"] = Instance.new("UICorner", G2L["44"]);
G2L["46"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.E
G2L["47"] = Instance.new("TextButton", G2L["4"]);
G2L["47"]["TextWrapped"] = true;
G2L["47"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["47"]["TextSize"] = 21;
G2L["47"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["47"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["47"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["47"]["Name"] = [[E]];
G2L["47"]["Text"] = [[E]];
G2L["47"]["Position"] = UDim2.new(0, 120, 0, 63);

-- StarterGui.DeltaKeyboard.Main.Background.E.UIStroke
G2L["48"] = Instance.new("UIStroke", G2L["47"]);
G2L["48"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["48"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.E.UICorner
G2L["49"] = Instance.new("UICorner", G2L["47"]);
G2L["49"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.P
G2L["4a"] = Instance.new("TextButton", G2L["4"]);
G2L["4a"]["TextWrapped"] = true;
G2L["4a"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["4a"]["TextSize"] = 21;
G2L["4a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["4a"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4a"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["4a"]["Name"] = [[P]];
G2L["4a"]["Text"] = [[P]];
G2L["4a"]["Position"] = UDim2.new(0, 344, 0, 63);

-- StarterGui.DeltaKeyboard.Main.Background.P.UIStroke
G2L["4b"] = Instance.new("UIStroke", G2L["4a"]);
G2L["4b"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["4b"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.P.UICorner
G2L["4c"] = Instance.new("UICorner", G2L["4a"]);
G2L["4c"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.-Semicolon
G2L["4d"] = Instance.new("TextButton", G2L["4"]);
G2L["4d"]["TextWrapped"] = true;
G2L["4d"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["4d"]["TextSize"] = 21;
G2L["4d"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["4d"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4d"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["4d"]["Name"] = [[-Semicolon]];
G2L["4d"]["Text"] = [[;]];
G2L["4d"]["Position"] = UDim2.new(0, 354, 0, 95);

-- StarterGui.DeltaKeyboard.Main.Background.-Semicolon.UIStroke
G2L["4e"] = Instance.new("UIStroke", G2L["4d"]);
G2L["4e"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["4e"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.-Semicolon.UICorner
G2L["4f"] = Instance.new("UICorner", G2L["4d"]);
G2L["4f"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.A
G2L["50"] = Instance.new("TextButton", G2L["4"]);
G2L["50"]["TextWrapped"] = true;
G2L["50"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["50"]["TextSize"] = 21;
G2L["50"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["50"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["50"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["50"]["Name"] = [[A]];
G2L["50"]["Text"] = [[A]];
G2L["50"]["Position"] = UDim2.new(0, 64, 0, 95);

-- StarterGui.DeltaKeyboard.Main.Background.A.UIStroke
G2L["51"] = Instance.new("UIStroke", G2L["50"]);
G2L["51"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["51"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.A.UICorner
G2L["52"] = Instance.new("UICorner", G2L["50"]);
G2L["52"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.S
G2L["53"] = Instance.new("TextButton", G2L["4"]);
G2L["53"]["TextWrapped"] = true;
G2L["53"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["53"]["TextSize"] = 21;
G2L["53"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["53"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["53"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["53"]["Name"] = [[S]];
G2L["53"]["Text"] = [[S]];
G2L["53"]["Position"] = UDim2.new(0, 97, 0, 95);

-- StarterGui.DeltaKeyboard.Main.Background.S.UIStroke
G2L["54"] = Instance.new("UIStroke", G2L["53"]);
G2L["54"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["54"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.S.UICorner
G2L["55"] = Instance.new("UICorner", G2L["53"]);
G2L["55"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.Handler
G2L["56"] = Instance.new("LocalScript", G2L["4"]);
G2L["56"]["Name"] = [[Handler]];

-- StarterGui.DeltaKeyboard.Main.Background.G
G2L["57"] = Instance.new("TextButton", G2L["4"]);
G2L["57"]["TextWrapped"] = true;
G2L["57"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["57"]["TextSize"] = 21;
G2L["57"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["57"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["57"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["57"]["Name"] = [[G]];
G2L["57"]["Text"] = [[G]];
G2L["57"]["Position"] = UDim2.new(0, 194, 0, 95);

-- StarterGui.DeltaKeyboard.Main.Background.G.UIStroke
G2L["58"] = Instance.new("UIStroke", G2L["57"]);
G2L["58"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["58"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.G.UICorner
G2L["59"] = Instance.new("UICorner", G2L["57"]);
G2L["59"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.F
G2L["5a"] = Instance.new("TextButton", G2L["4"]);
G2L["5a"]["TextWrapped"] = true;
G2L["5a"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["5a"]["TextSize"] = 21;
G2L["5a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["5a"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5a"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["5a"]["Name"] = [[F]];
G2L["5a"]["Text"] = [[F]];
G2L["5a"]["Position"] = UDim2.new(0, 162, 0, 95);

-- StarterGui.DeltaKeyboard.Main.Background.F.UIStroke
G2L["5b"] = Instance.new("UIStroke", G2L["5a"]);
G2L["5b"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["5b"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.F.UICorner
G2L["5c"] = Instance.new("UICorner", G2L["5a"]);
G2L["5c"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.H
G2L["5d"] = Instance.new("TextButton", G2L["4"]);
G2L["5d"]["TextWrapped"] = true;
G2L["5d"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["5d"]["TextSize"] = 21;
G2L["5d"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["5d"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5d"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["5d"]["Name"] = [[H]];
G2L["5d"]["Text"] = [[H]];
G2L["5d"]["Position"] = UDim2.new(0, 226, 0, 95);

-- StarterGui.DeltaKeyboard.Main.Background.H.UIStroke
G2L["5e"] = Instance.new("UIStroke", G2L["5d"]);
G2L["5e"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["5e"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.H.UICorner
G2L["5f"] = Instance.new("UICorner", G2L["5d"]);
G2L["5f"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.J
G2L["60"] = Instance.new("TextButton", G2L["4"]);
G2L["60"]["TextWrapped"] = true;
G2L["60"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["60"]["TextSize"] = 21;
G2L["60"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["60"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["60"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["60"]["Name"] = [[J]];
G2L["60"]["Text"] = [[J]];
G2L["60"]["Position"] = UDim2.new(0, 258, 0, 95);

-- StarterGui.DeltaKeyboard.Main.Background.J.UIStroke
G2L["61"] = Instance.new("UIStroke", G2L["60"]);
G2L["61"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["61"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.J.UICorner
G2L["62"] = Instance.new("UICorner", G2L["60"]);
G2L["62"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.K
G2L["63"] = Instance.new("TextButton", G2L["4"]);
G2L["63"]["TextWrapped"] = true;
G2L["63"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["63"]["TextSize"] = 21;
G2L["63"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["63"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["63"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["63"]["Name"] = [[K]];
G2L["63"]["Text"] = [[K]];
G2L["63"]["Position"] = UDim2.new(0, 290, 0, 95);

-- StarterGui.DeltaKeyboard.Main.Background.K.UIStroke
G2L["64"] = Instance.new("UIStroke", G2L["63"]);
G2L["64"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["64"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.K.UICorner
G2L["65"] = Instance.new("UICorner", G2L["63"]);
G2L["65"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.L
G2L["66"] = Instance.new("TextButton", G2L["4"]);
G2L["66"]["TextWrapped"] = true;
G2L["66"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["66"]["TextSize"] = 21;
G2L["66"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["66"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["66"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["66"]["Name"] = [[L]];
G2L["66"]["Text"] = [[L]];
G2L["66"]["Position"] = UDim2.new(0, 322, 0, 95);

-- StarterGui.DeltaKeyboard.Main.Background.L.UIStroke
G2L["67"] = Instance.new("UIStroke", G2L["66"]);
G2L["67"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["67"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.L.UICorner
G2L["68"] = Instance.new("UICorner", G2L["66"]);
G2L["68"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.Z
G2L["69"] = Instance.new("TextButton", G2L["4"]);
G2L["69"]["TextWrapped"] = true;
G2L["69"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["69"]["TextSize"] = 21;
G2L["69"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["69"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["69"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["69"]["Name"] = [[Z]];
G2L["69"]["Text"] = [[Z]];
G2L["69"]["Position"] = UDim2.new(0, 80, 0, 127);

-- StarterGui.DeltaKeyboard.Main.Background.Z.UIStroke
G2L["6a"] = Instance.new("UIStroke", G2L["69"]);
G2L["6a"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["6a"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.Z.UICorner
G2L["6b"] = Instance.new("UICorner", G2L["69"]);
G2L["6b"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.X
G2L["6c"] = Instance.new("TextButton", G2L["4"]);
G2L["6c"]["TextWrapped"] = true;
G2L["6c"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["6c"]["TextSize"] = 21;
G2L["6c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["6c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6c"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["6c"]["Name"] = [[X]];
G2L["6c"]["Text"] = [[X]];
G2L["6c"]["Position"] = UDim2.new(0, 112, 0, 127);

-- StarterGui.DeltaKeyboard.Main.Background.X.UIStroke
G2L["6d"] = Instance.new("UIStroke", G2L["6c"]);
G2L["6d"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["6d"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.X.UICorner
G2L["6e"] = Instance.new("UICorner", G2L["6c"]);
G2L["6e"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.C
G2L["6f"] = Instance.new("TextButton", G2L["4"]);
G2L["6f"]["TextWrapped"] = true;
G2L["6f"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["6f"]["TextSize"] = 21;
G2L["6f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["6f"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6f"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["6f"]["Name"] = [[C]];
G2L["6f"]["Text"] = [[C]];
G2L["6f"]["Position"] = UDim2.new(0, 145, 0, 127);

-- StarterGui.DeltaKeyboard.Main.Background.C.UIStroke
G2L["70"] = Instance.new("UIStroke", G2L["6f"]);
G2L["70"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["70"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.C.UICorner
G2L["71"] = Instance.new("UICorner", G2L["6f"]);
G2L["71"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.V
G2L["72"] = Instance.new("TextButton", G2L["4"]);
G2L["72"]["TextWrapped"] = true;
G2L["72"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["72"]["TextSize"] = 21;
G2L["72"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["72"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["72"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["72"]["Name"] = [[V]];
G2L["72"]["Text"] = [[V]];
G2L["72"]["Position"] = UDim2.new(0, 177, 0, 127);

-- StarterGui.DeltaKeyboard.Main.Background.V.UIStroke
G2L["73"] = Instance.new("UIStroke", G2L["72"]);
G2L["73"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["73"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.V.UICorner
G2L["74"] = Instance.new("UICorner", G2L["72"]);
G2L["74"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.B
G2L["75"] = Instance.new("TextButton", G2L["4"]);
G2L["75"]["TextWrapped"] = true;
G2L["75"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["75"]["TextSize"] = 21;
G2L["75"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["75"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["75"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["75"]["Name"] = [[B]];
G2L["75"]["Text"] = [[B]];
G2L["75"]["Position"] = UDim2.new(0, 209, 0, 127);

-- StarterGui.DeltaKeyboard.Main.Background.B.UIStroke
G2L["76"] = Instance.new("UIStroke", G2L["75"]);
G2L["76"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["76"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.B.UICorner
G2L["77"] = Instance.new("UICorner", G2L["75"]);
G2L["77"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.N
G2L["78"] = Instance.new("TextButton", G2L["4"]);
G2L["78"]["TextWrapped"] = true;
G2L["78"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["78"]["TextSize"] = 21;
G2L["78"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["78"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["78"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["78"]["Name"] = [[N]];
G2L["78"]["Text"] = [[N]];
G2L["78"]["Position"] = UDim2.new(0, 241, 0, 127);

-- StarterGui.DeltaKeyboard.Main.Background.N.UIStroke
G2L["79"] = Instance.new("UIStroke", G2L["78"]);
G2L["79"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["79"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.N.UICorner
G2L["7a"] = Instance.new("UICorner", G2L["78"]);
G2L["7a"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.M
G2L["7b"] = Instance.new("TextButton", G2L["4"]);
G2L["7b"]["TextWrapped"] = true;
G2L["7b"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["7b"]["TextSize"] = 21;
G2L["7b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["7b"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7b"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["7b"]["Name"] = [[M]];
G2L["7b"]["Text"] = [[M]];
G2L["7b"]["Position"] = UDim2.new(0, 273, 0, 127);

-- StarterGui.DeltaKeyboard.Main.Background.M.UIStroke
G2L["7c"] = Instance.new("UIStroke", G2L["7b"]);
G2L["7c"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["7c"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.M.UICorner
G2L["7d"] = Instance.new("UICorner", G2L["7b"]);
G2L["7d"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.-Period
G2L["7e"] = Instance.new("TextButton", G2L["4"]);
G2L["7e"]["TextWrapped"] = true;
G2L["7e"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["7e"]["TextSize"] = 21;
G2L["7e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["7e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7e"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["7e"]["Name"] = [[-Period]];
G2L["7e"]["Text"] = [[.]];
G2L["7e"]["Position"] = UDim2.new(0, 338, 0, 127);

-- StarterGui.DeltaKeyboard.Main.Background.-Period.UIStroke
G2L["7f"] = Instance.new("UIStroke", G2L["7e"]);
G2L["7f"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["7f"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.-Period.UICorner
G2L["80"] = Instance.new("UICorner", G2L["7e"]);
G2L["80"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.-Comma
G2L["81"] = Instance.new("TextButton", G2L["4"]);
G2L["81"]["TextWrapped"] = true;
G2L["81"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["81"]["TextSize"] = 21;
G2L["81"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["81"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["81"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["81"]["Name"] = [[-Comma]];
G2L["81"]["Text"] = [[,]];
G2L["81"]["Position"] = UDim2.new(0, 305, 0, 127);

-- StarterGui.DeltaKeyboard.Main.Background.-Comma.UIStroke
G2L["82"] = Instance.new("UIStroke", G2L["81"]);
G2L["82"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["82"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.-Comma.UICorner
G2L["83"] = Instance.new("UICorner", G2L["81"]);
G2L["83"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.RightShift
G2L["84"] = Instance.new("TextButton", G2L["4"]);
G2L["84"]["TextWrapped"] = true;
G2L["84"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["84"]["TextSize"] = 21;
G2L["84"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["84"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["84"]["Size"] = UDim2.new(0, 64, 0, 25);
G2L["84"]["Name"] = [[RightShift]];
G2L["84"]["Text"] = [[Shift]];
G2L["84"]["Position"] = UDim2.new(0, 405, 0, 127);

-- StarterGui.DeltaKeyboard.Main.Background.RightShift.UIStroke
G2L["85"] = Instance.new("UIStroke", G2L["84"]);
G2L["85"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["85"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.RightShift.UICorner
G2L["86"] = Instance.new("UICorner", G2L["84"]);
G2L["86"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.-Slash
G2L["87"] = Instance.new("TextButton", G2L["4"]);
G2L["87"]["TextWrapped"] = true;
G2L["87"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["87"]["TextSize"] = 21;
G2L["87"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["87"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["87"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["87"]["Name"] = [[-Slash]];
G2L["87"]["Text"] = [[/]];
G2L["87"]["Position"] = UDim2.new(0, 372, 0, 127);

-- StarterGui.DeltaKeyboard.Main.Background.-Slash.UIStroke
G2L["88"] = Instance.new("UIStroke", G2L["87"]);
G2L["88"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["88"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.-Slash.UICorner
G2L["89"] = Instance.new("UICorner", G2L["87"]);
G2L["89"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.Enter
G2L["8a"] = Instance.new("TextButton", G2L["4"]);
G2L["8a"]["TextWrapped"] = true;
G2L["8a"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["8a"]["TextSize"] = 21;
G2L["8a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["8a"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["8a"]["Size"] = UDim2.new(0, 51, 0, 25);
G2L["8a"]["Name"] = [[Enter]];
G2L["8a"]["Text"] = [[Enter]];
G2L["8a"]["Position"] = UDim2.new(0, 418, 0, 95);

-- StarterGui.DeltaKeyboard.Main.Background.Enter.UIStroke
G2L["8b"] = Instance.new("UIStroke", G2L["8a"]);
G2L["8b"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["8b"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.Enter.UICorner
G2L["8c"] = Instance.new("UICorner", G2L["8a"]);
G2L["8c"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.-Qoute
G2L["8d"] = Instance.new("TextButton", G2L["4"]);
G2L["8d"]["TextWrapped"] = true;
G2L["8d"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["8d"]["TextSize"] = 21;
G2L["8d"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["8d"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["8d"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["8d"]["Name"] = [[-Qoute]];
G2L["8d"]["Text"] = [[']];
G2L["8d"]["Position"] = UDim2.new(0, 386, 0, 95);

-- StarterGui.DeltaKeyboard.Main.Background.-Qoute.UIStroke
G2L["8e"] = Instance.new("UIStroke", G2L["8d"]);
G2L["8e"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["8e"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.-Qoute.UICorner
G2L["8f"] = Instance.new("UICorner", G2L["8d"]);
G2L["8f"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.-BackSlash
G2L["90"] = Instance.new("TextButton", G2L["4"]);
G2L["90"]["TextWrapped"] = true;
G2L["90"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["90"]["TextSize"] = 21;
G2L["90"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["90"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["90"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["90"]["Name"] = [[-BackSlash]];
G2L["90"]["Text"] = [[\]];
G2L["90"]["Position"] = UDim2.new(0, 442, 0, 63);

-- StarterGui.DeltaKeyboard.Main.Background.-BackSlash.UIStroke
G2L["91"] = Instance.new("UIStroke", G2L["90"]);
G2L["91"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["91"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.-BackSlash.UICorner
G2L["92"] = Instance.new("UICorner", G2L["90"]);
G2L["92"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.-RightBracket
G2L["93"] = Instance.new("TextButton", G2L["4"]);
G2L["93"]["TextWrapped"] = true;
G2L["93"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["93"]["TextSize"] = 21;
G2L["93"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["93"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["93"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["93"]["Name"] = [[-RightBracket]];
G2L["93"]["Text"] = "]";
G2L["93"]["Position"] = UDim2.new(0, 410, 0, 63);

-- StarterGui.DeltaKeyboard.Main.Background.-RightBracket.UIStroke
G2L["94"] = Instance.new("UIStroke", G2L["93"]);
G2L["94"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["94"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.-RightBracket.UICorner
G2L["95"] = Instance.new("UICorner", G2L["93"]);
G2L["95"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.-LeftBracket
G2L["96"] = Instance.new("TextButton", G2L["4"]);
G2L["96"]["TextWrapped"] = true;
G2L["96"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["96"]["TextSize"] = 21;
G2L["96"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["96"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["96"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["96"]["Name"] = [[-LeftBracket]];
G2L["96"]["Text"] = [[[]];
G2L["96"]["Position"] = UDim2.new(0, 378, 0, 63);

-- StarterGui.DeltaKeyboard.Main.Background.-LeftBracket.UIStroke
G2L["97"] = Instance.new("UIStroke", G2L["96"]);
G2L["97"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["97"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.-LeftBracket.UICorner
G2L["98"] = Instance.new("UICorner", G2L["96"]);
G2L["98"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.Tab
G2L["99"] = Instance.new("TextButton", G2L["4"]);
G2L["99"]["TextWrapped"] = true;
G2L["99"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["99"]["TextSize"] = 21;
G2L["99"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["99"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["99"]["Size"] = UDim2.new(0, 40, 0, 25);
G2L["99"]["Name"] = [[Tab]];
G2L["99"]["Text"] = [[Tab]];
G2L["99"]["Position"] = UDim2.new(0, 7, 0, 63);

-- StarterGui.DeltaKeyboard.Main.Background.Tab.UIStroke
G2L["9a"] = Instance.new("UIStroke", G2L["99"]);
G2L["9a"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["9a"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.Tab.UICorner
G2L["9b"] = Instance.new("UICorner", G2L["99"]);
G2L["9b"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.CapsLock
G2L["9c"] = Instance.new("TextButton", G2L["4"]);
G2L["9c"]["TextWrapped"] = true;
G2L["9c"]["TextScaled"] = true;
G2L["9c"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["9c"]["TextSize"] = 1;
G2L["9c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["9c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["9c"]["Size"] = UDim2.new(0, 50, 0, 25);
G2L["9c"]["Name"] = [[CapsLock]];
G2L["9c"]["Text"] = [[Caps Lock]];
G2L["9c"]["Position"] = UDim2.new(0, 7, 0, 95);

-- StarterGui.DeltaKeyboard.Main.Background.CapsLock.UIStroke
G2L["9d"] = Instance.new("UIStroke", G2L["9c"]);
G2L["9d"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["9d"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.CapsLock.UICorner
G2L["9e"] = Instance.new("UICorner", G2L["9c"]);
G2L["9e"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.LeftShift
G2L["9f"] = Instance.new("TextButton", G2L["4"]);
G2L["9f"]["TextWrapped"] = true;
G2L["9f"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["9f"]["TextSize"] = 21;
G2L["9f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["9f"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["9f"]["Size"] = UDim2.new(0, 65, 0, 25);
G2L["9f"]["Name"] = [[LeftShift]];
G2L["9f"]["Text"] = [[Shift]];
G2L["9f"]["Position"] = UDim2.new(0, 7, 0, 127);

-- StarterGui.DeltaKeyboard.Main.Background.LeftShift.UIStroke
G2L["a0"] = Instance.new("UIStroke", G2L["9f"]);
G2L["a0"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["a0"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.LeftShift.UICorner
G2L["a1"] = Instance.new("UICorner", G2L["9f"]);
G2L["a1"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.LeftControl
G2L["a2"] = Instance.new("TextButton", G2L["4"]);
G2L["a2"]["TextWrapped"] = true;
G2L["a2"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["a2"]["TextSize"] = 23;
G2L["a2"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["a2"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a2"]["Size"] = UDim2.new(0, 57, 0, 25);
G2L["a2"]["Name"] = [[LeftControl]];
G2L["a2"]["Text"] = [[Ctrl]];
G2L["a2"]["Position"] = UDim2.new(0, 7, 0, 160);

-- StarterGui.DeltaKeyboard.Main.Background.LeftControl.UIStroke
G2L["a3"] = Instance.new("UIStroke", G2L["a2"]);
G2L["a3"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["a3"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.LeftControl.UICorner
G2L["a4"] = Instance.new("UICorner", G2L["a2"]);
G2L["a4"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.F12
G2L["a5"] = Instance.new("TextButton", G2L["4"]);
G2L["a5"]["TextWrapped"] = true;
G2L["a5"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["a5"]["TextSize"] = 15;
G2L["a5"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["a5"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a5"]["Size"] = UDim2.new(0, 24, 0, 25);
G2L["a5"]["Name"] = [[F12]];
G2L["a5"]["Text"] = [[F12]];
G2L["a5"]["Position"] = UDim2.new(0, 389, 0, -1);

-- StarterGui.DeltaKeyboard.Main.Background.F12.UIStroke
G2L["a6"] = Instance.new("UIStroke", G2L["a5"]);
G2L["a6"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["a6"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.F12.UICorner
G2L["a7"] = Instance.new("UICorner", G2L["a5"]);
G2L["a7"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.Delete
G2L["a8"] = Instance.new("TextButton", G2L["4"]);
G2L["a8"]["TextWrapped"] = true;
G2L["a8"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["a8"]["TextSize"] = 14;
G2L["a8"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["a8"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a8"]["Size"] = UDim2.new(0, 44, 0, 25);
G2L["a8"]["Name"] = [[Delete]];
G2L["a8"]["Text"] = [[Del]];
G2L["a8"]["Position"] = UDim2.new(0, 423, 0, -1);

-- StarterGui.DeltaKeyboard.Main.Background.Delete.UIStroke
G2L["a9"] = Instance.new("UIStroke", G2L["a8"]);
G2L["a9"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["a9"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.Delete.UICorner
G2L["aa"] = Instance.new("UICorner", G2L["a8"]);
G2L["aa"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.LeftAlt
G2L["ab"] = Instance.new("TextButton", G2L["4"]);
G2L["ab"]["TextWrapped"] = true;
G2L["ab"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["ab"]["TextSize"] = 21;
G2L["ab"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["ab"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["ab"]["Size"] = UDim2.new(0, 56, 0, 25);
G2L["ab"]["Name"] = [[LeftAlt]];
G2L["ab"]["Text"] = [[Alt]];
G2L["ab"]["Position"] = UDim2.new(0, 73, 0, 160);

-- StarterGui.DeltaKeyboard.Main.Background.LeftAlt.UIStroke
G2L["ac"] = Instance.new("UIStroke", G2L["ab"]);
G2L["ac"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["ac"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.LeftAlt.UICorner
G2L["ad"] = Instance.new("UICorner", G2L["ab"]);
G2L["ad"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.Space
G2L["ae"] = Instance.new("TextButton", G2L["4"]);
G2L["ae"]["TextWrapped"] = true;
G2L["ae"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["ae"]["TextSize"] = 21;
G2L["ae"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["ae"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["ae"]["Size"] = UDim2.new(0, 159, 0, 25);
G2L["ae"]["Name"] = [[Space]];
G2L["ae"]["Text"] = [[]];
G2L["ae"]["Position"] = UDim2.new(0, 137, 0, 160);

-- StarterGui.DeltaKeyboard.Main.Background.Space.UIStroke
G2L["af"] = Instance.new("UIStroke", G2L["ae"]);
G2L["af"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["af"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.Space.UICorner
G2L["b0"] = Instance.new("UICorner", G2L["ae"]);
G2L["b0"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.RightAlt
G2L["b1"] = Instance.new("TextButton", G2L["4"]);
G2L["b1"]["TextWrapped"] = true;
G2L["b1"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["b1"]["TextSize"] = 21;
G2L["b1"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["b1"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b1"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["b1"]["Name"] = [[RightAlt]];
G2L["b1"]["Text"] = [[Alt]];
G2L["b1"]["Position"] = UDim2.new(0, 305, 0, 160);

-- StarterGui.DeltaKeyboard.Main.Background.RightAlt.UIStroke
G2L["b2"] = Instance.new("UIStroke", G2L["b1"]);
G2L["b2"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["b2"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.RightAlt.UICorner
G2L["b3"] = Instance.new("UICorner", G2L["b1"]);
G2L["b3"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.RightControl
G2L["b4"] = Instance.new("TextButton", G2L["4"]);
G2L["b4"]["TextWrapped"] = true;
G2L["b4"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["b4"]["TextSize"] = 12;
G2L["b4"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["b4"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b4"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["b4"]["Name"] = [[RightControl]];
G2L["b4"]["Text"] = [[Ctrl]];
G2L["b4"]["Position"] = UDim2.new(0, 337, 0, 160);

-- StarterGui.DeltaKeyboard.Main.Background.RightControl.UIStroke
G2L["b5"] = Instance.new("UIStroke", G2L["b4"]);
G2L["b5"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["b5"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.RightControl.UICorner
G2L["b6"] = Instance.new("UICorner", G2L["b4"]);
G2L["b6"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.PageUp
G2L["b7"] = Instance.new("TextButton", G2L["4"]);
G2L["b7"]["TextWrapped"] = true;
G2L["b7"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["b7"]["TextSize"] = 12;
G2L["b7"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["b7"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b7"]["Size"] = UDim2.new(0, 33, 0, 11);
G2L["b7"]["Name"] = [[PageUp]];
G2L["b7"]["Text"] = [[Up]];
G2L["b7"]["Position"] = UDim2.new(0, 400, 0, 160);

-- StarterGui.DeltaKeyboard.Main.Background.PageUp.UIStroke
G2L["b8"] = Instance.new("UIStroke", G2L["b7"]);
G2L["b8"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["b8"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.PageUp.UICorner
G2L["b9"] = Instance.new("UICorner", G2L["b7"]);
G2L["b9"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.PageDown
G2L["ba"] = Instance.new("TextButton", G2L["4"]);
G2L["ba"]["TextWrapped"] = true;
G2L["ba"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["ba"]["TextSize"] = 12;
G2L["ba"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["ba"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["ba"]["Size"] = UDim2.new(0, 33, 0, 10);
G2L["ba"]["Name"] = [[PageDown]];
G2L["ba"]["Text"] = [[Down]];
G2L["ba"]["Position"] = UDim2.new(0, 400, 0, 174);

-- StarterGui.DeltaKeyboard.Main.Background.PageDown.UIStroke
G2L["bb"] = Instance.new("UIStroke", G2L["ba"]);
G2L["bb"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["bb"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.PageDown.UICorner
G2L["bc"] = Instance.new("UICorner", G2L["ba"]);
G2L["bc"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.End
G2L["bd"] = Instance.new("TextButton", G2L["4"]);
G2L["bd"]["TextWrapped"] = true;
G2L["bd"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["bd"]["TextSize"] = 12;
G2L["bd"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["bd"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["bd"]["Size"] = UDim2.new(0, 33, 0, 10);
G2L["bd"]["Name"] = [[End]];
G2L["bd"]["Text"] = [[>]];
G2L["bd"]["Position"] = UDim2.new(0, 436, 0, 174);

-- StarterGui.DeltaKeyboard.Main.Background.End.UIStroke
G2L["be"] = Instance.new("UIStroke", G2L["bd"]);
G2L["be"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["be"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.End.UICorner
G2L["bf"] = Instance.new("UICorner", G2L["bd"]);
G2L["bf"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.Home
G2L["c0"] = Instance.new("TextButton", G2L["4"]);
G2L["c0"]["TextWrapped"] = true;
G2L["c0"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["c0"]["TextSize"] = 12;
G2L["c0"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["c0"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c0"]["Size"] = UDim2.new(0, 30, 0, 10);
G2L["c0"]["Name"] = [[Home]];
G2L["c0"]["Text"] = [[<]];
G2L["c0"]["Position"] = UDim2.new(0, 366, 0, 174);

-- StarterGui.DeltaKeyboard.Main.Background.Home.UIStroke
G2L["c1"] = Instance.new("UIStroke", G2L["c0"]);
G2L["c1"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["c1"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.Home.UICorner
G2L["c2"] = Instance.new("UICorner", G2L["c0"]);
G2L["c2"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.Escape
G2L["c3"] = Instance.new("TextButton", G2L["4"]);
G2L["c3"]["TextWrapped"] = true;
G2L["c3"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["c3"]["TextSize"] = 12;
G2L["c3"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["c3"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c3"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["c3"]["Name"] = [[Escape]];
G2L["c3"]["Text"] = [[Esc]];
G2L["c3"]["Position"] = UDim2.new(0, 7, 0, -1);

-- StarterGui.DeltaKeyboard.Main.Background.Escape.UIStroke
G2L["c4"] = Instance.new("UIStroke", G2L["c3"]);
G2L["c4"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["c4"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.Escape.UICorner
G2L["c5"] = Instance.new("UICorner", G2L["c3"]);
G2L["c5"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.F1
G2L["c6"] = Instance.new("TextButton", G2L["4"]);
G2L["c6"]["TextWrapped"] = true;
G2L["c6"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["c6"]["TextSize"] = 21;
G2L["c6"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["c6"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c6"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["c6"]["Name"] = [[F1]];
G2L["c6"]["Text"] = [[F1]];
G2L["c6"]["Position"] = UDim2.new(0, 39, 0, -1);

-- StarterGui.DeltaKeyboard.Main.Background.F1.UIStroke
G2L["c7"] = Instance.new("UIStroke", G2L["c6"]);
G2L["c7"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["c7"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.F1.UICorner
G2L["c8"] = Instance.new("UICorner", G2L["c6"]);
G2L["c8"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.F2
G2L["c9"] = Instance.new("TextButton", G2L["4"]);
G2L["c9"]["TextWrapped"] = true;
G2L["c9"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["c9"]["TextSize"] = 21;
G2L["c9"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["c9"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c9"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["c9"]["Name"] = [[F2]];
G2L["c9"]["Text"] = [[F2]];
G2L["c9"]["Position"] = UDim2.new(0, 71, 0, -1);

-- StarterGui.DeltaKeyboard.Main.Background.F2.UIStroke
G2L["ca"] = Instance.new("UIStroke", G2L["c9"]);
G2L["ca"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["ca"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.F2.UICorner
G2L["cb"] = Instance.new("UICorner", G2L["c9"]);
G2L["cb"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.F3
G2L["cc"] = Instance.new("TextButton", G2L["4"]);
G2L["cc"]["TextWrapped"] = true;
G2L["cc"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["cc"]["TextSize"] = 21;
G2L["cc"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["cc"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["cc"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["cc"]["Name"] = [[F3]];
G2L["cc"]["Text"] = [[F3]];
G2L["cc"]["Position"] = UDim2.new(0, 104, 0, -1);

-- StarterGui.DeltaKeyboard.Main.Background.F3.UIStroke
G2L["cd"] = Instance.new("UIStroke", G2L["cc"]);
G2L["cd"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["cd"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.F3.UICorner
G2L["ce"] = Instance.new("UICorner", G2L["cc"]);
G2L["ce"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.F4
G2L["cf"] = Instance.new("TextButton", G2L["4"]);
G2L["cf"]["TextWrapped"] = true;
G2L["cf"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["cf"]["TextSize"] = 21;
G2L["cf"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["cf"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["cf"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["cf"]["Name"] = [[F4]];
G2L["cf"]["Text"] = [[F4]];
G2L["cf"]["Position"] = UDim2.new(0, 135, 0, -1);

-- StarterGui.DeltaKeyboard.Main.Background.F4.UIStroke
G2L["d0"] = Instance.new("UIStroke", G2L["cf"]);
G2L["d0"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["d0"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.F4.UICorner
G2L["d1"] = Instance.new("UICorner", G2L["cf"]);
G2L["d1"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.F5
G2L["d2"] = Instance.new("TextButton", G2L["4"]);
G2L["d2"]["TextWrapped"] = true;
G2L["d2"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["d2"]["TextSize"] = 21;
G2L["d2"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["d2"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["d2"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["d2"]["Name"] = [[F5]];
G2L["d2"]["Text"] = [[F5]];
G2L["d2"]["Position"] = UDim2.new(0, 167, 0, -1);

-- StarterGui.DeltaKeyboard.Main.Background.F5.UIStroke
G2L["d3"] = Instance.new("UIStroke", G2L["d2"]);
G2L["d3"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["d3"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.F5.UICorner
G2L["d4"] = Instance.new("UICorner", G2L["d2"]);
G2L["d4"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.F6
G2L["d5"] = Instance.new("TextButton", G2L["4"]);
G2L["d5"]["TextWrapped"] = true;
G2L["d5"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["d5"]["TextSize"] = 21;
G2L["d5"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["d5"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["d5"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["d5"]["Name"] = [[F6]];
G2L["d5"]["Text"] = [[F6]];
G2L["d5"]["Position"] = UDim2.new(0, 199, 0, -1);

-- StarterGui.DeltaKeyboard.Main.Background.F6.UIStroke
G2L["d6"] = Instance.new("UIStroke", G2L["d5"]);
G2L["d6"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["d6"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.F6.UICorner
G2L["d7"] = Instance.new("UICorner", G2L["d5"]);
G2L["d7"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.F7
G2L["d8"] = Instance.new("TextButton", G2L["4"]);
G2L["d8"]["TextWrapped"] = true;
G2L["d8"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["d8"]["TextSize"] = 21;
G2L["d8"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["d8"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["d8"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["d8"]["Name"] = [[F7]];
G2L["d8"]["Text"] = [[F7]];
G2L["d8"]["Position"] = UDim2.new(0, 231, 0, -1);

-- StarterGui.DeltaKeyboard.Main.Background.F7.UIStroke
G2L["d9"] = Instance.new("UIStroke", G2L["d8"]);
G2L["d9"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["d9"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.F7.UICorner
G2L["da"] = Instance.new("UICorner", G2L["d8"]);
G2L["da"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.F8
G2L["db"] = Instance.new("TextButton", G2L["4"]);
G2L["db"]["TextWrapped"] = true;
G2L["db"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["db"]["TextSize"] = 21;
G2L["db"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["db"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["db"]["Size"] = UDim2.new(0, 24, 0, 25);
G2L["db"]["Name"] = [[F8]];
G2L["db"]["Text"] = [[F8]];
G2L["db"]["Position"] = UDim2.new(0, 264, 0, -1);

-- StarterGui.DeltaKeyboard.Main.Background.F8.UIStroke
G2L["dc"] = Instance.new("UIStroke", G2L["db"]);
G2L["dc"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["dc"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.F8.UICorner
G2L["dd"] = Instance.new("UICorner", G2L["db"]);
G2L["dd"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.F9
G2L["de"] = Instance.new("TextButton", G2L["4"]);
G2L["de"]["TextWrapped"] = true;
G2L["de"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["de"]["TextSize"] = 21;
G2L["de"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["de"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["de"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["de"]["Name"] = [[F9]];
G2L["de"]["Text"] = [[F9]];
G2L["de"]["Position"] = UDim2.new(0, 295, 0, -1);

-- StarterGui.DeltaKeyboard.Main.Background.F9.UIStroke
G2L["df"] = Instance.new("UIStroke", G2L["de"]);
G2L["df"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["df"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.F9.UICorner
G2L["e0"] = Instance.new("UICorner", G2L["de"]);
G2L["e0"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.F10
G2L["e1"] = Instance.new("TextButton", G2L["4"]);
G2L["e1"]["TextWrapped"] = true;
G2L["e1"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["e1"]["TextSize"] = 15;
G2L["e1"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["e1"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["e1"]["Size"] = UDim2.new(0, 24, 0, 25);
G2L["e1"]["Name"] = [[F10]];
G2L["e1"]["Text"] = [[F10]];
G2L["e1"]["Position"] = UDim2.new(0, 327, 0, -1);

-- StarterGui.DeltaKeyboard.Main.Background.F10.UIStroke
G2L["e2"] = Instance.new("UIStroke", G2L["e1"]);
G2L["e2"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["e2"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.F10.UICorner
G2L["e3"] = Instance.new("UICorner", G2L["e1"]);
G2L["e3"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.F11
G2L["e4"] = Instance.new("TextButton", G2L["4"]);
G2L["e4"]["TextWrapped"] = true;
G2L["e4"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["e4"]["TextSize"] = 15;
G2L["e4"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["e4"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["e4"]["Size"] = UDim2.new(0, 24, 0, 25);
G2L["e4"]["Name"] = [[F11]];
G2L["e4"]["Text"] = [[F11]];
G2L["e4"]["Position"] = UDim2.new(0, 358, 0, -1);

-- StarterGui.DeltaKeyboard.Main.Background.F11.UIStroke
G2L["e5"] = Instance.new("UIStroke", G2L["e4"]);
G2L["e5"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["e5"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.F11.UICorner
G2L["e6"] = Instance.new("UICorner", G2L["e4"]);
G2L["e6"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.RGBHandler
G2L["e7"] = Instance.new("LocalScript", G2L["4"]);
G2L["e7"]["Name"] = [[RGBHandler]];

-- StarterGui.DeltaKeyboard.Main.Background._Pipe
G2L["e8"] = Instance.new("TextButton", G2L["4"]);
G2L["e8"]["TextWrapped"] = true;
G2L["e8"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["e8"]["TextSize"] = 21;
G2L["e8"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["e8"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["e8"]["Visible"] = false;
G2L["e8"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["e8"]["Name"] = [[_Pipe]];
G2L["e8"]["Text"] = [[|]];
G2L["e8"]["Position"] = UDim2.new(0, 442, 0, 63);

-- StarterGui.DeltaKeyboard.Main.Background._Pipe.UIStroke
G2L["e9"] = Instance.new("UIStroke", G2L["e8"]);
G2L["e9"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["e9"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background._Pipe.UICorner
G2L["ea"] = Instance.new("UICorner", G2L["e8"]);
G2L["ea"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background._Tilde
G2L["eb"] = Instance.new("TextButton", G2L["4"]);
G2L["eb"]["TextWrapped"] = true;
G2L["eb"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["eb"]["TextSize"] = 21;
G2L["eb"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["eb"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["eb"]["Visible"] = false;
G2L["eb"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["eb"]["Name"] = [[_Tilde]];
G2L["eb"]["Text"] = [[~]];
G2L["eb"]["Position"] = UDim2.new(0, 7, 0, 31);

-- StarterGui.DeltaKeyboard.Main.Background._Tilde.UIStroke
G2L["ec"] = Instance.new("UIStroke", G2L["eb"]);
G2L["ec"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["ec"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background._Tilde.UICorner
G2L["ed"] = Instance.new("UICorner", G2L["eb"]);
G2L["ed"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background._Exclamation
G2L["ee"] = Instance.new("TextButton", G2L["4"]);
G2L["ee"]["TextWrapped"] = true;
G2L["ee"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["ee"]["TextSize"] = 21;
G2L["ee"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["ee"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["ee"]["Visible"] = false;
G2L["ee"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["ee"]["Name"] = [[_Exclamation]];
G2L["ee"]["Text"] = [[!]];
G2L["ee"]["Position"] = UDim2.new(0, 39, 0, 31);

-- StarterGui.DeltaKeyboard.Main.Background._Exclamation.UIStroke
G2L["ef"] = Instance.new("UIStroke", G2L["ee"]);
G2L["ef"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["ef"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background._Exclamation.UICorner
G2L["f0"] = Instance.new("UICorner", G2L["ee"]);
G2L["f0"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background._At
G2L["f1"] = Instance.new("TextButton", G2L["4"]);
G2L["f1"]["TextWrapped"] = true;
G2L["f1"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["f1"]["TextSize"] = 21;
G2L["f1"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["f1"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["f1"]["Visible"] = false;
G2L["f1"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["f1"]["Name"] = [[_At]];
G2L["f1"]["Text"] = [[@]];
G2L["f1"]["Position"] = UDim2.new(0, 71, 0, 31);

-- StarterGui.DeltaKeyboard.Main.Background._At.UIStroke
G2L["f2"] = Instance.new("UIStroke", G2L["f1"]);
G2L["f2"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["f2"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background._At.UICorner
G2L["f3"] = Instance.new("UICorner", G2L["f1"]);
G2L["f3"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background._Hash
G2L["f4"] = Instance.new("TextButton", G2L["4"]);
G2L["f4"]["TextWrapped"] = true;
G2L["f4"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["f4"]["TextSize"] = 21;
G2L["f4"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["f4"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["f4"]["Visible"] = false;
G2L["f4"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["f4"]["Name"] = [[_Hash]];
G2L["f4"]["Text"] = [[#]];
G2L["f4"]["Position"] = UDim2.new(0, 104, 0, 31);

-- StarterGui.DeltaKeyboard.Main.Background._Hash.UIStroke
G2L["f5"] = Instance.new("UIStroke", G2L["f4"]);
G2L["f5"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["f5"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background._Hash.UICorner
G2L["f6"] = Instance.new("UICorner", G2L["f4"]);
G2L["f6"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background._Dollar
G2L["f7"] = Instance.new("TextButton", G2L["4"]);
G2L["f7"]["TextWrapped"] = true;
G2L["f7"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["f7"]["TextSize"] = 21;
G2L["f7"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["f7"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["f7"]["Visible"] = false;
G2L["f7"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["f7"]["Name"] = [[_Dollar]];
G2L["f7"]["Text"] = [[$]];
G2L["f7"]["Position"] = UDim2.new(0, 135, 0, 31);

-- StarterGui.DeltaKeyboard.Main.Background._Dollar.UIStroke
G2L["f8"] = Instance.new("UIStroke", G2L["f7"]);
G2L["f8"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["f8"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background._Dollar.UICorner
G2L["f9"] = Instance.new("UICorner", G2L["f7"]);
G2L["f9"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background._Percent
G2L["fa"] = Instance.new("TextButton", G2L["4"]);
G2L["fa"]["TextWrapped"] = true;
G2L["fa"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["fa"]["TextSize"] = 21;
G2L["fa"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["fa"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["fa"]["Visible"] = false;
G2L["fa"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["fa"]["Name"] = [[_Percent]];
G2L["fa"]["Text"] = [[%]];
G2L["fa"]["Position"] = UDim2.new(0, 167, 0, 31);

-- StarterGui.DeltaKeyboard.Main.Background._Percent.UIStroke
G2L["fb"] = Instance.new("UIStroke", G2L["fa"]);
G2L["fb"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["fb"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background._Percent.UICorner
G2L["fc"] = Instance.new("UICorner", G2L["fa"]);
G2L["fc"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background._Caret
G2L["fd"] = Instance.new("TextButton", G2L["4"]);
G2L["fd"]["TextWrapped"] = true;
G2L["fd"]["TextStrokeTransparency"] = 0;
G2L["fd"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["fd"]["TextSize"] = 21;
G2L["fd"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["fd"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["fd"]["Visible"] = false;
G2L["fd"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["fd"]["Name"] = [[_Caret]];
G2L["fd"]["Text"] = [[^]];
G2L["fd"]["Position"] = UDim2.new(0, 199, 0, 31);

-- StarterGui.DeltaKeyboard.Main.Background._Caret.UIStroke
G2L["fe"] = Instance.new("UIStroke", G2L["fd"]);
G2L["fe"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["fe"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background._Caret.UICorner
G2L["ff"] = Instance.new("UICorner", G2L["fd"]);
G2L["ff"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background._Ampersand
G2L["100"] = Instance.new("TextButton", G2L["4"]);
G2L["100"]["TextWrapped"] = true;
G2L["100"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["100"]["TextSize"] = 21;
G2L["100"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["100"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["100"]["Visible"] = false;
G2L["100"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["100"]["Name"] = [[_Ampersand]];
G2L["100"]["Text"] = [[&]];
G2L["100"]["Position"] = UDim2.new(0, 231, 0, 31);

-- StarterGui.DeltaKeyboard.Main.Background._Ampersand.UIStroke
G2L["101"] = Instance.new("UIStroke", G2L["100"]);
G2L["101"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["101"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background._Ampersand.UICorner
G2L["102"] = Instance.new("UICorner", G2L["100"]);
G2L["102"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background._Asterisk
G2L["103"] = Instance.new("TextButton", G2L["4"]);
G2L["103"]["TextWrapped"] = true;
G2L["103"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["103"]["TextSize"] = 21;
G2L["103"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["103"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["103"]["Visible"] = false;
G2L["103"]["Size"] = UDim2.new(0, 24, 0, 25);
G2L["103"]["Name"] = [[_Asterisk]];
G2L["103"]["Text"] = [[*]];
G2L["103"]["Position"] = UDim2.new(0, 264, 0, 31);

-- StarterGui.DeltaKeyboard.Main.Background._Asterisk.UIStroke
G2L["104"] = Instance.new("UIStroke", G2L["103"]);
G2L["104"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["104"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background._Asterisk.UICorner
G2L["105"] = Instance.new("UICorner", G2L["103"]);
G2L["105"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background._LeftParenthesis
G2L["106"] = Instance.new("TextButton", G2L["4"]);
G2L["106"]["TextWrapped"] = true;
G2L["106"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["106"]["TextSize"] = 21;
G2L["106"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["106"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["106"]["Visible"] = false;
G2L["106"]["Size"] = UDim2.new(0, 24, 0, 25);
G2L["106"]["Name"] = [[_LeftParenthesis]];
G2L["106"]["Text"] = [[(]];
G2L["106"]["Position"] = UDim2.new(0, 295, 0, 31);

-- StarterGui.DeltaKeyboard.Main.Background._LeftParenthesis.UIStroke
G2L["107"] = Instance.new("UIStroke", G2L["106"]);
G2L["107"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["107"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background._LeftParenthesis.UICorner
G2L["108"] = Instance.new("UICorner", G2L["106"]);
G2L["108"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background._RightParenthesis
G2L["109"] = Instance.new("TextButton", G2L["4"]);
G2L["109"]["TextWrapped"] = true;
G2L["109"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["109"]["TextSize"] = 21;
G2L["109"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["109"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["109"]["Visible"] = false;
G2L["109"]["Size"] = UDim2.new(0, 24, 0, 25);
G2L["109"]["Name"] = [[_RightParenthesis]];
G2L["109"]["Text"] = [[)]];
G2L["109"]["Position"] = UDim2.new(0, 327, 0, 31);

-- StarterGui.DeltaKeyboard.Main.Background._RightParenthesis.UIStroke
G2L["10a"] = Instance.new("UIStroke", G2L["109"]);
G2L["10a"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["10a"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background._RightParenthesis.UICorner
G2L["10b"] = Instance.new("UICorner", G2L["109"]);
G2L["10b"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background._Underscore
G2L["10c"] = Instance.new("TextButton", G2L["4"]);
G2L["10c"]["TextWrapped"] = true;
G2L["10c"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["10c"]["TextSize"] = 21;
G2L["10c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["10c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["10c"]["Visible"] = false;
G2L["10c"]["Size"] = UDim2.new(0, 24, 0, 25);
G2L["10c"]["Name"] = [[_Underscore]];
G2L["10c"]["Text"] = [[_]];
G2L["10c"]["Position"] = UDim2.new(0, 358, 0, 31);

-- StarterGui.DeltaKeyboard.Main.Background._Underscore.UIStroke
G2L["10d"] = Instance.new("UIStroke", G2L["10c"]);
G2L["10d"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["10d"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background._Underscore.UICorner
G2L["10e"] = Instance.new("UICorner", G2L["10c"]);
G2L["10e"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background._Plus
G2L["10f"] = Instance.new("TextButton", G2L["4"]);
G2L["10f"]["TextWrapped"] = true;
G2L["10f"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["10f"]["TextSize"] = 21;
G2L["10f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["10f"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["10f"]["Visible"] = false;
G2L["10f"]["Size"] = UDim2.new(0, 24, 0, 25);
G2L["10f"]["Name"] = [[_Plus]];
G2L["10f"]["Text"] = [[+]];
G2L["10f"]["Position"] = UDim2.new(0, 389, 0, 31);

-- StarterGui.DeltaKeyboard.Main.Background._Plus.UIStroke
G2L["110"] = Instance.new("UIStroke", G2L["10f"]);
G2L["110"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["110"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background._Plus.UICorner
G2L["111"] = Instance.new("UICorner", G2L["10f"]);
G2L["111"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background._RightCurly
G2L["112"] = Instance.new("TextButton", G2L["4"]);
G2L["112"]["TextWrapped"] = true;
G2L["112"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["112"]["TextSize"] = 21;
G2L["112"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["112"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["112"]["Visible"] = false;
G2L["112"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["112"]["Name"] = [[_RightCurly]];
G2L["112"]["Text"] = [[}]];
G2L["112"]["Position"] = UDim2.new(0, 410, 0, 63);

-- StarterGui.DeltaKeyboard.Main.Background._RightCurly.UIStroke
G2L["113"] = Instance.new("UIStroke", G2L["112"]);
G2L["113"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["113"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background._RightCurly.UICorner
G2L["114"] = Instance.new("UICorner", G2L["112"]);
G2L["114"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background._LeftCurly
G2L["115"] = Instance.new("TextButton", G2L["4"]);
G2L["115"]["TextWrapped"] = true;
G2L["115"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["115"]["TextSize"] = 21;
G2L["115"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["115"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["115"]["Visible"] = false;
G2L["115"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["115"]["Name"] = [[_LeftCurly]];
G2L["115"]["Text"] = [[{]];
G2L["115"]["Position"] = UDim2.new(0, 378, 0, 63);

-- StarterGui.DeltaKeyboard.Main.Background._LeftCurly.UIStroke
G2L["116"] = Instance.new("UIStroke", G2L["115"]);
G2L["116"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["116"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background._LeftCurly.UICorner
G2L["117"] = Instance.new("UICorner", G2L["115"]);
G2L["117"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background._QuotedDouble
G2L["118"] = Instance.new("TextButton", G2L["4"]);
G2L["118"]["TextWrapped"] = true;
G2L["118"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["118"]["TextSize"] = 21;
G2L["118"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["118"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["118"]["Visible"] = false;
G2L["118"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["118"]["Name"] = [[_QuotedDouble]];
G2L["118"]["Text"] = [["]];
G2L["118"]["Position"] = UDim2.new(0, 386, 0, 95);

-- StarterGui.DeltaKeyboard.Main.Background._QuotedDouble.UIStroke
G2L["119"] = Instance.new("UIStroke", G2L["118"]);
G2L["119"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["119"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background._QuotedDouble.UICorner
G2L["11a"] = Instance.new("UICorner", G2L["118"]);
G2L["11a"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background._Colon
G2L["11b"] = Instance.new("TextButton", G2L["4"]);
G2L["11b"]["TextWrapped"] = true;
G2L["11b"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["11b"]["TextSize"] = 21;
G2L["11b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["11b"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["11b"]["Visible"] = false;
G2L["11b"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["11b"]["Name"] = [[_Colon]];
G2L["11b"]["Text"] = [[:]];
G2L["11b"]["Position"] = UDim2.new(0, 354, 0, 95);

-- StarterGui.DeltaKeyboard.Main.Background._Colon.UIStroke
G2L["11c"] = Instance.new("UIStroke", G2L["11b"]);
G2L["11c"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["11c"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background._Colon.UICorner
G2L["11d"] = Instance.new("UICorner", G2L["11b"]);
G2L["11d"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background._Question
G2L["11e"] = Instance.new("TextButton", G2L["4"]);
G2L["11e"]["TextWrapped"] = true;
G2L["11e"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["11e"]["TextSize"] = 21;
G2L["11e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["11e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["11e"]["Visible"] = false;
G2L["11e"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["11e"]["Name"] = [[_Question]];
G2L["11e"]["Text"] = [[?]];
G2L["11e"]["Position"] = UDim2.new(0, 372, 0, 127);

-- StarterGui.DeltaKeyboard.Main.Background._Question.UIStroke
G2L["11f"] = Instance.new("UIStroke", G2L["11e"]);
G2L["11f"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["11f"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background._Question.UICorner
G2L["120"] = Instance.new("UICorner", G2L["11e"]);
G2L["120"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background._GreaterThan
G2L["121"] = Instance.new("TextButton", G2L["4"]);
G2L["121"]["TextWrapped"] = true;
G2L["121"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["121"]["TextSize"] = 21;
G2L["121"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["121"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["121"]["Visible"] = false;
G2L["121"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["121"]["Name"] = [[_GreaterThan]];
G2L["121"]["Text"] = [[>]];
G2L["121"]["Position"] = UDim2.new(0, 338, 0, 127);

-- StarterGui.DeltaKeyboard.Main.Background._GreaterThan.UIStroke
G2L["122"] = Instance.new("UIStroke", G2L["121"]);
G2L["122"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["122"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background._GreaterThan.UICorner
G2L["123"] = Instance.new("UICorner", G2L["121"]);
G2L["123"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background._LessThan
G2L["124"] = Instance.new("TextButton", G2L["4"]);
G2L["124"]["TextWrapped"] = true;
G2L["124"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["124"]["TextSize"] = 21;
G2L["124"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["124"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["124"]["Visible"] = false;
G2L["124"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["124"]["Name"] = [[_LessThan]];
G2L["124"]["Text"] = [[<]];
G2L["124"]["Position"] = UDim2.new(0, 305, 0, 127);

-- StarterGui.DeltaKeyboard.Main.Background._LessThan.UIStroke
G2L["125"] = Instance.new("UIStroke", G2L["124"]);
G2L["125"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["125"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background._LessThan.UICorner
G2L["126"] = Instance.new("UICorner", G2L["124"]);
G2L["126"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.UICorner
G2L["127"] = Instance.new("UICorner", G2L["4"]);
G2L["127"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.Background.D
G2L["128"] = Instance.new("TextButton", G2L["4"]);
G2L["128"]["TextWrapped"] = true;
G2L["128"]["BackgroundColor3"] = Color3.fromRGB(8, 8, 8);
G2L["128"]["TextSize"] = 21;
G2L["128"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["128"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["128"]["Size"] = UDim2.new(0, 25, 0, 25);
G2L["128"]["Name"] = [[D]];
G2L["128"]["Text"] = [[D]];
G2L["128"]["Position"] = UDim2.new(0, 130, 0, 95);

-- StarterGui.DeltaKeyboard.Main.Background.D.UIStroke
G2L["129"] = Instance.new("UIStroke", G2L["128"]);
G2L["129"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["129"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.Background.D.UICorner
G2L["12a"] = Instance.new("UICorner", G2L["128"]);
G2L["12a"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.UICorner
G2L["12b"] = Instance.new("UICorner", G2L["2"]);
G2L["12b"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.ToggleRGB
G2L["12c"] = Instance.new("TextButton", G2L["2"]);
G2L["12c"]["BackgroundColor3"] = Color3.fromRGB(0, 255, 0);
G2L["12c"]["TextSize"] = 14;
G2L["12c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["12c"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["12c"]["Size"] = UDim2.new(0, 14, 0, 14);
G2L["12c"]["Name"] = [[ToggleRGB]];
G2L["12c"]["Text"] = [[]];
G2L["12c"]["Position"] = UDim2.new(0.9649999737739563, 0, 0.9300000071525574, 0);

-- StarterGui.DeltaKeyboard.Main.ToggleRGB.UICorner
G2L["12d"] = Instance.new("UICorner", G2L["12c"]);
G2L["12d"]["CornerRadius"] = UDim.new(0, 4);

-- StarterGui.DeltaKeyboard.Main.ToggleRGB.UIStroke
G2L["12e"] = Instance.new("UIStroke", G2L["12c"]);
G2L["12e"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["12e"]["Thickness"] = 0.8999999761581421;
G2L["12e"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.tesy
G2L["12f"] = Instance.new("TextButton", G2L["2"]);
G2L["12f"]["BackgroundColor3"] = Color3.fromRGB(0, 255, 0);
G2L["12f"]["TextSize"] = 14;
G2L["12f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["12f"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["12f"]["Visible"] = false;
G2L["12f"]["Size"] = UDim2.new(0, 58, 0, 14);
G2L["12f"]["Name"] = [[tesy]];
G2L["12f"]["Text"] = [[]];
G2L["12f"]["Position"] = UDim2.new(0.8352929353713989, 0, 0.9299998879432678, 0);

-- StarterGui.DeltaKeyboard.Main.tesy.UICorner
G2L["130"] = Instance.new("UICorner", G2L["12f"]);
G2L["130"]["CornerRadius"] = UDim.new(0, 4);

-- StarterGui.DeltaKeyboard.Main.tesy.UIStroke
G2L["131"] = Instance.new("UIStroke", G2L["12f"]);
G2L["131"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["131"]["Thickness"] = 0.8999999761581421;
G2L["131"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.ToggleShift
G2L["132"] = Instance.new("TextButton", G2L["2"]);
G2L["132"]["BackgroundColor3"] = Color3.fromRGB(0, 255, 0);
G2L["132"]["TextSize"] = 14;
G2L["132"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["132"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["132"]["Size"] = UDim2.new(0, 78, 0, 14);
G2L["132"]["Name"] = [[ToggleShift]];
G2L["132"]["Text"] = [[Enable Shift]];
G2L["132"]["Position"] = UDim2.new(0.7934519052505493, 0, 0.9299998879432678, 0);

-- StarterGui.DeltaKeyboard.Main.ToggleShift.UICorner
G2L["133"] = Instance.new("UICorner", G2L["132"]);
G2L["133"]["CornerRadius"] = UDim.new(0, 4);

-- StarterGui.DeltaKeyboard.Main.ToggleShift.UIStroke
G2L["134"] = Instance.new("UIStroke", G2L["132"]);
G2L["134"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["134"]["Thickness"] = 0.8999999761581421;
G2L["134"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.Main.ToggleShift.UIStroke
G2L["135"] = Instance.new("UIStroke", G2L["132"]);
G2L["135"]["Thickness"] = 0.8999999761581421;

-- StarterGui.DeltaKeyboard.Main.Drag
G2L["136"] = Instance.new("LocalScript", G2L["2"]);
G2L["136"]["Name"] = [[Drag]];

-- StarterGui.DeltaKeyboard.Main.UICorner
G2L["137"] = Instance.new("UICorner", G2L["2"]);
G2L["137"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.DeltaKeyboard.Main.ButtonHandler
G2L["138"] = Instance.new("LocalScript", G2L["2"]);
G2L["138"]["Name"] = [[ButtonHandler]];

-- StarterGui.DeltaKeyboard.Main.Close
G2L["139"] = Instance.new("TextButton", G2L["2"]);
G2L["139"]["BorderSizePixel"] = 0;
G2L["139"]["AutoButtonColor"] = false;
G2L["139"]["BackgroundColor3"] = Color3.fromRGB(25, 25, 25);
G2L["139"]["TextSize"] = 16;
G2L["139"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["139"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["139"]["Size"] = UDim2.new(0, 34, 0, 22);
G2L["139"]["Name"] = [[Close]];
G2L["139"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["139"]["Text"] = [[X]];
G2L["139"]["Position"] = UDim2.new(0, 437, 0, 2);

-- StarterGui.DeltaKeyboard.Main.Minimize
G2L["13a"] = Instance.new("TextButton", G2L["2"]);
G2L["13a"]["BorderSizePixel"] = 0;
G2L["13a"]["BackgroundColor3"] = Color3.fromRGB(36, 36, 36);
G2L["13a"]["TextSize"] = 21;
G2L["13a"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["13a"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["13a"]["Size"] = UDim2.new(0, 34, 0, 22);
G2L["13a"]["Name"] = [[Minimize]];
G2L["13a"]["Text"] = [[-]];
G2L["13a"]["Position"] = UDim2.new(0, 367, 0, 2);
G2L["13a"]["BackgroundTransparency"] = 1;

-- StarterGui.DeltaKeyboard.Main.Window
G2L["13b"] = Instance.new("TextButton", G2L["2"]);
G2L["13b"]["BorderSizePixel"] = 0;
G2L["13b"]["BackgroundColor3"] = Color3.fromRGB(36, 36, 36);
G2L["13b"]["TextSize"] = 21;
G2L["13b"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["13b"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["13b"]["Size"] = UDim2.new(0, 34, 0, 22);
G2L["13b"]["Name"] = [[Window]];
G2L["13b"]["Text"] = [[☐]];
G2L["13b"]["Position"] = UDim2.new(0, 401, 0, 2);
G2L["13b"]["BackgroundTransparency"] = 1;

-- StarterGui.DeltaKeyboard.Main.Title
G2L["13c"] = Instance.new("TextLabel", G2L["2"]);
G2L["13c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["13c"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["13c"]["FontFace"] = Font.new([[rbxasset://fonts/families/Nunito.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["13c"]["TextSize"] = 14;
G2L["13c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["13c"]["Size"] = UDim2.new(0, 121, 0, 22);
G2L["13c"]["Active"] = true;
G2L["13c"]["Text"] = [[Delta Mobile - Keyboard Crack By ATA]];
G2L["13c"]["Name"] = [[Title]];
G2L["13c"]["BackgroundTransparency"] = 1;
G2L["13c"]["Position"] = UDim2.new(0, 9, 0, 2);

-- StarterGui.DeltaKeyboard.Main.Settings
G2L["13d"] = Instance.new("TextButton", G2L["2"]);
G2L["13d"]["BorderSizePixel"] = 0;
G2L["13d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["13d"]["FontFace"] = Font.new([[rbxasset://fonts/families/LegacyArial.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["13d"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["13d"]["Selectable"] = false;
G2L["13d"]["Size"] = UDim2.new(0, 17, 0, 17);
G2L["13d"]["Name"] = [[Settings]];
G2L["13d"]["Text"] = [[a +]];
G2L["13d"]["Position"] = UDim2.new(0.0041841003112494946, 0, 0.9237288236618042, 0);
G2L["13d"]["BackgroundTransparency"] = 1;

-- StarterGui.DeltaKeyboard.IsSelectingKey
G2L["13e"] = Instance.new("BoolValue", G2L["1"]);
G2L["13e"]["Name"] = [[IsSelectingKey]];

-- StarterGui.DeltaKeyboard.KEY
G2L["13f"] = Instance.new("TextButton", G2L["1"]);
G2L["13f"]["TextWrapped"] = true;
G2L["13f"]["TextScaled"] = true;
G2L["13f"]["BackgroundColor3"] = Color3.fromRGB(31, 31, 31);
G2L["13f"]["FontFace"] = Font.new([[rbxasset://fonts/families/TitilliumWeb.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["13f"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["13f"]["Selectable"] = false;
G2L["13f"]["Visible"] = false;
G2L["13f"]["Size"] = UDim2.new(0, 40, 0, 40);
G2L["13f"]["Name"] = [[KEY]];
G2L["13f"]["Text"] = [[KEY]];
G2L["13f"]["Position"] = UDim2.new(0.47962817549705505, 0, 0.46487605571746826, 0);

-- StarterGui.DeltaKeyboard.KEY.UICorner
G2L["140"] = Instance.new("UICorner", G2L["13f"]);


-- StarterGui.DeltaKeyboard.KEY.UIStroke
G2L["141"] = Instance.new("UIStroke", G2L["13f"]);
G2L["141"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["141"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.KEY.Close
G2L["142"] = Instance.new("TextButton", G2L["13f"]);
G2L["142"]["TextWrapped"] = true;
G2L["142"]["TextScaled"] = true;
G2L["142"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
G2L["142"]["TextSize"] = 14;
G2L["142"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["142"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["142"]["Size"] = UDim2.new(0, 11, 0, 11);
G2L["142"]["Name"] = [[Close]];
G2L["142"]["Text"] = [[X]];
G2L["142"]["Position"] = UDim2.new(1, 0, -0.125, 0);

-- StarterGui.DeltaKeyboard.KEY.Close.UICorner
G2L["143"] = Instance.new("UICorner", G2L["142"]);


-- StarterGui.DeltaKeyboard.CreateKey
G2L["144"] = Instance.new("Frame", G2L["1"]);
G2L["144"]["Active"] = true;
G2L["144"]["BackgroundColor3"] = Color3.fromRGB(32, 32, 32);
G2L["144"]["Size"] = UDim2.new(0, 284, 0, 292);
G2L["144"]["Position"] = UDim2.new(0.3589794337749481, 0, 0.24793387949466705, 0);
G2L["144"]["Visible"] = false;
G2L["144"]["Name"] = [[CreateKey]];

-- StarterGui.DeltaKeyboard.CreateKey.UICorner
G2L["145"] = Instance.new("UICorner", G2L["144"]);


-- StarterGui.DeltaKeyboard.CreateKey.UIStroke
G2L["146"] = Instance.new("UIStroke", G2L["144"]);
G2L["146"]["Color"] = Color3.fromRGB(158, 0, 255);
G2L["146"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.CreateKey.Title
G2L["147"] = Instance.new("TextLabel", G2L["144"]);
G2L["147"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["147"]["FontFace"] = Font.new([[rbxasset://fonts/families/Nunito.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["147"]["Selectable"] = true;
G2L["147"]["TextSize"] = 18;
G2L["147"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["147"]["Size"] = UDim2.new(0, 285, 0, 24);
G2L["147"]["Active"] = true;
G2L["147"]["Text"] = [[Delta Keyboard - Settings Floating Key]];
G2L["147"]["Name"] = [[Title]];
G2L["147"]["BackgroundTransparency"] = 1;
G2L["147"]["Position"] = UDim2.new(-0.0035211266949772835, 0, 0.02054794505238533, 0);

-- StarterGui.DeltaKeyboard.CreateKey.Create
G2L["148"] = Instance.new("TextButton", G2L["144"]);
G2L["148"]["BackgroundColor3"] = Color3.fromRGB(21, 21, 21);
G2L["148"]["TextSize"] = 31;
G2L["148"]["FontFace"] = Font.new([[rbxasset://fonts/families/Nunito.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["148"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["148"]["Size"] = UDim2.new(0, 166, 0, 46);
G2L["148"]["Name"] = [[Create]];
G2L["148"]["Text"] = [[Create]];
G2L["148"]["Position"] = UDim2.new(0.2042253464460373, 0, 0.6095890402793884, 0);

-- StarterGui.DeltaKeyboard.CreateKey.Create.UICorner
G2L["149"] = Instance.new("UICorner", G2L["148"]);


-- StarterGui.DeltaKeyboard.CreateKey.Create.UIStroke
G2L["14a"] = Instance.new("UIStroke", G2L["148"]);
G2L["14a"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["14a"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.CreateKey.Title2
G2L["14b"] = Instance.new("TextLabel", G2L["144"]);
G2L["14b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["14b"]["FontFace"] = Font.new([[rbxasset://fonts/families/Nunito.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["14b"]["Selectable"] = true;
G2L["14b"]["TextSize"] = 20;
G2L["14b"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["14b"]["Size"] = UDim2.new(0, 285, 0, 24);
G2L["14b"]["Active"] = true;
G2L["14b"]["Text"] = [[Enter your keybind here.]];
G2L["14b"]["Name"] = [[Title2]];
G2L["14b"]["BackgroundTransparency"] = 1;
G2L["14b"]["Position"] = UDim2.new(-0.003521125763654709, 0, 0.19178083539009094, 0);

-- StarterGui.DeltaKeyboard.CreateKey.TextBox
G2L["14c"] = Instance.new("TextBox", G2L["144"]);
G2L["14c"]["TextSize"] = 14;
G2L["14c"]["TextWrapped"] = true;
G2L["14c"]["TextScaled"] = true;
G2L["14c"]["BackgroundColor3"] = Color3.fromRGB(16, 16, 16);
G2L["14c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["14c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["14c"]["Size"] = UDim2.new(0, 167, 0, 76);
G2L["14c"]["Text"] = [[]];
G2L["14c"]["Position"] = UDim2.new(0.2042253464460373, 0, 0.29109588265419006, 0);

-- StarterGui.DeltaKeyboard.CreateKey.TextBox.UIStroke
G2L["14d"] = Instance.new("UIStroke", G2L["14c"]);
G2L["14d"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["14d"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.CreateKey.TextBox.UICorner
G2L["14e"] = Instance.new("UICorner", G2L["14c"]);


-- StarterGui.DeltaKeyboard.CreateKey.Close
G2L["14f"] = Instance.new("TextButton", G2L["144"]);
G2L["14f"]["BackgroundColor3"] = Color3.fromRGB(21, 21, 21);
G2L["14f"]["TextSize"] = 20;
G2L["14f"]["FontFace"] = Font.new([[rbxasset://fonts/families/Nunito.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["14f"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["14f"]["Size"] = UDim2.new(0, 166, 0, 22);
G2L["14f"]["Name"] = [[Close]];
G2L["14f"]["Text"] = [[Close]];
G2L["14f"]["Position"] = UDim2.new(0.2042253464460373, 0, 0.8835616707801819, 0);

-- StarterGui.DeltaKeyboard.CreateKey.Close.UICorner
G2L["150"] = Instance.new("UICorner", G2L["14f"]);


-- StarterGui.DeltaKeyboard.CreateKey.Close.UIStroke
G2L["151"] = Instance.new("UIStroke", G2L["14f"]);
G2L["151"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["151"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.CreateKey.LocalScript
G2L["152"] = Instance.new("LocalScript", G2L["144"]);


-- StarterGui.DeltaKeyboard.Keys
G2L["153"] = Instance.new("Folder", G2L["1"]);
G2L["153"]["Name"] = [[Keys]];

-- StarterGui.DeltaKeyboard.ToggleShift
G2L["154"] = Instance.new("BoolValue", G2L["1"]);
G2L["154"]["Value"] = true;
G2L["154"]["Name"] = [[ToggleShift]];

-- StarterGui.DeltaKeyboard.Shifting
G2L["155"] = Instance.new("BoolValue", G2L["1"]);
G2L["155"]["Name"] = [[Shifting]];

-- StarterGui.DeltaKeyboard.FloatingIcon
G2L["156"] = Instance.new("ImageButton", G2L["1"]);
G2L["156"]["BackgroundColor3"] = Color3.fromRGB(30, 30, 30);
G2L["156"]["Image"] = [[rbxassetid://13501536441]];
G2L["156"]["Size"] = UDim2.new(0, 40, 0, 40);
G2L["156"]["Name"] = [[FloatingIcon]];
G2L["156"]["Visible"] = false;
G2L["156"]["Position"] = UDim2.new(0.015649452805519104, 0, 0.03064066171646118, 0);

-- StarterGui.DeltaKeyboard.FloatingIcon.UICorner
G2L["157"] = Instance.new("UICorner", G2L["156"]);
G2L["157"]["CornerRadius"] = UDim.new(0, 12);

-- StarterGui.DeltaKeyboard.FloatingIcon.UIStroke
G2L["158"] = Instance.new("UIStroke", G2L["156"]);
G2L["158"]["Color"] = Color3.fromRGB(158, 0, 255);
G2L["158"]["Thickness"] = 1.2999999523162842;
G2L["158"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.DeltaKeyboard.FloatingIcon.LocalScript
G2L["159"] = Instance.new("LocalScript", G2L["156"]);


-- StarterGui.DeltaKeyboard.Main.Background.Handler
local function C_56()
	local script = G2L["56"];

	local btns = script.Parent
	local IsSelecting = script.Parent.Parent.Parent.IsSelectingKey
	local ToggleShift = script.Parent.Parent.Parent.ToggleShift
	local function CreateFloatingKey(keybind, text)

		local key = script.Parent.Parent.Parent.KEY:Clone()
		if text == "" then
			text = "Space"
			keybind = "Space"
		end
		key.Parent = script.Parent.Parent.Parent.Keys
		key.Visible = true
		key.Draggable = true
		key.Name = keybind
		key.Text = text
		key.MouseButton1Up:Connect(function()
			keyrelease(Enum.KeyCode[keybind])
		end)
		key.MouseButton1Down:Connect(function()
			keypress(Enum.KeyCode[keybind])		
		end)
		key.Close.MouseButton1Up:Connect(function()
			key:Destroy()
		end)
	end

	for _, keys in pairs(btns:GetChildren()) do
		if keys:IsA("TextButton") then
			if string.find(keys.Name, "-") then
				local key = string.sub(keys.Name, 2)

				keys.MouseButton1Down:Connect(function()

					if IsSelecting.Value == true then
						CreateFloatingKey(key, keys.Text)
						IsSelecting.Value = false
					else
						keypress(Enum.KeyCode[key])
					end
				end)
				keys.MouseButton1Up:Connect(function()

					if IsSelecting.Value == true then
						CreateFloatingKey(key, keys.Text)
						IsSelecting.Value = false
					else
						keyrelease(Enum.KeyCode[key])
					end
				end)
			elseif string.find(keys.Name, "_") then
				local key = string.sub(keys.Name, 2)

				keys.MouseButton1Down:Connect(function()

					if IsSelecting.Value == true then
						CreateFloatingKey(key, keys.Text)
						IsSelecting.Value = false
					else
						keypress(Enum.KeyCode[key])
					end
				end)
				keys.MouseButton1Up:Connect(function()

					if IsSelecting.Value == true then
						CreateFloatingKey(key, keys.Text)
						IsSelecting.Value = false
					else
						keyrelease(Enum.KeyCode[key])
					end
				end)

			elseif keys.Name == "RightShift" then

				keys.MouseButton1Up:Connect(function()
					if ToggleShift.Value == false then
						if script.Parent.Parent.Parent.Shifting.Value then
							script.Parent.Parent.Parent.Shifting.Value = false
							for i,v in pairs(btns:GetChildren()) do
								if v:IsA("TextButton") then
									local a = v.Name
									if string.find(a, "_") then
										v.Visible = false
									elseif string.find(a, "-") then
										v.Visible = true
									end
								end
							end
						elseif not script.Parent.Parent.Parent.Shifting.Value then
							script.Parent.Parent.Parent.Shifting.Value = true
							for i,v in pairs(btns:GetChildren()) do
								if v:IsA("TextButton") then
									local a = v.Name
									if string.find(a, "_") then
										v.Visible = true
									elseif string.find(a, "-") then
										v.Visible = false
									end
								end
							end
						end
					elseif ToggleShift.Value == true then
						if IsSelecting.Value == false then
							keypress(Enum.KeyCode[keys.Name])
						elseif IsSelecting.Value == true then
							IsSelecting.Value = false
							CreateFloatingKey(keys.Name, keys.Name)
						end
					end
				end)
			elseif keys.Name == "LeftShift" then
				keys.MouseButton1Up:Connect(function()
					if ToggleShift.Value == false then
						if script.Parent.Parent.Parent.Shifting.Value then
							script.Parent.Parent.Parent.Shifting.Value = false
							for i,v in pairs(btns:GetChildren()) do
								if v:IsA("TextButton") then
									local a = v.Name
									if string.find(a, "_") then
										v.Visible = false
									elseif string.find(a, "-") then
										v.Visible = true
									end
								end
							end
						elseif not script.Parent.Parent.Parent.Shifting.Value then
							script.Parent.Parent.Parent.Shifting.Value = true
							for i,v in pairs(btns:GetChildren()) do
								if v:IsA("TextButton") then
									local a = v.Name
									if string.find(a, "_") then
										v.Visible = true
									elseif string.find(a, "-") then
										v.Visible = false
									end
								end
							end
						end
					elseif ToggleShift.Value == true then
						if IsSelecting.Value == false then
							keypress(Enum.KeyCode[keys.Name])
						elseif IsSelecting.Value == true then
							IsSelecting.Value = false
							CreateFloatingKey(keys.Name, keys.Name)
						end
					end
				end)
				keys.MouseButton1Down:Connect(function()
					if ToggleShift.Value == true then
						keypress(Enum.KeyCode[keys.Name])
					end
				end)

			else
				keys.MouseButton1Down:Connect(function()
					if IsSelecting.Value == true then
						CreateFloatingKey(keys.Text, keys.Text)
						IsSelecting.Value = false
					else
						keypress(Enum.KeyCode[keys.Name])
					end

				end)
				keys.MouseButton1Up:Connect(function()
					if IsSelecting.Value == true then
						CreateFloatingKey(keys.Text, keys.Text)
						IsSelecting.Value = false
					else
						keyrelease(Enum.KeyCode[keys.Name])
					end
				end)
			end		
		end
	end
end;
task.spawn(C_56);
-- StarterGui.DeltaKeyboard.Main.Background.RGBHandler
local function C_e7()
	local script = G2L["e7"];
	pcall(function()
		local TweenService = game:GetService("TweenService")
		local bool = true

		script.Parent.Parent.ToggleRGB.MouseButton1Up:Connect(function()
			if bool then
				bool = false
				script.Parent.Parent.Parent.Main.UIStroke.Color =  Color3.fromRGB(255, 255, 255)
				script.Parent.Parent.ToggleRGB.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
			elseif not bool then
				bool = true
				script.Parent.Parent.Parent.Main.UIStroke.Color =  Color3.fromRGB(157, 0, 255)
				script.Parent.Parent.ToggleRGB.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
				for i, v in pairs(script.Parent:GetChildren()) do
					if v:IsA("TextButton") then
						task.spawn(function()
							local x = 0
							while true do
								v.UIStroke.Color = Color3.fromHSV(x,1,1) 
								x = x + 1/255 
								if x >= 1 then
									x = 0
								end
								if not bool then
									v.UIStroke.Color = Color3.new(1,1,1)
									break
								end
								wait() 
							end
						end)
					end
				end
			end
		end)

		for i, v in pairs(script.Parent:GetChildren()) do
			if v:IsA("TextButton") then
				task.spawn(function()
					local x = 0
					while true do
						v.UIStroke.Color = Color3.fromHSV(x,1,1) 
						x = x + 1/255 
						if x >= 1 then
							x = 0
						end
						if not bool then
							v.UIStroke.Color = Color3.new(1,1,1)
							break
						end
						wait() 
					end
				end)
			end
		end
	end)
end;
task.spawn(C_e7);
-- StarterGui.DeltaKeyboard.Main.Drag
local function C_136()
	local script = G2L["136"];
	local function dragify(Frame)
		dragToggle = nil
		dragSpeed = .25 -- You can edit this.
		dragInput = nil
		dragStart = nil
		dragPos = nil

		function updateInput(input)
			Delta = input.Position - dragStart
			Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + Delta.X, startPos.Y.Scale, startPos.Y.Offset + Delta.Y)
			game:GetService("TweenService"):Create(Frame, TweenInfo.new(.25), {Position = Position}):Play()
		end

		Frame.InputBegan:Connect(function(input)
			if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then
				dragToggle = true
				dragStart = input.Position
				startPos = Frame.Position
				input.Changed:Connect(function()
					if (input.UserInputState == Enum.UserInputState.End) then
						dragToggle = false
					end
				end)
			end
		end)

		Frame.InputChanged:Connect(function(input)
			if (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
				dragInput = input
			end
		end)

		game:GetService("UserInputService").InputChanged:Connect(function(input)
			if (input == dragInput and dragToggle) then
				updateInput(input)
			end
		end)
	end
	task.spawn(function()
		dragify(script.Parent.Parent.FloatingIcon)
	end)
	dragify(script.Parent)

end;
task.spawn(C_136);
-- StarterGui.DeltaKeyboard.Main.ButtonHandler
local function C_138()
	local script = G2L["138"];
	local buttons = script.Parent
	local ts = game.TweenService
	local cooldown = false

	buttons.Close.MouseButton1Up:Connect(function()
		script.Parent.Parent:Destroy()
	end)
	buttons.Close.MouseEnter:Connect(function()
		buttons.Close.BackgroundColor3 = Color3.fromRGB(220, 0, 0)
	end)
	buttons.Close.MouseLeave:Connect(function()
		buttons.Close.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
	end)
	buttons.Minimize.MouseButton1Up:Connect(function()

		script.Parent.Visible = false
		script.Parent.Parent.FloatingIcon.Visible = true
	end)
	buttons.Window.MouseButton1Up:Connect(function()
		if not cooldown then
			if script.Parent.Background.Visible == true then
				script.Parent.ToggleRGB.Visible = false
				script.Parent.Settings.Visible = false
				script.Parent.Background.Visible = false
				script.Parent.ToggleShift.Visible = false
				local ti = TweenInfo.new(.8, Enum.EasingStyle.Quint, Enum.EasingDirection.Out)
				local tw = ts:Create(script.Parent, ti, {Size = UDim2.new(0, 478,0, 29)})
				tw:Play()
				cooldown = true
				tw.Completed:Wait()
				cooldown = false
			elseif script.Parent.Background.Visible ==false then

				local ti = TweenInfo.new(.8, Enum.EasingStyle.Quint, Enum.EasingDirection.Out)
				local tw = ts:Create(script.Parent, ti, {Size = UDim2.new(0, 478,0, 236)})
				tw:Play()
				cooldown = true
				tw.Completed:Wait()
				script.Parent.ToggleRGB.Visible = true
				script.Parent.Settings.Visible = true
				script.Parent.Background.Visible = true
				script.Parent.ToggleShift.Visible = true
				cooldown = false
			end
		end
	end)

	buttons.Settings.MouseButton1Up:Connect(function()
		script.Parent.Parent.IsSelectingKey.Value = true
	end)

	local IsSelecting =script.Parent.Parent.IsSelectingKey
	IsSelecting:GetPropertyChangedSignal("Value"):Connect(function()
		if IsSelecting.Value == true then
			script.Parent.Title.Text = "Mobile - Keyboard (Selecting Key)"
		elseif IsSelecting.Value == false then
			script.Parent.Title.Text = "Mobile - Keyboard"
		end
	end)

	script.Parent.ToggleShift.MouseButton1Up:Connect(function()
		if script.Parent.Parent.ToggleShift.Value == true then
			script.Parent.Parent.ToggleShift.Value = false
			script.Parent.ToggleShift.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
		elseif script.Parent.Parent.ToggleShift.Value == false then
			script.Parent.Parent.ToggleShift.Value = true
			script.Parent.ToggleShift.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
		end
	end)
end;
task.spawn(C_138);
-- StarterGui.DeltaKeyboard.CreateKey.LocalScript
local function C_152()
	local script = G2L["152"];
	local close = script.Parent.Close
	local create = script.Parent.Create
	local textbox = script.Parent.TextBox

	script.Parent.Draggable = true
	close.MouseButton1Up:Connect(function()
		script.Parent.Visible = false
	end)
	create.MouseButton1Up:Connect(function()
		if textbox.Text ~= "" then
			local key = script.Parent.Parent.KEY:Clone()
			key.Parent = script.Parent.Parent.Keys
			key.Visible = true
			key.Draggable = true
			key.Name = textbox.Text
			key.MouseButton1Up:Connect(function()
				keyrelease(Enum.KeyCode[textbox.Text])
			end)
			key.MouseButton1Down:Connect(function()
				keypress(Enum.KeyCode[textbox.Text])
			end)
			key.Close.MouseButton1Up:Connect(function()
				key:Destroy()
			end)
		end
	end)
end;
task.spawn(C_152);
-- StarterGui.DeltaKeyboard.FloatingIcon.LocalScript
local function C_159()
	local script = G2L["159"];
	script.Parent.MouseButton1Up:Connect(function()
		script.Parent.Visible=false
		script.Parent.Parent.Main.Visible = true
	end)
end;
task.spawn(C_159);

return G2L["1"], require;
end
function ShaderBeta()
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/kav"))()

local Window = Library.CreateLib("Graphic 0.3", "DarkTheme")


--Enhancer
local EnhancerTab = Window:NewTab("Graphics")
local EnhancerSection = EnhancerTab:NewSection("Graphic Lighting")

EnhancerSection:NewButton("Morning (6am)", "Reser ur character", function()
    
    
    
    -- Shader, Morning Realistic (6pm).
local lighting = game.Lighting

for i,v in pairs(lighting:GetChildren()) do
    v:Destroy()
end

local blur = Instance.new("BlurEffect", lighting)
local bloom = Instance.new("BloomEffect", lighting)
local atmosphere = Instance.new("Atmosphere", lighting)
local sky = Instance.new("Sky", lighting)
local colorc = Instance.new("ColorCorrectionEffect", lighting)
local dof = Instance.new("DepthOfFieldEffect", lighting)
local sunray = Instance.new("SunRaysEffect", lighting)


--Color3.fromRGB()
-- Lighting
lighting.Ambient = Color3.fromRGB(33, 33, 33)
lighting.Brightness = 2.25
lighting.ColorShift_Bottom = Color3.fromRGB(0,0,0)
lighting.ColorShift_Top = Color3.fromRGB(255, 247, 237)
lighting.EnvironmentDiffuseScale = 0.203
lighting.EnvironmentSpecularScale = 0.255

lighting.OutdoorAmbient = Color3.fromRGB(51, 54, 67)
lighting.ShadowSoftness = 0.19
lighting.ClockTime = 6.05
lighting.GeographicLatitude = -1.12
lighting.ExposureCompensation = 0.85

-- Atmosphere
atmosphere.Density = 0.364
atmosphere.Offset = 0.556
atmosphere.Color = Color3.fromRGB(200, 170, 108)
atmosphere.Decay = Color3.fromRGB(92, 60, 14)
atmosphere.Glare = 0
atmosphere.Haze = 0

-- Sky
sky.CelestialBodiesShown = true
sky.MoonAngularSize = 11
sky.MoonTextureId = "rbxasset://sky/moon.jpg"
sky.SkyboxBk = 'rbxasset://textures/sky/sky512_bk.tex'
sky.SkyboxDn = 'rbxasset://textures/sky/sky512_dn.tex'
sky.SkyboxFt = 'rbxasset://textures/sky/sky512_ft.tex'
sky.SkyboxLf = 'rbxasset://textures/sky/sky512_lf.tex'
sky.SkyboxRt = 'rbxasset://textures/sky/sky512_rt.tex'
sky.SkyboxUp = 'rbxasset://textures/sky/sky512_up.tex'

-- Bloom
bloom.Intensity = 0.3
bloom.Size = 10
bloom.Threshold = 0.8

-- Blur
blur.Size = 5

--Color Correction (Main)
colorc.Brightness = 0.4
colorc.Contrast = 0.9
colorc.Contrast = 0.9
colorc.Saturation = -0.3
colorc.TintColor = Color3.fromRGB(49, 87, 120)

-- Depth Of Field
dof.FarIntensity = 0.077
dof.FocusDistance = 21.54
dof.InFocusRadius = 16.77
dof.NearIntensity = 0.277 

sunray.Intensity = .25
sunray.Spread = .1
--End
    
    
    
    
end)

EnhancerSection:NewButton("Morning (8am)", "Reser ur character", function()
    -- Shader, Morning Realistic (8pm).
local lighting = game.Lighting

for i,v in pairs(lighting:GetChildren()) do
    v:Destroy()
end

local blur = Instance.new("BlurEffect", lighting)
local bloom = Instance.new("BloomEffect", lighting)
local atmosphere = Instance.new("Atmosphere", lighting)
local sky = Instance.new("Sky", lighting)
local colorc = Instance.new("ColorCorrectionEffect", lighting)
local dof = Instance.new("DepthOfFieldEffect", lighting)
local sunray = Instance.new("SunRaysEffect", lighting)


--Color3.fromRGB()
-- Lighting
lighting.Ambient = Color3.fromRGB(33, 33, 33)
lighting.Brightness = 0.75
lighting.ColorShift_Bottom = Color3.fromRGB(0,0,0)
lighting.ColorShift_Top = Color3.fromRGB(255, 247, 237)
lighting.EnvironmentDiffuseScale = 0.203
lighting.EnvironmentSpecularScale = 0.255

lighting.OutdoorAmbient = Color3.fromRGB(51, 54, 67)
lighting.ShadowSoftness = 0.19
lighting.ClockTime = 8
lighting.GeographicLatitude = -1.12
lighting.ExposureCompensation = 0.65

-- Atmosphere
atmosphere.Density = 0.25
atmosphere.Offset = 0.556
atmosphere.Color = Color3.fromRGB(200, 170, 108)
atmosphere.Decay = Color3.fromRGB(92, 60, 14)
atmosphere.Glare = 0
atmosphere.Haze = 0

-- Sky
sky.CelestialBodiesShown = true
sky.MoonAngularSize = 11
sky.MoonTextureId = "rbxasset://sky/moon.jpg"
sky.SkyboxBk = 'rbxasset://textures/sky/sky512_bk.tex'
sky.SkyboxDn = 'rbxasset://textures/sky/sky512_dn.tex'
sky.SkyboxFt = 'rbxasset://textures/sky/sky512_ft.tex'
sky.SkyboxLf = 'rbxasset://textures/sky/sky512_lf.tex'
sky.SkyboxRt = 'rbxasset://textures/sky/sky512_rt.tex'
sky.SkyboxUp = 'rbxasset://textures/sky/sky512_up.tex'

-- Bloom
bloom.Intensity = 0.87
bloom.Size = 10
bloom.Threshold = 0.97

-- Blur
blur.Size = 5

--Color Correction (Main)
colorc.Brightness = 0.5
colorc.Contrast = 0.5
colorc.Contrast = 0.5
colorc.Saturation = 0
colorc.TintColor = Color3.fromRGB(238, 214, 140)

-- Depth Of Field
dof.FarIntensity = 0.077
dof.FocusDistance = 21.54
dof.InFocusRadius = 16.77
dof.NearIntensity = 0.277 

sunray.Intensity = .25
sunray.Spread = .1
--End
end)


EnhancerSection:NewButton("Afternoon (2pm)", "Reser ur character", function()
    -- Shader, Day Realistic (2pm).
local lighting = game.Lighting

for i,v in pairs(lighting:GetChildren()) do
    v:Destroy()
end

local blur = Instance.new("BlurEffect", lighting)
local bloom = Instance.new("BloomEffect", lighting)
local atmosphere = Instance.new("Atmosphere", lighting)
local sky = Instance.new("Sky", lighting)
local colorc = Instance.new("ColorCorrectionEffect", lighting)
local dof = Instance.new("DepthOfFieldEffect", lighting)
local sunray = Instance.new("SunRaysEffect", lighting)


--Color3.fromRGB()
-- Lighting
lighting.Ambient = Color3.fromRGB(33, 33, 33)
lighting.Brightness = 2.25
lighting.ColorShift_Bottom = Color3.fromRGB(0,0,0)
lighting.ColorShift_Top = Color3.fromRGB(255, 247, 237)
lighting.EnvironmentDiffuseScale = 0.203
lighting.EnvironmentSpecularScale = 0.255

lighting.OutdoorAmbient = Color3.fromRGB(51, 54, 67)
lighting.ShadowSoftness = 0.19
lighting.ClockTime = 13
lighting.GeographicLatitude = -1.12
lighting.ExposureCompensation = 0.85

-- Atmosphere
atmosphere.Density = 0.364
atmosphere.Offset = 0.556
atmosphere.Color = Color3.fromRGB(200, 170, 108)
atmosphere.Decay = Color3.fromRGB(92, 60, 14)
atmosphere.Glare = 0
atmosphere.Haze = 0

-- Sky
sky.CelestialBodiesShown = true
sky.MoonAngularSize = 11
sky.MoonTextureId = "rbxasset://sky/moon.jpg"
sky.SkyboxBk = 'rbxasset://textures/sky/sky512_bk.tex'
sky.SkyboxDn = 'rbxasset://textures/sky/sky512_dn.tex'
sky.SkyboxFt = 'rbxasset://textures/sky/sky512_ft.tex'
sky.SkyboxLf = 'rbxasset://textures/sky/sky512_lf.tex'
sky.SkyboxRt = 'rbxasset://textures/sky/sky512_rt.tex'
sky.SkyboxUp = 'rbxasset://textures/sky/sky512_up.tex'

-- Bloom
bloom.Intensity = 0.3
bloom.Size = 10
bloom.Threshold = 0.8

-- Blur
blur.Size = 5

--Color Correction (Main)
colorc.Brightness = 0.1
colorc.Contrast = 0.5
colorc.Contrast = 0.5
colorc.Saturation = -0.3
colorc.TintColor = Color3.fromRGB(241, 241, 214)

-- Depth Of Field
dof.FarIntensity = 0.077
dof.FocusDistance = 21.54
dof.InFocusRadius = 16.77
dof.NearIntensity = 0.277 

sunray.Intensity = .25
sunray.Spread = .1
--End
end)


EnhancerSection:NewButton("Evening (5pm)", "Reser ur character", function()
    -- Shader, Evening Realistic (5pm).
local lighting = game.Lighting

for i,v in pairs(lighting:GetChildren()) do
    v:Destroy()
end

local blur = Instance.new("BlurEffect", lighting)
local bloom = Instance.new("BloomEffect", lighting)
local atmosphere = Instance.new("Atmosphere", lighting)
local sky = Instance.new("Sky", lighting)
local colorc = Instance.new("ColorCorrectionEffect", lighting)
local dof = Instance.new("DepthOfFieldEffect", lighting)
local sunray = Instance.new("SunRaysEffect", lighting)


--Color3.fromRGB()
-- Lighting
lighting.Ambient = Color3.fromRGB(59, 33, 27)
lighting.Brightness = 2.14
lighting.ColorShift_Bottom = Color3.fromRGB(11, 0, 20)
lighting.ColorShift_Top = Color3.fromRGB(240, 127, 14)
lighting.EnvironmentDiffuseScale = 0.203
lighting.EnvironmentSpecularScale = 0.255

lighting.OutdoorAmbient = Color3.fromRGB(34, 0, 49)
lighting.ShadowSoftness = 0
lighting.ClockTime = 6.7
lighting.GeographicLatitude = -20.356
lighting.ExposureCompensation = 0.24

-- Atmosphere
atmosphere.Density = 0.364
atmosphere.Offset = 0.556
atmosphere.Color = Color3.fromRGB(200, 170, 108)
atmosphere.Decay = Color3.fromRGB(92, 60, 14)
atmosphere.Glare = 0
atmosphere.Haze = 0

-- Sky
sky.CelestialBodiesShown = true
sky.MoonAngularSize = 11
sky.MoonTextureId = "rbxasset://sky/moon.jpg"
sky.SkyboxBk = 'rbxassetid://323494035'
sky.SkyboxDn = 'rbxassetid://323494368'
sky.SkyboxFt = 'rbxassetid://323494130'
sky.SkyboxLf = 'rbxassetid://323494252'
sky.SkyboxRt = 'rbxassetid://323494067'
sky.SkyboxUp = 'rbxassetid://323493360'

-- Bloom
bloom.Intensity = 0.1
bloom.Size = 100
bloom.Threshold = 0

-- Blur
blur.Size = 2

--Color Correction (Main)
colorc.Brightness = 0
colorc.Contrast = 0
colorc.Saturation = 0.05
colorc.TintColor = Color3.fromRGB(255, 224, 219)

-- Depth Of Field
dof.FarIntensity = 0.077
dof.FocusDistance = 21.54
dof.InFocusRadius = 16.77
dof.NearIntensity = 0.277 

sunray.Intensity = .25
sunray.Spread = .1
--End
end)


EnhancerSection:NewButton("Night (8pm)", "Reser ur character", function()
    -- Shader, Night Realistic (8pm).
local lighting = game.Lighting

for i,v in pairs(lighting:GetChildren()) do
    v:Destroy()
end

local blur = Instance.new("BlurEffect", lighting)
local bloom = Instance.new("BloomEffect", lighting)
local atmosphere = Instance.new("Atmosphere", lighting)
local sky = Instance.new("Sky", lighting)
local colorc = Instance.new("ColorCorrectionEffect", lighting)
local dof = Instance.new("DepthOfFieldEffect", lighting)
local sunray = Instance.new("SunRaysEffect", lighting)


--Color3.fromRGB()
-- Lighting
lighting.Ambient = Color3.fromRGB(33, 33, 33)
lighting.Brightness = 5.25
lighting.ColorShift_Bottom = Color3.fromRGB(0,0,0)
lighting.ColorShift_Top = Color3.fromRGB(255, 247, 237)
lighting.EnvironmentDiffuseScale = 0.203
lighting.EnvironmentSpecularScale = 0.255

lighting.OutdoorAmbient = Color3.fromRGB(51, 54, 67)
lighting.ShadowSoftness = 0.19
lighting.ClockTime = 20
lighting.GeographicLatitude = -1.12
lighting.ExposureCompensation = 0.85

-- Atmosphere
atmosphere.Density = 0.364
atmosphere.Offset = 0.556
atmosphere.Color = Color3.fromRGB(200, 170, 108)
atmosphere.Decay = Color3.fromRGB(92, 60, 14)
atmosphere.Glare = 0
atmosphere.Haze = 0

-- Sky
sky.CelestialBodiesShown = true
sky.MoonAngularSize = 11
sky.MoonTextureId = "rbxasset://sky/moon.jpg"
sky.SkyboxBk = 'rbxasset://textures/sky/sky512_bk.tex'
sky.SkyboxDn = 'rbxasset://textures/sky/sky512_dn.tex'
sky.SkyboxFt = 'rbxasset://textures/sky/sky512_ft.tex'
sky.SkyboxLf = 'rbxasset://textures/sky/sky512_lf.tex'
sky.SkyboxRt = 'rbxasset://textures/sky/sky512_rt.tex'
sky.SkyboxUp = 'rbxasset://textures/sky/sky512_up.tex'

-- Bloom
bloom.Intensity = 0.7
bloom.Size = 10
bloom.Threshold = 0.8

-- Blur
blur.Size = 5

--Color Correction (Main)
colorc.Brightness = 0.2
colorc.Contrast = 0.5
colorc.Contrast = 0.8
colorc.Saturation = -0.3
colorc.TintColor = Color3.fromRGB(255, 255, 226)

-- Depth Of Field
dof.FarIntensity = 0.077
dof.FocusDistance = 21.54
dof.InFocusRadius = 16.77
dof.NearIntensity = 0.277 

sunray.Intensity = .25
sunray.Spread = .1
--End
end)



--Materials
local EngineTab = Window:NewTab("Lighting Engine")
local EngineSection = EngineTab:NewSection("Lighting Technology that render 3D objects.")

EngineSection:NewButton("Legacy", "Legacy.", function()
    SetLightingEngine("Legacy")
end)
EngineSection:NewButton("Voxel", "Voxel.", function()
    SetLightingEngine("Voxel")
end)
EngineSection:NewButton("Compatibility", "Compatibility.", function()
    SetLightingEngine("Compatibility")
end)
EngineSection:NewButton("ShadowMap", "ShadowMap.", function()
    SetLightingEngine("ShadowMap")
end)
EngineSection:NewButton("Future", "Future.", function()
    SetLightingEngine("Future")
end)

local ShadowSection = EngineTab:NewSection("Mess with shadows.")

ShadowSection:NewToggle("Lighting Shadows", "Light will respect shadow or not, applied in 5s", function(state)
   while state do
        for i,v in pairs(workspace:GetDescendants()) do
            if v:IsA("SpotLight") or v:IsA("SurfaceLight") or v:IsA("PointLight") then
                v.Shadows = true
            end
        end
        task.wait(5)
    end
end)
ShadowSection:NewToggle("Global Shadows", "Shadow in game, toggle or disable", function(state)
    game.Lighting.GlobalShadows = state
end)


--Materials
local MaterialTab = Window:NewTab("Material Enhancer")
local MaterialSection = MaterialTab:NewSection("Materials")

MaterialSection:NewButton("Reflection", "Reser ur character", function()
    for i,v in pairs(workspace:GetDescendants()) do
        if v:IsA("Part") or v:IsA("UnionOperation") then
            if not v.Parent:FindFirstChild("Humanoid") then
                pcall(function()
                    v.Reflectance = 0.15
                end)
            end
        end
    end
end)

--Remover
local RemoverTab = Window:NewTab("Remover")
local RemoverSection = RemoverTab:NewSection("Remove some Modification")

RemoverSection:NewButton("Remove Reflection", "Remove Reflections in Workspace.", function()
    for i,v in pairs(workspace:GetDescendants()) do
        if v:IsA("Part") or v:IsA("UnionOperation") then
            if not v.Parent:FindFirstChild("Humanoid") then
                pcall(function()
                    if v.Reflectance > 0 then
                        v.Reflectance = 0
                    end
                end)
            end
        end
    end
end)

RemoverSection:NewButton("Clear All Lighting", "Remove every items in Lighting.", function()
    for i,v in pairs(game.Lighting:GetChildren()) do
        v:Destroy()
    end
end)
end

local tab2 = DrRayLibrary.newTab("Game", "")
tab1.newButton("Hide And Seek", "click to load the script", function()
loadstring(Game:HttpGet("https://raw.githubusercontent.com/LLCteams/xs/refs/heads/main/%D0%9A%D0%B0%D0%BA%20%D0%B1%D1%83%D0%B4%D1%82%D0%BE%20%D0%B2%D1%8B%20%D1%81%D0%B8%D0%BB%D1%8C%D0%BD%D1%8B%20%D0%B1%D0%BE%D0%BB%D1%8C%D1%88%D0%B5%D0%B9%20%D1%81%D0%B2%D0%BE%D0%B1%D0%BE%D0%B4%D0%BE%D0%B9%20%D0%B8%20%D1%83%D0%BF%D1%80%D0%B0%D0%B2%D0%BB%D1%8F%D0%B5%D1%82%D0%B5%20%D0%BC%D0%BE%D1%80%D0%B5%D0%BC"))()
end)
tab1.newButton("Forsaken", "Forsaken", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/LLCteams/xs/refs/heads/main/%E5%85%84%E5%BC%9F%E3%81%AF%E3%83%97%E3%83%AD"))()
end)
tab2.newButton("Piggy", "Piggy", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/LLCteams/xs/refs/heads/main/%D0%95%D1%81%D1%82%D1%8C%20%D0%B1%D0%BE%D1%82%D1%8B-%D0%B1%D0%BB%D0%BE%D0%BA%D0%BC%D0%B0%D0%BD%D1%8B"))()
end)
tab2.newButton("Doors PC", "Doors PC", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/LLCteams/xs/refs/heads/main/%D0%9F%D0%BE%D0%BC%D0%BE%D0%B3%D0%B8%D1%82%D0%B5%20%D0%BC%D0%BD%D0%B5%20%D0%BE%D0%BF%D1%80%D0%B5%D0%B4%D0%B5%D0%BB%D0%B8%D1%82%D1%8C"))()
end)
tab2.newButton("Brookhaven", "Brookhaven", function()
UXteamlol()
end)

function UXteamlol()
wait(0.1)

local player = game.Players.LocalPlayer

local function copyText()
    print(" Reworked ") 
end

copyText()
local args = {
    [1] = "RolePlayName",
    [2] = "UX: 3.0"
    
    
}
game:GetService("ReplicatedStorage").RE:FindFirstChild("1RPNam1eTex1t"):FireServer(unpack(args))
local args = {
    [1] = "RolePlayBio",
    [2] = "UX: Premium"
    
    
}

game:GetService("ReplicatedStorage").RE:FindFirstChild("1RPNam1eTex1t"):FireServer(unpack(args))
wait(1.0)

loadstring(game:HttpGet(("https://raw.githubusercontent.com/LLCteams/xs/refs/heads/main/%D0%91%D0%BB%D0%B0-%D0%B1%D0%BB%D0%B0-%D0%BD%D1%83%D0%B1%20%D1%85%D0%B0-%D1%85%D0%B0")))()
MakeWindow({
  Hub = {
    Title = "Brookhaven RP • UniverseX",
    Animation = "In-Development, UniverseX"
    

  },
  Key = {
    KeySystem = false,
    Title = "Key System - Access",
    Description = "",
    KeyLink = "https://www-uxvip.notion.site/UX-Key-System-ddc00d75056442069f1fe67639e129ae",
    Keys = {"UX_2H92PBX28JJY19EB2N82948J2O0F"},
    Notifi = {
      Notifications = true,
      CorrectKey = "Succesfully whitelisted!",
      Incorrectkey = "Error, invalid key",
      CopyKeyLink = "Link has been copied into clipboard!"
    
    }
  }
})

MinimizeButton({
  Image = "rbxassetid://88819916320666",
  Size = {35, 35},
  Color = Color3.fromRGB(0, 0, 0),
  Corner = true,
  Stroke = false,
  StrokeColor = Color3.fromRGB(0,0,255)
})

local soundId = "rbxassetid://76463442516219"

local function playSound()
    local sound = Instance.new("Sound")
    sound.SoundId = soundId
    sound.Parent = game.Workspace
    sound:Play()
end

playSound()


--TABS: 
local Main = MakeTab({Name = "Home"})
local HUB = MakeTab({Name = "Player"})
local TP = MakeTab({Name = "Teleports"})
local fling = MakeTab({Name = "Fling"})
local Skin = MakeTab({Name = "Skin"})
local Chat = MakeTab({Name = "Chat"})
local ESPV1 = MakeTab({Name = "ESP"})
local Names = MakeTab({Name = "Names"})
local Tool = MakeTab({Name = "Tool"})
local script = MakeTab({Name = "Scripts"})

local Image = AddImageLabel(Main, {
  Name = "UniverseX",
  Image = "rbxassetid://88819916320666"
})
local Label = AddTextLabel(Main, "Owner: Aries")
SetLabel(Label, "Dev: SupersQ12")

AddButton(Main, {
  Name = "New UniverseX 4.0",
  Callback = function()
    setclipboard('Soon')
  end
})


AddButton(Main, {
  Name = "New UniverseX 5.0",
  Callback = function()
    setclipboard('Soon')
  end
})

-- Create a label to show the number of players
local playerCountLabel = AddTextLabel(Main, "Players on the server : " .. #game.Players:GetPlayers())

-- Função para atualizar o número de jogadores quando alguém entra ou sai
local function updatePlayerCount()
    playerCountLabel.Text = "Players on the server : " .. #game.Players:GetPlayers()
end

-- Conecta a função ao evento de entrada de novos jogadores
game.Players.PlayerAdded:Connect(updatePlayerCount)

-- Conecta a função ao evento de saída de jogadores
game.Players.PlayerRemoving:Connect(updatePlayerCount)

-- Atualiza a contagem de jogadores no início (caso tenha jogadores ao carregar o script)
updatePlayerCount()


local Label = AddTextLabel(Main, " ID : ")
local function updateTime(label)
    while true do
        local currentTime = os.date("%d-%m-%Y") 
        label.Text = "Date : " .. currentTime
        wait(1)  -- Atualiza a cada segundo
    end
end
-- Iniciando a atualização da TextLabel
coroutine.wrap(updateTime)(Label)

-- Criando a TextLabel
local Label = AddTextLabel(Main, "")

-- Função para atualizar o tempo na TextLabel
local function updateTime(label)
    while true do
        local currentTime = os.date("%H:%M:%S")
        label.Text = "Time : " .. currentTime
        wait(1)  -- Atualiza a cada segundo
    end
end

-- Iniciando a atualização da TextLabel
coroutine.wrap(updateTime)(Label)


 
local section = AddSection(HUB, {"»»»»»{ You can control your player data }««««« "})
AddButton(HUB, {
  Name = "Fly V1",
  Callback = function() 
-- Version: 1.0

-- Instances:

local main = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local up = Instance.new("TextButton")
local down = Instance.new("TextButton")
local onof = Instance.new("TextButton")
local TextLabel = Instance.new("TextLabel")
local plus = Instance.new("TextButton")
local speed = Instance.new("TextLabel")
local mine = Instance.new("TextButton")

--Properties:

main.Name = "main"
main.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
main.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Frame.Parent = main
Frame.BackgroundColor3 = Color3.fromRGB(163, 255, 137)
Frame.BorderColor3 = Color3.fromRGB(255,255,255)
Frame.Position = UDim2.new(0.100320168, 0, 0.379746825, 0)
Frame.Size = UDim2.new(0, 190, 0, 57)

up.Name = "up"
up.Parent = Frame
up.BackgroundColor3 = Color3.fromRGB(0,0,205)
up.Size = UDim2.new(0, 44, 0, 28)
up.Font = Enum.Font.SourceSans
up.Text = "above"
up.TextColor3 = Color3.fromRGB(255,0,0)
up.TextSize = 14.000

down.Name = "down"
down.Parent = Frame
down.BackgroundColor3 = Color3.fromRGB(0,0,205)
down.Position = UDim2.new(0, 0, 0.491228074, 0)
down.Size = UDim2.new(0, 44, 0, 28)
down.Font = Enum.Font.SourceSans
down.Text = "down"
down.TextColor3 = Color3.fromRGB(255,0,0)
down.TextSize = 14.000

onof.Name = "onof"
onof.Parent = Frame
onof.BackgroundColor3 = Color3.fromRGB(255,255,255)
onof.Position = UDim2.new(0.702823281, 0, 0.491228074, 0)
onof.Size = UDim2.new(0, 56, 0, 28)
onof.Font = Enum.Font.SourceSans
onof.Text = "Off / On"
onof.TextColor3 = Color3.fromRGB(0, 0, 0)
onof.TextSize = 13.000

TextLabel.Parent = Frame
TextLabel.BackgroundColor3 = Color3.fromRGB(255,255,255)
TextLabel.Position = UDim2.new(0.469327301, 0, 0, 0)
TextLabel.Size = UDim2.new(0, 100, 0, 28)
TextLabel.Font = Enum.Font.Michroma
TextLabel.Text = "UX FLY V1"
TextLabel.TextColor3 = Color3.fromRGB(0,0,0)
TextLabel.TextScaled = true
TextLabel.TextSize = 13.000
TextLabel.TextWrapped = true

plus.Name = "plus"
plus.Parent = Frame
plus.BackgroundColor3 = Color3.fromRGB(255,255,255)
plus.Position = UDim2.new(0.231578946, 0, 0, 0)
plus.Size = UDim2.new(0, 45, 0, 28)
plus.Font = Enum.Font.SourceSans
plus.Text = "+"
plus.TextColor3 = Color3.fromRGB(0, 0, 0)
plus.TextScaled = true
plus.TextSize = 14.000
plus.TextWrapped = true

speed.Name = "speed"
speed.Parent = Frame
speed.BackgroundColor3 = Color3.fromRGB(255,255,255)
speed.Position = UDim2.new(0.468421042, 0, 0.491228074, 0)
speed.Size = UDim2.new(0, 44, 0, 28)
speed.Font = Enum.Font.SourceSans
speed.Text = "1"
speed.TextColor3 = Color3.fromRGB(0, 0, 0)
speed.TextScaled = true
speed.TextSize = 14.000
speed.TextWrapped = true

mine.Name = "mine"
mine.Parent = Frame
mine.BackgroundColor3 = Color3.fromRGB(255,255,255)
mine.Position = UDim2.new(0.231578946, 0, 0.491228074, 0)
mine.Size = UDim2.new(0, 45, 0, 29)
mine.Font = Enum.Font.SourceSans
mine.Text = "-"
mine.TextColor3 = Color3.fromRGB(0, 0, 0)
mine.TextScaled = true
mine.TextSize = 14.000
mine.TextWrapped = true

speeds = 1

local speaker = game:GetService("Players").LocalPlayer

local chr = game.Players.LocalPlayer.Character
local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")

nowe = false

game:GetService("StarterGui"):SetCore("SendNotification", { 
    Title = "UX Fly";
    Text = "by Xirius";
    Icon = "rbxthumb://type=Asset&id=5107182114&w=150&h=150"})
Duration = 16;

Frame.Active = true -- main = gui
Frame.Draggable = true

onof.MouseButton1Down:connect(function()

    if nowe == true then
        nowe = false

        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing,true)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,true)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying,true)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall,true)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,true)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,true)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed,true)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics,true)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,true)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,true)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running,true)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,true)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,true)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,true)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,true)
        speaker.Character.Humanoid:ChangeState(Enum.HumanoidStateType.RunningNoPhysics)
    else 
        nowe = true



        for i = 1, speeds do
            spawn(function()

                local hb = game:GetService("RunService").Heartbeat


                tpwalking = true
                local chr = game.Players.LocalPlayer.Character
                local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
                while tpwalking and hb:Wait() and chr and hum and hum.Parent do
                    if hum.MoveDirection.Magnitude > 0 then
                        chr:TranslateBy(hum.MoveDirection)
                    end
                end

            end)
        end
        game.Players.LocalPlayer.Character.Animate.Disabled = true
        local Char = game.Players.LocalPlayer.Character
        local Hum = Char:FindFirstChildOfClass("Humanoid") or Char:FindFirstChildOfClass("AnimationController")

        for i,v in next, Hum:GetPlayingAnimationTracks() do
            v:AdjustSpeed(0)
        end
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing,false)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,false)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying,false)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall,false)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,false)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,false)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed,false)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics,false)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,false)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,false)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running,false)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,false)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,false)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,false)
        speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,false)
        speaker.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Swimming)
    end




    if game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid").RigType == Enum.HumanoidRigType.R6 then



        local plr = game.Players.LocalPlayer
        local torso = plr.Character.Torso
        local flying = true
        local deb = true
        local ctrl = {f = 0, b = 0, l = 0, r = 0}
        local lastctrl = {f = 0, b = 0, l = 0, r = 0}
        local maxspeed = 50
        local speed = 0


        local bg = Instance.new("BodyGyro", torso)
        bg.P = 9e4
        bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
        bg.cframe = torso.CFrame
        local bv = Instance.new("BodyVelocity", torso)
        bv.velocity = Vector3.new(0,0.1,0)
        bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
        if nowe == true then
            plr.Character.Humanoid.PlatformStand = true
        end
        while nowe == true or game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 do
            game:GetService("RunService").RenderStepped:Wait()

            if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
                speed = speed+.5+(speed/maxspeed)
                if speed > maxspeed then
                    speed = maxspeed
                end
            elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
                speed = speed-1
                if speed < 0 then
                    speed = 0
                end
            end
            if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
                bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
                lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
            elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
                bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
            else
                bv.velocity = Vector3.new(0,0,0)
            end
            --  game.Players.LocalPlayer.Character.Animate.Disabled = true
            bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
        end
        ctrl = {f = 0, b = 0, l = 0, r = 0}
        lastctrl = {f = 0, b = 0, l = 0, r = 0}
        speed = 0
        bg:Destroy()
        bv:Destroy()
        plr.Character.Humanoid.PlatformStand = false
        game.Players.LocalPlayer.Character.Animate.Disabled = false
        tpwalking = false




    else
        local plr = game.Players.LocalPlayer
        local UpperTorso = plr.Character.UpperTorso
        local flying = true
        local deb = true
        local ctrl = {f = 0, b = 0, l = 0, r = 0}
        local lastctrl = {f = 0, b = 0, l = 0, r = 0}
        local maxspeed = 50
        local speed = 0


        local bg = Instance.new("BodyGyro", UpperTorso)
        bg.P = 9e4
        bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
        bg.cframe = UpperTorso.CFrame
        local bv = Instance.new("BodyVelocity", UpperTorso)
        bv.velocity = Vector3.new(0,0.1,0)
        bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
        if nowe == true then
            plr.Character.Humanoid.PlatformStand = true
        end
        while nowe == true or game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 do
            wait()

            if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
                speed = speed+.5+(speed/maxspeed)
                if speed > maxspeed then
                    speed = maxspeed
                end
            elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
                speed = speed-1
                if speed < 0 then
                    speed = 0
                end
            end
            if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
                bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
                lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
            elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
                bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
            else
                bv.velocity = Vector3.new(0,0,0)
            end

            bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
        end
        ctrl = {f = 0, b = 0, l = 0, r = 0}
        lastctrl = {f = 0, b = 0, l = 0, r = 0}
        speed = 0
        bg:Destroy()
        bv:Destroy()
        plr.Character.Humanoid.PlatformStand = false
        game.Players.LocalPlayer.Character.Animate.Disabled = false
        tpwalking = false



    end





end)


up.MouseButton1Down:connect(function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,2,0)

end)


down.MouseButton1Down:connect(function()

    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,-2,0)

end)


game:GetService("Players").LocalPlayer.CharacterAdded:Connect(function(char)
    wait(0.7)
    game.Players.LocalPlayer.Character.Humanoid.PlatformStand = false
    game.Players.LocalPlayer.Character.Animate.Disabled = false

end)


plus.MouseButton1Down:connect(function()
    speeds = speeds + 1
    speed.Text = speeds
    if nowe == true then


    tpwalking = false
    for i = 1, speeds do
        spawn(function()

            local hb = game:GetService("RunService").Heartbeat


            tpwalking = true
            local chr = game.Players.LocalPlayer.Character
            local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
            while tpwalking and hb:Wait() and chr and hum and hum.Parent do
                if hum.MoveDirection.Magnitude > 0 then
                    chr:TranslateBy(hum.MoveDirection)
                end
            end

        end)
        end
        end
end)
mine.MouseButton1Down:connect(function()
    if speeds == 1 then
        speed.Text = 'Cant be less than 1'
        wait(1)
        speed.Text = speeds
    else
    speeds = speeds - 1
        speed.Text = speeds
        if nowe == true then
    tpwalking = false
    for i = 1, speeds do
        spawn(function()

            local hb = game:GetService("RunService").Heartbeat


            tpwalking = true
            local chr = game.Players.LocalPlayer.Character
            local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
            while tpwalking and hb:Wait() and chr and hum and hum.Parent do
                if hum.MoveDirection.Magnitude > 0 then
                    chr:TranslateBy(hum.MoveDirection)
                end
            end

        end)
        end
        end
        end
end)
    
  end
})

local Slider = AddSlider(HUB, {
  Name = "Speed",
  MinValue = 10,
  MaxValue = 300,
  Default = 15,
  Increase = 1,
  Callback = function(Y)-- 300 (MaxValue) | 0 (MinValue)
game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Y
    
  end
})
AddButton(HUB, {
  Name = "Reset speed",
  Callback = function()game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 18
    
  end
})

local noclipEnabled = false
local runService = game:GetService("RunService")

-- Função para definir CanCollide para todas as partes do personagem
local function setCharacterCanCollide(character, canCollide)
    for _, part in ipairs(character:GetDescendants()) do
        if part:IsA("BasePart") then
            part.CanCollide = canCollide
        end
    end
end

-- Função de callback para o botão de alternância de Noclip
local function onNoclipToggle(value)
    noclipEnabled = value
    print("Noclip Enabled:", noclipEnabled)
    
    local player = game.Players.LocalPlayer
    local character = player.Character

    if noclipEnabled then
        -- Inicia um loop para continuamente definir CanCollide
        noclipLoop = runService.Stepped:Connect(function()
            if character then
                setCharacterCanCollide(character, false)
            end
        end)
    else
        -- Desativa o loop e restaura CanCollide
        if noclipLoop then
            noclipLoop:Disconnect()
        end
        if character then
            setCharacterCanCollide(character, true)
        end
    end
end

-- Adiciona o botão de alternância "Noclip"
local Toggle = AddToggle(HUB, {
    Name = "Noclip",
    Default = false,
    Callback = onNoclipToggle
})


local infiniteJumpEnabled = false

-- Conectar o evento de pulo somente uma vez
local infiniteJumpConnection

-- Função de callback para o botão de alternância de pulo infinito
local function onInfiniteJumpToggle(value)
    infiniteJumpEnabled = value
    print("Infinite Jump Enabled:", infiniteJumpEnabled)
    
    -- Conectar o evento de pulo somente uma vez
    if not infiniteJumpConnection then
        infiniteJumpConnection = game:GetService("UserInputService").JumpRequest:Connect(function()
            if infiniteJumpEnabled then
                local player = game.Players.LocalPlayer
                local character = player.Character
                if character and character:FindFirstChildOfClass("Humanoid") then
                    character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping")
                end
            end
        end)
    end
end

-- Adiciona o botão de alternância "Infinitejump"
local Toggle = AddToggle(HUB, {
    Name = "Infinite jumping",
    Default = false,
    Callback = onInfiniteJumpToggle
})





local Slider = AddSlider(HUB, {
  Name = "Jumping power",
  MinValue = 10,
  MaxValue = 300,
  Default = 50,
  Increase = 1,
  Callback = function(Y)-- 300 (MaxValue) | 0 (MinValue)
  game.Players.LocalPlayer.Character.Humanoid.JumpPower = Y
    
  end
})


AddButton(HUB, {
  Name = "Reset jump",
  Callback = function()game.Players.LocalPlayer.Character.Humanoid.JumpPower = 50
    
  end
})

AddTextBox(HUB, {
  Name = "Spin v1",
  Default = "Enter a number",
  PlaceholderText = "",
  ClearText = true,
  Callback = function(Value)
  getgenv().Spinspeed = Value

local Spin = Instance.new'BodyAngularVelocity'
Spin.Parent = game:GetService'Players'.LocalPlayer.Character:FindFirstChild'HumanoidRootPart'
Spin.MaxTorque = Vector3.new(0, math.huge, 100)
wait(0.1)
Spin.AngularVelocity = Vector3.new(100,Spinspeed,0)
  end
})


AddTextBox(HUB, {
  Name = "FOV",
  Default = "",
  PlaceholderText = "",
  ClearText = true,
  Callback = function(value)
local FovNumber = value
local Camera = workspace.CurrentCamera
Camera.FieldOfView = FovNumber  
  end
})


local colors = {
    "Earth green",
    "Magenta",
    "Maroon",
    "Toothpaste",
    "Institutional white"
}

-- VariÃ¡vel para controlar o estado do toggle
local isAutoColorEnabled = false

-- FunÃ§Ã£o para alternar automaticamente as cores
local function AutoColorToggle(toggleValue)
    isAutoColorEnabled = toggleValue  -- Atualiza o estado do toggle

    -- Se o toggle for desativado, nÃ£o faz mais nada
    if not toggleValue then
        return
    end

    -- Loop para alternar entre as cores
    local index = 1
    while isAutoColorEnabled do
        local args = {
            [1] = "skintone",
            [2] = colors[index]
        }
        game:GetService("ReplicatedStorage").RE:FindFirstChild("1Updat1eAvata1r"):FireServer(unpack(args))
        index = index % #colors + 1  -- AvanÃ§a para a prÃ³xima cor circularmente
        wait(2)  -- Espera 3 segundos antes de trocar para a prÃ³xima cor (ajuste conforme necessÃ¡rio)
    end
end

-- Exemplo de uso:
AddToggle(HUB, {
    Name = "Auto color ( body )",
    Default = false,
    Callback = function(Value)
        AutoColorToggle(Value)
    end
})


AddButton(HUB, {
  Name = "Shiftlock",
  Callback = function()
    -- Gui to Lua
-- Version: 3.2

-- Instances:

local ShiftlockStarterGui = Instance.new("ScreenGui")
local ImageButton = Instance.new("ImageButton")

--Properties:

ShiftlockStarterGui.Name = "Shiftlock (StarterGui)"
ShiftlockStarterGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ShiftlockStarterGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

ImageButton.Parent = ShiftlockStarterGui
ImageButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageButton.BackgroundTransparency = 1.000
ImageButton.Position = UDim2.new(0.76138654, 0, 0, 0)
ImageButton.Size = UDim2.new(0.0636147112, 0, 0.0661305636, 0)
ImageButton.SizeConstraint = Enum.SizeConstraint.RelativeXX
ImageButton.Image = "http://www.roblox.com/asset/?id=182223762"

-- Scripts:

local function TLQOYN_fake_script() -- ImageButton.ShiftGUI 
	local script = Instance.new('LocalScript', ImageButton)

	local MobileCameraFramework = {}
	local players = game:GetService("Players")
	local runservice = game:GetService("RunService")
	local CAS = game:GetService("ContextActionService")
	local player = players.LocalPlayer
	local character = player.Character or player.CharacterAdded:Wait()
	local root = character:WaitForChild("HumanoidRootPart")
	local humanoid = character.Humanoid
	local camera = workspace.CurrentCamera
	local button = script.Parent
	
	--Visiblity
	uis = game:GetService("UserInputService")
	ismobile = uis.TouchEnabled
	button.Visible = ismobile
	
	local states = {
		OFF = "rbxasset://textures/ui/mouseLock_off@2x.png",
		ON = "rbxasset://textures/ui/mouseLock_on@2x.png"
	}
	local MAX_LENGTH = 900000
	local active = false
	local ENABLED_OFFSET = CFrame.new(1.7, 0, 0)
	local DISABLED_OFFSET = CFrame.new(-1.7, 0, 0)
	local function UpdateImage(STATE)
		button.Image = states[STATE]
	end
	local function UpdateAutoRotate(BOOL)
		humanoid.AutoRotate = BOOL
	end
	local function GetUpdatedCameraCFrame(ROOT, CAMERA)
		return CFrame.new(root.Position, Vector3.new(CAMERA.CFrame.LookVector.X * MAX_LENGTH, root.Position.Y, CAMERA.CFrame.LookVector.Z * MAX_LENGTH))
	end
	local function EnableShiftlock()
		UpdateAutoRotate(false)
		UpdateImage("ON")
		root.CFrame = GetUpdatedCameraCFrame(root, camera)
		camera.CFrame = camera.CFrame * ENABLED_OFFSET
	end
	local function DisableShiftlock()
		UpdateAutoRotate(true)
		UpdateImage("OFF")
		camera.CFrame = camera.CFrame * DISABLED_OFFSET
		pcall(function()
			active:Disconnect()
			active = nil
		end)
	end
	UpdateImage("OFF")
	active = false
	function ShiftLock()
		if not active then
			active = runservice.RenderStepped:Connect(function()
				EnableShiftlock()
			end)
		else
			DisableShiftlock()
		end
	end
	local ShiftLockButton = CAS:BindAction("ShiftLOCK", ShiftLock, false, "On")
	CAS:SetPosition("ShiftLOCK", UDim2.new(0.8, 0, 0.8, 0))
	button.MouseButton1Click:Connect(function()
		if not active then
			active = runservice.RenderStepped:Connect(function()
				EnableShiftlock()
			end)
		else
			DisableShiftlock()
		end
	end)
	return MobileCameraFramework
	
end
coroutine.wrap(TLQOYN_fake_script)()
local function OMQRQRC_fake_script() -- ShiftlockStarterGui.LocalScript 
	local script = Instance.new('LocalScript', ShiftlockStarterGui)

	local Players = game:GetService("Players")
	local UserInputService = game:GetService("UserInputService")
	local Settings = UserSettings()
	local GameSettings = Settings.GameSettings
	local ShiftLockController = {}
	while not Players.LocalPlayer do
		wait()
	end
	local LocalPlayer = Players.LocalPlayer
	local Mouse = LocalPlayer:GetMouse()
	local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
	local ScreenGui, ShiftLockIcon, InputCn
	local IsShiftLockMode = true
	local IsShiftLocked = true
	local IsActionBound = false
	local IsInFirstPerson = false
	ShiftLockController.OnShiftLockToggled = Instance.new("BindableEvent")
	local function isShiftLockMode()
		return LocalPlayer.DevEnableMouseLock and GameSettings.ControlMode == Enum.ControlMode.MouseLockSwitch and LocalPlayer.DevComputerMovementMode ~= Enum.DevComputerMovementMode.ClickToMove and GameSettings.ComputerMovementMode ~= Enum.ComputerMovementMode.ClickToMove and LocalPlayer.DevComputerMovementMode ~= Enum.DevComputerMovementMode.Scriptable
	end
	if not UserInputService.TouchEnabled then
		IsShiftLockMode = isShiftLockMode()
	end
	local function onShiftLockToggled()
		IsShiftLocked = not IsShiftLocked
		ShiftLockController.OnShiftLockToggled:Fire()
	end
	local initialize = function()
		print("enabled")
	end
	function ShiftLockController:IsShiftLocked()
		return IsShiftLockMode and IsShiftLocked
	end
	function ShiftLockController:SetIsInFirstPerson(isInFirstPerson)
		IsInFirstPerson = isInFirstPerson
	end
	local function mouseLockSwitchFunc(actionName, inputState, inputObject)
		if IsShiftLockMode then
			onShiftLockToggled()
		end
	end
	local function disableShiftLock()
		if ScreenGui then
			ScreenGui.Parent = nil
		end
		IsShiftLockMode = false
		Mouse.Icon = ""
		if InputCn then
			InputCn:disconnect()
			InputCn = nil
		end
		IsActionBound = false
		ShiftLockController.OnShiftLockToggled:Fire()
	end
	local onShiftInputBegan = function(inputObject, isProcessed)
		if isProcessed then
			return
		end
		if inputObject.UserInputType ~= Enum.UserInputType.Keyboard or inputObject.KeyCode == Enum.KeyCode.LeftShift or inputObject.KeyCode == Enum.KeyCode.RightShift then
		end
	end
	local function enableShiftLock()
		IsShiftLockMode = isShiftLockMode()
		if IsShiftLockMode then
			if ScreenGui then
				ScreenGui.Parent = PlayerGui
			end
			if IsShiftLocked then
				ShiftLockController.OnShiftLockToggled:Fire()
			end
			if not IsActionBound then
				InputCn = UserInputService.InputBegan:connect(onShiftInputBegan)
				IsActionBound = true
			end
		end
	end
	GameSettings.Changed:connect(function(property)
		if property == "ControlMode" then
			if GameSettings.ControlMode == Enum.ControlMode.MouseLockSwitch then
				enableShiftLock()
			else
				disableShiftLock()
			end
		elseif property == "ComputerMovementMode" then
			if GameSettings.ComputerMovementMode == Enum.ComputerMovementMode.ClickToMove then
				disableShiftLock()
			else
				enableShiftLock()
			end
		end
	end)
	LocalPlayer.Changed:connect(function(property)
		if property == "DevEnableMouseLock" then
			if LocalPlayer.DevEnableMouseLock then
				enableShiftLock()
			else
				disableShiftLock()
			end
		elseif property == "DevComputerMovementMode" then
			if LocalPlayer.DevComputerMovementMode == Enum.DevComputerMovementMode.ClickToMove or LocalPlayer.DevComputerMovementMode == Enum.DevComputerMovementMode.Scriptable then
				disableShiftLock()
			else
				enableShiftLock()
			end
		end
	end)
	LocalPlayer.CharacterAdded:connect(function(character)
		if not UserInputService.TouchEnabled then
			initialize()
		end
	end)
	if not UserInputService.TouchEnabled then
		initialize()
		if isShiftLockMode() then
			InputCn = UserInputService.InputBegan:connect(onShiftInputBegan)
			IsActionBound = true
		end
	end
	enableShiftLock()
	return ShiftLockController
	
end
coroutine.wrap(OMQRQRC_fake_script)()
  end
})

local section = AddSection(TP, {"»»»»»{ Teleports }««««« "})


-- Serviços necessários
local playerService = game:GetService('Players')
local runService = game:GetService('RunService')
local player = playerService.LocalPlayer

-- Variáveis globais
local selectedPlayer = nil
local selectedKillAdvancedPlayer = nil
local couchEquipped = false
local playerDropdownV13

-- Função para obter a lista de jogadores
local function getPlayerList()
    local playerList = {}
    for _, player in ipairs(playerService:GetPlayers()) do
        if player ~= playerService.LocalPlayer then
            table.insert(playerList, player.Name)
        end
    end
    return playerList
end

-- Função para atualizar o dropdown
local function updateDropdown(dropdown)
    UpdateDropdown(dropdown, getPlayerList())
end

-- Função para encontrar jogador por nome
local function gplr(String)
    local strl = String:lower()
    local Found = {}
    for _, v in pairs(playerService:GetPlayers()) do
        if v.Name:lower():sub(1, #strl) == strl then
            table.insert(Found, v)
        end
    end
    return Found
end
-- Função para flingar jogador (V13)
local function flingPlayer(targetName)
    local Target = gplr(targetName)
    if Target[1] then
        Target = Target[1]
        
        local Thrust = Instance.new('BodyThrust', player.Character.HumanoidRootPart)
        Thrust.Force = Vector3.new(999, 999, 999)
        Thrust.Name = "FlingForce"
        repeat
            player.Character.HumanoidRootPart.CFrame = Target.Character.HumanoidRootPart.CFrame
            Thrust.Location = Target.Character.HumanoidRootPart.Position
            runService.Heartbeat:Wait()
        until not Target.Character:FindFirstChild("Head")
    end
end
        
        
        

        
              
-- Interface para Fling V13
playerDropdownV13 = AddDropdown(TP, {
    Name = "Select a player",
    Default = "",
    Options = getPlayerList(),
    Callback = function(value)
        selectedPlayer = value
        PlayerTP = value
    end
})
AddButton(TP, {
    Name = "TP to",
    Callback = function(t)
        if selectedPlayer then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players[PlayerTP].Character.HumanoidRootPart.CFrame
        end
    end
})

-- Atualiza a lista de jogadores quando os jogadores entram ou saem do jogo
playerService.PlayerAdded:Connect(function()
    updateDropdown(playerDropdownV13)
end)

playerService.PlayerRemoving:Connect(function()
    updateDropdown(playerDropdownV13)
end)

-- Atualiza a lista de jogadores ao iniciar o script
updateDropdown(playerDropdownV13)



local Toggle = AddToggle(TP, {
  Name = "Auto TP",
  Default = false,
  Callback = function(t)_G.TPPlayer = t
while _G.TPPlayer do wait()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players[PlayerTP].Character.HumanoidRootPart.CFrame
end
    
  end
})



local section = AddSection(TP, {"»»»»»{ View }««««« "})

-- Variáveis e funções para a visualização dos jogadores
local viewEnabled = false
local selectedViewPlayer = nil
local characterAddedConnection = nil

local function toggleView(enabled)
    if enabled then
        if selectedViewPlayer then
            local player = selectedViewPlayer
            if player then
                game.Workspace.CurrentCamera.CameraSubject = player.Character
                if characterAddedConnection then
                    characterAddedConnection:Disconnect()
                end
                characterAddedConnection = player.CharacterAdded:Connect(function(character)
                    game.Workspace.CurrentCamera.CameraSubject = character
                end)
                MakeNotifi({
                    Title = "Under watch" .. player.Name,
                    Text = "Watching now" .. player.Name,
                    Time = 6
                })
            else
                print("Jogador não encontrado.")
                viewEnabled = false
            end
        else
            print("Nenhum jogador selecionado para a visualização.")
            viewEnabled = false
        end
    else
        if characterAddedConnection then
            characterAddedConnection:Disconnect()
            characterAddedConnection = nil
        end
        game.Workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character
    end
end
local value = "" -- Variável para armazenar o nome digitado

local function findPlayerByPartialNameOrNickname(partialName)
    value = partialName -- Atualiza a variável com o nome digitado completo
    for _, player in ipairs(game.Players:GetPlayers()) do
        if player.Name:lower():find(partialName:lower(), 1, true) or (player.DisplayName and player.DisplayName:lower():find(partialName:lower(), 1, true)) then
            return player
        end
    end
    return nil
end

-- Adicionando a caixa de texto para entrada do nome ou apelido do jogador
AddTextBox(TP, {
    Name = "Enter User Player",
    Default = "",
    PlaceholderText = "The first two letters",
    ClearText = true,
    Callback = function(value)
if value == "" then
            MakeNotifi({
                Title = "incorrect",
                Text = "The field is empty ! ",
                Time = 5
            })
            if viewEnabled then
                toggleView(false)
            end
            return
        end

        selectedViewPlayer = findPlayerByPartialNameOrNickname(value)
        if selectedViewPlayer then
            print("Jogador encontrado: " .. selectedViewPlayer.Name)
            if viewEnabled then
                toggleView(false)
                toggleView(true)
            end
        else
            MakeNotifi({
                Title = "incorrect",
                Text = "The username is incorrect !",
                Time = 7
            })
            if viewEnabled then
                toggleView(false)
            end
        end
    end
})
-- Adicionando o toggle para ativar/desativar a visualização
AddToggle(TP, {
    Name = "View player",
    Default = false,
    Callback = function(enabled)
        viewEnabled = enabled
        toggleView(enabled)
    end
})

-- Conectando eventos de jogador removido
game.Players.PlayerRemoving:Connect(function(player)
    if selectedViewPlayer == player then
        selectedViewPlayer = nil
        if viewEnabled then
            toggleView(false)
            MakeNotifi({
                Title = "completed √",
                Text = player.Name .. "Watching now : ",
                Time = 5
            })
        end
    end
end)

-- Função para manter a câmera no jogador selecionado
local function maintainView()
    while wait() do
        if viewEnabled and selectedViewPlayer then
            local player = selectedViewPlayer
            if player and game.Workspace.CurrentCamera.CameraSubject ~= player.Character then
                game.Workspace.CurrentCamera.CameraSubject = player.Character
            end
        end
    end
end


local section = AddSection(TP, {"»»»»»{ TP Places }«««««"})


local function teleportToBrooksDiner()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-26, 4, -23)
end

AddButton(TP, {
    Name = "Lobby",
    Description = "Teleporta para as coordenadas do Brooks Diner",
    Callback = teleportToBrooksDiner
})

local function teleportToAirport()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(310, 5, 31)
end

AddButton(TP, {
    Name = "Airport",
    Description = "Teleporta para as coordenadas do Aeroporto",
    Callback = teleportToAirport
})
local function teleportToHospital()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-309, 4, 71)
end

AddButton(TP, {
    Name = "Hospital",
    Description = "Teleporta para as coordenadas do Hospital",
    Callback = teleportToHospital
})

AddButton(TP, {
    Name = "Drone",
    Callback = function()game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Model.DroneFakeNew.c.CFrame
     end
})    


AddButton(TP, {
    Name = "plate 1",
    Callback = function()
        local plr = game.Players.LocalPlayer
        local char = plr.Character
        local hrp = char:FindFirstChild("HumanoidRootPart")

        if hrp then
            hrp.CFrame = CFrame.new(-242.68215942382812, 89.68680572509766, -549.6495361328125)
        else
            warn("HumanoidRootPart not found")
        end
    end
})

AddButton(TP, {
    Name = "plate 2",
    Callback = function()
        local plr = game.Players.LocalPlayer
        local char = plr.Character
        local hrp = char:FindFirstChild("HumanoidRootPart")

        if hrp then
            hrp.CFrame = CFrame.new(-630.480712890625, 26.586822509765625, 365.14093017578125)
        else
            warn("HumanoidRootPart not found")
        end
    end
})

local function teleportToSchool()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-312, 4, 211)
end

AddButton(TP, {
    Name = "school",
    Description = "Teleporta para as coordenadas da Escola",
    Callback = teleportToSchool
})


local function teleportToOnTopOfSchool()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-370, 50, 173)
end

AddButton(TP, {
    Name = "Above school",
    Description = "Teleporta para as coordenadas Em Cima da Escola",
    Callback = teleportToOnTopOfSchool
})

local function teleportToHotelCenter()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(182, 4, 150)
end

AddButton(TP, {
    Name = "Hotels",
    Description = "Teleporta para as coordenadas do Centro dos Hotéis",
    Callback = teleportToHotelCenter
})


local section = AddSection(Skin, {"»»»»»{ Bodies }«««««"})

AddButton(Skin, {
  Name = "body 1 ( boy )",
  Callback = function()local args = {
    [1] = "CharacterChange",
    [2] = {
        [1] = 17873152058,
        [2] = 17873151683,
        [3] = 17873151726,
        [4] = 17873151827,
        [5] = 17873152017,
        [6] = 1
    },
    [3] = "UX"
}

game:GetService("ReplicatedStorage").RE:FindFirstChild("1Avata1rOrigina1l"):FireServer(unpack(args))
    
  end
})



AddButton(Skin, {
  Name = "Small body ( Girl & boy )",
  Callback = function()local args = {
    [1] = "CharacterChange",
    [2] = {
        [1] = 14579958702,
        [2] = 14579959062,
        [3] = 14579959191,
        [4] = 14579959249,
        [5] = 14579963667,
        [6] = 1
    },
    [3] = "UX"
}

game:GetService("ReplicatedStorage").RE:FindFirstChild("1Avata1rOrigina1l"):FireServer(unpack(args))

    
  end
})

AddButton(Skin, {
  Name = "body 1 ( Girl )",
  Callback = function()local args = {
    [1] = "CharacterChange",
    [2] = {
        [1] = 14785351665,
        [2] = 14785351711,
        [3] = 14785351713,
        [4] = 14785351880,
        [5] = 14785351756,
        [6] = 1
    },
    [3] = "UX"
}

game:GetService("ReplicatedStorage").RE:FindFirstChild("1Avata1rOrigina1l"):FireServer(unpack(args))
    
  end
})

AddButton(Skin, {
  Name = "body 2 ( Girl )",
  Callback = function()
    local args = {
    [1] = "CharacterChange",
    [2] = {
        [1] = 14775830263,
        [2] = 14785351711,
        [3] = 14785351713,
        [4] = 14785351880,
        [5] = 14785351756,
        [6] = 1
    },
    [3] = "UX"
}

game:GetService("ReplicatedStorage").RE:FindFirstChild("1Avata1rOrigina1l"):FireServer(unpack(args))
  end
})



AddButton(Skin, {
  Name = "body 3 ( Girl )",
  Callback = function()
    local args = {
    [1] = "CharacterChange",
    [2] = {
        [1] = 15539008532,
        [2] = 15539008875,
        [3] = 15539008680,
        [4] = 15539008795,
        [5] = 15539011945,
        [6] = 1
    },
    [3] = "UX"
}

game:GetService("ReplicatedStorage").RE:FindFirstChild("1Avata1rOrigina1l"):FireServer(unpack(args))
  end
})


AddButton(Skin, {
  Name = "Emo body 1 ( Girl )",
  Callback = function()
    local args = {
    [1] = "CharacterChange",
    [2] = {
        [1] = 15599926323,
        [2] = 15539008875,
        [3] = 15539008680,
        [4] = 0,
        [5] = 0,
        [6] = 134082579
    },
    [3] = "UX"
}

game:GetService("ReplicatedStorage").RE:FindFirstChild("1Avata1rOrigina1l"):FireServer(unpack(args))
wait(0.1)
local args = {
    [1] = "CharacterChange",
    [2] = {
        [1] = 1,
        [2] = 1,
        [3] = 1,
        [4] = 1,
        [5] = 1,
        [6] = 3210773801
    },
    [3] = "Roblox20"
}

game:GetService("ReplicatedStorage").RE:FindFirstChild("1Avata1rOrigina1l"):FireServer(unpack(args))
wait(0.1)
  end
})




AddButton(Skin, {
  Name = "Emo body 2 ( Girl )",
  Callback = function()
    local args = {
    [1] = "CharacterChange",
    [2] = {
        [1] = 96491916349570,
        [2] = 86499698,
        [3] = 86499716,
        [4] = 1,
        [5] = 1,
        [6] = 1
    },
    [3] = "UX"
}

game:GetService("ReplicatedStorage").RE:FindFirstChild("1Avata1rOrigina1l"):FireServer(unpack(args))
  end
})




local section = AddSection(Skin, {"»»»»»{ Other }«««««"})
AddButton(Skin, {
  Name = "Hidden feet ( Right )",
  Callback = function()
    local args = {
    [1] = "CharacterChange",
    [2] = {
        [1] = 1,
        [2] = 1,
        [3] = 1,
        [4] = 139607718,
        [5] = 1,
        [6] = 1
    },
    [3] = "Roblox20"
}

game:GetService("ReplicatedStorage").RE:FindFirstChild("1Avata1rOrigina1l"):FireServer(unpack(args))
wait(0.1)
  end
})


AddButton(Skin, {
  Name = "Hidden feet ( Left )",
  Callback = function()
    local args = {
    [1] = "CharacterChange",
    [2] = {
        [1] = 1,
        [2] = 1,
        [3] = 1,
        [4] = 1,
        [5] = 139607673,
        [6] = 1
    },
    [3] = "Roblox20"
}

game:GetService("ReplicatedStorage").RE:FindFirstChild("1Avata1rOrigina1l"):FireServer(unpack(args))
wait(0.1)
  end
})


AddButton(Skin, {
  Name = "Robot head",
  Callback = function()
     local args = {
    [1] = "CharacterChange",
    [2] = {
        [1] = 1,
        [2] = 1,
        [3] = 1,
        [4] = 1,
        [5] = 1,
        [6] = 3210773801
    },
    [3] = "Roblox20"
}

game:GetService("ReplicatedStorage").RE:FindFirstChild("1Avata1rOrigina1l"):FireServer(unpack(args))
wait(0.1)
  end
})

AddButton(Skin, {
  Name = "Hidden header",
  Callback = function()
    local args = {
    [1] = "CharacterChange",
    [2] = {
        [1] = 1,
        [2] = 1,
        [3] = 1,
        [4] = 1,
        [5] = 1,
        [6] = 134082579
    },
    [3] = "Roblox20"
}

game:GetService("ReplicatedStorage").RE:FindFirstChild("1Avata1rOrigina1l"):FireServer(unpack(args))
wait(0.1)
  end
})


AddButton(Skin, {
  Name = "Strange head",
  Callback = function()
    local args = {
    [1] = "CharacterChange",
    [2] = {
        [1] = 1,
        [2] = 1,
        [3] = 1,
        [4] = 1,
        [5] = 1,
        [6] = 16580493236
    },
    [3] = "Roblox20"
}

game:GetService("ReplicatedStorage").RE:FindFirstChild("1Avata1rOrigina1l"):FireServer(unpack(args))
wait(0.1)
  end
})
AddButton(Skin, {
  Name = "head 1",
  Callback = function()
    local args = {
    [1] = "CharacterChange",
    [2] = {
        [1] = 1,
        [2] = 1,
        [3] = 1,
        [4] = 1,
        [5] = 1,
        [6] = 746767604
    },
    [3] = "Roblox20"
}

game:GetService("ReplicatedStorage").RE:FindFirstChild("1Avata1rOrigina1l"):FireServer(unpack(args))
wait(0.1)
  end
})
AddButton(Skin, {
  Name = "Fiery Halloween head",
      Callback = function()
        local args = {
            [1] = "wear",
            [2] = 183468963
        }
        game:GetService("ReplicatedStorage").RE:FindFirstChild("1Updat1eAvata1r"):FireServer(unpack(args))
    end
})
AddButton(Skin, {
  Name = "Green fiery halloween head",
      Callback = function()
        local args = {
            [1] = "wear",
            [2] = 132809431
        }
        game:GetService("ReplicatedStorage").RE:FindFirstChild("1Updat1eAvata1r"):FireServer(unpack(args))
    end
})

-- Personal information section 
local section = AddSection(Main, {"»»»»»{ Your information }«««««"})


local Label = AddTextLabel(Main, " Name  : " .. player.DisplayName )
SetLabel(Label, " Name : " .. player.DisplayName )


local Label = AddTextLabel(Main, " User  : " .. player.Name )
SetLabel(Label, " User : " .. player.Name )



local Label = AddTextLabel(Main, " ID  : " .. player.UserId )
SetLabel(Label, " ID : " .. player.UserId )

local Label = AddTextLabel(Main,"" .."\nJoined: "..os.date("%Y-%m-%d", os.time()-player.AccountAge * 24 * 3600).."")
SetLabel(Label, "" .."\nJoined: "..os.date("%Y-%m-%d", os.time()-player.AccountAge * 24 * 3600).."")

local section = AddSection(Main, {"»»»»»{ Map information }«««««"})

local playerService = game:GetService("Players")
local localPlayer = playerService.LocalPlayer
local marketplaceService = game:GetService("MarketplaceService")
local placeId = game.PlaceId
local productInfo = marketplaceService:GetProductInfo(placeId)

local creatorName = productInfo.Creator.Name
local gameName = productInfo.Name
local createdTime = string.sub(productInfo.Created, 1, 10)
local updatedTime = string.sub(productInfo.Updated, 1, 10)

local Label = AddTextLabel(Main, "Name : " .. gameName )
SetLabel(Label, "Name : " .. gameName )

local Label = AddTextLabel(Main, "Creator : " .. creatorName )
SetLabel(Label, "Creator : " .. creatorName )

local Label = AddTextLabel(Main, "CreatedTime : " .. createdTime )
SetLabel(Label, "CreatedTime : " .. createdTime )

local Label = AddTextLabel(Main, "UpdatedTime : " .. updatedTime )
SetLabel(Label, "UpdatedTime : " .. updatedTime )

AddButton(Main, {
  Name = "Place ID ( Click to copy ) : " .. tostring(placeId),
  Callback = function()setclipboard(tostring(placeId))
    
  end
})

-- It's over 


local section = AddSection(ESPV1, {"»»»»»{ ESP V1 }««««« "})
local ESP = loadstring(game:HttpGet("https://kiriot22.com/releases/ESP.lua"))()
ESP:Toggle(true)
ESP.Players = false
ESP.Tracers = false
ESP.Boxes = false
ESP.Names = false
ESP.TeamColor = false
ESP.TeamMates = false
ESP.Highlight = false 



local Toggle = AddToggle(ESPV1, {
  Name = "Enable",
  Default = false,
  Callback = function(Value)
    ESP.Players = Value
    ESP.TeamMates = Value
    ESP.Highlight = Value 
  end
})


local Toggle = AddToggle(ESPV1, {
  Name = "Name",
  Default = false,
  Callback = function(Value)
    ESP.Names = Value
  end
})

local Toggle = AddToggle(ESPV1, {
  Name = "Box",
  Default = false,
  Callback = function(Value)
    ESP.Boxes = Value
  end
})

local Toggle = AddToggle(ESPV1, {
  Name = "Line",
  Default = false,
  Callback = function(Value)
   ESP.Tracers = Value
  end
})

AddColorPicker(ESPV1, {
  Name = "ESP Color",
  Default = Color3.fromRGB(0, 0, 0),
  Callback = function(Value)
    ESP.Color = Value
  end
})







AddButton(HUB, {
  Name = "Kill my player",
  Callback = function()game.Players.LocalPlayer.Character.Head:Remove()for l=1,2 do local t=game.ReplicatedStorage.RemoteEvents.P1layerTriggerEvent54444;for l,m in pairs(game.Players:GetPlayers())do if m.Name~=game.Players.LocalPlayer then t:FireServer("Client2Client","Request: Piggyback!",m)local t=game.ReplicatedStorage.RemoteEvents.P1layerTriggerEvent54444;for l,m in pairs(game.Players:GetPlayers())do if m.Name~=game.Players.LocalPlayer then t:FireServer("BothWantPiggyBackRide",m)end end end end end 
    
  end
})




local section = AddSection(script, {"»»»»»{ Names }««««« "})


AddButton(Names, {
  Name = "HACKER",
  Callback = function()
    local args = {
    [1] = "RolePlayName",

}
game:GetService("ReplicatedStorage").RE:FindFirstChild("1RPNam1eTex1t"):FireServer(unpack(args))
wait(0.1)
  end
})


AddButton(Names, {
  Name = "$",
  Callback = function()
    local args = {
    [1] = "RolePlayName",
    [2] = "$\204\184\204\143\204\130\204\145\204\130\205\128\204\144\204\148\205\129\205\151\205\134\204\140\204\147\205\132\204\145\204\129\205\131\204\133\204\133\204\144\205\146\204\174\204\166\204\177\204\152\205\148\205\133\204\151\204\172\204\164\204\177\204\152\205\135\205\150\204\150\205\136\204\153\205\141\204\153\205\133\205\136\204\152\204\171\204\153"
}

game:GetService("ReplicatedStorage").RE:FindFirstChild("1RPNam1eTex1t"):FireServer(unpack(args))
wait(0.1)
  end
})

AddButton(Names, {
  Name = "You",
  Callback = function()
    local args = {
    [1] = "RolePlayName",
    [2] = "Y\210\137\204\139\204\136\204\132\205\139\204\138\204\138\205\131\204\148\205\138\204\146\204\142\204\133\205\135\204\159\205\150\205\133\204\158\204\159\204\158\205\141o\204\182\204\137\205\138\204\138\205\138\204\136\204\190\204\145\204\154\204\148\204\134\205\134\204\129\205\131\204\165\205\150\204\177\205\150\204\176\204\173\204\166\204\171u\204\183\204\141\205\145\205\129\205\129\204\147\204\130\205\128\204\148\205\138\204\189\204\191\205\146\204\146\204\128\204\157\204\176\204\159\204\169\204\159\204\163\204\164\204\158\204\169\204\179\204\179\205\150"
}

game:GetService("ReplicatedStorage").RE:FindFirstChild("1RPNam1eTex1t"):FireServer(unpack(args))
wait(0.1)
  end
})

AddButton(Names, {
  Name = "HAHA",
  Callback = function()
    local args = {
    [1] = "RolePlayName",
    [2] = "H\204\146\204\191\204\135\205\128\204\132\204\154\204\145\205\140\204\146\204\163\204\171\205\148\204\153\205\150A\205\146\204\147\205\139\204\135\204\142\204\130\204\152\204\153\204\166\204\179\205\135\204\175\204\174\204\178\205\148H\204\189\205\128\204\128\204\148\204\135\204\132\204\143\204\140\204\134\204\142\204\160\204\166\205\137\205\141\204\158\204\171A\204\131\204\131\205\139\205\140\204\146\205\140\205\146\204\154\204\146\204\137\204\147\205\153\204\157\204\169\205\137\204\158\205\147\204\165\204\163\205\149\204\159\204\178\204\163H\205\139\204\128\204\132\204\191\204\136\204\135\204\131\204\130\205\145\204\140\205\145\205\139\205\154\204\151\204\170\205\154\204\172A\205\139\204\134\204\129\204\133\204\189\205\139\205\155\205\153\204\173\204\160"
}

game:GetService("ReplicatedStorage").RE:FindFirstChild("1RPNam1eTex1t"):FireServer(unpack(args))
wait(0.1)
  end
})


AddButton(Names, {
  Name = "Money ",
  Callback = function()
    local args = {
    [1] = "RolePlayName",

}

game:GetService("ReplicatedStorage").RE:FindFirstChild("1RPNam1eTex1t"):FireServer(unpack(args))
wait(0.1)
  end
})



AddButton(Names, {
  Name = "Roblox",
  Callback = function()
    local args = {
    [1] = "RolePlayName",
    [2] = "R̸ ̨̼̮͚̹̮̲͎̈́̾͗̇͝o̷̻͎͇̰̰̮̬̥̝̹̕b̵͍͍̮̦̩̪͉͗͗̄̀͝͝l̸͇̠̯͓̱͖̦̎̒̔̋͑̒̋͘ͅö̶̤̻̤̗́͌͝x̴͕̆̓̍͗͒͐"
}

game:GetService("ReplicatedStorage").RE:FindFirstChild("1RPNam1eTex1t"):FireServer(unpack(args))
  end
})


AddButton(Names, {
  Name = "666",
  Callback = function()
    local args = {
    [1] = "RolePlayName",
    [2] = "6̵͙̭̻͚̝̃6̸͛́̀̐͂̌̈̌̓ ̨̧̨͕͉̲͇6̴̛͚͔͔̪̱̮̤͉̗͉̇̀͛͊̏͠"
}

game:GetService("ReplicatedStorage").RE:FindFirstChild("1RPNam1eTex1t"):FireServer(unpack(args))
  end
})

AddButton(Names, {
  Name = "Ez",
  Callback = function()
    local args = {
    [1] = "RolePlayName",
    [2] = "E̴̬̬̯̭̣̯̬̲̲͋̽͆́̽̾̍͠͝͝z̷ ̚ ̡̧̞̘̪̟̠̮̘̪"
}

game:GetService("ReplicatedStorage").RE:FindFirstChild("1RPNam1eTex1t"):FireServer(unpack(args))
  end
})

AddButton(Names, {
  Name = "UX",
  Callback = function()
    local args = {
    [1] = "RolePlayName",
    [2] = "Y\204\146\204\191\204\135\205\128\204\132\204\154\204\145\205\140\204\146\204\163\204\171\205\148\204\153\205\150H\205\146\204\147\205\139\204\135\204\142\204\130\204\152\204\153\204\166\204\179\205\135\204\175\204\174\204\178\205\148U\204\189\205\128\204\128\204\148\204\135\204\132\204\143\204\140\204\134\204\142\204\160\204\166\205\137\205\141\204\158\204\171\204\131\204\131\205\139\205\140\204\146\205\140\205\146\204\154\204\146\204\137\204\147\205\153\204\157\204\169\205\137\204\158\205\147\204\165\204\163\205\149\204\159\204\178\204\163B\205\139\204\128\204\132\204\191\204\136\204\135\204\131\204\130\205\145\204\140\205\145\205\139\205\154\204\151\204\170\205\154\204\172\205\139\204\134\204\129\204\133\204\189\205\139\205\155\205\153\204\173\204\160"
}

game:GetService("ReplicatedStorage").RE:FindFirstChild("1RPNam1eTex1t"):FireServer(unpack(args))
wait(0.1)
  end
})


AddButton(Names, {
  Name = "GG",
  Callback = function()
    local args = {
    [1] = "RolePlayName",
    [2] = "G̴̬̬̯̭̣̯̬̲̲͋̽͆́̽̾̍͠͝͝G̷ ̚ ̡̧̞̘̪̟̠̮̘̪"
}
game:GetService("ReplicatedStorage").RE:FindFirstChild("1RPNam1eTex1t"):FireServer(unpack(args))
wait(0.1)
  end
})


local section = AddSection(fling, {"»»»»»{ Fling ( Kill ) }«««««"})
local Paragraph = AddParagraph(fling, {"Note", "Bring the sofa before activation"})
SetParagraph(Paragraph, {"Note", "Bring the sofa before activation"})

--[[
  <string> novo Nome do Parágrafo
  <string> Nova descrição do Parágrafo
]]
-- Serviços necessários
local playerService = game:GetService('Players')
local runService = game:GetService('RunService')
local player = playerService.LocalPlayer

-- Variáveis globais
local selectedPlayer = nil
local selectedKillAdvancedPlayer = nil
local couchEquipped = false
local playerDropdownV13

-- Função para obter a lista de jogadores
local function getPlayerList()
    local playerList = {}
    for _, player in ipairs(playerService:GetPlayers()) do
        if player ~= playerService.LocalPlayer then
            table.insert(playerList, player.Name)
        end
    end
    return playerList
end

-- Função para atualizar o dropdown
local function updateDropdown(dropdown)
    UpdateDropdown(dropdown, getPlayerList())
end

-- Função para encontrar jogador por nome
local function gplr(String)
    local strl = String:lower()
    local Found = {}
    for _, v in pairs(playerService:GetPlayers()) do
        if v.Name:lower():sub(1, #strl) == strl then
            table.insert(Found, v)
        end
    end
    return Found
end

-- Função para flingar jogador (V13)
local function flingPlayer(targetName)
    local Target = gplr(targetName)
    if Target[1] then
        Target = Target[1]
        
        local Thrust = Instance.new('BodyThrust', player.Character.HumanoidRootPart)
        Thrust.Force = Vector3.new(999, 999, 999)
        Thrust.Name = "FlingForce"
        repeat
            player.Character.HumanoidRootPart.CFrame = Target.Character.HumanoidRootPart.CFrame
            Thrust.Location = Target.Character.HumanoidRootPart.Position
            runService.Heartbeat:Wait()
        until not Target.Character:FindFirstChild("Head")
    end
end
-- Interface para Fling V13
playerDropdownV13 = AddDropdown(fling, {
    Name = "Select a player",
    Default = "",
    Options = getPlayerList(),
    Callback = function(value)
        selectedPlayer = value
    end
})

local Toggle = AddToggle(fling, {
  Name = "Fling player ",
  Default = false,
  Callback = function()
        if selectedPlayer then
            flingPlayer(selectedPlayer)
        end
    end
})


local playerService = game:GetService('Players')
local runService = game:GetService('RunService')
local localPlayer = playerService.LocalPlayer

-- Variáveis globais
local flingV14Toggle = false
local currentPlayerIndex = 1
local flingV14Connection
local players

-- Função para teleportar para a coordenada específica
local function teleportToCoordinate()
    local teleportPosition = Vector3.new(-58, 54, -183) -- Coordenada para onde você deseja teleportar
    if localPlayer.Character and localPlayer.Character:FindFirstChild("HumanoidRootPart") then
        localPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(teleportPosition)
    end
end

-- Função para flingar jogadores em sequência
local function flingPlayersInSequence()
    if flingV14Toggle then
        -- Obtém a lista de jogadores uma vez
        players = playerService:GetPlayers()
        
        -- Reseta o índice do jogador atual
        currentPlayerIndex = 1
        
        -- Looping de teleportes em cada jogador
        flingV14Connection = runService.Heartbeat:Connect(function()
            -- Ignora o jogador local
            while players[currentPlayerIndex] == localPlayer do
                currentPlayerIndex = currentPlayerIndex + 1
                if currentPlayerIndex > #players then
                    currentPlayerIndex = 1
                end
            end
            local targetPlayer = players[currentPlayerIndex]
            if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
                if localPlayer.Character and localPlayer.Character:FindFirstChild("HumanoidRootPart") then
                    localPlayer.Character.HumanoidRootPart.CFrame = targetPlayer.Character.HumanoidRootPart.CFrame

                    -- Verifica se o jogador alvo está sentado
                    if targetPlayer.Character:FindFirstChild("Humanoid") and targetPlayer.Character.Humanoid.SeatPart then
                        teleportToCoordinate()
                        
                        -- Espera 3 segundos antes de ir para o próximo jogador
                        wait(5)
                        currentPlayerIndex = currentPlayerIndex + 1
                        
                        if currentPlayerIndex > #players then
                            currentPlayerIndex = 1
                        end
                    end
                end
            end
        end)
    end
end

-- Função de callback para o toggle
local function onFlingV14Toggle(value)
    flingV14Toggle = value
    if flingV14Toggle then
        flingPlayersInSequence()
    else
        -- Desconecta as conexões quando o toggle é desativado
        if flingV14Connection then
            flingV14Connection:Disconnect()
            flingV14Connection = nil
        end
    end
end

-- Adiciona o Toggle para ativar/desativar o Fling V14
AddToggle(fling, {
    Name = "Fling all",
    Default = false,
    Callback = onFlingV14Toggle
})

playerService.PlayerAdded:Connect(function()
    updateDropdown(playerDropdownV13)
end)

playerService.PlayerRemoving:Connect(function()
    updateDropdown(playerDropdownV13)
end)

-- Atualiza a lista de jogadores ao iniciar o script
updateDropdown(playerDropdownV13)

AddButton(fling, {
  Name = "give the sofa",
  Callback = function()
    local args={[1]="PickingTools",[2]="Couch"};game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l"):InvokeServer(unpack(args))
  end
})

--------------------------------------------------------------------------------------------------------------

local section = AddSection(fling, {"»»»»»{ Fling V2 }«««««"})
local playerService = game:GetService('Players')
local runService = game:GetService('RunService')
local player = playerService.LocalPlayer

-- Variáveis globais
local selectedPlayer = nil
local selectedKillAdvancedPlayer = nil
local couchEquipped = false
local playerDropdownV13

-- Função para obter a lista de jogadores
local function getPlayerList()
    local playerList = {}
    for _, player in ipairs(playerService:GetPlayers()) do
        if player ~= playerService.LocalPlayer then
            table.insert(playerList, player.Name)
        end
    end
    return playerList
end

-- Função para atualizar o dropdown
local function updateDropdown(dropdown)
    UpdateDropdown(dropdown, getPlayerList())
end

-- Função para encontrar jogador por nome
local function gplr(String)
    local strl = String:lower()
    local Found = {}
    for _, v in pairs(playerService:GetPlayers()) do
        if v.Name:lower():sub(1, #strl) == strl then
            table.insert(Found, v)
        end
    end
    return Found
end

playerDropdownV13 = AddDropdown(fling, {
    Name = "Select a player",
    Default = "",
    Options = getPlayerList(),
    Callback = function(value)
        selectedPlayer = value
    end
})
local Targets = {""}
AddButton(fling, {
  Name = "Fling player",
  Callback = function()local Targets = {""} 

local Players = game:GetService("Players")
local Player = Players.LocalPlayer

local AllBool = false

local GetPlayer = function(Name)
    Name = Name:lower()
    if Name == "all" or Name == "others" then
        AllBool = true
        return
    elseif Name == "random" then
        local GetPlayers = Players:GetPlayers()
        if table.find(GetPlayers,Player) then table.remove(GetPlayers,table.find(GetPlayers,Player)) end
        return GetPlayers[math.random(#GetPlayers)]
    elseif Name ~= "random" and Name ~= "all" and Name ~= "others" then
        for _,x in next, Players:GetPlayers() do
            if x ~= Player then
                if x.Name:lower():match("^"..Name) then
                    return x;
                elseif x.DisplayName:lower():match("^"..Name) then
                    return x;
                end
            end
        end
    else
        return
    end
end

local Message = function(_Title, _Text, Time)
    game:GetService("StarterGui"):SetCore("SendNotification", {Title = _Title, Text = _Text, Duration = Time})
end

local SkidFling = function(TargetPlayer)
    local Character = Player.Character
    local Humanoid = Character and Character:FindFirstChildOfClass("Humanoid")
    local RootPart = Humanoid and Humanoid.RootPart

    local TCharacter = TargetPlayer.Character
    local THumanoid
    local TRootPart
    local THead
    local Accessory
    local Handle

    if TCharacter:FindFirstChildOfClass("Humanoid") then
        THumanoid = TCharacter:FindFirstChildOfClass("Humanoid")
    end
    if THumanoid and THumanoid.RootPart then
        TRootPart = THumanoid.RootPart
    end
    if TCharacter:FindFirstChild("Head") then
        THead = TCharacter.Head
    end
    if TCharacter:FindFirstChildOfClass("Accessory") then
        Accessory = TCharacter:FindFirstChildOfClass("Accessory")
    end
    if Accessoy and Accessory:FindFirstChild("Handle") then
        Handle = Accessory.Handle
    end

    if Character and Humanoid and RootPart then
        if RootPart.Velocity.Magnitude < 50 then
            getgenv().OldPos = RootPart.CFrame
        end
        if THumanoid and THumanoid.Sit and not AllBool then
            return Message("Error Occurred", "Targeting is sitting", 5) -- u can remove dis part if u want lol
        end
        if THead then
            workspace.CurrentCamera.CameraSubject = THead
        elseif not THead and Handle then
            workspace.CurrentCamera.CameraSubject = Handle
        elseif THumanoid and TRootPart then
            workspace.CurrentCamera.CameraSubject = THumanoid
        end
        if not TCharacter:FindFirstChildWhichIsA("BasePart") then
            return
        end
        
        local FPos = function(BasePart, Pos, Ang)
            RootPart.CFrame = CFrame.new(BasePart.Position) * Pos * Ang
            Character:SetPrimaryPartCFrame(CFrame.new(BasePart.Position) * Pos * Ang)
            RootPart.Velocity = Vector3.new(9e7, 9e7 * 10, 9e7)
            RootPart.RotVelocity = Vector3.new(9e8, 9e8, 9e8)
        end
        
        local SFBasePart = function(BasePart)
            local TimeToWait = 2
            local Time = tick()
            local Angle = 100

            repeat
                if RootPart and THumanoid then
                    if BasePart.Velocity.Magnitude < 50 then
                        Angle = Angle + 100

                        FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle),0 ,0))
                        task.wait()

                        FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                        task.wait()

                        FPos(BasePart, CFrame.new(2.25, 1.5, -2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                        task.wait()

                        FPos(BasePart, CFrame.new(-2.25, -1.5, 2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                        task.wait()

                        FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection,CFrame.Angles(math.rad(Angle), 0, 0))
                        task.wait()

                        FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection,CFrame.Angles(math.rad(Angle), 0, 0))
                        task.wait()
                    else
                        FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
                        task.wait()

                        FPos(BasePart, CFrame.new(0, -1.5, -THumanoid.WalkSpeed), CFrame.Angles(0, 0, 0))
                        task.wait()

                        FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
                        task.wait()
                        
                        FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
                        task.wait()

                        FPos(BasePart, CFrame.new(0, -1.5, -TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(0, 0, 0))
                        task.wait()

                        FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
                        task.wait()

                        FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(math.rad(90), 0, 0))
                        task.wait()

                        FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
                        task.wait()

                        FPos(BasePart, CFrame.new(0, -1.5 ,0), CFrame.Angles(math.rad(-90), 0, 0))
                        task.wait()

                        FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
                        task.wait()
                    end
                else
                    break
                end
            until BasePart.Velocity.Magnitude > 500 or BasePart.Parent ~= TargetPlayer.Character or TargetPlayer.Parent ~= Players or not TargetPlayer.Character == TCharacter or THumanoid.Sit or Humanoid.Health <= 0 or tick() > Time + TimeToWait
        end
        
        workspace.FallenPartsDestroyHeight = 0/0
        
        local BV = Instance.new("BodyVelocity")
        BV.Name = "EpixVel"
        BV.Parent = RootPart
        BV.Velocity = Vector3.new(9e8, 9e8, 9e8)
        BV.MaxForce = Vector3.new(1/0, 1/0, 1/0)
        
        Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, false)
        
        if TRootPart and THead then
            if (TRootPart.CFrame.p - THead.CFrame.p).Magnitude > 5 then
                SFBasePart(THead)
            else
                SFBasePart(TRootPart)
            end
        elseif TRootPart and not THead then
            SFBasePart(TRootPart)
        elseif not TRootPart and THead then
            SFBasePart(THead)
        elseif not TRootPart and not THead and Accessory and Handle then
            SFBasePart(Handle)
        else
            return Message("Error Occurred", "Target is missing everything", 5)
        end
        
        BV:Destroy()
        Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
        workspace.CurrentCamera.CameraSubject = Humanoid
        
        repeat
            RootPart.CFrame = getgenv().OldPos * CFrame.new(0, .5, 0)
            Character:SetPrimaryPartCFrame(getgenv().OldPos * CFrame.new(0, .5, 0))
            Humanoid:ChangeState("GettingUp")
            table.foreach(Character:GetChildren(), function(_, x)
                if x:IsA("BasePart") then
                    x.Velocity, x.RotVelocity = Vector3.new(), Vector3.new()
                end
            end)
            task.wait()
        until (RootPart.Position - getgenv().OldPos.p).Magnitude < 25
        workspace.FallenPartsDestroyHeight = getgenv().FPDH
    else
        return Message("Error Occurred", "Random error", 5)
    end
end

if not Welcome then end
getgenv().Welcome = fasle
if Targets[1] then for _,x in next, Targets do GetPlayer(x) end else return end

if AllBool then
    for _,x in next, Players:GetPlayers() do
        SkidFling(x)
    end
end

for _,x in next, Targets do
    if GetPlayer(x) and GetPlayer(x) ~= Player then
        if GetPlayer(x).UserId ~= 4636825706 then
            local TPlayer = GetPlayer(x)
            if TPlayer then
                SkidFling(TPlayer)
            end
        else
            Message("Error Occurred", "This user is whitelisted! (Owner)", 5)
        end
    elseif not GetPlayer(x) and not AllBool then
        
    end
end

    
  end
})


-- Atualiza a lista de jogadores quando os jogadores entram ou saem do jogo
playerService.PlayerAdded:Connect(function()
    updateDropdown(playerDropdownV13)
end)

playerService.PlayerRemoving:Connect(function()
    updateDropdown(playerDropdownV13)
end)

-- Atualiza a lista de jogadores ao iniciar o script
updateDropdown(playerDropdownV13)


AddButton(fling, {
  Name = "give the sofa",
  Callback = function()
    local args={[1]="PickingTools",[2]="Couch"};game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l"):InvokeServer(unpack(args))
  end
})


AddButton(fling, {
  Name = "Sofa Fling script",
  Callback = function()local AkaliNotif = loadstring(game:HttpGet("https://raw.githubusercontent.com/Kinlei/Dynissimo/main/Scripts/AkaliNotif.lua"))();
local Notify = AkaliNotif.Notify;
Notify({
Description = "It has been extracted UX";
Title = "X fling";
Duration = 10;
});
loadstring(game:HttpGet("https://raw.githubusercontent.com/0Ben1/fe./main/Fling%20GUI"))()
    
  end
})




local section = AddSection(Tool, {"RTX"})
SetSection(section, "»»»»»{ RTX ( Time & Quality ) }«««««")

AddButton(Tool, {
  Name = "Morning",
  Callback = function()
  game:GetService("Lighting").ClockTime = 14
  end
})


AddButton(Tool, {
  Name = "Night",
  Callback = function()
  game:GetService("Lighting").ClockTime = 19
  end
})

AddButton(Tool, {
  Name = "Realistic shader",
  Callback = function()
  -- local Vignette = false


local Lighting = game:GetService("Lighting")
local StarterGui = game:GetService("StarterGui")
local Bloom = Instance.new("BloomEffect")
local Blur = Instance.new("BlurEffect")
local ColorCor = Instance.new("ColorCorrectionEffect")
local SunRays = Instance.new("SunRaysEffect")
local Sky = Instance.new("Sky")
local Atm = Instance.new("Atmosphere")


for i, v in pairs(Lighting:GetChildren()) do
    if v then
        v:Destroy()
    end
end

Bloom.Parent = Lighting
Blur.Parent = Lighting
ColorCor.Parent = Lighting
SunRays.Parent = Lighting
Sky.Parent = Lighting
Atm.Parent = Lighting

if Vignette == true then
    local Gui = Instance.new("ScreenGui")
    Gui.Parent = StarterGui
    Gui.IgnoreGuiInset = true
    
    local ShadowFrame = Instance.new("ImageLabel")
    ShadowFrame.Parent = Gui
    ShadowFrame.AnchorPoint = Vector2.new(0.5,1)
    ShadowFrame.Position = UDim2.new(0.5,0,1,0)
    ShadowFrame.Size = UDim2.new(1,0,1.05,0)
    ShadowFrame.BackgroundTransparency = 1
    ShadowFrame.Image = "rbxassetid://4576475446"
    ShadowFrame.ImageTransparency = 0.3
    ShadowFrame.ZIndex = 10
end

Bloom.Intensity = 0.3
Bloom.Size = 10
Bloom.Threshold = 0.8

Blur.Size = 5
ColorCor.Brightness = 0.1
ColorCor.Contrast = 0.5
ColorCor.Saturation = -0.3
ColorCor.TintColor = Color3.fromRGB(255, 235, 203)

SunRays.Intensity = 0.075
SunRays.Spread = 0.727

Sky.SkyboxBk = "http://www.roblox.com/asset/?id=151165214"
Sky.SkyboxDn = "http://www.roblox.com/asset/?id=151165197"
Sky.SkyboxFt = "http://www.roblox.com/asset/?id=151165224"
Sky.SkyboxLf = "http://www.roblox.com/asset/?id=151165191"
Sky.SkyboxRt = "http://www.roblox.com/asset/?id=151165206"
Sky.SkyboxUp = "http://www.roblox.com/asset/?id=151165227"
Sky.SunAngularSize = 10


Lighting.Ambient = Color3.fromRGB(2,2,2)
Lighting.Brightness = 2.25
Lighting.ColorShift_Bottom = Color3.fromRGB(0,0,0)
Lighting.ColorShift_Top = Color3.fromRGB(0,0,0)
Lighting.EnvironmentDiffuseScale = 0.2
Lighting.EnvironmentSpecularScale = 0.2
Lighting.GlobalShadows = true
Lighting.OutdoorAmbient = Color3.fromRGB(0,0,0)
Lighting.ShadowSoftness = 0.2
Lighting.ClockTime = 17
Lighting.GeographicLatitude = 45
Lighting.ExposureCompensation = 0.5

Atm.Density = 0.364
Atm.Offset = 0.556
Atm.Color = Color3.fromRGB(199, 175, 166)
Atm.Decay = Color3.fromRGB(44, 39, 33)
Atm.Glare = 0.36
Atm.Haze = 1.72

script:Destroy()
  end
})


AddButton(Tool, {
  Name = "morning & night (fast) ",
  Callback = function()local Lighting = game:GetService("Lighting")

local Minutes = 7 * 60

while task.wait() do
	Lighting:SetMinutesAfterMidnight(Minutes)
	Minutes = Lighting:GetMinutesAfterMidnight()

	if Minutes > 19 * 60 then
		Minutes = Minutes + 3
	elseif Minutes > 7 * 60 then
		Minutes = Minutes + 1
	else
		Minutes = Minutes + 3
	end
end
    
  end
})


local section = AddSection(Tool, {"»»»»»{ Map }«««««"})
SetSection(section,"»»»»»{ Map }««««« ")


AddButton(Tool, {
  Name = "Region Server",
  Callback = function()
  game:GetService("TeleportService"):Teleport(game.placeId) 
  end
})

AddButton(Tool, {
  Name = "Server Hob",
  Callback = function()
  local Player = game.Players.LocalPlayer    
local Http = game:GetService("HttpService")
local TPS = game:GetService("TeleportService")
local Api = "https://games.roblox.com/v1/games/"

local _place,_id = game.PlaceId, game.JobId
-- Asc for lowest player count, Desc for highest player count
local _servers = Api.._place.."/servers/Public?sortOrder=Asc&limit=10"
function ListServers(cursor)
   local Raw = game:HttpGet(_servers .. ((cursor and "&cursor="..cursor) or ""))
   return Http:JSONDecode(Raw)
end

time_to_wait = 120 --seconds

-- choose a random server and join every 2 minutes
while wait(time_to_wait) do
   --freeze player before teleporting to prevent synapse crash?
   Player.Character.HumanoidRootPart.Anchored = true
   local Servers = ListServers()
   local Server = Servers.data[math.random(1,#Servers.data)]
   TPS:TeleportToPlaceInstance(_place, Server.id, Player)
end
  end
})


local section = AddSection(Tool, {"»»»»»{ Command item }«««««"})
SetSection(section,"»»»»»{ Command item }««««« ")


AddButton(Tool, {
  Name = "Bow",
  Callback = function()
  local args = {
    [1] = "PickingTools",
    [2] = "Bow"
}  game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Too1l"):InvokeServer(unpack(args))
  end
})



AddButton(Tool, {
  Name = "FlashLight",
  Callback = function()local args = {
    [1] = "PickingTools",
    [2] = "FlashLight"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Too1l"):InvokeServer(unpack(args))
    
  end
})



AddButton(Tool, {
  Name = "Book",
  Callback = function()local args = {
    [1] = "PickingTools",
    [2] = "Book"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Too1l"):InvokeServer(unpack(args))
    
  end
})



AddButton(Tool, {
  Name = "Bomb",
  Callback = function()local args = {
    [1] = "PickingTools",
    [2] = "Bomb"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Too1l"):InvokeServer(unpack(args))
    
  end
})

AddButton(Tool, {
  Name = "Phone",
  Callback = function()local args = {
    [1] = "PickingTools",
    [2] = "Iphone"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Too1l"):InvokeServer(unpack(args))
    
  end
})

AddButton(Tool, {
  Name = "Money",
  Callback = function()local args = {
    [1] = "PickingTools",
    [2] = "Money"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Too1l"):InvokeServer(unpack(args))
    
  end
})

AddButton(Tool, {
  Name = "Paperbag ",
  Callback = function()local args = {
    [1] = "PickingTools",
    [2] = "Paperbag"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Too1l"):InvokeServer(unpack(args))
    
  end
})


AddButton(Tool, {
  Name = "pistol",
  Callback = function()local args = {
    [1] = "PickingTools",
    [2] = "Glock"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Too1l"):InvokeServer(unpack(args))
    
  end
})


AddButton(Tool, {
  Name = "Sniper",
  Callback = function()local args = {
    [1] = "PickingTools",
    [2] = "Sniper"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Too1l"):InvokeServer(unpack(args))
    
  end
})



AddButton(Tool, {
  Name = "Cola",
  Callback = function()local args = {
    [1] = "PickingTools",
    [2] = "Coke"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Too1l"):InvokeServer(unpack(args))
    
  end
})







local section = AddSection(Tool, {"»»»»»{ Aid }«««««"})
SetSection(section, "»»»»»{ Aid }«««««")

AddButton(Tool, {
  Name = "Boost Fbs",
  Callback = function()-- Made by RIP#6666
_G.Settings = {
    Players = {
        ["Ignore Me"] = true, -- Ignore your Character
        ["Ignore Others"] = true -- Ignore other Characters
    },
    Meshes = {
        Destroy = false, -- Destroy Meshes
        LowDetail = true -- Low detail meshes (NOT SURE IT DOES ANYTHING)
    },
    Images = {
        Invisible = true, -- Invisible Images
        LowDetail = false, -- Low detail images (NOT SURE IT DOES ANYTHING)
        Destroy = false, -- Destroy Images
    },
    ["No Particles"] = true, -- Disables all ParticleEmitter, Trail, Smoke, Fire and Sparkles
    ["No Camera Effects"] = true, -- Disables all PostEffect's (Camera/Lighting Effects)
    ["No Explosions"] = true, -- Makes Explosion's invisible
    ["No Clothes"] = true, -- Removes Clothing from the game
    ["Low Water Graphics"] = true, -- Removes Water Quality
    ["No Shadows"] = true, -- Remove Shadows
    ["Low Rendering"] = true, -- Lower Rendering
    ["Low Quality Parts"] = true -- Lower quality parts
}
loadstring(game:HttpGet("https://raw.githubusercontent.com/CasperFlyModz/discord.gg-rips/main/FPSBooster.lua"))()
    
  end
})

local section = AddSection(Tool, {"»»»»»{ Other }«««««"})
SetSection(section, "»»»»»{ Other }«««««")

AddButton(Tool, {
  Name = "TP Tool",
  Callback = function()mouse = game.Players.LocalPlayer:GetMouse()
tool = Instance.new("Tool")
tool.RequiresHandle = false
tool.Name = "Teleport Tool"
tool.Activated:connect(function()
local pos = mouse.Hit+Vector3.new(0,2.5,0)
pos = CFrame.new(pos.X,pos.Y,pos.Z)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos
end)
tool.Parent = game.Players.LocalPlayer.Backpack
    
  end
})


local section = AddSection(script, {"»»»»»{ 1 }«««««"})
SetSection(section,"»»»»»{ 1 }««««« ")



AddButton(script, {
  Name = "Sander X",
  Callback = function()
  loadstring(game:HttpGet(('https://raw.githubusercontent.com/kigredns/sanderXNewVersion/main/sanderX')))()
  end
})



AddButton(script, {
  Name = "Admin",
  Callback = function()
  loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-rochips-universal-18294"))()
  end
})


local section = AddSection(script, {"»»»»»{ 2 }««««« "})
SetSection(section,"»»»»»{ 2 }««««« ")

AddButton(script, {
  Name = "Fly Car",
  Callback = function()
  MakeNotifi({
                    Title = "UX" ,
                    Text = "Extracted √" ,
                    Time = 6
                })

local library = loadstring(game.HttpGet(game, "https://raw.githubusercontent.com/Luarmor123/community-Y-HUB/refs/heads/main/Gui%20CRFY"))()

local w1 = library:Window("FLY CAR | V1.2 | UX") -- Text

w1:Button(
    "Enable",
    function()--Fly car Script:
	local FlyCarGui = Instance.new("ScreenGui")
	local W = Instance.new("TextButton")
	local S = Instance.new("TextButton")
	local A = Instance.new("TextButton")
	local D = Instance.new("TextButton")
	local Fly = Instance.new("TextButton")
	local unfly = Instance.new("TextButton")
	local StopFly = Instance.new("TextButton")
	local Speed = Instance.new("TextBox")
	local Remove = Instance.new("TextButton")
	local Open = Instance.new("TextButton")
    local Close = Instance.new("TextButton")
    
	--Properties:
	
FlyCarGui.Name = "FlyCarGui"
FlyCarGui.Parent = game.CoreGui

    Speed.Name = "Speed"
    Speed.Parent = FlyCarGui
    Speed.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    Speed.Position = UDim2.new(0,1,0.2,0)
    Speed.Size = UDim2.new(0, 25, 0, 25)
    Speed.Font = Enum.Font.SourceSans
    Speed.Text = "speed"
    Speed.TextColor3 = Color3.fromRGB(170, 0, 255)
    Speed.TextScaled = true
    Speed.TextSize = 14.000

	Remove.Name = "Remove"
	Remove.Parent = FlyCarGui
	Remove.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	Remove.Position = UDim2.new(0.955, 0, 0, 0)
	Remove.Size = UDim2.new(0, 35, 0, 35)
	Remove.Font = Enum.Font.SourceSans
	Remove.Text = "Delete Script"
	Remove.TextColor3 = Color3.fromRGB(170, 0, 255)
	Remove.TextScaled = true
	Remove.TextSize = 14.000
	Remove.Visible = true
	 Remove.MouseButton1Down:Connect(function()
	    game.CoreGui.FlyCarGui:destroy()
	    game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false
	    game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChildOfClass("BodyVelocity"):Destroy()
		game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChildOfClass("BodyGyro"):Destroy()
	  end)

	Open.Name = "Open"
	Open.Parent = FlyCarGui
	Open.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	Open.Position = UDim2.new(0, 0, 0.50000000000, 0)
	Open.Size = UDim2.new(0, 30, 0, 30)
	Open.Font = Enum.Font.SourceSans
	Open.Text = "Open"
	Open.TextColor3 = Color3.fromRGB(170, 0, 255)
	Open.TextScaled = true
	Open.TextSize = 13.000
	Open.Visible = false
     Open.MouseButton1Down:Connect(function()
     Open.Visible = false
     Close.Visible = true
     Speed.Visible = true
     unfly.Visible = true
     StopFly.Visible = true
     Fly.Visible = true
     W.Visible = true
     S.Visible = true
     Remove.Visible = true
end)

    Close.Name = "Close"
    Close.Parent = FlyCarGui
	Close.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	Close.Position = UDim2.new(0, 0, 0.50000000000, 0)
	Close.Size = UDim2.new(0, 30, 0, 30)
	Close.Font = Enum.Font.SourceSans
	Close.Text = "Close"
	Close.TextColor3 = Color3.fromRGB(170, 0, 255)
	Close.TextScaled = true
	Close.TextSize = 13.000
     Close.MouseButton1Down:Connect(function()
     Open.Visible = true
     Close.Visible = false
     Speed.Visible = false
     unfly.Visible = false
     StopFly.Visible = false
     Fly.Visible = false
     W.Visible = false
     S.Visible = false
     Remove.Visible = true
end)

	unfly.Name = "unfly"
	unfly.Parent = FlyCarGui
	unfly.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	unfly.Position = UDim2.new(0.695689976, 0, 0.181818187, 0)
	unfly.Size = UDim2.new(0, 50, 0, 40)
	unfly.Font = Enum.Font.SourceSans
	unfly.Text = "unfly"
	unfly.TextColor3 = Color3.fromRGB(170, 0, 255)
	unfly.TextScaled = true
	unfly.TextSize = 14.000
	unfly.TextWrapped = true
		unfly.MouseButton1Down:Connect(function()
		game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChildOfClass("BodyVelocity"):Destroy()
		game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChildOfClass("BodyGyro"):Destroy()
	end)

	
	Fly.Name = "Fly"
	Fly.Parent = FlyCarGui
	Fly.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	Fly.Position = UDim2.new(0.695689976, 0, 0.0213903747, 0)
	Fly.Size = UDim2.new(0, 50, 0, 40)
	Fly.Font = Enum.Font.SourceSans
	Fly.Text = "Fly"
	Fly.TextColor3 = Color3.fromRGB(170, 0, 127)
	Fly.TextScaled = true
	Fly.TextSize = 14.000
	Fly.TextWrapped = true
	Fly.MouseButton1Down:Connect(function()
		local BV = Instance.new("BodyVelocity",game.Players.LocalPlayer.Character.HumanoidRootPart)
		local BG = Instance.new("BodyGyro",game.Players.LocalPlayer.Character.HumanoidRootPart)
		BG.MaxTorque = Vector3.new(math.huge,math.huge,math.huge)
		BG.D = 5000
		BG.P = 50000
		BG.CFrame = game.Workspace.CurrentCamera.CFrame
		BV.MaxForce = Vector3.new(math.huge,math.huge,math.huge)
	end)

	W.Name = "W"
	W.Parent = FlyCarGui
	W.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	W.Position = UDim2.new(0.191668837, 0, 0.583604283, 0)
	W.Size = UDim2.new(0, 58, 0, 50)
	W.Font = Enum.Font.SourceSans
	W.Text = "↑"
	W.TextColor3 = Color3.fromRGB(226, 226, 226)
	W.TextScaled = true
	W.TextSize = 14.000
	W.TextWrapped = true
	W.MouseButton1Down:Connect(function()
		game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false
		game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChildOfClass("BodyVelocity"):Destroy()
		game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChildOfClass("BodyGyro"):Destroy()
		wait(.1)
		local BV = Instance.new("BodyVelocity",game.Players.LocalPlayer.Character.HumanoidRootPart)
		local BG = Instance.new("BodyGyro",game.Players.LocalPlayer.Character.HumanoidRootPart)
		BG.MaxTorque = Vector3.new(math.huge,math.huge,math.huge)
		BG.D = 5000
		BG.P = 50000
		BG.CFrame = game.Workspace.CurrentCamera.CFrame
		BV.MaxForce = Vector3.new(math.huge,math.huge,math.huge)
		BV.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * Speed.Text
	end)


	S.Name = "S"
	S.Parent = FlyCarGui
	S.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	S.Position = UDim2.new(0.191668837, 0, 0.735294104, 0)
	S.Size = UDim2.new(0, 58, 0, 50)
	S.Font = Enum.Font.SourceSans
	S.Text = "↓"
	S.TextColor3 = Color3.fromRGB(255, 255, 255)
	S.TextScaled = true
	S.TextSize = 14.000
	S.TextWrapped = true
	S.MouseButton1Down:Connect(function()
		game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false
		game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChildOfClass("BodyVelocity"):Destroy()
		game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChildOfClass("BodyGyro"):Destroy()
		wait(.1)
		local BV = Instance.new("BodyVelocity",game.Players.LocalPlayer.Character.HumanoidRootPart)
		local BG = Instance.new("BodyGyro",game.Players.LocalPlayer.Character.HumanoidRootPart)
		BG.MaxTorque = Vector3.new(math.huge,math.huge,math.huge)
		BG.D = 5000
		BG.P = 50000
		BG.CFrame = game.Workspace.CurrentCamera.CFrame
		BV.MaxForce = Vector3.new(math.huge,math.huge,math.huge)
		BV.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * -Speed.Text
	end)
        print("UX")
    end
) -- Text, Callback



w1:Button(
    "Delete UI",
    function()
        for i, v in pairs(game.CoreGui:GetChildren()) do
            if v:FindFirstChild("Top") then
                v:Destroy()
            end
        end
    end
) -- Text, Callback

w1:Label("Dev: Xirius") -- Text


-- UX



  end
})





local StandardMethod = {
    a = "a󠀀", b = "b󠀀", c = "c󠀀", d = "d󠀀", e = "e󠀀", f = "f󠀀", g = "g󠀀", h = "h󠀀",
    i = "i", j = "j󠀀", k = "k󠀀", l = "l󠀀", m = "m󠀀", n = "n󠀀", o = "o󠀀", p = "p󠀀",
    q = "q󠀀", r = "r󠀀", s = "s󠀀", t = "t󠀀", u = "u󠀀", v = "v󠀀", w = "w󠀀", x = "x󠀀",
    y = "y󠀀", z = "z󠀀", A = "A󠀀", B = "B󠀀", C = "C󠀀", D = "D󠀀", E = "E󠀀", F = "F󠀀",
    G = "G󠀀", H = "H󠀀", I = "I󠀀", J = "J󠀀", K = "K󠀀", L = "L󠀀", M = "M󠀀", N = "N󠀀",
    O = "O󠀀", P = "P󠀀", Q = "Q󠀀", R = "R󠀀", S = "S󠀀", T = "T󠀀", U = "U󠀀", V = "V󠀀",
    W = "W󠀀", X = "X󠀀", Y = "Y󠀀", Z = "Z󠀀"
}

local function bypassMessage(message)
    local bypassedMessage = ""
    local wordCount = 0
    
    for i = 1, #message do
        local char = message:sub(i, i)
        bypassedMessage = bypassedMessage .. (StandardMethod[char] or char)
        
        if char == " " then
            wordCount = wordCount + 1
            if wordCount % 6 == 0 then
                bypassedMessage = bypassedMessage .. " "
            end
        end
    end

    bypassedMessage = bypassedMessage:gsub(" ", function()
        return math.random(2) == 7 and "" or "" or ""
    end)

    local actualWordCount = 0
    bypassedMessage = bypassedMessage:gsub("[]", function(fakeSpace)
        actualWordCount = actualWordCount + 1
        if actualWordCount % 7 == 0 then
            return " "
        else
            return fakeSpace
        end
    end)

    bypassedMessage = "󠀀" .. bypassedMessage .. "󠀀"

    return bypassedMessage
end

local TextChatService = game:GetService("TextChatService")
local player = game.Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local tagBool = true

local sendMessage = function(message)
    local Chat = game:GetService("Chat")
    local success, filteredMessage = pcall(function()
        return Chat:FilterStringForBroadcast(message, player)
    end)

    if not success then
        warn("Filtering failed. Proceeding without tag detection.")
        filteredMessage = message
    end

    local function normalizeString(str)
        return str:gsub("%s+", ""):lower()
    end

    local isTagged = normalizeString(filteredMessage) ~= normalizeString(message)

    if TextChatService then
        local textChannels = TextChatService:FindFirstChild("TextChannels")
        if textChannels then
            local textChannel = textChannels:WaitForChild("RBXGeneral")
            if textChannel then
                if tagBool and isTagged then
                    textChannel:DisplaySystemMessage('<font color="#FF7F50">[Motherfuckers Bypasser] Detected tags!</font>')
                else
                    textChannel:SendAsync(message)
                end
                return
            else
                warn("No suitable text channel found in TextChatService. Falling back to legacy chat.")
                if ReplicatedStorage:FindFirstChild("DefaultChatSystemChatEvents") then
                    if tagBool and isTagged then
                        game.StarterGui:SetCore("ChatMakeSystemMessage",
                            {Text = "[Motherfuckers Bypasser] Detected tags!",
                            Color = Color3.fromRGB(255, 127, 80),
                            font = Enum.Font.SourceSansBold
                        })
                    else
                        ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(message, "All")
                    end
                else
                    warn("Legacy chat events are not available.")
                end
            end
        else
            warn("TextChannels not found in TextChatService. Falling back to legacy chat.")
            if ReplicatedStorage:FindFirstChild("DefaultChatSystemChatEvents") then
                if tagBool and isTagged then
                    game.StarterGui:SetCore("ChatMakeSystemMessage",
                        {Text = "[Motherfuckers Bypasser] Detected tags!",
                        Color = Color3.fromRGB(255, 127, 80),
                        font = Enum.Font.SourceSansBold
                    })
                else
                    ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(message, "All")
                end
            else
                warn("Legacy chat events are not available.")
            end
        end
    elseif ReplicatedStorage:FindFirstChild("DefaultChatSystemChatEvents") then
        if tagBool and isTagged then
            game.StarterGui:SetCore("ChatMakeSystemMessage",
                {Text = "[Motherfuckers Bypasser] Detected tags!",
                Color = Color3.fromRGB(255, 127, 80),
                font = Enum.Font.SourceSansBold
            })
        else
            ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(message, "All")
        end
    else
         warn("Legacy chat events are not available.")
    end
end



local section = AddSection(Chat, {"»»»»»{ Chat bypass  }««««« "})
local bypassText = ""
AddTextBox(Chat, {
  Name = "Chat Bypass",
  Default = "Write here",
  PlaceholderText = "",
  ClearText = true,
  Callback = function(Text)
      bypassText = Text

  end
})

AddButton(Chat, {
  Name = "Send",
  Callback = function()
         if bypassText ~= "" then
            local bypassedText = bypassMessage(bypassText)

            sendMessage(bypassedText)
        else
            MakeNotifi({
                    Title = "incorrect" ,
                    Text = "The field is empty !" ,
                    Time = 6
                })
                end
  end
})

--------------------------------------
--SHOW FPS
repeat wait() until game:IsLoaded() wait(2)
local ScreenGui = Instance.new("ScreenGui")
local Fps = Instance.new("TextLabel")
local Ping = Instance.new("TextLabel")

--Properties:

ScreenGui.Parent = game.CoreGui
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Fps.Name = "Fps"
Fps.Parent = ScreenGui
Fps.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Fps.BackgroundTransparency = 1.000
Fps.Position = UDim2.new(0.056138654, 0, 0, 0)
Fps.Size = UDim2.new(0, 80, 0, 25)
Fps.Font = Enum.Font.FredokaOne
Fps.TextColor3 = Color3.fromRGB(255, 255, 255)
Fps.TextScaled = true
Fps.TextSize = 10.000
Fps.TextWrapped = true



-- Scripts:

local script = Instance.new('LocalScript', Fps)
local RunService = game:GetService("RunService")
RunService.RenderStepped:Connect(function(frame) -- This will fire every time a frame is rendered
script.Parent.Text = ("FPS: "..math.round(1/frame)) 
end)
end
tab2.newButton("Survive the Killer", "Survive the Killer", function()
Jkowi()
end) 
function Jkowi() 

mewing10.NormalNotification({
    Title = "UniverseX",
    Description = "Loaded - Survive the Killer",
    ImagesID = "rbxassetid://82670617579434", 
    SoundID = "", -- make sure the sound id
    Duration = 20
})

local Lib = loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wizard"))()
local Win = Lib:NewWindow("Survive The Killer")
local Sec = Win:NewSection("General")
local Ki = Win:NewSection("Killer")
local Su = Win:NewSection("Survivor")
local Sut = Win:NewSection("Survivor Teleports")
local Sec2 = Win:NewSection("Credits: Aries")
local Players = game:GetService("Players")
local Humanoid = game.Players.LocalPlayer.Character
local Player = game.Players.LocalPlayer
local Humanoid = Player.Character:WaitForChild("Humanoid")
local ii = false

local function clickButton(btn)
    local pos = btn.AbsolutePosition
    local size = btn.AbsoluteSize
    local centerX = pos.X + size.X / 1
    local centerY = pos.Y + size.Y / 1
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(centerX, centerY, 0, true, game, 1)
    wait() 
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(centerX, centerY, 0, false, game, 1)
end


local function copyToClipboard(text)
    if syn then
        syn.write_clipboard(text)
    else
        setclipboard(text)
    end
end

local b = false

local function createNameTag()
    local nameTags = {}

    for _, player in ipairs(game.Players:GetPlayers()) do
        if player.Team == game.Teams.Lobby then
            if player.Character then
                local existingNameTag = player.Character:FindFirstChild("NameTag")
                if existingNameTag then
                    existingNameTag:Destroy()
                end
            end
        else
            if player.Character then
                local existingNameTag = player.Character:FindFirstChild("NameTag")
                if not existingNameTag then
                    local playerPart = player.Character:WaitForChild("HumanoidRootPart")
                    local nameColor = Color3.new()

                    local billboardGui = Instance.new("BillboardGui")
                    billboardGui.Adornee = playerPart
                    billboardGui.Size = UDim2.new(0, 200, 0, 40)
                    billboardGui.StudsOffset = Vector3.new(0, 3, 0)
                    billboardGui.AlwaysOnTop = true
                    billboardGui.Name = "NameTag"

                    local nameLabel = Instance.new("TextLabel")
                    nameLabel.Size = UDim2.new(1, 0, 1, 0)
                    nameLabel.BackgroundTransparency = 1
                    nameLabel.TextColor3 = nameColor

                    local killer = nil
                    local playerHumanoid = player.Character:FindFirstChildOfClass("Humanoid")
                    for _, otherPlayer in ipairs(game.Players:GetPlayers()) do
                        if otherPlayer ~= player and otherPlayer.Team ~= game.Teams.Lobby then
                            if otherPlayer.Team == game.Teams.Killer then
                                killer = otherPlayer.Character:FindFirstChild("HumanoidRootPart")
                                break
                            end
                        end
                    end

                    if player.Team == game.Teams.Killer then
                        nameLabel.Text = "K"
                        nameLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
                    else
                        nameLabel.Text = "S"
                        nameLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
                    end

                    nameLabel.FontSize = Enum.FontSize.Size10
                    nameLabel.TextScaled = true
                    nameLabel.Parent = billboardGui

                    if killer then
                        nameLabel.Text = "K"
                        nameLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
                    end

                    billboardGui.Parent = playerPart.Parent

                    table.insert(nameTags, billboardGui)
                elseif player.Team == game.Teams.Killer then
                    if existingNameTag.TextLabel.Text ~= "K" then
                        existingNameTag.TextLabel.Text = "K"
                        existingNameTag.TextLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
                    end
                else
                    if existingNameTag.TextLabel.Text ~= "S" then
                        existingNameTag.TextLabel.Text = "S"
                        existingNameTag.TextLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
                    end
                end
            end
        end
    end

    return nameTags
end

function esp()
    b = not b
    while b do
        createNameTag()
        task.wait(1)
    end
end

local c = false
function killAura()
    c = not c
    while c do
        if c and Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") and Player.Character:FindFirstChild("Knife") then
            local rootPos = Player.Character.HumanoidRootPart.Position
task.wait(0.5)
            for _, player in ipairs(game.Players:GetPlayers()) do
                if player ~= Player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                    local targetPos = player.Character.HumanoidRootPart.Position
                    local distance = (rootPos - targetPos).magnitude
                    if distance <= 22 then
                        player.Character.HumanoidRootPart.CFrame = CFrame.new(rootPos)
                    end
                end
            end
        end
        task.wait(0.5)
    end
end

local u = false
function kill()
    u = not u
    while u do
task.wait(0.5)
        if u and Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") and Player.Character:FindFirstChild("Knife") then
            local rootPos = Player.Character.HumanoidRootPart.Position
task.wait(0.3)
            for _, player in ipairs(game.Players:GetPlayers()) do
                if player ~= Player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                    local targetPos = player.Character.HumanoidRootPart.Position
                    local distance = (rootPos - targetPos).magnitude
                    if distance <= 900 then
                        player.Character.HumanoidRootPart.CFrame = CFrame.new(rootPos)
                    end
                end
            end
        end
end
        task.wait()
end

local j = false 
function curar()
    j = not j
    while j do
        task.wait()
        if j and Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") and not Player.Character:FindFirstChild("Knife") and Player.Character.HumanoidRootPart:FindFirstChild("BleedOutHealth") and Player.Character.HumanoidRootPart:FindFirstChild("BleedOutHealth").Enabled == false then
            local rootPos = Player.Character.HumanoidRootPart.Position
            local targetPlayer = nil
            local minDistance = 900
            for _, players in ipairs(game.Players:GetPlayers()) do
                if players ~= Player and players.Character and players.Character:FindFirstChild("HumanoidRootPart") and not players.Character:FindFirstChild("Knife") and players.Character.HumanoidRootPart:FindFirstChild("BleedOutHealth") and players.Character.HumanoidRootPart:FindFirstChild("BleedOutHealth").Enabled then
                    local targetPos = players.Character.HumanoidRootPart.Position
                    local distance = (rootPos - targetPos).magnitude
                    if distance > 7 and distance <= 19 and distance < minDistance then
                        targetPlayer = players
                        minDistance = distance
else
                    end
else
                end
            end
            if targetPlayer then
 targetPlayer.Character:SetPrimaryPartCFrame(CFrame.new(Player.Character.HumanoidRootPart.Position))  
clickButton(Player.PlayerGui.TouchGui.TouchControlFrame.CarryButton)
            end
        end
        task.wait()
    end
end

local x = false 
function Trap()
    x = not x
    while x do
task.wait(1)
for _, item in pairs(workspace:GetChildren()) do
     if  item:IsA("Model") and item.Name == "Trap" then
 item:Destroy()
end
end
        end
end

local d = false 
local isRunning = false
local exitFound = false

function control()
task.wait(5)
if d then
isRunning = true 
else
isRunning = false 
end
end

function Escape()
    while isRunning and Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") and not Player.Character:FindFirstChild("Knife") do
        task.wait(0.3)
        local success, result = pcall(function()
            for _, model in pairs(workspace:GetChildren()) do
                if model:IsA("Model") and model:FindFirstChild("Exits") then
                    exitFound = true
                    isRunning = false
                    while exitFound and d and model.Exits do
                        task.wait(1)
                        local success, result = pcall(function()
                            for _, part in ipairs(model.Exits:GetChildren()) do
                                task.wait(1)
                                if part:IsA("Model") then
                                    local success, result = pcall(function()
                                        for _, partt in ipairs(part.Trigger:GetChildren()) do
                                            if partt.Name == "ExitIcon" then
                                                local triggerPos = partt.Parent.Position
                                                if Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") then
                                                    local distance = (Player.Character.HumanoidRootPart.Position - triggerPos).magnitude
                                                    if distance < 7000 and game.Players.LocalPlayer.Team == game.Teams.Survivor then
 Player.Character.Humanoid.Sit = false 
task.wait(0.3) Player.Character:SetPrimaryPartCFrame(CFrame.new(partt.Parent.Parent.Doorway.Door1.Position))                          
task.wait(0.3)
Player.Character:SetPrimaryPartCFrame(CFrame.new(partt.Parent.Parent.Doorway.Door2.Position))
task.wait(0.3)   
Player.Character:SetPrimaryPartCFrame(CFrame.new(triggerPos))                                     
                                                        exitFound = false
                                                        control()
                                                        break
                                                    else
                                                        exitFound = false
                                                        isRunning = true
                                                    end
                                                else
                                                    exitFound = false
                                                    isRunning = true
                                                end
                                            else
                                                exitFound = false
                                                isRunning = true
                                            end
                                        end
                                    end)
                                    if not success then
                                        exitFound = false
                                                isRunning = true
                                    end
                                else
                                    exitFound = false
                                    isRunning = true
                                end
                            end
                        end)
                        if not success then
                           exitFound = false
                                                isRunning = true 
                        end
                    end
                else
                    exitFound = false
                    isRunning = true
                end
            end
        end)
        if not success then
           exitFound = false
                                                isRunning = true 
        end
        wait()
    end
end

function Escap()
d = not d
isRunning = not isRunning
Escape()
end

local dd = false 
local isRunningg = false
local exitFoundd = false


function items()
    while isRunningg and Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") and not Player.Character:FindFirstChild("Knife") do
        task.wait(1)
        local success, result = pcall(function()
            for _, model in pairs(workspace:GetChildren()) do
                if model:IsA("Model") and model:FindFirstChild("LootSpawns") then
                    exitFoundd = true
                    isRunningg = false
  
local amountText = game.Players.LocalPlayer.PlayerGui.GameHUD.PlayerHUD.XP.RoundInfo.Backpack.Amount.Text
        local amountParts = string.split(amountText, "/")
        local x = tonumber(amountParts[1])
        local y = tonumber(amountParts[2])
        ii = (x == y)
                     
while exitFoundd and dd and not ii and model:FindFirstChild("LootSpawns") do
                        for _, part in ipairs(model.LootSpawns:GetChildren()) do
                            task.wait()
                            local success, result = pcall(function()
                                if part:IsA("BasePart") then
                                    for _, partt in pairs(part:GetChildren()) do
                                        local success, result = pcall(function()
                                            if partt.Name == "Model" then 
                                                for _, parttt in pairs(partt:GetChildren()) do
                                                    local success, result = pcall(function()
                                                        if parttt:IsA("MeshPart") and parttt.Transparency == 0 then
                                                            local triggerPos = part.Position
                                                            local distance = (Player.Character.HumanoidRootPart.Position - triggerPos).magnitude
                                                            if distance < 100 and not ii then
 
local amountText = game.Players.LocalPlayer.PlayerGui.GameHUD.PlayerHUD.XP.RoundInfo.Backpack.Amount.Text
        local amountParts = string.split(amountText, "/")
        local x = tonumber(amountParts[1])
        local y = tonumber(amountParts[2])
        ii = (x == y)
                                                                   fireproximityprompt(part.LootProxBlock.LootProximityPrompt)
                                                                exitFoundd = false
                                                                
                                                            else
                                                                exitFoundd = false
                                                                isRunningg = true
                                                            end
                                                        else
                                                            exitFoundd = false
                                                            isRunningg = true
                                                        end
                                                    end)
                                                    if not success then
                                                        exitFoundd = false
                    isRunningg = true
                                                    end
                                                end
                                            else
                                                exitFoundd = false
                                                isRunningg = true
                                            end
                                        end)
                                        if not success then
                                            exitFoundd = false
                    isRunningg = true
                                        end
                                    end
                                else
                                    exitFoundd = false
                                    isRunningg = true
                                end
                            end)
                            if not success then
                                exitFoundd = false
                    isRunningg = true
                            end
                        end
                    end
                else
                    exitFoundd = false
                    isRunningg = true
                end
            end
        end)
        if not success then
            exitFoundd = false
                    isRunningg = true
        end
    end
end

function ite()
    while isRunningg and Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") and not Player.Character:FindFirstChild("Knife") do
        task.wait(1)
        local success, result = pcall(function()
            for _, model in pairs(workspace:GetChildren()) do
                if model:IsA("Model") and model:FindFirstChild("LootSpawns") then
                    exitFoundd = true
                    isRunningg = false
local amountText = game.Players.LocalPlayer.PlayerGui.GameHUD.PlayerHUD.XP.RoundInfo.Backpack.Amount.Text
        local amountParts = string.split(amountText, "/")
        local x = tonumber(amountParts[1])
        local y = tonumber(amountParts[2])
        ii = (x == y)
    
while exitFoundd and dd and not ii and model:FindFirstChild("LootSpawns") do
                        for _, part in ipairs(model.LootSpawns:GetChildren()) do
                            task.wait()
                            local success, result = pcall(function()
                                if part:IsA("BasePart") then
                                    for _, partt in pairs(part:GetChildren()) do
                                        local success, result = pcall(function()
                                            if partt.Name == "Model" then 
                                                for _, parttt in pairs(partt:GetChildren()) do
                                                    local success, result = pcall(function()
                                                        if parttt:IsA("Part") then
                                                            local triggerPos = part.Position
                                                            local distance = (Player.Character.HumanoidRootPart.Position - triggerPos).magnitude
                                                            if distance < 100 and not ii then
    
local amountText = game.Players.LocalPlayer.PlayerGui.GameHUD.PlayerHUD.XP.RoundInfo.Backpack.Amount.Text
        local amountParts = string.split(amountText, "/")
        local x = tonumber(amountParts[1])
        local y = tonumber(amountParts[2])
        ii = (x == y)
                                                                fireproximityprompt(part.LootProxBlock.LootProximityPrompt)
                                                                exitFoundd = false
                                                                
                                                            else
                                                                exitFoundd = false
                                                                isRunningg = true
                                                            end
                                                        else
                                                            exitFoundd = false
                                                            isRunningg = true
                                                        end
                                                    end)
                                                    if not success then
                                                        exitFoundd = false
                    isRunningg = true
                                                    end
                                                end
                                            else
                                                exitFoundd = false
                                                isRunningg = true
                                            end
                                        end)
                                        if not success then
                                            exitFoundd = false
                    isRunningg = true
                                        end
                                    end
                                else
                                    exitFoundd = false
                                    isRunningg = true
                                end
                            end)
                            if not success then
                                exitFoundd = false
                    isRunningg = true
                            end
                        end
                    end
                else
                    exitFoundd = false
                    isRunningg = true
                end
            end
        end)
        if not success then
            exitFoundd = false
                    isRunningg = true
        end
    end
end


function item()
dd = not dd
isRunningg = not isRunningg
items()
ite()
end

local isRunningg = false
local dd = false

function tpitems()
    while isRunningg and Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") and not Player.Character:FindFirstChild("Knife") do
        task.wait(1)
        local success, result = pcall(function()
            for _, model in pairs(workspace:GetChildren()) do
                if model:IsA("Model") and model:FindFirstChild("LootSpawns") then
                    exitFoundd = true
                    isRunningg = false
 local amountText = game.Players.LocalPlayer.PlayerGui.GameHUD.PlayerHUD.XP.RoundInfo.Backpack.Amount.Text
        local amountParts = string.split(amountText, "/")
        local x = tonumber(amountParts[1])
        local y = tonumber(amountParts[2])
        ii = (x == y)
                      
while exitFoundd and dd and not ii and model:FindFirstChild("LootSpawns") do
                        for _, part in

 ipairs(model.LootSpawns:GetChildren()) do
                            task.wait(0.1)
                            local success, result = pcall(function()
                                if part:IsA("BasePart") then
                                    for _, partt in pairs(part:GetChildren()) do
                                        local success, result = pcall(function()
                                            if partt.Name == "Model" then 
                                                for _, parttt in pairs(partt:GetChildren()) do
                                                    local success, result = pcall(function()
                                                        if parttt:IsA("MeshPart") and parttt.Transparency == 0 then
                                                            local triggerPos = part.Position
                                                            local distance = (Player.Character.HumanoidRootPart.Position - triggerPos).magnitude
                 
                                                            if distance < 300 and not ii then

local amountText = game.Players.LocalPlayer.PlayerGui.GameHUD.PlayerHUD.XP.RoundInfo.Backpack.Amount.Text
        local amountParts = string.split(amountText, "/")
        local x = tonumber(amountParts[1])
        local y = tonumber(amountParts[2])
        ii = (x == y)
    
  local tp = part.Position + Vector3.new(0, 3, 0)
    Player.Character:SetPrimaryPartCFrame(CFrame.new(tp))
task.wait(0.2)
fireproximityprompt(part.LootProxBlock.LootProximityPrompt)
                                                                exitFoundd = false
                                                                
                                                            else
                                                                exitFoundd = false
                                                                isRunningg = true
                                                            end
                                                        else
                                                            exitFoundd = false
                                                            isRunningg = true
                                                        end
                                                    end)
                                                    if not success then
                                                        exitFoundd = false
                    isRunningg = true
                                                    end
                                                end
                                            else
                                                exitFoundd = false
                                                isRunningg = true
                                            end
                                        end)
                                        if not success then
                                            exitFoundd = false
                    isRunningg = true
                                        end
                                    end
                                else
                                    exitFoundd = false
                                    isRunningg = true
                                end
                            end)
                            if not success then
                                exitFoundd = false
                    isRunningg = true
                            end
                        end
                    end
                else
                    exitFoundd = false
                    isRunningg = true
                end
            end
        end)
        if not success then
            exitFoundd = false
                    isRunningg = true
        end
    end
end

function tp()
dd = not dd
isRunningg = not isRunningg
tpitems()
end


local isRunningg = false
local dd = false

function titems()
    while isRunningg and Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") and not Player.Character:FindFirstChild("Knife") do
        task.wait(1)
        local success, result = pcall(function()
            for _, model in pairs(workspace:GetChildren()) do
                if model:IsA("Model") and model:FindFirstChild("LootSpawns") then
                    exitFoundd = true
                    isRunningg = false
 local amountText = game.Players.LocalPlayer.PlayerGui.GameHUD.PlayerHUD.XP.RoundInfo.Backpack.Amount.Text
        local amountParts = string.split(amountText, "/")
        local x = tonumber(amountParts[1])
        local y = tonumber(amountParts[2])
        ii = (x == y)
                      
while exitFoundd and dd and not ii and model:FindFirstChild("LootSpawns") do
                        for _, part in

 ipairs(model.LootSpawns:GetChildren()) do
                            task.wait(0.1)
                            local success, result = pcall(function()
                                if part:IsA("BasePart") then
                                    for _, partt in pairs(part:GetChildren()) do
                                        local success, result = pcall(function()
                                            if partt.Name == "Model" then 
                                                for _, parttt in pairs(partt:GetChildren()) do
                                                    local success, result = pcall(function()
                                                        if parttt:IsA("MeshPart") and parttt.Transparency == 0 then
                                                            local triggerPos = part.Position
                                                            local distance = (Player.Character.HumanoidRootPart.Position - triggerPos).magnitude
                 
                                                            if distance < 4000 and not ii then

local amountText = game.Players.LocalPlayer.PlayerGui.GameHUD.PlayerHUD.XP.RoundInfo.Backpack.Amount.Text
        local amountParts = string.split(amountText, "/")
        local x = tonumber(amountParts[1])
        local y = tonumber(amountParts[2])
        ii = (x == y)
    
  local tp = part.Position + Vector3.new(0, 3, 0)
    Player.Character:SetPrimaryPartCFrame(CFrame.new(tp))
task.wait(0.2)
fireproximityprompt(part.LootProxBlock.LootProximityPrompt)
                                                                exitFoundd = false
                                                                
                                                            else
                                                                exitFoundd = false
                                                                isRunningg = true
                                                            end
                                                        else
                                                            exitFoundd = false
                                                            isRunningg = true
                                                        end
                                                    end)
                                                    if not success then
                                                        exitFoundd = false
                    isRunningg = true
                                                    end
                                                end
                                            else
                                                exitFoundd = false
                                                isRunningg = true
                                            end
                                        end)
                                        if not success then
                                            exitFoundd = false
                    isRunningg = true
                                        end
                                    end
                                else
                                    exitFoundd = false
                                    isRunningg = true
                                end
                            end)
                            if not success then
                                exitFoundd = false
                    isRunningg = true
                            end
                        end
                    end
                else
                    exitFoundd = false
                    isRunningg = true
                end
            end
        end)
        if not success then
            exitFoundd = false
                    isRunningg = true
        end
    end
end

function tpa()
dd = not dd
isRunningg = not isRunningg
titems()
end


local aa = false
local aaa = false

function Trapp()
    while aa do
        task.wait(1)
        for _, model in pairs(workspace:GetChildren()) do
            if model:IsA("Model") then
                for _, modell in pairs(model:GetChildren()) do
    task.wait()
                    if modell.Name == "RatTraps" and aaa then
                        modell:Destroy()
                        aaa = false
                        task.wait(1)
                    else
                        if aa then
                           task.wait()
                            aaa = true
                        else
                  task.wait()
                            aaa = false
                        end
                    end
                end
            else
            end
        end
    end
end

function Trappp()
    aa = not aa
    aaa = not aaa
    Trapp()
end

local gggg = false

local function curarse()
    if gggg and Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") and game.Teams:FindFirstChild("Survivor") and Player.Team == game.Teams.Survivor and Player.Character:FindFirstChild("HumanoidRootPart"):FindFirstChild("BleedOutHealth") and Player.Character.HumanoidRootPart:FindFirstChild("BleedOutHealth").Enabled then
        local rootPos = Player.Character.HumanoidRootPart.Position
        local targetPlayer = nil
        local players = game.Teams.Killer:GetPlayers()
        for _, player in ipairs(players) do
            if player.Character and player.Character:FindFirstChild("HumanoidRootPart") and player.Character:FindFirstChild("HumanoidRootPart"):FindFirstChild("BleedOutHealth") and player.Character.HumanoidRootPart:FindFirstChild("BleedOutHealth").Enabled == false and player.Team == game.Teams.Survivor then
                local targetPos = player.Character.HumanoidRootPart.Position
                local distance = (rootPos - targetPos).magnitude
                if distance > 5 and distance <= 1500 then
                    targetPlayer = player
                end
            else
                targetPlayer = nil
            end
        end
        if targetPlayer then
            Player.Character:SetPrimaryPartCFrame(CFrame.new(targetPlayer.Character.HumanoidRootPart.Position))
else
        end
    end
end

local ff = false

local player = game.Players.LocalPlayer

function Curatp()
    ff = not ff
    while ff do
        task.wait()
        if ff and Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") and Player.Team == game.Teams.Survivor and Player.Character.HumanoidRootPart:FindFirstChild("BleedOutHealth") and Player.Character.HumanoidRootPart:FindFirstChild("BleedOutHealth").Enabled == false then
            local rootPos = Player.Character.HumanoidRootPart.Position
            local targetPlayer = nil
            local minDistance = 900
            local nearbyPlayer = nil
            for _, players in ipairs(game.Players:GetPlayers()) do
                if players ~= Player and players.Character and players.Character:FindFirstChild("HumanoidRootPart") and not players.Character:FindFirstChild("Knife") and players.Character.HumanoidRootPart:FindFirstChild("BleedOutHealth") and players.Character.HumanoidRootPart:FindFirstChild("BleedOutHealth").Enabled then
                    local targetPos = players.Character.HumanoidRootPart.Position
                    local distance = (rootPos - targetPos).magnitude
                    if distance <= 13 then
                        nearbyPlayer = players
                    elseif distance > 13 and distance <= 10000 and distance < minDistance then
                        local killerNearby = false
                        for _, otherPlayer in ipairs(game.Players:GetPlayers()) do
                            if otherPlayer.Team == game.Teams.Killer then
                                local killerPos = otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart") and otherPlayer.Character.HumanoidRootPart.Position
                                if killerPos then
                                    local killerDistance = (killerPos - targetPos).magnitude
                                    if killerDistance <= 16 then
                                        killerNearby = true
                                        break
                                    end
                                end
                            end
                        end
                        if not killerNearby then
                            targetPlayer = players
                            minDistance = distance
                        end
                    end
                end
            end
            if nearbyPlayer then
                targetPlayer = nearbyPlayer
            end
            if targetPlayer then
                local ss = Player.Character.HumanoidRootPart.CFrame
                Player.Character:SetPrimaryPartCFrame(CFrame.new(targetPlayer.Character.HumanoidRootPart.Position))

                task.wait(0.1)
clickButton(Player.PlayerGui.TouchGui.TouchControlFrame.CarryButton)
task.wait(0.1)
                Player.Character:SetPrimaryPartCFrame(ss)
task.wait(0.3)
clickButton(game.Players.LocalPlayer.PlayerGui.GameHUD.DropPlayer.Button)
            end
        end
    end
end


local w = false
function fb()
w = not w
while w do
    local Lighting = game:GetService("Lighting")
    Lighting.Brightness = 2
    Lighting.ClockTime = 14
    Lighting.FogEnd = 100000
    Lighting.GlobalShadows = false
    Lighting.OutdoorAmbient = Color3.fromRGB(128, 128, 128)
    Lighting.ScreenTint.Enabled = false
    Lighting.ColorCorrection.Enabled = false
task.wait(0.3)
end
end

local b = game.workspace._Lobby.Benches.Bench.Seat

local function seat()
    if Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") and  Player.Character:FindFirstChild("LeftFoot") then
                    local h = b.Position
                     wait()
                    b.Size = Vector3.new(4, 1, 4)
                    b.Position = Player.Character.LeftFoot.Position
                    wait(0.4)
                    b.Position = h
                    else
    end
end


local ff

local e = false

local function hideSeat()
    if e and Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") and Player.Team == game.Teams.Survivor then
        task.wait()
        local player = game.Players.LocalPlayer
        local character = player.Character
        local humanoid = character and character:FindFirstChildOfClass("Humanoid")
        local killer = game.Teams.Killer and game.Teams.Killer:GetPlayers()[1]

        if character and humanoid and killer then
            local playerPos = character:FindFirstChild("HumanoidRootPart").Position
            local killerPos = killer.Character and killer.Character:FindFirstChild("HumanoidRootPart") and killer.Character.HumanoidRootPart.Position

            if playerPos and killerPos then
                local playerPosNoY = Vector3.new(playerPos.X, 0, playerPos.Z)
                local killerPosNoY = Vector3.new(killerPos.X, 0, killerPos.Z)
                local distance = (killerPosNoY - playerPosNoY).magnitude

                local heightDifference = math.abs(killerPos.Y - playerPos.Y)

                if distance < 29 and heightDifference <= 7 and not humanoid.Sit then
                    local h = b.Position
                    wait()
                    b.Position = Player.Character.LeftFoot.Position
                    wait(0.4)
                    b.Position = h
                elseif distance > 30 and distance < 45 and humanoid.Sit then
                    humanoid.Sit = false
                end
            end
        end
    end
end


function copyd()
copyToClipboard("https://discord.gg/43mDSjxb9U")
end

function copyy()
copyToClipboard("https://youtube.com/@limitedmobile-xb7mi?si=CKjd6Fdm5F6idNl3")
end

function esconder()
e = not e
end

function fix()
game.Players.LocalPlayer.PlayerGui.ScreenFX.Enabled = false
end



Sec:CreateToggle("Esp Players", esp)
Sec:CreateToggle("Full Bright ", fb)
Sec:CreateButton("Esconderse", seat)
Sec:CreateButton("Fixed Screen Loading", fix)
Ki:CreateToggle("Kill Aura", killAura)
Ki:CreateToggle("Instant Kill", kill)
Su:CreateToggle("Aura Help Plrs(B 1)", curar)
Su:CreateToggle("No Trap Killer", Trap)
Sut:CreateToggle("Auto Escape", Escap)
Su:CreateToggle("Auto Esconderse(B 9)", esconder)
Su:CreateToggle("Aura Collect Items", item)
Sut:CreateToggle("Collect Items", tp)
Sut:CreateToggle("Collect Items(T.Lobby)", tpa)
Su:CreateToggle("No Trap Map", Trappp)
-- Sut:CreateToggle("Auto Curarse)", curars)
Sut:CreateToggle("Tp Player Help", Curatp)
Sec2:CreateButton("Copy Link YouTube", copyy)
Sec2:CreateButton("Copy Link Discord", copyd)

local RunService = game:GetService("RunService")
RunService.RenderStepped:Connect(hideSeat)


local tpwalking = false
local speed = 15

function tpwalk()
    local speaker = game.Players.LocalPlayer
    local chr = speaker.Character
    local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
    
    if chr and hum and hum.Parent then
        local hb = RunService.Heartbeat
        while chr and hum and hum.Parent do
            local delta = hb:Wait()
            hum.WalkSpeed = speed
        end
    end
end

Sec:CreateTextbox("Speed", function(value)
        speed = value
        tpwalking = speed > 15
       
end) 
tpwalk()
end
tab2.newButton("Evade Mobile", "Evade Mobile", function()
Loxoz()
end)
function Loxoz()
-- [[ HamstaGang on V3RM | Last updated 08/29/2022 ]] --

-- Wait for game to load
repeat task.wait() until game:IsLoaded();

-- Temp fix for ROBLOX turning off highlights
if setfflag then setfflag("OutlineSelection", "true") end

-- Services
local ReplicatedStorage = game:GetService("ReplicatedStorage");
local CoreGui = game:GetService("CoreGui");
local Players = game:GetService("Players");
local Workspace = game:GetService("Workspace");
local Lighting = game:GetService("Lighting");
local VirtualInputManager = game:GetService("VirtualInputManager");

-- Remote Stuff
local Events = ReplicatedStorage:WaitForChild("Events", 1337)

-- Local Player
local Player = Players.LocalPlayer;

-- UI Lib (Fluxus Lib because I like to shuffle them and they support WEAO <3)
local lib = loadstring(game:HttpGet("https://raw.githubusercontent.com/Babyhamsta/RBLX_Scripts/main/UILibs/FluxusUI.lua"))()

-- ESP support
local ESP = loadstring(game:HttpGet("https://raw.githubusercontent.com/Babyhamsta/RBLX_Scripts/main/Universal/SimpleHighlightESP.lua"))()

-- Main Window
local Window = lib:CreateWindow("Evade Gui")

-- Create Pages
local CharPage = Window:NewTab("Character")
local InvePage = Window:NewTab("Inventory")
local ServerPage = Window:NewTab("Server")
local ESPPage = Window:NewTab("ESP/Camera")

-- Create Sections
local MainSection = CharPage:AddSection("Character")
local InventorySection = InvePage:AddSection("Inventory")
local ServerSection = ServerPage:AddSection("Server")
local ESPSection = ESPPage:AddSection("ESP")
local CamSection = ESPPage:AddSection("Camera")

-- GUI Toggles / Settings
local Highlights_Active = false;
local AI_ESP = false;
local GodMode_Enabled = false;
local No_CamShake = false;

-- Anti AFK
for i,v in pairs(getconnections(game:GetService("Players").LocalPlayer.Idled)) do v:Disable() end

-- Simple Text ESP
function Simple_Create(base, name, trackername, studs)
    local bb = Instance.new('BillboardGui', game.CoreGui)
    bb.Adornee = base
    bb.ExtentsOffset = Vector3.new(0,1,0)
    bb.AlwaysOnTop = true
    bb.Size = UDim2.new(0,6,0,6)
    bb.StudsOffset = Vector3.new(0,1,0)
    bb.Name = trackername

    local frame = Instance.new('Frame', bb)
    frame.ZIndex = 10
    frame.BackgroundTransparency = 0.3
    frame.Size = UDim2.new(1,0,1,0)
    frame.BackgroundColor3 = Color3.fromRGB(255, 0, 0)

    local txtlbl = Instance.new('TextLabel', bb)
    txtlbl.ZIndex = 10
    txtlbl.BackgroundTransparency = 1
    txtlbl.Position = UDim2.new(0,0,0,-48)
    txtlbl.Size = UDim2.new(1,0,10,0)
    txtlbl.Font = 'ArialBold'
    txtlbl.FontSize = 'Size12'
    txtlbl.Text = name
    txtlbl.TextStrokeTransparency = 0.5
    txtlbl.TextColor3 = Color3.fromRGB(255, 0, 0)

    local txtlblstud = Instance.new('TextLabel', bb)
    txtlblstud.ZIndex = 10
    txtlblstud.BackgroundTransparency = 1
    txtlblstud.Position = UDim2.new(0,0,0,-35)
    txtlblstud.Size = UDim2.new(1,0,10,0)
    txtlblstud.Font = 'ArialBold'
    txtlblstud.FontSize = 'Size12'
    txtlblstud.Text = tostring(studs) .. " Studs"
    txtlblstud.TextStrokeTransparency = 0.5
    txtlblstud.TextColor3 = Color3.new(255,255,255)
end

-- Clear ESP
function ClearESP(espname)
    for _,v in pairs(game.CoreGui:GetChildren()) do
        if v.Name == espname and v:isA('BillboardGui') then
            v:Destroy()
        end
    end
end

-- God Mode (Credits to Egg Salad)
MainSection:AddButton("God Mode", "Gives you god mode", function()
    local Character = Player.Character or Player.CharacterAdded:Wait()
    local Hum = Character:WaitForChild("Humanoid")
    Hum.Parent = nil;
    Hum.Parent = Character;
end)

MainSection:AddToggle("Loop God Mode", "Keeps god mode on", false, function(bool)
    GodMode_Enabled = bool;

    if bool then -- just incase they only enable the toggle..
        local Character = Player.Character or Player.CharacterAdded:Wait()
        local Hum = Character:WaitForChild("Humanoid")
        Hum.Parent = nil;
        Hum.Parent = Char;
    end
end)

-- Respawn/Reset
MainSection:AddButton("Respawn", "Free respawn, no need to pay 15 robux!", function()
    local Reset = Events:FindFirstChild("Reset")
    local Respawn = Events:FindFirstChild("Respawn")

    if Reset and Respawn then
        Reset:FireServer();
        task.wait(2)
        Respawn:FireServer();
    end
end)

-- Make server all bright so your eye balls can see
MainSection:AddButton("Full Bright", "For users who are scared of the dark :(", function()
    local light = Instance.new("PointLight", Character.HumanoidRootPart)
    light.Brightness = .3
    light.Range = 10000

    Lighting.TimeOfDay = "14:00:00"
    Lighting.FogEnd = 10000;
    Lighting.Brightness = 2;
    Lighting.Ambient = Color3.fromRGB(255,255,255)
    Lighting.FogColor = Color3.fromRGB(255,255,255)
end)

MainSection:AddSlider("WalkSpeed", "Adjust WalkSpeed to be speed", 1450, 10000, 1450, true, function(val)
    pcall(function()
        local Character = Player.Character;
        Character.Humanoid:SetAttribute("RealSpeed", tonumber(val));
    end)
end)

MainSection:AddSlider("JumpPower", "Adjust JumpPower and dunk", 3, 15, 3, true, function(val)
    pcall(function()
        local Character = Player.Character;
        Character.Humanoid:SetAttribute("RealJumpHeight", tonumber(val));
    end)
end)

-- Alpha Skin Giver
InventorySection:AddButton("Alpha Skin", "Gives you the private alpha skin", function()
    Events.UI.Purchase:InvokeServer("Skins", "AlphaTester")
end)

-- Boombox Giver (Frog#5989)
InventorySection:AddButton("Boombox Skin", "Gives you the Boombox skin for free!", function()
    Events.UI.Purchase:InvokeServer("Skins", "Boombox")
end)

-- Emote Giver (Frog#5989)
InventorySection:AddButton("Dev Test Emote", "Gives you the private test emote.", function()
    Events.UI.Purchase:InvokeServer("Emotes", "Test")
end)

-- Crash Server (Credits to FeIix (V3RM) <3)
ServerSection:AddButton("Crash Server", "Crashes the server", function()
    local Reset = Events:FindFirstChild("Reset")
    local Respawn = Events:FindFirstChild("Respawn")
    while task.wait() do
        if Reset and Respawn then
            Reset:FireServer()
            Respawn:FireServer()
        end
    end
end)


-- Character Highlights
ESPSection:AddButton("Character Highlights", "Highlights all characters to make them easier to see.", function()
    ESP:ClearESP();
    Highlights_Active = true;

    for i, v in ipairs(Players:GetPlayers()) do
        if v ~= Player then
            v.CharacterAdded:Connect(function(Char)
                ESP:AddOutline(Char)
                ESP:AddNameTag(Char)
            end)

            if v.Character then
                ESP:AddOutline(v.Character)
                ESP:AddNameTag(v.Character)
            end
        end
    end
end)

-- AI Text ESP
ESPSection:AddToggle("AI ESP", "Adds text ESP to AI to make them easier to see.", false, function(bool)
    AI_ESP = bool;
end)

-- No Camera Shake
CamSection:AddToggle("No Camera Shake", "Removes camera shake that is caused by the AI.", false, function(bool)
    No_CamShake = bool;
end)


-- [[ Helpers / Loop Funcs ]] --

-- Highlight helper
game:GetService("Players").PlayerAdded:Connect(function(Player)
    Player.CharacterAdded:Connect(function(Char)
        if Highlights_Active then
            ESP:AddOutline(Char)
            ESP:AddNameTag(Char)
        end
    end)
end)

-- Target only Local Player
Player.CharacterAdded:Connect(function(Char)
    local Hum = Char:WaitForChild("Humanoid", 1337);

    -- Godmode helper (Credits to Egg Salad)
    if GodMode_Enabled then
        Hum.Parent = nil;
        Hum.Parent = Char;
    end
end)


-- ESP AI
task.spawn(function()
    while task.wait(0.05) do
        if AI_ESP then
            pcall(function()
                ClearESP("AI_Tracker")
                local GamePlayers = Workspace:WaitForChild("Game", 1337).Players;
                for i,v in pairs(GamePlayers:GetChildren()) do
                    if not game.Players:FindFirstChild(v.Name) then -- Is AI
                        local studs = Player:DistanceFromCharacter(v.PrimaryPart.Position)
                        Simple_Create(v.HumanoidRootPart, v.Name, "AI_Tracker", math.floor(studs + 0.5))
                    end
                end
            end)
        else
            ClearESP("AI_Tracker");
        end
    end
end)

-- Camera Shake
task.spawn(function()
    while task.wait() do
        if No_CamShake then
            Player.PlayerScripts:WaitForChild("CameraShake", 1234).Value = CFrame.new(0,0,0) * CFrame.Angles(0,0,0);
        end
    end
end)
end
tab2.newButton("Evade PC", "Evade PC script", function()
Lixuz()
end) 
function Lixuz()
local UXBeta2 = {
    ["_Loader"] = Instance.new("ScreenGui"),
    ["_MainFrame"] = Instance.new("Frame"),
    ["_Title"] = Instance.new("TextLabel"),
    ["_Description"] = Instance.new("TextLabel"),
    ["_PoweringImagination"] = Instance.new("TextLabel"),
    ["_Credits"] = Instance.new("TextLabel"),
    ["_ImageLabel"] = Instance.new("ImageLabel"),
    ["_Corner"] = Instance.new("UICorner"),
    ["_ProgressBar"] = Instance.new("Frame"),
    ["_Corner1"] = Instance.new("UICorner"),
    ["_Content"] = Instance.new("Frame"),
    ["_Corner2"] = Instance.new("UICorner"),
    ["_Corner3"] = Instance.new("UICorner"),
    ["_UIGradient1"] = Instance.new("UIGradient"),
    ["_LoaderManager"] = Instance.new("LocalScript"),
    ["_Settings"] = Instance.new("ModuleScript"),
}

UXBeta2["_Loader"].IgnoreGuiInset = true
UXBeta2["_Loader"].ScreenInsets = Enum.ScreenInsets.DeviceSafeInsets
UXBeta2["_Loader"].ResetOnSpawn = false
UXBeta2["_Loader"].ZIndexBehavior = Enum.ZIndexBehavior.Sibling
UXBeta2["_Loader"].Name = "Loader"
UXBeta2["_Loader"].Parent = game:GetService("CoreGui")

UXBeta2["_MainFrame"].AnchorPoint = Vector2.new(0.5, 0.5)
UXBeta2["_MainFrame"].BackgroundColor3 = Color3.fromRGB(43, 43, 43)
UXBeta2["_MainFrame"].BorderColor3 = Color3.fromRGB(0, 0, 0)
UXBeta2["_MainFrame"].BorderSizePixel = 0
UXBeta2["_MainFrame"].ClipsDescendants = true
UXBeta2["_MainFrame"].Position = UDim2.new(0.499618024, 0, 0.498148113, 0)
UXBeta2["_MainFrame"].Size = UDim2.new(0, 387, 0, 225)
UXBeta2["_MainFrame"].Name = "MainFrame"
UXBeta2["_MainFrame"].Parent = UXBeta2["_Loader"]

UXBeta2["_Title"].Font = Enum.Font.Gotham
UXBeta2["_Title"].RichText = true
UXBeta2["_Title"].Text = "<b>UniverseX </b>Avec"
UXBeta2["_Title"].TextColor3 = Color3.fromRGB(255, 255, 255)
UXBeta2["_Title"].TextSize = 27
UXBeta2["_Title"].TextWrapped = true
UXBeta2["_Title"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
UXBeta2["_Title"].BackgroundTransparency = 1
UXBeta2["_Title"].BorderColor3 = Color3.fromRGB(0, 0, 0)
UXBeta2["_Title"].BorderSizePixel = 0
UXBeta2["_Title"].Position = UDim2.new(0.242894053, 0, 0.438016534, 0)
UXBeta2["_Title"].Size = UDim2.new(0, 200, 0, 29)
UXBeta2["_Title"].Name = "Title"
UXBeta2["_Title"].Parent = UXBeta2["_MainFrame"]

UXBeta2["_Description"].Font = Enum.Font.Gotham
UXBeta2["_Description"].Text = "Loading..."
UXBeta2["_Description"].TextColor3 = Color3.fromRGB(122, 122, 122)
UXBeta2["_Description"].TextSize = 14
UXBeta2["_Description"].TextWrapped = true
UXBeta2["_Description"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
UXBeta2["_Description"].BackgroundTransparency = 1
UXBeta2["_Description"].BorderColor3 = Color3.fromRGB(0, 0, 0)
UXBeta2["_Description"].BorderSizePixel = 0
UXBeta2["_Description"].Position = UDim2.new(0, 0, 0.834710717, 0)
UXBeta2["_Description"].Size = UDim2.new(0, 387, 0, 29)
UXBeta2["_Description"].Name = "Description"
UXBeta2["_Description"].Parent = UXBeta2["_MainFrame"]

UXBeta2["_PoweringImagination"].Font = Enum.Font.Gotham
UXBeta2["_PoweringImagination"].Text = "Ultimate Script Hub"
UXBeta2["_PoweringImagination"].TextColor3 = Color3.fromRGB(190, 190, 190)
UXBeta2["_PoweringImagination"].TextSize = 14
UXBeta2["_PoweringImagination"].TextWrapped = true
UXBeta2["_PoweringImagination"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
UXBeta2["_PoweringImagination"].BackgroundTransparency = 1
UXBeta2["_PoweringImagination"].BorderColor3 = Color3.fromRGB(0, 0, 0)
UXBeta2["_PoweringImagination"].BorderSizePixel = 0
UXBeta2["_PoweringImagination"].Position = UDim2.new(0.242894053, 0, 0.557851255, 0)
UXBeta2["_PoweringImagination"].Size = UDim2.new(0, 200, 0, 29)
UXBeta2["_PoweringImagination"].Name = "PoweringImagination"
UXBeta2["_PoweringImagination"].Parent = UXBeta2["_MainFrame"]

UXBeta2["_Credits"].Font = Enum.Font.Gotham
UXBeta2["_Credits"].Text = "Loader is made by Xirius"
UXBeta2["_Credits"].TextColor3 = Color3.fromRGB(88, 88, 88)
UXBeta2["_Credits"].TextSize = 12
UXBeta2["_Credits"].TextWrapped = true
UXBeta2["_Credits"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
UXBeta2["_Credits"].BackgroundTransparency = 1
UXBeta2["_Credits"].BorderColor3 = Color3.fromRGB(0, 0, 0)
UXBeta2["_Credits"].BorderSizePixel = 0
UXBeta2["_Credits"].Position = UDim2.new(0.268733859, 0, 0.318181813, 0)
UXBeta2["_Credits"].Size = UDim2.new(0, 179, 0, 29)
UXBeta2["_Credits"].Visible = false --True ou Falso
UXBeta2["_Credits"].Name = "Credits"
UXBeta2["_Credits"].Parent = UXBeta2["_MainFrame"]

UXBeta2["_ImageLabel"].Image = "http://www.roblox.com/asset/?id=76788590430966"
UXBeta2["_ImageLabel"].ImageColor3 = Color3.fromRGB(226, 226, 226)
UXBeta2["_ImageLabel"].ImageTransparency = 0.74
UXBeta2["_ImageLabel"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
UXBeta2["_ImageLabel"].BackgroundTransparency = 1
UXBeta2["_ImageLabel"].BorderColor3 = Color3.fromRGB(0, 0, 0)
UXBeta2["_ImageLabel"].BorderSizePixel = 0
UXBeta2["_ImageLabel"].Size = UDim2.new(1, 0, 1, 0)
UXBeta2["_ImageLabel"].Visible = true --True or False
UXBeta2["_ImageLabel"].ZIndex = 0.45
UXBeta2["_ImageLabel"].Parent = UXBeta2["_MainFrame"]

UXBeta2["_Corner"].CornerRadius = UDim.new(0, 15)
UXBeta2["_Corner"].Name = "Corner"
UXBeta2["_Corner"].Parent = UXBeta2["_ImageLabel"]

UXBeta2["_ProgressBar"].BackgroundColor3 = Color3.fromRGB(50, 50, 50)
UXBeta2["_ProgressBar"].BorderColor3 = Color3.fromRGB(0, 0, 0)
UXBeta2["_ProgressBar"].BorderSizePixel = 0
UXBeta2["_ProgressBar"].ClipsDescendants = true
UXBeta2["_ProgressBar"].Position = UDim2.new(0.255813956, 0, 0.75111109, 0)
UXBeta2["_ProgressBar"].Size = UDim2.new(0, 188, 0, 18)
UXBeta2["_ProgressBar"].Visible = true --True or False
UXBeta2["_ProgressBar"].Name = "ProgressBar"
UXBeta2["_ProgressBar"].Parent = UXBeta2["_MainFrame"]

UXBeta2["_Corner1"].CornerRadius = UDim.new(0, 15)
UXBeta2["_Corner1"].Name = "Corner"
UXBeta2["_Corner1"].Parent = UXBeta2["_ProgressBar"]

UXBeta2["_Content"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
UXBeta2["_Content"].BorderColor3 = Color3.fromRGB(0, 0, 0)
UXBeta2["_Content"].BorderSizePixel = 0
UXBeta2["_Content"].Position = UDim2.new(0, 0, -1.69542102e-06, 0)
UXBeta2["_Content"].Size = UDim2.new(0, 0, 0, 18)
UXBeta2["_Content"].Name = "Content"
UXBeta2["_Content"].Parent = UXBeta2["_ProgressBar"]

UXBeta2["_Corner2"].CornerRadius = UDim.new(0, 15)
UXBeta2["_Corner2"].Name = "Corner"
UXBeta2["_Corner2"].Parent = UXBeta2["_Content"]

UXBeta2["_Corner3"].CornerRadius = UDim.new(0, 15)
UXBeta2["_Corner3"].Name = "Corner"
UXBeta2["_Corner3"].Parent = UXBeta2["_MainFrame"]

UXBeta2["_UIGradient1"].Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 255)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(22, 75, 161))
}
UXBeta2["_UIGradient1"].Rotation = 42
UXBeta2["_UIGradient1"].Parent = UXBeta2["_MainFrame"]

local MScripts = {}
-- [[Loader Settings]]--
do
    local script = Instance.new("ModuleScript")
    script.Name = "Settings"
    script.Parent = UXBeta2["_Loader"]
    local function module_script()
        local Settings = {
            TitleText = "<b>UniverseX </b>Avec",-- Titulo
            DescriptionText = "High class experience fresh", -- SubTitulo
            UIGradientEnabled = true,
            ProgressBarEnabled = true,
            AnimatedText = true,
            GoofyBackground = false, 
            GoofyBackgroundID = 76788590430966,
        }
            return Settings    
        end
    MScripts[script] = module_script
end

local function MPNJQQO_fake_script() -- Fake Script: StarterGui.Loader.LoaderManager
local script = Instance.new("LocalScript")
    script.Name = "LoaderManager"
    script.Parent = UXBeta2["_Loader"]
    local req = require
    local require = function(obj)
        local fake = MScripts[obj]
        if fake then
        return fake()
        end
    return req(obj)
end
--//Dependencias de ui\\--
    local MainFrame = script.Parent:FindFirstChild('MainFrame')
    local Title = MainFrame:FindFirstChild('Title')
    local Description = MainFrame:FindFirstChild('Description')
    local MainCorner = MainFrame:FindFirstChild('Corner')
    local PI = MainFrame:FindFirstChild('PoweringImagination')
    local Settings = require(script.Parent:FindFirstChild('Settings'))
--//Dependencias\\--
    local TweenService = game:GetService('TweenService')
    local TimeToWaitBeforeLoading = 2
    local loaded
--//Setar algumas coisas\\--
Title.Position = UDim2.new(-0.517, 0,0.438, 0)
Description.Position = UDim2.new(0.0, 0,1, 0)
MainFrame.BackgroundTransparency = 1
    --MainCorner.CornerRadius = UDim.new(0,0)
PI.TextTransparency = 1
    --MainFrame.Position = UDim2.new(0.5, 0,1.136, 0)
script.Parent.MainFrame.ImageLabel.ImageTransparency = 1
script.Parent.MainFrame.ProgressBar.BackgroundTransparency = 1
script.Parent.MainFrame.ProgressBar.Content.BackgroundTransparency = 1
if Settings.UIGradientEnabled == true then
    MainFrame:FindFirstChild('UIGradient').Enabled = false
end
if Settings.TitleText then
    Title.Text = Settings.TitleText
end
if Settings.DescriptionText then
    MainFrame:FindFirstChild('PoweringImagination').Text = Settings.DescriptionText
end
if Settings.ProgressBarEnabled == true then
    MainFrame:FindFirstChild('ProgressBar').Visible = true
end
if Settings.GoofyBackground == true then
        MainFrame:FindFirstChild('ImageLabel').Visible = true
        if Settings.GoofyBackgroundID then
        MainFrame:FindFirstChild('ImageLabel').Image = Settings.GoofyBackgroundID
    end
end
--//Funcoes\\--
function StartLoading()
    TweenService:Create(MainFrame, TweenInfo.new(0.2), {BackgroundTransparency = 0}):Play()
        --MainFrame:TweenPosition(UDim2.new(0.5, 0,0.498, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5)
    wait(0.1)
        --TweenService:Create(MainCorner, TweenInfo.new(0.5), {CornerRadius = UDim.new(0,15)}):Play()
    wait(0.5)
    TweenService:Create(script.Parent.MainFrame.ProgressBar, TweenInfo.new(0.2), {BackgroundTransparency = 0}):Play()
    TweenService:Create(script.Parent.MainFrame.ProgressBar.Content, TweenInfo.new(0.2), {BackgroundTransparency = 0}):Play()
    Title:TweenPosition(UDim2.new(0.243, 0,0.438, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5)
    TweenService:Create(script.Parent.MainFrame.ImageLabel, TweenInfo.new(0.5), {ImageTransparency = 0}):Play()
    TweenService:Create(PI, TweenInfo.new(0.2), {TextTransparency = 0}):Play()
    wait(0.2)
    Description:TweenPosition(UDim2.new(0.0, 0,0.835, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5)
    loaded = true
end
    
function HideProgressBar()
    TweenService:Create(script.Parent.MainFrame.ProgressBar.Content, TweenInfo.new(0.2), {BackgroundTransparency = 1}):Play()
    TweenService:Create(script.Parent.MainFrame.ProgressBar, TweenInfo.new(0.2), {BackgroundTransparency = 1}):Play()
end
    
function FinishLoading()
    TweenService:Create(Title, TweenInfo.new(0.2), {TextTransparency = 1}):Play()
        --TweenService:Create(Description, TweenInfo.new(0.2), {TextTransparency = 1}):Play()
        --Title:TweenPosition(UDim2.new(-0.517, 0,0.438, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5)
    Description:TweenPosition(UDim2.new(0.0, 0,1, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5)
    wait(0.2)
    TweenService:Create(PI, TweenInfo.new(0.2), {TextTransparency = 1}):Play()
    wait(0.2)
    TweenService:Create(script.Parent.MainFrame.ProgressBar, TweenInfo.new(0.2), {BackgroundTransparency = 1}):Play()
    TweenService:Create(script.Parent.MainFrame.ProgressBar.Content, TweenInfo.new(0.2), {BackgroundTransparency = 1}):Play()
    TweenService:Create(script.Parent.MainFrame.ImageLabel, TweenInfo.new(0.5), {ImageTransparency = 1}):Play()
    TweenService:Create(MainFrame, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
    wait(1)
    -- Script Here
    script.Parent:Destroy()
    loaded = false
end
    
function SetText(Text)
    if Settings.AnimatedText == true and loaded == true then
            wait(1)
            TweenService:Create(Description, TweenInfo.new(0.2), {TextTransparency = 1}):Play()
            wait(1)
            Description.Text = Text
            TweenService:Create(Description, TweenInfo.new(0.2), {TextTransparency = 0}):Play()
            wait(1) else Description.Text = Text
        end
    wait(0.1)
end
    
wait(TimeToWaitBeforeLoading)
    StartLoading()
wait(1)
SetText("Getting Assets...")
script.Parent.MainFrame.ProgressBar.Content:TweenSize(UDim2.new(0, 40,0, 18), Enum.EasingDirection.Out, Enum.EasingStyle.Quint, 0.2)
local naga=Instance.new("Model", workspace) naga.Name="NagaLoaded"
SetText("Checking all Information...")
script.Parent.MainFrame.ProgressBar.Content:TweenSize(UDim2.new(0, 77,0, 18), Enum.EasingDirection.Out, Enum.EasingStyle.Quint, 0.2)
SetText("Bypassing system for UniverseX...")
script.Parent.MainFrame.ProgressBar.Content:TweenSize(UDim2.new(0, 100,0, 18), Enum.EasingDirection.Out, Enum.EasingStyle.Quint, 0.2)
SetText("Clearing up for fresh experiences...")
script.Parent.MainFrame.ProgressBar.Content:TweenSize(UDim2.new(0, 188,0, 18), Enum.EasingDirection.Out, Enum.EasingStyle.Quint, 0.2)
wait(1)
HideProgressBar()
wait(1)
FinishLoading()
end
coroutine.wrap(MPNJQQO_fake_script)()

local WorkspacePlayers = game:GetService("Workspace").Game.Players;
local Players = game:GetService('Players');
local localplayer = Players.LocalPlayer;
-- semicolon but cool :sunglasses:

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/9Strew/roblox/main/proc/jans"))()
local Esp = loadstring(game:HttpGet("https://raw.githubusercontent.com/9Strew/roblox/main/proc/kiriotesp"))()
Esp.Enabled = false
Esp.Tracers = false
Esp.Boxes = false

local Window = Library:CreateWindow("UniverseX | Evade", Vector2.new(500, 300), Enum.KeyCode.RightShift)
local Evade = Window:CreateTab("Menu")
local AutoFarms = Window:CreateTab("Farm")
local Gamee = Window:CreateTab("Game")
local Configs = Window:CreateTab("Settings")

local EvadeSector = Evade:CreateSector("Role", "left")
local Visuals = Evade:CreateSector("Visual", "right")
local Credits = Evade:CreateSector("Credits", "left")
local Farms = AutoFarms:CreateSector("Farm", "left")
local FarmStats = AutoFarms:CreateSector("FarmStats", "right")
local Gamesec = Gamee:CreateSector("Statistic", "right")
local World = Gamee:CreateSector("World", "left")

getgenv().Settings = {
    moneyfarm = false,
    afkfarm = false,
    NoCameraShake = false,
    Downedplayeresp = false,
    AutoRespawn = false,
    TicketFarm = false,
    Speed = 1450,
    Jump = 3,
    reviveTime = 3,
    DownedColor = Color3.fromRGB(255,0,0),
    PlayerColor = Color3.fromRGB(255,170,0),

    stats = {
        TicketFarm = {
            earned = nil,
            duration = 0
        },

        TokenFarm = {
            earned = nil,
            duration = 0
        }

    }
}


local WalkSpeed = EvadeSector:AddSlider("WalkSpeed", 1450, 1450, 12000, 100, function(Value)
    Settings.Speed = Value
end)


local JumpPower = EvadeSector:AddSlider("JumpHeight", 3, 3, 20, 1, function(Value)
    Settings.Jump = Value
end)

--// because silder does not detect dotted values 

World:AddButton('Bright', function()
   	Game.Lighting.Brightness = 4
	Game.Lighting.FogEnd = 100000
	Game.Lighting.GlobalShadows = false
    Game.Lighting.ClockTime = 12
end)

World:AddToggle('Disable CameraShake', false, function(State)
    Settings.NoCameraShake = State
end)

Gamesec:AddToggle('Auto-Recovery (for falling)', false, function(State)
    if State then
        workspace.Game.Settings:SetAttribute("ReviveTime", 2.2)
    else
        workspace.Game.Settings:SetAttribute("ReviveTime", Settings.reviveTime)
    end
end)

EvadeSector:AddToggle('AutoRespawn', false, function(State)
    Settings.AutoRespawn = State
end)

EvadeSector:AddButton('Respawn',function()
    game:GetService("ReplicatedStorage").Events.Respawn:FireServer()
end)


Farms:AddToggle('Auto Brush-money', false, function(State)
    Settings.moneyfarm = State
end)

Farms:AddToggle('Auto Refresh-time', false, function(State)
    Settings.afkfarm = State
end)

Visuals:AddToggle('Drawing', false, function(State)
    Esp.Enabled = State
end)

Visuals:AddToggle('Draw Entity', false, function(State)
    Esp.NPCs = State
end)

Visuals:AddToggle('Draw Active-items', false, function(State)
    Esp.TicketEsp = State
end)

Visuals:AddToggle('Draw Down', false, function(State)
    Settings.Downedplayeresp = State
end)

Visuals:AddToggle('Draw Box', false, function(State)
    Esp.Boxes = State
end)

Visuals:AddToggle('Line', false, function(State)
    Esp.Tracers = State
end)

Visuals:AddToggle('Esp Player', false, function(State)
    Esp.Players = State
end)

Visuals:AddToggle('Esp Distance', false, function(State)
    Esp.Distance = State
end)

Visuals:AddColorpicker("Player Color", Color3.fromRGB(0,255,0), function(Color)
    Settings.PlayerColor = Color
end)

Visuals:AddColorpicker("Downed Player Color", Color3.fromRGB(255,255,0), function(Color)
    Settings.DownedColor = Color
end)

Credits:AddLabel("English vers, UniverseX by UXteam.")
Credits:AddLabel("UniverseX game script.")
Credits:AddLabel("Updated: v2.1")
Configs:CreateConfigSystem()

local TypeLabelC5 = FarmStats:AddLabel('Auto Collect Statistic:')
local DurationLabelC5 = FarmStats:AddLabel('UX: 0')
local EarnedLabelC5 = FarmStats:AddLabel('UX: 0')
--local TicketsLabelC5 = FarmStats:AddLabel('Total Tickets:'..localplayer:GetAttribute('Tickets'))

local FindAI = function()
    for _,v in pairs(WorkspacePlayers:GetChildren()) do
        if not Players:FindFirstChild(v.Name) then
            return v
        end
    end
end


local GetDownedPlr = function()
    for i,v in pairs(WorkspacePlayers:GetChildren()) do
        if v:GetAttribute("Downed") then
            return v
        end
    end
end

local revive = function()
    local downedplr = GetDownedPlr()
    if downedplr ~= nil and downedplr:FindFirstChild('HumanoidRootPart') then
        task.spawn(function()
            while task.wait() do
                if localplayer.Character then
                    workspace.Game.Settings:SetAttribute("ReviveTime", 2.2)
                    localplayer.Character:FindFirstChild('HumanoidRootPart').CFrame = CFrame.new(downedplr:FindFirstChild('HumanoidRootPart').Position.X, downedplr:FindFirstChild('HumanoidRootPart').Position.Y + 3, downedplr:FindFirstChild('HumanoidRootPart').Position.Z)
                    task.wait()
                    game:GetService("ReplicatedStorage").Events.Revive.RevivePlayer:FireServer(tostring(downedplr), false)
                    task.wait(4.5)
                    game:GetService("ReplicatedStorage").Events.Revive.RevivePlayer:FireServer(tostring(downedplr), true)
                    game:GetService("ReplicatedStorage").Events.Revive.RevivePlayer:FireServer(tostring(downedplr), true)
                    game:GetService("ReplicatedStorage").Events.Revive.RevivePlayer:FireServer(tostring(downedplr), true)
                    break
                end
            end
        end)
    end
end

--Kiriot
Esp:AddObjectListener(WorkspacePlayers, {
    Color =  Color3.fromRGB(255,0,0),
    Type = "Model",
    PrimaryPart = function(obj)
        local hrp = obj:FindFirstChild('HRP')
        while not hrp do
            wait()
            hrp = obj:FindFirstChild('HRP')
        end
        return hrp
    end,
    Validator = function(obj)
        return not game.Players:GetPlayerFromCharacter(obj)
    end,
    CustomName = function(obj)
        return '[AI] '..obj.Name
    end,
    IsEnabled = "NPCs",
})

--[[Esp:AddObjectListener(game:GetService("Workspace").Game.Effects.Tickets, {
    CustomName = "Ticket",
    Color = Color3.fromRGB(41,180,255),
    IsEnabled = "TicketEsp"
})]]

--Tysm CJStylesOrg
Esp.Overrides.GetColor = function(char)
   local GetPlrFromChar = Esp:GetPlrFromChar(char)
   if GetPlrFromChar then
       if Settings.Downedplayeresp and GetPlrFromChar.Character:GetAttribute("Downed") then
           return Settings.DownedColor
       end
   end
   return Settings.PlayerColor
end

local old
old = hookmetamethod(game,"__namecall",newcclosure(function(self,...)
    local Args = {...}
    local method = getnamecallmethod()
    if tostring(self) == 'Communicator' and method == "InvokeServer" and Args[1] == "update" then
        return Settings.Speed, Settings.Jump 
    end
    return old(self,...)
end))

local formatNumber = (function(value) -- //Credits: https://devforum.roblox.com/t/formatting-a-currency-label-to-include-commas/413670/3
	value = tostring(value)
	return value:reverse():gsub("%d%d%d", "%1,"):reverse():gsub("^,", "")
end)

function Format(Int) -- // Credits: https://devforum.roblox.com/t/converting-secs-to-hsec/146352
	return string.format("%02i", Int)
end

function convertToHMS(Seconds)
	local Minutes = (Seconds - Seconds%60)/60
	Seconds = Seconds - Minutes*60
	local Hours = (Minutes - Minutes%60)/60
	Minutes = Minutes - Hours*60
	return Format(Hours).."H "..Format(Minutes).."M "..Format(Seconds)..'S'
end

task.spawn(function()
    while task.wait(1) do
        --if Settings.TicketFarm then
        --    Settings.stats.TicketFarm.duration += 1
        --end
        if Settings.moneyfarm then
            Settings.stats.TokenFarm.duration += 1
        end 
    end
end)

--local gettickets = localplayer:GetAttribute('Tickets')
local GetTokens = localplayer:GetAttribute('Tokens')

localplayer:GetAttributeChangedSignal('Tickets'):Connect(function()
    --local tickets = tostring(gettickets - localplayer:GetAttribute('Tickets'))
    --local cleanvalue = string.split(tickets, "-")
    Settings.stats.TicketFarm.earned = cleanvalue[2]
end)

localplayer:GetAttributeChangedSignal('Tokens'):Connect(function()
    local tokens = tostring(GetTokens - localplayer:GetAttribute('Tokens'))
    local cleanvalue = string.split(tokens, "-")
    print(cleanvalue[2])
    Settings.stats.TokenFarm.earned = cleanvalue[2]
end)

localplayer:GetAttributeChangedSignal('Tokens'):Connect(function()
    local tokens = tostring(GetTokens - localplayer:GetAttribute('Tokens'))
    local cleanvalue = string.split(tokens, "-")
    print(cleanvalue[2])
    Settings.stats.TokenFarm.earned = cleanvalue[2]
end)

task.spawn(function()
    while task.wait() do
        if Settings.TicketFarm then
            TypeLabelC5:Set('Ticket Farm')
            DurationLabelC5:Set('Duration:'..convertToHMS(Settings.stats.TicketFarm.duration))
            EarnedLabelC5:Set('Earned:'.. formatNumber(Settings.stats.TicketFarm.earned))
            --TicketsLabelC5:Set('Total Tickets: '..localplayer:GetAttribute('Tickets'))

            if game.Players.LocalPlayer:GetAttribute('InMenu') ~= true and localplayer:GetAttribute('Dead') ~= true then
                for i,v in pairs(game:GetService("Workspace").Game.Effects.Tickets:GetChildren()) do
                    localplayer.Character.HumanoidRootPart.CFrame = CFrame.new(v:WaitForChild('HumanoidRootPart').Position)
                end
            else
                task.wait(2)
                game:GetService("ReplicatedStorage").Events.Respawn:FireServer()
            end
            if localplayer.Character and localplayer.Character:GetAttribute("Downed") then
                game:GetService("ReplicatedStorage").Events.Respawn:FireServer()
                task.wait(2)
            end
        end
    end
end)


task.spawn(function()
    while task.wait() do
        if Settings.AutoRespawn then
             if localplayer.Character and localplayer.Character:GetAttribute("Downed") then
                game:GetService("ReplicatedStorage").Events.Respawn:FireServer()
             end
        end

        if Settings.NoCameraShake then
            localplayer.PlayerScripts.CameraShake.Value = CFrame.new(0,0,0) * CFrame.new(0,0,0)
        end
        if Settings.moneyfarm then
            TypeLabelC5:Set('Money Farm')
            DurationLabelC5:Set('Duration:'..convertToHMS(Settings.stats.TokenFarm.duration))
            EarnedLabelC5:Set('Earned:'.. formatNumber(Settings.stats.TokenFarm.earned))
            --TicketsLabelC5:Set('Total Tokens: '..formatNumber(localplayer:GetAttribute('Tokens')))
            
            if localplayer:GetAttribute("InMenu") and localplayer:GetAttribute("Dead") ~= true then
                game:GetService("ReplicatedStorage").Events.Respawn:FireServer()
            end
            if localplayer.Character and localplayer.Character:GetAttribute("Downed") then
                game:GetService("ReplicatedStorage").Events.Respawn:FireServer()
                task.wait(3)
            else
                revive()
                task.wait(1)
            end

        end
        if Settings.moneyfarm == false and Settings.afkfarm and localplayer.Character:FindFirstChild('HumanoidRootPart') ~= nil then
            localplayer.Character:FindFirstChild('HumanoidRootPart').CFrame = CFrame.new(6007, 7005, 8005)
        end
    end
end)

--Infinite yield's Anti afk
local GC = getconnections or get_signal_cons
	if GC then
		for i,v in pairs(GC(localplayer.Idled)) do
			if v["Disable"] then
				v["Disable"](v)
			elseif v["Disconnect"] then
				v["Disconnect"](v)
			end
		end
	else
		localplayer.Idled:Connect(function()
			local VirtualUser = game:GetService("VirtualUser")
			VirtualUser:CaptureController()
			VirtualUser:ClickButton2(Vector2.new())
		end)
	end
end
tab2.newButton("Break In 2", "Break In 2", function()
TxT1()
end)
function TxT1() 

local Notification = loadstring(game:HttpGet("https://api.irisapp.ca/Scripts/IrisBetterNotifications.lua"))()

Notification.Notify("Systems", "Credits: SplazhQ12 ||!!|| Universe X, game Break In 2 have loaded!", "", {
    Duration = 4,   
    Main = {
        Rounding = true,
    }
});


queueteleport = (syn and syn.queue_on_teleport) or queue_on_teleport or (fluxus and fluxus.queue_on_teleport)
httprequest = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or request
HttpService = game:GetService("HttpService")
local OptTheme = "Midnight"
local string2 = ""
_G.infydtype = 1
_G.guidragtype = "https://raw.githubusercontent.com/LLCteams/xs/main/%D0%91%D0%BB%D0%BE%D0%BA%D1%81%20%D0%BC%D0%BE%D0%B4%20%D0%BD%D0%BE%D0%B2%D1%8B%D0%B9%20%D0%B0%D0%BD%D1%82%D0%B8%D1%87%D0%B8%D1%82"
UserInputService = game:GetService("UserInputService")
local IsOnMobile = table.find({
	Enum.Platform.IOS,
	Enum.Platform.Android
}, UserInputService:GetPlatform())

if IsOnMobile then
	_G.infydtype = "https://raw.githubusercontent.com/yofriendfromschool1/mobile-delta-inf-yield/main/deltainfyield.txt"
elseif iswave then
	_G.infydtype = "https://raw.githubusercontent.com/yofriendfromschool1/wave_fixedscripts/main/iy.lua"
else
	_G.infydtype = "https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"
end
local iswave = false
if detourfunction then
	if not IsOnMobile then
		iswave = true
	end
end


    local Library = loadstring(game:HttpGet(_G.guidragtype))()
    local Window = Library.CreateLib("Universe X | Break In 2", OptTheme)
    local Main = Window:NewTab("Home", 16716232082)
    
        local MainSection = Main:NewSection("Home")
    
        MainSection:NewButton("Role: Hacker", "Executed!", function()
        Library.Notify("UXteam", "Miniverse has executed!", 5)
            game:GetService("ReplicatedStorage").RemoteEvents.OutsideRole:FireServer("Phone", true, false)
        end) 

        MainSection:NewButton("Script", "Executed!", function()
        Library.Notify("UXteam", "Miniverse has executed!", 5)
           loadstring(Game:HttpGet("https://raw.githubusercontent.com/LLCteams/xs/refs/heads/main/%D0%9D%D0%B5%D0%BE%D0%B3%D1%80%D0%B0%D0%BD%D0%B8%D1%87%D0%B5%D0%BD%D0%BD%D0%BE%D0%B5%20%D0%B1%D0%BE%D0%B3%D0%B0%D1%82%D1%81%D1%82%D0%B2%D0%BE"))()
        end)

        MainSection:NewButton("Role: Nerd", "Executed!", function()
        Library.Notify("UXteam", "Miniverse has executed!", 5)
            game:GetService("ReplicatedStorage").RemoteEvents.OutsideRole:FireServer("Book", true, false)
        end)
end
tab2.newButton("Zombie Uprising", "Zombie Uprising", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/LLCteams/xs/main/%D0%91%D0%BB%D0%BE%D0%BA%D1%81%20%D0%BB%D0%BE%D0%BB%20%D0%BD%D1%83%D0%B1"))()
end)
tab2.newButton("Prison Life", "Zombie Uprising", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/LLCteams/xs/refs/heads/main/%D0%9A%D1%82%D0%BE%20%D1%83%D0%BA%D1%80%D0%B0%D0%BB%20%D1%87%D0%B5%D1%80%D1%82%D0%B5%D0%B6"))()
end)
tab2.newButton("Slap Battles", "Slap Battles", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/LLCteams/xs/main/%D0%97%D0%B2%D0%BE%D0%BD%D0%B8%D1%82%D0%B5%20%D0%B2%20%D0%A1%D0%A8%D0%90%2C%20%D1%85%D0%B0-%D1%85%D0%B0%2C%20%D0%BD%D0%BE%D0%B2%D0%B0%D1%8F%20%D0%B1%D0%B5%D1%82%D0%B0-%D0%B2%D0%B5%D1%80%D1%81%D0%B8%D1%8F%2C%20%D0%BB%D0%BE%D0%BB%20%20%D1%85%D0%B0%D1%85%D0%B0%D1%85%D0%B0%20%D1%87%D0%B8%D1%82"))()
end)

local tab3 = DrRayLibrary.newTab("Executor", " ImageIdHere")
tab3.newButton("UniverseX", "Executor cracked", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/LLCteams/xs/refs/heads/main/%D0%91%D0%BB%D0%BE%D0%BA%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D1%82%D1%8C"))()
end)
tab3.newButton("UniverseX", "Executor script", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/LLCteams/xs/main/%D0%91%D0%BB%D0%BE%D0%BA%D1%81%20%D0%BE%D0%B1%D0%BE%D0%B9%D1%82%D0%B8%20%D1%85%D0%B0%D1%85%D0%B0%D1%85%D0%B0"))()
end) 
tab3.newButton("ArceusX Neo", "Executor script", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/Xingtaiduan/Executor/refs/heads/main/ArceusX%20NEO.lua"))()
end)
tab3.newButton("Krypton", "Executor script", function()
    -- (VOID) : Gui to Lua
-- Version: 1.4

-- Instances:

local kr = {
	kr = Instance.new("ScreenGui"),
	MainMenu = Instance.new("ImageLabel"),
	UICorner = Instance.new("UICorner"),
	HomePage = Instance.new("Frame"),
	UICorner_2 = Instance.new("UICorner"),
	Frame = Instance.new("Frame"),
	UICorner_3 = Instance.new("UICorner"),
	Frame_2 = Instance.new("Frame"),
	UICorner_4 = Instance.new("UICorner"),
	TextLabel = Instance.new("TextLabel"),
	UIStroke = Instance.new("UIStroke"),
	UIStroke_2 = Instance.new("UIStroke"),
	Pattern = Instance.new("ImageLabel"),
	UICorner_5 = Instance.new("UICorner"),
	ImageLabel = Instance.new("ImageLabel"),
	UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint"),
	UIStroke_3 = Instance.new("UIStroke"),
	TextLabel_2 = Instance.new("TextLabel"),
	UIStroke_4 = Instance.new("UIStroke"),
	TextLabel_3 = Instance.new("TextLabel"),
	UIStroke_5 = Instance.new("UIStroke"),
	Frame_3 = Instance.new("Frame"),
	UICorner_6 = Instance.new("UICorner"),
	Frame_4 = Instance.new("Frame"),
	UICorner_7 = Instance.new("UICorner"),
	TextLabel_4 = Instance.new("TextLabel"),
	UIStroke_6 = Instance.new("UIStroke"),
	ImageLabel_2 = Instance.new("ImageLabel"),
	Frame_5 = Instance.new("Frame"),
	UIStroke_7 = Instance.new("UIStroke"),
	ImageLabel_3 = Instance.new("ImageLabel"),
	UIStroke_8 = Instance.new("UIStroke"),
	TextLabel_5 = Instance.new("TextLabel"),
	UIStroke_9 = Instance.new("UIStroke"),
	ImageLabel_4 = Instance.new("ImageLabel"),
	UIAspectRatioConstraint_2 = Instance.new("UIAspectRatioConstraint"),
	Frame_6 = Instance.new("Frame"),
	UICorner_8 = Instance.new("UICorner"),
	UIStroke_10 = Instance.new("UIStroke"),
	Frame_7 = Instance.new("Frame"),
	UICorner_9 = Instance.new("UICorner"),
	UIStroke_11 = Instance.new("UIStroke"),
	Frame_8 = Instance.new("Frame"),
	UICorner_10 = Instance.new("UICorner"),
	sF = Instance.new("Frame"),
	UICorner_11 = Instance.new("UICorner"),
	UIStroke_12 = Instance.new("UIStroke"),
	TextLabel_6 = Instance.new("TextLabel"),
	UIStroke_13 = Instance.new("UIStroke"),
	TextLabel_7 = Instance.new("TextLabel"),
	UIStroke_14 = Instance.new("UIStroke"),
	UIGradient = Instance.new("UIGradient"),
	ImageLabel_5 = Instance.new("ImageLabel"),
	fF = Instance.new("Frame"),
	UICorner_12 = Instance.new("UICorner"),
	UIStroke_15 = Instance.new("UIStroke"),
	TextLabel_8 = Instance.new("TextLabel"),
	UIStroke_16 = Instance.new("UIStroke"),
	TextLabel_9 = Instance.new("TextLabel"),
	UIStroke_17 = Instance.new("UIStroke"),
	UIGradient_2 = Instance.new("UIGradient"),
	ImageLabel_6 = Instance.new("ImageLabel"),
	hF = Instance.new("Frame"),
	UICorner_13 = Instance.new("UICorner"),
	UIStroke_18 = Instance.new("UIStroke"),
	TextLabel_10 = Instance.new("TextLabel"),
	UIStroke_19 = Instance.new("UIStroke"),
	UIGradient_3 = Instance.new("UIGradient"),
	ImageLabel_7 = Instance.new("ImageLabel"),
	TextLabel_11 = Instance.new("TextLabel"),
	UIStroke_20 = Instance.new("UIStroke"),
	SavedBtn = Instance.new("TextButton"),
	HubBtn = Instance.new("TextButton"),
	favBtn = Instance.new("TextButton"),
	saved = Instance.new("Frame"),
	UICorner_14 = Instance.new("UICorner"),
	UIGradient_4 = Instance.new("UIGradient"),
	ImageLabel_8 = Instance.new("ImageLabel"),
	TextLabel_12 = Instance.new("TextLabel"),
	UIStroke_21 = Instance.new("UIStroke"),
	Favourites = Instance.new("Frame"),
	UICorner_15 = Instance.new("UICorner"),
	UIGradient_5 = Instance.new("UIGradient"),
	ImageLabel_9 = Instance.new("ImageLabel"),
	TextLabel_13 = Instance.new("TextLabel"),
	UIStroke_22 = Instance.new("UIStroke"),
	Hub = Instance.new("Frame"),
	UICorner_16 = Instance.new("UICorner"),
	UIGradient_6 = Instance.new("UIGradient"),
	TextLabel_14 = Instance.new("TextLabel"),
	UIStroke_23 = Instance.new("UIStroke"),
	ImageLabel_10 = Instance.new("ImageLabel"),
	TextLabel_15 = Instance.new("TextLabel"),
	UIStroke_24 = Instance.new("UIStroke"),
	TextLabel_16 = Instance.new("TextLabel"),
	UIStroke_25 = Instance.new("UIStroke"),
	TextLabel_17 = Instance.new("TextLabel"),
	UIStroke_26 = Instance.new("UIStroke"),
	Sidebar = Instance.new("Frame"),
	EDITORBTN = Instance.new("Frame"),
	UICorner_17 = Instance.new("UICorner"),
	Frame_9 = Instance.new("Frame"),
	UICorner_18 = Instance.new("UICorner"),
	ImageLabel_11 = Instance.new("ImageLabel"),
	UIStroke_27 = Instance.new("UIStroke"),
	ImageLabel_12 = Instance.new("ImageLabel"),
	TextLabel_18 = Instance.new("TextLabel"),
	UIStroke_28 = Instance.new("UIStroke"),
	UIAspectRatioConstraint_3 = Instance.new("UIAspectRatioConstraint"),
	UITextSizeConstraint = Instance.new("UITextSizeConstraint"),
	TextButton = Instance.new("TextButton"),
	UIAspectRatioConstraint_4 = Instance.new("UIAspectRatioConstraint"),
	UITextSizeConstraint_2 = Instance.new("UITextSizeConstraint"),
	UIAspectRatioConstraint_5 = Instance.new("UIAspectRatioConstraint"),
	HOMEBTN = Instance.new("Frame"),
	UICorner_19 = Instance.new("UICorner"),
	Frame_10 = Instance.new("Frame"),
	UICorner_20 = Instance.new("UICorner"),
	ImageLabel_13 = Instance.new("ImageLabel"),
	UIStroke_29 = Instance.new("UIStroke"),
	ImageLabel_14 = Instance.new("ImageLabel"),
	TextLabel_19 = Instance.new("TextLabel"),
	UIStroke_30 = Instance.new("UIStroke"),
	UIAspectRatioConstraint_6 = Instance.new("UIAspectRatioConstraint"),
	UITextSizeConstraint_3 = Instance.new("UITextSizeConstraint"),
	TextButton_2 = Instance.new("TextButton"),
	UIAspectRatioConstraint_7 = Instance.new("UIAspectRatioConstraint"),
	UITextSizeConstraint_4 = Instance.new("UITextSizeConstraint"),
	UIAspectRatioConstraint_8 = Instance.new("UIAspectRatioConstraint"),
	SCRIPTSBTN = Instance.new("Frame"),
	UICorner_21 = Instance.new("UICorner"),
	Frame_11 = Instance.new("Frame"),
	UICorner_22 = Instance.new("UICorner"),
	ImageLabel_15 = Instance.new("ImageLabel"),
	UIStroke_31 = Instance.new("UIStroke"),
	ImageLabel_16 = Instance.new("ImageLabel"),
	TextLabel_20 = Instance.new("TextLabel"),
	UIStroke_32 = Instance.new("UIStroke"),
	UIAspectRatioConstraint_9 = Instance.new("UIAspectRatioConstraint"),
	UITextSizeConstraint_5 = Instance.new("UITextSizeConstraint"),
	TextButton_3 = Instance.new("TextButton"),
	UIAspectRatioConstraint_10 = Instance.new("UIAspectRatioConstraint"),
	UITextSizeConstraint_6 = Instance.new("UITextSizeConstraint"),
	UIAspectRatioConstraint_11 = Instance.new("UIAspectRatioConstraint"),
	SETTINGSBTN = Instance.new("Frame"),
	UICorner_23 = Instance.new("UICorner"),
	Frame_12 = Instance.new("Frame"),
	UICorner_24 = Instance.new("UICorner"),
	ImageLabel_17 = Instance.new("ImageLabel"),
	UIAspectRatioConstraint_12 = Instance.new("UIAspectRatioConstraint"),
	UIStroke_33 = Instance.new("UIStroke"),
	ImageLabel_18 = Instance.new("ImageLabel"),
	UIAspectRatioConstraint_13 = Instance.new("UIAspectRatioConstraint"),
	TextLabel_21 = Instance.new("TextLabel"),
	UIStroke_34 = Instance.new("UIStroke"),
	UITextSizeConstraint_7 = Instance.new("UITextSizeConstraint"),
	TextButton_4 = Instance.new("TextButton"),
	UIAspectRatioConstraint_14 = Instance.new("UIAspectRatioConstraint"),
	UITextSizeConstraint_8 = Instance.new("UITextSizeConstraint"),
	UIAspectRatioConstraint_15 = Instance.new("UIAspectRatioConstraint"),
	Frame_13 = Instance.new("Frame"),
	UIStroke_35 = Instance.new("UIStroke"),
	UIAspectRatioConstraint_16 = Instance.new("UIAspectRatioConstraint"),
	AccFrame = Instance.new("Frame"),
	TextLabel_22 = Instance.new("TextLabel"),
	UIStroke_36 = Instance.new("UIStroke"),
	UIAspectRatioConstraint_17 = Instance.new("UIAspectRatioConstraint"),
	UITextSizeConstraint_9 = Instance.new("UITextSizeConstraint"),
	DName = Instance.new("TextLabel"),
	UIStroke_37 = Instance.new("UIStroke"),
	UITextSizeConstraint_10 = Instance.new("UITextSizeConstraint"),
	ImageButton = Instance.new("ImageButton"),
	UIAspectRatioConstraint_18 = Instance.new("UIAspectRatioConstraint"),
	SidebarH = Instance.new("Frame"),
	UIStroke_38 = Instance.new("UIStroke"),
	UIAspectRatioConstraint_19 = Instance.new("UIAspectRatioConstraint"),
	Topbar = Instance.new("Frame"),
	closeBtn = Instance.new("ImageButton"),
	UIAspectRatioConstraint_20 = Instance.new("UIAspectRatioConstraint"),
	TextLabel_23 = Instance.new("TextLabel"),
	UIStroke_39 = Instance.new("UIStroke"),
	ImageLabel_19 = Instance.new("ImageLabel"),
	UIAspectRatioConstraint_21 = Instance.new("UIAspectRatioConstraint"),
	TextLabel_24 = Instance.new("TextLabel"),
	UIStroke_40 = Instance.new("UIStroke"),
	ImageLabel_20 = Instance.new("ImageLabel"),
	TextLabel_25 = Instance.new("TextLabel"),
	UIStroke_41 = Instance.new("UIStroke"),
	TextLabel_26 = Instance.new("TextLabel"),
	UIStroke_42 = Instance.new("UIStroke"),
	TextLabel_27 = Instance.new("TextLabel"),
	UIStroke_43 = Instance.new("UIStroke"),
	TopbarH = Instance.new("Frame"),
	UIStroke_44 = Instance.new("UIStroke"),
	UIAspectRatioConstraint_22 = Instance.new("UIAspectRatioConstraint"),
	clearWindow = Instance.new("Frame"),
	UICorner_25 = Instance.new("UICorner"),
	clearFrame = Instance.new("Frame"),
	UICorner_26 = Instance.new("UICorner"),
	Frame_14 = Instance.new("Frame"),
	UICorner_27 = Instance.new("UICorner"),
	TextLabel_28 = Instance.new("TextLabel"),
	UIStroke_45 = Instance.new("UIStroke"),
	UIAspectRatioConstraint_23 = Instance.new("UIAspectRatioConstraint"),
	UITextSizeConstraint_11 = Instance.new("UITextSizeConstraint"),
	UIStroke_46 = Instance.new("UIStroke"),
	clear = Instance.new("TextButton"),
	UICorner_28 = Instance.new("UICorner"),
	UIAspectRatioConstraint_24 = Instance.new("UIAspectRatioConstraint"),
	UITextSizeConstraint_12 = Instance.new("UITextSizeConstraint"),
	UIAspectRatioConstraint_25 = Instance.new("UIAspectRatioConstraint"),
	Frame_15 = Instance.new("Frame"),
	UICorner_29 = Instance.new("UICorner"),
	TextLabel_29 = Instance.new("TextLabel"),
	UIStroke_47 = Instance.new("UIStroke"),
	UITextSizeConstraint_13 = Instance.new("UITextSizeConstraint"),
	UIStroke_48 = Instance.new("UIStroke"),
	TextButton_5 = Instance.new("TextButton"),
	UICorner_30 = Instance.new("UICorner"),
	UIAspectRatioConstraint_26 = Instance.new("UIAspectRatioConstraint"),
	UITextSizeConstraint_14 = Instance.new("UITextSizeConstraint"),
	UIAspectRatioConstraint_27 = Instance.new("UIAspectRatioConstraint"),
	TextLabel_30 = Instance.new("TextLabel"),
	UIStroke_49 = Instance.new("UIStroke"),
	UIAspectRatioConstraint_28 = Instance.new("UIAspectRatioConstraint"),
	UITextSizeConstraint_15 = Instance.new("UITextSizeConstraint"),
	TextLabel_31 = Instance.new("TextLabel"),
	UIStroke_50 = Instance.new("UIStroke"),
	UIAspectRatioConstraint_29 = Instance.new("UIAspectRatioConstraint"),
	UITextSizeConstraint_16 = Instance.new("UITextSizeConstraint"),
	TextLabel_32 = Instance.new("TextLabel"),
	UIStroke_51 = Instance.new("UIStroke"),
	UIAspectRatioConstraint_30 = Instance.new("UIAspectRatioConstraint"),
	UITextSizeConstraint_17 = Instance.new("UITextSizeConstraint"),
	ImageButton_2 = Instance.new("ImageButton"),
	UIAspectRatioConstraint_31 = Instance.new("UIAspectRatioConstraint"),
	UIStroke_52 = Instance.new("UIStroke"),
	UIAspectRatioConstraint_32 = Instance.new("UIAspectRatioConstraint"),
	UIAspectRatioConstraint_33 = Instance.new("UIAspectRatioConstraint"),
	ScriptsPage = Instance.new("Frame"),
	UICorner_31 = Instance.new("UICorner"),
	UIAspectRatioConstraint_34 = Instance.new("UIAspectRatioConstraint"),
	Frame_16 = Instance.new("Frame"),
	UIStroke_53 = Instance.new("UIStroke"),
	Frame_17 = Instance.new("Frame"),
	UICorner_32 = Instance.new("UICorner"),
	UIStroke_54 = Instance.new("UIStroke"),
	TextBox = Instance.new("TextBox"),
	ImageLabel_21 = Instance.new("ImageLabel"),
	TextLabel_33 = Instance.new("TextLabel"),
	UIStroke_55 = Instance.new("UIStroke"),
	TextLabel_34 = Instance.new("TextLabel"),
	Frame_18 = Instance.new("Frame"),
	UICorner_33 = Instance.new("UICorner"),
	UIStroke_56 = Instance.new("UIStroke"),
	updateIm = Instance.new("ImageLabel"),
	TextButton_6 = Instance.new("TextButton"),
	UICorner_34 = Instance.new("UICorner"),
	Frame_19 = Instance.new("Frame"),
	UIStroke_57 = Instance.new("UIStroke"),
	TextLabel_35 = Instance.new("TextLabel"),
	UIStroke_58 = Instance.new("UIStroke"),
	TextLabel_36 = Instance.new("TextLabel"),
	UIStroke_59 = Instance.new("UIStroke"),
	TextLabel_37 = Instance.new("TextLabel"),
	UIStroke_60 = Instance.new("UIStroke"),
	ImageLabel_22 = Instance.new("ImageLabel"),
	TopbarH2 = Instance.new("Frame"),
	WelcomeWindow = Instance.new("Frame"),
	UICorner_35 = Instance.new("UICorner"),
	welcomerFrame = Instance.new("Frame"),
	UICorner_36 = Instance.new("UICorner"),
	UIStroke_61 = Instance.new("UIStroke"),
	Page2 = Instance.new("Frame"),
	TextLabel_38 = Instance.new("TextLabel"),
	UIStroke_62 = Instance.new("UIStroke"),
	ImageLabel_23 = Instance.new("ImageLabel"),
	ImageLabel_24 = Instance.new("ImageLabel"),
	ImageLabel_25 = Instance.new("ImageLabel"),
	ImageLabel_26 = Instance.new("ImageLabel"),
	ImageLabel_27 = Instance.new("ImageLabel"),
	ImageLabel_28 = Instance.new("ImageLabel"),
	ImageLabel_29 = Instance.new("ImageLabel"),
	ImageLabel_30 = Instance.new("ImageLabel"),
	ImageLabel_31 = Instance.new("ImageLabel"),
	ImageLabel_32 = Instance.new("ImageLabel"),
	ImageLabel_33 = Instance.new("ImageLabel"),
	ImageLabel_34 = Instance.new("ImageLabel"),
	TextLabel_39 = Instance.new("TextLabel"),
	UIStroke_63 = Instance.new("UIStroke"),
	Frame_20 = Instance.new("Frame"),
	TextLabel_40 = Instance.new("TextLabel"),
	UIStroke_64 = Instance.new("UIStroke"),
	UIAspectRatioConstraint_35 = Instance.new("UIAspectRatioConstraint"),
	UITextSizeConstraint_18 = Instance.new("UITextSizeConstraint"),
	iagree = Instance.new("TextButton"),
	UICorner_37 = Instance.new("UICorner"),
	UIAspectRatioConstraint_36 = Instance.new("UIAspectRatioConstraint"),
	UITextSizeConstraint_19 = Instance.new("UITextSizeConstraint"),
	UIStroke_65 = Instance.new("UIStroke"),
	UICorner_38 = Instance.new("UICorner"),
	UIAspectRatioConstraint_37 = Instance.new("UIAspectRatioConstraint"),
	TextLabel_41 = Instance.new("TextLabel"),
	UIStroke_66 = Instance.new("UIStroke"),
	Frame_21 = Instance.new("Frame"),
	UICorner_39 = Instance.new("UICorner"),
	TextLabel_42 = Instance.new("TextLabel"),
	UIStroke_67 = Instance.new("UIStroke"),
	TextLabel_43 = Instance.new("TextLabel"),
	UIStroke_68 = Instance.new("UIStroke"),
	TextLabel_44 = Instance.new("TextLabel"),
	UIStroke_69 = Instance.new("UIStroke"),
	TextLabel_45 = Instance.new("TextLabel"),
	UIStroke_70 = Instance.new("UIStroke"),
	TextLabel_46 = Instance.new("TextLabel"),
	UIStroke_71 = Instance.new("UIStroke"),
	TextLabel_47 = Instance.new("TextLabel"),
	UIStroke_72 = Instance.new("UIStroke"),
	TextLabel_48 = Instance.new("TextLabel"),
	UIStroke_73 = Instance.new("UIStroke"),
	TextLabel_49 = Instance.new("TextLabel"),
	UIStroke_74 = Instance.new("UIStroke"),
	TextLabel_50 = Instance.new("TextLabel"),
	UIStroke_75 = Instance.new("UIStroke"),
	TextLabel_51 = Instance.new("TextLabel"),
	UIStroke_76 = Instance.new("UIStroke"),
	TextLabel_52 = Instance.new("TextLabel"),
	UIStroke_77 = Instance.new("UIStroke"),
	TextLabel_53 = Instance.new("TextLabel"),
	UIStroke_78 = Instance.new("UIStroke"),
	TextLabel_54 = Instance.new("TextLabel"),
	UIStroke_79 = Instance.new("UIStroke"),
	ImageLabel_35 = Instance.new("ImageLabel"),
	TextLabel_55 = Instance.new("TextLabel"),
	UIStroke_80 = Instance.new("UIStroke"),
	TextLabel_56 = Instance.new("TextLabel"),
	UIStroke_81 = Instance.new("UIStroke"),
	TextLabel_57 = Instance.new("TextLabel"),
	UIStroke_82 = Instance.new("UIStroke"),
	TextLabel_58 = Instance.new("TextLabel"),
	UIStroke_83 = Instance.new("UIStroke"),
	UITextSizeConstraint_20 = Instance.new("UITextSizeConstraint"),
	UIAspectRatioConstraint_38 = Instance.new("UIAspectRatioConstraint"),
	SettingsPage = Instance.new("Frame"),
	UICorner_40 = Instance.new("UICorner"),
	UIAspectRatioConstraint_39 = Instance.new("UIAspectRatioConstraint"),
	TextLabel_59 = Instance.new("TextLabel"),
	UIStroke_84 = Instance.new("UIStroke"),
	UITextSizeConstraint_21 = Instance.new("UITextSizeConstraint"),
	f1 = Instance.new("Frame"),
	UIStroke_85 = Instance.new("UIStroke"),
	TextLabel_60 = Instance.new("TextLabel"),
	UIStroke_86 = Instance.new("UIStroke"),
	UIAspectRatioConstraint_40 = Instance.new("UIAspectRatioConstraint"),
	UITextSizeConstraint_22 = Instance.new("UITextSizeConstraint"),
	TextLabel_61 = Instance.new("TextLabel"),
	UIStroke_87 = Instance.new("UIStroke"),
	UITextSizeConstraint_23 = Instance.new("UITextSizeConstraint"),
	ToggleBar = Instance.new("ImageButton"),
	UIAspectRatioConstraint_41 = Instance.new("UIAspectRatioConstraint"),
	UIAspectRatioConstraint_42 = Instance.new("UIAspectRatioConstraint"),
	cOE = Instance.new("Frame"),
	UIStroke_88 = Instance.new("UIStroke"),
	TextLabel_62 = Instance.new("TextLabel"),
	UIStroke_89 = Instance.new("UIStroke"),
	UIAspectRatioConstraint_43 = Instance.new("UIAspectRatioConstraint"),
	UITextSizeConstraint_24 = Instance.new("UITextSizeConstraint"),
	TextLabel_63 = Instance.new("TextLabel"),
	UIStroke_90 = Instance.new("UIStroke"),
	UITextSizeConstraint_25 = Instance.new("UITextSizeConstraint"),
	on = Instance.new("ImageButton"),
	UIAspectRatioConstraint_44 = Instance.new("UIAspectRatioConstraint"),
	ToggleBar_2 = Instance.new("ImageButton"),
	UIAspectRatioConstraint_45 = Instance.new("UIAspectRatioConstraint"),
	UIAspectRatioConstraint_46 = Instance.new("UIAspectRatioConstraint"),
	f3 = Instance.new("Frame"),
	UIStroke_91 = Instance.new("UIStroke"),
	TextLabel_64 = Instance.new("TextLabel"),
	UIStroke_92 = Instance.new("UIStroke"),
	UITextSizeConstraint_26 = Instance.new("UITextSizeConstraint"),
	TextLabel_65 = Instance.new("TextLabel"),
	UIStroke_93 = Instance.new("UIStroke"),
	UITextSizeConstraint_27 = Instance.new("UITextSizeConstraint"),
	on_2 = Instance.new("ImageButton"),
	UIAspectRatioConstraint_47 = Instance.new("UIAspectRatioConstraint"),
	ToggleBar_3 = Instance.new("ImageButton"),
	UIAspectRatioConstraint_48 = Instance.new("UIAspectRatioConstraint"),
	UIAspectRatioConstraint_49 = Instance.new("UIAspectRatioConstraint"),
	newLabel = Instance.new("TextLabel"),
	UIStroke_94 = Instance.new("UIStroke"),
	UITextSizeConstraint_28 = Instance.new("UITextSizeConstraint"),
	UICorner_41 = Instance.new("UICorner"),
	f4 = Instance.new("Frame"),
	UIStroke_95 = Instance.new("UIStroke"),
	TextLabel_66 = Instance.new("TextLabel"),
	UIStroke_96 = Instance.new("UIStroke"),
	UITextSizeConstraint_29 = Instance.new("UITextSizeConstraint"),
	TextLabel_67 = Instance.new("TextLabel"),
	UIStroke_97 = Instance.new("UIStroke"),
	UITextSizeConstraint_30 = Instance.new("UITextSizeConstraint"),
	on_3 = Instance.new("ImageButton"),
	UIAspectRatioConstraint_50 = Instance.new("UIAspectRatioConstraint"),
	ToggleBar_4 = Instance.new("ImageButton"),
	UIAspectRatioConstraint_51 = Instance.new("UIAspectRatioConstraint"),
	UIAspectRatioConstraint_52 = Instance.new("UIAspectRatioConstraint"),
	newLabel_2 = Instance.new("TextLabel"),
	UIStroke_98 = Instance.new("UIStroke"),
	UITextSizeConstraint_31 = Instance.new("UITextSizeConstraint"),
	UICorner_42 = Instance.new("UICorner"),
	EditorPage = Instance.new("Frame"),
	UICorner_43 = Instance.new("UICorner"),
	Editor = Instance.new("Frame"),
	UIAspectRatioConstraint_53 = Instance.new("UIAspectRatioConstraint"),
	ScrollingFrame = Instance.new("ScrollingFrame"),
	TextBox_2 = Instance.new("TextBox"),
	Frame_22 = Instance.new("Frame"),
	UIStroke_99 = Instance.new("UIStroke"),
	UICorner_44 = Instance.new("UICorner"),
	executeF = Instance.new("Frame"),
	UIStroke_100 = Instance.new("UIStroke"),
	TextLabel_68 = Instance.new("TextLabel"),
	UIStroke_101 = Instance.new("UIStroke"),
	UIAspectRatioConstraint_54 = Instance.new("UIAspectRatioConstraint"),
	UITextSizeConstraint_32 = Instance.new("UITextSizeConstraint"),
	ImageLabel_36 = Instance.new("ImageLabel"),
	UIAspectRatioConstraint_55 = Instance.new("UIAspectRatioConstraint"),
	ExecuteBtn = Instance.new("TextButton"),
	UIAspectRatioConstraint_56 = Instance.new("UIAspectRatioConstraint"),
	UITextSizeConstraint_33 = Instance.new("UITextSizeConstraint"),
	UIAspectRatioConstraint_57 = Instance.new("UIAspectRatioConstraint"),
	clearF = Instance.new("Frame"),
	UIStroke_102 = Instance.new("UIStroke"),
	TextLabel_69 = Instance.new("TextLabel"),
	UIStroke_103 = Instance.new("UIStroke"),
	UIAspectRatioConstraint_58 = Instance.new("UIAspectRatioConstraint"),
	UITextSizeConstraint_34 = Instance.new("UITextSizeConstraint"),
	ImageLabel_37 = Instance.new("ImageLabel"),
	UIAspectRatioConstraint_59 = Instance.new("UIAspectRatioConstraint"),
	clearBtn = Instance.new("TextButton"),
	UIAspectRatioConstraint_60 = Instance.new("UIAspectRatioConstraint"),
	TextLabel_70 = Instance.new("TextLabel"),
	UIStroke_104 = Instance.new("UIStroke"),
	UIAspectRatioConstraint_61 = Instance.new("UIAspectRatioConstraint"),
	UITextSizeConstraint_35 = Instance.new("UITextSizeConstraint"),
	ImageLabel_38 = Instance.new("ImageLabel"),
	UIAspectRatioConstraint_62 = Instance.new("UIAspectRatioConstraint"),
	saveBtn = Instance.new("TextButton"),
	UIAspectRatioConstraint_63 = Instance.new("UIAspectRatioConstraint"),
	UITextSizeConstraint_36 = Instance.new("UITextSizeConstraint"),
	UIAspectRatioConstraint_64 = Instance.new("UIAspectRatioConstraint"),
	UIAspectRatioConstraint_65 = Instance.new("UIAspectRatioConstraint"),
	preview = Instance.new("Frame"),
	UIStroke_105 = Instance.new("UIStroke"),
	TextBox_3 = Instance.new("TextBox"),
	UIAspectRatioConstraint_66 = Instance.new("UIAspectRatioConstraint"),
	UITextSizeConstraint_37 = Instance.new("UITextSizeConstraint"),
	UIAspectRatioConstraint_67 = Instance.new("UIAspectRatioConstraint"),
	OpenKr = Instance.new("Frame"),
	UICorner_45 = Instance.new("UICorner"),
	ImageLabel_39 = Instance.new("ImageLabel"),
	UIAspectRatioConstraint_68 = Instance.new("UIAspectRatioConstraint"),
	openBtn = Instance.new("TextButton"),
	UICorner_46 = Instance.new("UICorner"),
	UIAspectRatioConstraint_69 = Instance.new("UIAspectRatioConstraint"),
}

--Properties:

kr.kr.Name = "kr"
kr.kr.Parent = (game:GetService("CoreGui") or gethui())
kr.kr.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
kr.kr.ResetOnSpawn = false

kr.MainMenu.Name = "MainMenu"
kr.MainMenu.Parent = kr.kr
kr.MainMenu.BackgroundColor3 = Color3.fromRGB(26, 27, 31)
kr.MainMenu.ClipsDescendants = true
kr.MainMenu.Position = UDim2.new(0, 59, 0, 10)
kr.MainMenu.Size = UDim2.new(0, 554, 0, 339)
kr.MainMenu.Image = "rbxassetid://13627476228"

kr.UICorner.CornerRadius = UDim.new(0, 12)
kr.UICorner.Parent = kr.MainMenu

kr.HomePage.Name = "HomePage"
kr.HomePage.Parent = kr.MainMenu
kr.HomePage.BackgroundColor3 = Color3.fromRGB(26, 27, 32)
kr.HomePage.BorderColor3 = Color3.fromRGB(23, 24, 27)
kr.HomePage.Position = UDim2.new(0, 112, 0, 41)
kr.HomePage.Size = UDim2.new(0, 445, 0, 295)
kr.HomePage.Visible = false

kr.UICorner_2.CornerRadius = UDim.new(0, 12)
kr.UICorner_2.Parent = kr.HomePage

kr.Frame.Parent = kr.HomePage
kr.Frame.BackgroundColor3 = Color3.fromRGB(26, 27, 32)
kr.Frame.BorderColor3 = Color3.fromRGB(23, 24, 27)
kr.Frame.Position = UDim2.new(0, 43, 0, 40)
kr.Frame.Size = UDim2.new(0, 194, 0, 68)

kr.UICorner_3.Parent = kr.Frame

kr.Frame_2.Parent = kr.Frame
kr.Frame_2.BackgroundColor3 = Color3.fromRGB(4, 97, 67)
kr.Frame_2.ClipsDescendants = true
kr.Frame_2.Position = UDim2.new(0, 7, 0, 45)
kr.Frame_2.Size = UDim2.new(0, 179, 0, 14)

kr.UICorner_4.CornerRadius = UDim.new(0, 12)
kr.UICorner_4.Parent = kr.Frame_2

kr.TextLabel.Parent = kr.Frame_2
kr.TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel.BackgroundTransparency = 1.000
kr.TextLabel.Position = UDim2.new(0.139664799, 0, 0.13325718, 0)
kr.TextLabel.Size = UDim2.new(0, 128, 0, 9)
kr.TextLabel.Font = Enum.Font.GothamBold
kr.TextLabel.Text = "100%"
kr.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel.TextSize = 10.000

kr.UIStroke.Transparency = 0.800
kr.UIStroke.Parent = kr.TextLabel

kr.UIStroke_2.Transparency = 0.800
kr.UIStroke_2.Parent = kr.Frame_2

kr.Pattern.Name = "Pattern"
kr.Pattern.Parent = kr.Frame_2
kr.Pattern.BackgroundColor3 = Color3.fromRGB(5, 122, 85)
kr.Pattern.BackgroundTransparency = 1.000
kr.Pattern.Position = UDim2.new(0.0019514201, 0, 0.0350167416, 0)
kr.Pattern.Size = UDim2.new(0, 179, 0, 14)
kr.Pattern.ZIndex = 0
kr.Pattern.Image = "rbxassetid://300134974"
kr.Pattern.ImageColor3 = Color3.fromRGB(5, 122, 85)
kr.Pattern.ImageTransparency = 0.600
kr.Pattern.ScaleType = Enum.ScaleType.Tile
kr.Pattern.SliceCenter = Rect.new(0, 256, 0, 256)
kr.Pattern.TileSize = UDim2.new(0, 90, 0, 90)

kr.UICorner_5.CornerRadius = UDim.new(0, 12)
kr.UICorner_5.Parent = kr.Pattern

kr.ImageLabel.Parent = kr.Frame
kr.ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ImageLabel.BackgroundTransparency = 1.000
kr.ImageLabel.Position = UDim2.new(0, 3, 0, 15)
kr.ImageLabel.Size = UDim2.new(0, 34, 0, 19)
kr.ImageLabel.Image = "http://www.roblox.com/asset/?id=6034983856"
kr.ImageLabel.ImageColor3 = Color3.fromRGB(164, 165, 173)
kr.ImageLabel.ScaleType = Enum.ScaleType.Fit

kr.UIAspectRatioConstraint.Parent = kr.ImageLabel
kr.UIAspectRatioConstraint.AspectRatio = 1.938

kr.UIStroke_3.Color = Color3.fromRGB(43, 43, 50)
kr.UIStroke_3.Thickness = 1.700
kr.UIStroke_3.Parent = kr.Frame

kr.TextLabel_2.Parent = kr.Frame
kr.TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_2.BackgroundTransparency = 1.000
kr.TextLabel_2.Position = UDim2.new(0, 32, 0, 19)
kr.TextLabel_2.Size = UDim2.new(0, 72, 0, 12)
kr.TextLabel_2.ZIndex = 4
kr.TextLabel_2.Font = Enum.Font.Arial
kr.TextLabel_2.Text = "Key expires"
kr.TextLabel_2.TextColor3 = Color3.fromRGB(186, 188, 197)
kr.TextLabel_2.TextSize = 13.000
kr.TextLabel_2.TextWrapped = true

kr.UIStroke_4.Transparency = 0.700
kr.UIStroke_4.Parent = kr.TextLabel_2

kr.TextLabel_3.Parent = kr.Frame
kr.TextLabel_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_3.BackgroundTransparency = 1.000
kr.TextLabel_3.Position = UDim2.new(0, 104, 0, 20)
kr.TextLabel_3.Size = UDim2.new(0, 62, 0, 10)
kr.TextLabel_3.ZIndex = 4
kr.TextLabel_3.Font = Enum.Font.ArialBold
kr.TextLabel_3.Text = "in Never."
kr.TextLabel_3.TextColor3 = Color3.fromRGB(198, 200, 209)
kr.TextLabel_3.TextSize = 13.000
kr.TextLabel_3.TextWrapped = true

kr.UIStroke_5.Transparency = 0.300
kr.UIStroke_5.Parent = kr.TextLabel_3

kr.Frame_3.Parent = kr.HomePage
kr.Frame_3.BackgroundColor3 = Color3.fromRGB(26, 27, 32)
kr.Frame_3.BorderColor3 = Color3.fromRGB(23, 24, 27)
kr.Frame_3.ClipsDescendants = true
kr.Frame_3.Position = UDim2.new(0, 245, 0, 40)
kr.Frame_3.Size = UDim2.new(0, 185, 0, 67)

kr.UICorner_6.CornerRadius = UDim.new(0, 6)
kr.UICorner_6.Parent = kr.Frame_3

kr.Frame_4.Parent = kr.Frame_3
kr.Frame_4.BackgroundColor3 = Color3.fromRGB(53, 56, 63)
kr.Frame_4.Position = UDim2.new(-0.00648886198, 0, 0.523407757, 0)
kr.Frame_4.Size = UDim2.new(0, 186, 0, 32)
kr.Frame_4.ZIndex = 4

kr.UICorner_7.CornerRadius = UDim.new(0, 6)
kr.UICorner_7.Parent = kr.Frame_4

kr.TextLabel_4.Parent = kr.Frame_4
kr.TextLabel_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_4.BackgroundTransparency = 1.000
kr.TextLabel_4.Position = UDim2.new(0.0664656386, 0, 0.167711258, 0)
kr.TextLabel_4.Size = UDim2.new(0, 174, 0, 21)
kr.TextLabel_4.ZIndex = 999999999
kr.TextLabel_4.Font = Enum.Font.Gotham
kr.TextLabel_4.Text = "Execute Latest Script"
kr.TextLabel_4.TextColor3 = Color3.fromRGB(13, 14, 15)
kr.TextLabel_4.TextSize = 12.000

kr.UIStroke_6.Color = Color3.fromRGB(13, 14, 15)
kr.UIStroke_6.Thickness = 0.100
kr.UIStroke_6.Parent = kr.TextLabel_4

kr.ImageLabel_2.Parent = kr.Frame_4
kr.ImageLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ImageLabel_2.BackgroundTransparency = 1.000
kr.ImageLabel_2.Position = UDim2.new(0, 11, 0, 8)
kr.ImageLabel_2.Size = UDim2.new(0, 16, 0, 15)
kr.ImageLabel_2.ZIndex = 999999999
kr.ImageLabel_2.Image = "rbxassetid://13608803748"
kr.ImageLabel_2.ImageColor3 = Color3.fromRGB(13, 14, 15)

kr.Frame_5.Parent = kr.Frame_3
kr.Frame_5.BackgroundColor3 = Color3.fromRGB(53, 56, 63)
kr.Frame_5.BorderSizePixel = 0
kr.Frame_5.Position = UDim2.new(0, 0, 0.523407876, 0)
kr.Frame_5.Size = UDim2.new(0, 185, 0, 4)

kr.UIStroke_7.Transparency = 0.900
kr.UIStroke_7.Parent = kr.Frame_5

kr.ImageLabel_3.Parent = kr.Frame_3
kr.ImageLabel_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ImageLabel_3.BackgroundTransparency = 1.000
kr.ImageLabel_3.Position = UDim2.new(0, 10, 0, 10)
kr.ImageLabel_3.Size = UDim2.new(0, 17, 0, 15)
kr.ImageLabel_3.ZIndex = 999999999
kr.ImageLabel_3.Image = "rbxassetid://13609547556"

kr.UIStroke_8.Color = Color3.fromRGB(43, 43, 50)
kr.UIStroke_8.Thickness = 1.700
kr.UIStroke_8.Parent = kr.Frame_3

kr.TextLabel_5.Parent = kr.Frame_3
kr.TextLabel_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_5.BackgroundTransparency = 1.000
kr.TextLabel_5.Position = UDim2.new(0.0178047791, 0, 0.0449763052, 0)
kr.TextLabel_5.Size = UDim2.new(0, 193, 0, 31)
kr.TextLabel_5.ZIndex = 99999999
kr.TextLabel_5.Font = Enum.Font.ArialBold
kr.TextLabel_5.Text = "Execute from Clipboard"
kr.TextLabel_5.TextColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_5.TextSize = 12.000

kr.UIStroke_9.Transparency = 0.700
kr.UIStroke_9.Parent = kr.TextLabel_5

kr.ImageLabel_4.Parent = kr.Frame_3
kr.ImageLabel_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ImageLabel_4.BackgroundTransparency = 1.000
kr.ImageLabel_4.Position = UDim2.new(0, 10, 0, 10)
kr.ImageLabel_4.Size = UDim2.new(0, 17, 0, 15)
kr.ImageLabel_4.ZIndex = 999999999
kr.ImageLabel_4.Image = "rbxassetid://13609547556"

kr.UIAspectRatioConstraint_2.Parent = kr.HomePage
kr.UIAspectRatioConstraint_2.AspectRatio = 1.493

kr.Frame_6.Parent = kr.HomePage
kr.Frame_6.BackgroundColor3 = Color3.fromRGB(26, 27, 32)
kr.Frame_6.BorderColor3 = Color3.fromRGB(23, 24, 27)
kr.Frame_6.ClipsDescendants = true
kr.Frame_6.Position = UDim2.new(0, 43, 0, 137)
kr.Frame_6.Size = UDim2.new(0, 387, 0, 151)

kr.UICorner_8.CornerRadius = UDim.new(0, 6)
kr.UICorner_8.Parent = kr.Frame_6

kr.UIStroke_10.Color = Color3.fromRGB(43, 43, 50)
kr.UIStroke_10.Thickness = 1.700
kr.UIStroke_10.Parent = kr.Frame_6

kr.Frame_7.Parent = kr.Frame_6
kr.Frame_7.BackgroundColor3 = Color3.fromRGB(26, 27, 32)
kr.Frame_7.ClipsDescendants = true
kr.Frame_7.Position = UDim2.new(0, 0, 0.226779759, 0)
kr.Frame_7.Size = UDim2.new(0, 387, 0, 3)
kr.Frame_7.ZIndex = 99

kr.UICorner_9.CornerRadius = UDim.new(0, 6)
kr.UICorner_9.Parent = kr.Frame_7

kr.UIStroke_11.Color = Color3.fromRGB(38, 37, 44)
kr.UIStroke_11.Thickness = 1.400
kr.UIStroke_11.Parent = kr.Frame_7

kr.Frame_8.Parent = kr.Frame_6
kr.Frame_8.BackgroundColor3 = Color3.fromRGB(26, 27, 32)
kr.Frame_8.BorderColor3 = Color3.fromRGB(23, 24, 27)
kr.Frame_8.ClipsDescendants = true
kr.Frame_8.Position = UDim2.new(0, 0, 0.00196120911, 0)
kr.Frame_8.Size = UDim2.new(0, 387, 0, 36)
kr.Frame_8.ZIndex = 100

kr.UICorner_10.CornerRadius = UDim.new(0, 6)
kr.UICorner_10.Parent = kr.Frame_8

kr.sF.Name = "sF"
kr.sF.Parent = kr.Frame_8
kr.sF.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.sF.Position = UDim2.new(0.00775193796, 0, 0.0792202428, 0)
kr.sF.Size = UDim2.new(0, 148, 0, 31)

kr.UICorner_11.CornerRadius = UDim.new(0, 5)
kr.UICorner_11.Parent = kr.sF

kr.UIStroke_12.Transparency = 0.800
kr.UIStroke_12.Parent = kr.sF

kr.TextLabel_6.Parent = kr.sF
kr.TextLabel_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_6.BackgroundTransparency = 1.000
kr.TextLabel_6.Position = UDim2.new(0.191592261, 0, 0.13535136, 0)
kr.TextLabel_6.Size = UDim2.new(0, 108, 0, 22)
kr.TextLabel_6.Font = Enum.Font.Gotham
kr.TextLabel_6.Text = "Saved (0)"
kr.TextLabel_6.TextColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_6.TextSize = 14.000

kr.UIStroke_13.Transparency = 0.500
kr.UIStroke_13.Parent = kr.TextLabel_6

kr.TextLabel_7.Parent = kr.sF
kr.TextLabel_7.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_7.BackgroundTransparency = 1.000
kr.TextLabel_7.Position = UDim2.new(0.191592261, 0, 0.13535136, 0)
kr.TextLabel_7.Size = UDim2.new(0, 108, 0, 22)
kr.TextLabel_7.Font = Enum.Font.Gotham
kr.TextLabel_7.Text = "Saved (0)"
kr.TextLabel_7.TextColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_7.TextSize = 14.000

kr.UIStroke_14.Transparency = 0.500
kr.UIStroke_14.Parent = kr.TextLabel_7

kr.UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(45, 45, 53)), ColorSequenceKeypoint.new(0.42, Color3.fromRGB(40, 40, 47)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(52, 52, 61))}
kr.UIGradient.Parent = kr.sF

kr.ImageLabel_5.Parent = kr.sF
kr.ImageLabel_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ImageLabel_5.BackgroundTransparency = 1.000
kr.ImageLabel_5.Position = UDim2.new(0, 25, 0, 7)
kr.ImageLabel_5.Size = UDim2.new(0, 18, 0, 18)
kr.ImageLabel_5.ZIndex = 999999999
kr.ImageLabel_5.Image = "rbxassetid://13608708787"

kr.fF.Name = "fF"
kr.fF.Parent = kr.Frame_8
kr.fF.BackgroundColor3 = Color3.fromRGB(26, 27, 32)
kr.fF.Position = UDim2.new(0, 236, 0, 3)
kr.fF.Size = UDim2.new(0, 148, 0, 31)

kr.UICorner_12.CornerRadius = UDim.new(0, 5)
kr.UICorner_12.Parent = kr.fF

kr.UIStroke_15.Transparency = 0.800
kr.UIStroke_15.Parent = kr.fF

kr.TextLabel_8.Parent = kr.fF
kr.TextLabel_8.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_8.BackgroundTransparency = 1.000
kr.TextLabel_8.Position = UDim2.new(0.191592261, 0, 0.13535136, 0)
kr.TextLabel_8.Size = UDim2.new(0, 108, 0, 22)
kr.TextLabel_8.Font = Enum.Font.Gotham
kr.TextLabel_8.Text = "Favourites (0)"
kr.TextLabel_8.TextColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_8.TextSize = 14.000

kr.UIStroke_16.Transparency = 0.500
kr.UIStroke_16.Parent = kr.TextLabel_8

kr.TextLabel_9.Parent = kr.fF
kr.TextLabel_9.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_9.BackgroundTransparency = 1.000
kr.TextLabel_9.Position = UDim2.new(0.191592261, 0, 0.13535136, 0)
kr.TextLabel_9.Size = UDim2.new(0, 108, 0, 22)
kr.TextLabel_9.Font = Enum.Font.Gotham
kr.TextLabel_9.Text = "Favourites (0)"
kr.TextLabel_9.TextColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_9.TextSize = 14.000

kr.UIStroke_17.Transparency = 0.500
kr.UIStroke_17.Parent = kr.TextLabel_9

kr.UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(45, 45, 53)), ColorSequenceKeypoint.new(0.50, Color3.fromRGB(40, 40, 47)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(52, 52, 61))}
kr.UIGradient_2.Parent = kr.fF

kr.ImageLabel_6.Parent = kr.fF
kr.ImageLabel_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ImageLabel_6.BackgroundTransparency = 1.000
kr.ImageLabel_6.Position = UDim2.new(0, 14, 0, 7)
kr.ImageLabel_6.Size = UDim2.new(0, 15, 0, 16)
kr.ImageLabel_6.ZIndex = 999999999
kr.ImageLabel_6.Image = "rbxassetid://13609564583"

kr.hF.Name = "hF"
kr.hF.Parent = kr.Frame_8
kr.hF.BackgroundColor3 = Color3.fromRGB(26, 27, 32)
kr.hF.Position = UDim2.new(0, 157, 0, 3)
kr.hF.Size = UDim2.new(0, 73, 0, 31)

kr.UICorner_13.CornerRadius = UDim.new(0, 5)
kr.UICorner_13.Parent = kr.hF

kr.UIStroke_18.Transparency = 0.800
kr.UIStroke_18.Parent = kr.hF

kr.TextLabel_10.Parent = kr.hF
kr.TextLabel_10.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_10.BackgroundTransparency = 1.000
kr.TextLabel_10.Position = UDim2.new(0.328641713, 0, 0.204716831, 0)
kr.TextLabel_10.Size = UDim2.new(0, 50, 0, 18)
kr.TextLabel_10.Font = Enum.Font.Gotham
kr.TextLabel_10.Text = "Hub"
kr.TextLabel_10.TextColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_10.TextSize = 14.000

kr.UIStroke_19.Transparency = 0.500
kr.UIStroke_19.Parent = kr.TextLabel_10

kr.UIGradient_3.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(45, 45, 53)), ColorSequenceKeypoint.new(0.48, Color3.fromRGB(40, 40, 47)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(52, 52, 61))}
kr.UIGradient_3.Parent = kr.hF

kr.ImageLabel_7.Parent = kr.hF
kr.ImageLabel_7.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ImageLabel_7.BackgroundTransparency = 1.000
kr.ImageLabel_7.Position = UDim2.new(0, 9, 0, 8)
kr.ImageLabel_7.Size = UDim2.new(0, 18, 0, 18)
kr.ImageLabel_7.ZIndex = 999999999
kr.ImageLabel_7.Image = "rbxassetid://13588228646"

kr.TextLabel_11.Parent = kr.hF
kr.TextLabel_11.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_11.BackgroundTransparency = 1.000
kr.TextLabel_11.Position = UDim2.new(0.328641713, 0, 0.204716831, 0)
kr.TextLabel_11.Size = UDim2.new(0, 50, 0, 18)
kr.TextLabel_11.Font = Enum.Font.Gotham
kr.TextLabel_11.Text = "Hub"
kr.TextLabel_11.TextColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_11.TextSize = 14.000

kr.UIStroke_20.Transparency = 0.500
kr.UIStroke_20.Parent = kr.TextLabel_11

kr.SavedBtn.Name = "SavedBtn"
kr.SavedBtn.Parent = kr.Frame_8
kr.SavedBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.SavedBtn.BackgroundTransparency = 1.000
kr.SavedBtn.Position = UDim2.new(0.00994746853, 0, 0.104214139, 0)
kr.SavedBtn.Size = UDim2.new(0, 148, 0, 29)
kr.SavedBtn.ZIndex = 999999999
kr.SavedBtn.Font = Enum.Font.SourceSansBold
kr.SavedBtn.Text = "  "
kr.SavedBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
kr.SavedBtn.TextSize = 14.000

kr.HubBtn.Name = "HubBtn"
kr.HubBtn.Parent = kr.Frame_8
kr.HubBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.HubBtn.BackgroundTransparency = 1.000
kr.HubBtn.Position = UDim2.new(0.402223736, 0, 0.104214139, 0)
kr.HubBtn.Size = UDim2.new(0, 78, 0, 29)
kr.HubBtn.ZIndex = 999999999
kr.HubBtn.Font = Enum.Font.SourceSansBold
kr.HubBtn.Text = "  "
kr.HubBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
kr.HubBtn.TextSize = 14.000

kr.favBtn.Name = "favBtn"
kr.favBtn.Parent = kr.Frame_8
kr.favBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.favBtn.BackgroundTransparency = 1.000
kr.favBtn.Position = UDim2.new(0.62054348, 0, 0.104214139, 0)
kr.favBtn.Size = UDim2.new(0, 141, 0, 29)
kr.favBtn.ZIndex = 999999999
kr.favBtn.Font = Enum.Font.SourceSansBold
kr.favBtn.Text = "  "
kr.favBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
kr.favBtn.TextSize = 14.000

kr.saved.Name = "saved"
kr.saved.Parent = kr.Frame_6
kr.saved.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.saved.Position = UDim2.new(0, 0, 0.239360884, 0)
kr.saved.Size = UDim2.new(0, 387, 0, 114)

kr.UICorner_14.CornerRadius = UDim.new(0, 6)
kr.UICorner_14.Parent = kr.saved

kr.UIGradient_4.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(26, 27, 32)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(28, 29, 34))}
kr.UIGradient_4.Rotation = 18.27263832092285
kr.UIGradient_4.Parent = kr.saved

kr.ImageLabel_8.Parent = kr.saved
kr.ImageLabel_8.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ImageLabel_8.BackgroundTransparency = 1.000
kr.ImageLabel_8.Position = UDim2.new(0.43818748, 0, 0.448521078, 0)
kr.ImageLabel_8.Size = UDim2.new(0, 22, 0, 19)
kr.ImageLabel_8.Image = "rbxassetid://13600494312"
kr.ImageLabel_8.ImageColor3 = Color3.fromRGB(108, 112, 132)

kr.TextLabel_12.Parent = kr.saved
kr.TextLabel_12.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_12.BackgroundTransparency = 1.000
kr.TextLabel_12.Position = UDim2.new(0.334928453, 0, 0.587126255, 0)
kr.TextLabel_12.Size = UDim2.new(0, 106, 0, 20)
kr.TextLabel_12.Font = Enum.Font.Gotham
kr.TextLabel_12.Text = "Nothing saved here yet."
kr.TextLabel_12.TextColor3 = Color3.fromRGB(142, 147, 173)
kr.TextLabel_12.TextSize = 13.000

kr.UIStroke_21.Transparency = 0.700
kr.UIStroke_21.Parent = kr.TextLabel_12

kr.Favourites.Name = "Favourites"
kr.Favourites.Parent = kr.Frame_6
kr.Favourites.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.Favourites.Position = UDim2.new(0, 0, 0.239360884, 0)
kr.Favourites.Size = UDim2.new(0, 387, 0, 114)
kr.Favourites.Visible = false

kr.UICorner_15.CornerRadius = UDim.new(0, 6)
kr.UICorner_15.Parent = kr.Favourites

kr.UIGradient_5.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(26, 27, 32)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(28, 29, 34))}
kr.UIGradient_5.Rotation = 18.27263832092285
kr.UIGradient_5.Parent = kr.Favourites

kr.ImageLabel_9.Parent = kr.Favourites
kr.ImageLabel_9.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ImageLabel_9.BackgroundTransparency = 1.000
kr.ImageLabel_9.Position = UDim2.new(0.43818748, 0, 0.410196394, 0)
kr.ImageLabel_9.Size = UDim2.new(0, 22, 0, 23)
kr.ImageLabel_9.Image = "http://www.roblox.com/asset/?id=6031068425"
kr.ImageLabel_9.ImageColor3 = Color3.fromRGB(108, 112, 132)

kr.TextLabel_13.Parent = kr.Favourites
kr.TextLabel_13.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_13.BackgroundTransparency = 1.000
kr.TextLabel_13.Position = UDim2.new(0.334928453, 0, 0.587126255, 0)
kr.TextLabel_13.Size = UDim2.new(0, 106, 0, 20)
kr.TextLabel_13.Font = Enum.Font.Gotham
kr.TextLabel_13.Text = "You didn't favor anything."
kr.TextLabel_13.TextColor3 = Color3.fromRGB(142, 147, 173)
kr.TextLabel_13.TextSize = 13.000

kr.UIStroke_22.Transparency = 0.700
kr.UIStroke_22.Parent = kr.TextLabel_13

kr.Hub.Name = "Hub"
kr.Hub.Parent = kr.Frame_6
kr.Hub.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.Hub.Position = UDim2.new(0, 0, 0.239360884, 0)
kr.Hub.Size = UDim2.new(0, 387, 0, 114)
kr.Hub.Visible = false

kr.UICorner_16.CornerRadius = UDim.new(0, 6)
kr.UICorner_16.Parent = kr.Hub

kr.UIGradient_6.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(26, 27, 32)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(28, 29, 34))}
kr.UIGradient_6.Rotation = 18.27263832092285
kr.UIGradient_6.Parent = kr.Hub

kr.TextLabel_14.Parent = kr.Hub
kr.TextLabel_14.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_14.BackgroundTransparency = 1.000
kr.TextLabel_14.Position = UDim2.new(0.334928453, 0, 0.587126255, 0)
kr.TextLabel_14.Size = UDim2.new(0, 106, 0, 20)
kr.TextLabel_14.Font = Enum.Font.Gotham
kr.TextLabel_14.Text = "Scripthub"
kr.TextLabel_14.TextColor3 = Color3.fromRGB(142, 147, 173)
kr.TextLabel_14.TextSize = 13.000

kr.UIStroke_23.Transparency = 0.700
kr.UIStroke_23.Parent = kr.TextLabel_14

kr.ImageLabel_10.Parent = kr.Hub
kr.ImageLabel_10.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ImageLabel_10.BackgroundTransparency = 1.000
kr.ImageLabel_10.Position = UDim2.new(0.43818748, 0, 0.41896832, 0)
kr.ImageLabel_10.Size = UDim2.new(0, 22, 0, 22)
kr.ImageLabel_10.Image = "rbxassetid://13588228646"
kr.ImageLabel_10.ImageColor3 = Color3.fromRGB(108, 112, 132)

kr.TextLabel_15.Parent = kr.HomePage
kr.TextLabel_15.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_15.BackgroundTransparency = 1.000
kr.TextLabel_15.Position = UDim2.new(0, 36, 0, 118)
kr.TextLabel_15.Size = UDim2.new(0, 111, 0, 11)
kr.TextLabel_15.ZIndex = 4
kr.TextLabel_15.Font = Enum.Font.Arial
kr.TextLabel_15.Text = "Script Launcher"
kr.TextLabel_15.TextColor3 = Color3.fromRGB(211, 213, 222)
kr.TextLabel_15.TextSize = 13.000
kr.TextLabel_15.TextWrapped = true

kr.UIStroke_24.Transparency = 0.800
kr.UIStroke_24.Parent = kr.TextLabel_15

kr.TextLabel_16.Parent = kr.HomePage
kr.TextLabel_16.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_16.BackgroundTransparency = 1.000
kr.TextLabel_16.Position = UDim2.new(0, 33, 0, 22)
kr.TextLabel_16.Size = UDim2.new(0, 140, 0, 13)
kr.TextLabel_16.ZIndex = 4
kr.TextLabel_16.Font = Enum.Font.Arial
kr.TextLabel_16.Text = "License Key Status"
kr.TextLabel_16.TextColor3 = Color3.fromRGB(190, 192, 200)
kr.TextLabel_16.TextSize = 13.000
kr.TextLabel_16.TextWrapped = true

kr.UIStroke_25.Transparency = 0.800
kr.UIStroke_25.Parent = kr.TextLabel_16

kr.TextLabel_17.Parent = kr.HomePage
kr.TextLabel_17.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_17.BackgroundTransparency = 1.000
kr.TextLabel_17.Position = UDim2.new(0, 227, 0, 20)
kr.TextLabel_17.Size = UDim2.new(0, 122, 0, 17)
kr.TextLabel_17.ZIndex = 4
kr.TextLabel_17.Font = Enum.Font.Arial
kr.TextLabel_17.Text = "Quick Actions"
kr.TextLabel_17.TextColor3 = Color3.fromRGB(190, 192, 200)
kr.TextLabel_17.TextSize = 13.000
kr.TextLabel_17.TextWrapped = true

kr.UIStroke_26.Transparency = 0.800
kr.UIStroke_26.Parent = kr.TextLabel_17

kr.Sidebar.Name = "Sidebar"
kr.Sidebar.Parent = kr.MainMenu
kr.Sidebar.BackgroundColor3 = Color3.fromRGB(26, 27, 31)
kr.Sidebar.BorderColor3 = Color3.fromRGB(23, 24, 27)
kr.Sidebar.BorderSizePixel = 0
kr.Sidebar.Position = UDim2.new(0, 5, 0, 49)
kr.Sidebar.Size = UDim2.new(0, 139, 0, 288)
kr.Sidebar.ZIndex = 5

kr.EDITORBTN.Name = "EDITORBTN"
kr.EDITORBTN.Parent = kr.Sidebar
kr.EDITORBTN.BackgroundColor3 = Color3.fromRGB(26, 27, 32)
kr.EDITORBTN.BorderColor3 = Color3.fromRGB(23, 24, 27)
kr.EDITORBTN.Position = UDim2.new(0, 7, 0, 62)
kr.EDITORBTN.Size = UDim2.new(0, 124, 0, 40)
kr.EDITORBTN.ZIndex = 99

kr.UICorner_17.CornerRadius = UDim.new(0, 5)
kr.UICorner_17.Parent = kr.EDITORBTN

kr.Frame_9.Parent = kr.EDITORBTN
kr.Frame_9.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
kr.Frame_9.BorderColor3 = Color3.fromRGB(30, 30, 35)
kr.Frame_9.BorderSizePixel = 0
kr.Frame_9.Position = UDim2.new(0, 8, 0, 8)
kr.Frame_9.Size = UDim2.new(0, 24, 0, 24)

kr.UICorner_18.CornerRadius = UDim.new(0, 6)
kr.UICorner_18.Parent = kr.Frame_9

kr.ImageLabel_11.Parent = kr.Frame_9
kr.ImageLabel_11.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ImageLabel_11.BackgroundTransparency = 1.000
kr.ImageLabel_11.Position = UDim2.new(0, -4, 0, 0)
kr.ImageLabel_11.Size = UDim2.new(0, 30, 0, 25)
kr.ImageLabel_11.ZIndex = 999999999
kr.ImageLabel_11.Image = "rbxassetid://13587561191"
kr.ImageLabel_11.ScaleType = Enum.ScaleType.Fit

kr.UIStroke_27.Transparency = 0.900
kr.UIStroke_27.Parent = kr.Frame_9

kr.ImageLabel_12.Parent = kr.Frame_9
kr.ImageLabel_12.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ImageLabel_12.BackgroundTransparency = 1.000
kr.ImageLabel_12.Position = UDim2.new(0, -4, 0, 0)
kr.ImageLabel_12.Size = UDim2.new(0, 30, 0, 25)
kr.ImageLabel_12.ZIndex = 999999999
kr.ImageLabel_12.Image = "rbxassetid://13587561191"
kr.ImageLabel_12.ScaleType = Enum.ScaleType.Fit

kr.TextLabel_18.Parent = kr.EDITORBTN
kr.TextLabel_18.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_18.BackgroundTransparency = 1.000
kr.TextLabel_18.Position = UDim2.new(0, 31, 0, 7)
kr.TextLabel_18.Size = UDim2.new(0, 73, 0, 25)
kr.TextLabel_18.Font = Enum.Font.Arial
kr.TextLabel_18.Text = "Editor"
kr.TextLabel_18.TextColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_18.TextScaled = true
kr.TextLabel_18.TextSize = 13.000
kr.TextLabel_18.TextWrapped = true

kr.UIStroke_28.Transparency = 0.600
kr.UIStroke_28.Parent = kr.TextLabel_18

kr.UIAspectRatioConstraint_3.Parent = kr.TextLabel_18
kr.UIAspectRatioConstraint_3.AspectRatio = 2.920

kr.UITextSizeConstraint.Parent = kr.TextLabel_18
kr.UITextSizeConstraint.MaxTextSize = 13

kr.TextButton.Parent = kr.EDITORBTN
kr.TextButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextButton.BackgroundTransparency = 1.000
kr.TextButton.Position = UDim2.new(0, -11, 0, 0)
kr.TextButton.Size = UDim2.new(0, 142, 0, 43)
kr.TextButton.ZIndex = 999999999
kr.TextButton.Font = Enum.Font.SourceSans
kr.TextButton.Text = ""
kr.TextButton.TextColor3 = Color3.fromRGB(0, 0, 0)
kr.TextButton.TextScaled = true
kr.TextButton.TextSize = 14.000
kr.TextButton.TextWrapped = true

kr.UIAspectRatioConstraint_4.Parent = kr.TextButton
kr.UIAspectRatioConstraint_4.AspectRatio = 3.302

kr.UITextSizeConstraint_2.Parent = kr.TextButton
kr.UITextSizeConstraint_2.MaxTextSize = 14

kr.UIAspectRatioConstraint_5.Parent = kr.EDITORBTN
kr.UIAspectRatioConstraint_5.AspectRatio = 3.100

kr.HOMEBTN.Name = "HOMEBTN"
kr.HOMEBTN.Parent = kr.Sidebar
kr.HOMEBTN.BackgroundColor3 = Color3.fromRGB(45, 45, 51)
kr.HOMEBTN.Position = UDim2.new(0, 7, 0, 18)
kr.HOMEBTN.Size = UDim2.new(0, 124, 0, 40)
kr.HOMEBTN.ZIndex = 2

kr.UICorner_19.CornerRadius = UDim.new(0, 5)
kr.UICorner_19.Parent = kr.HOMEBTN

kr.Frame_10.Parent = kr.HOMEBTN
kr.Frame_10.BackgroundColor3 = Color3.fromRGB(48, 51, 59)
kr.Frame_10.BorderSizePixel = 0
kr.Frame_10.Position = UDim2.new(0, 9, 0, 8)
kr.Frame_10.Size = UDim2.new(0, 24, 0, 24)

kr.UICorner_20.CornerRadius = UDim.new(0, 6)
kr.UICorner_20.Parent = kr.Frame_10

kr.ImageLabel_13.Parent = kr.Frame_10
kr.ImageLabel_13.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ImageLabel_13.BackgroundTransparency = 1.000
kr.ImageLabel_13.Position = UDim2.new(0, 3, 0, 2)
kr.ImageLabel_13.Size = UDim2.new(0, 18, 0, 20)
kr.ImageLabel_13.ZIndex = 999
kr.ImageLabel_13.Image = "rbxassetid://13587639638"
kr.ImageLabel_13.ScaleType = Enum.ScaleType.Fit

kr.UIStroke_29.Transparency = 0.900
kr.UIStroke_29.Parent = kr.Frame_10

kr.ImageLabel_14.Parent = kr.Frame_10
kr.ImageLabel_14.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ImageLabel_14.BackgroundTransparency = 1.000
kr.ImageLabel_14.Position = UDim2.new(0, 3, 0, 2)
kr.ImageLabel_14.Size = UDim2.new(0, 18, 0, 20)
kr.ImageLabel_14.ZIndex = 999
kr.ImageLabel_14.Image = "rbxassetid://13587639638"
kr.ImageLabel_14.ScaleType = Enum.ScaleType.Fit

kr.TextLabel_19.Parent = kr.HOMEBTN
kr.TextLabel_19.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_19.BackgroundTransparency = 1.000
kr.TextLabel_19.Position = UDim2.new(0, 31, 0, 7)
kr.TextLabel_19.Size = UDim2.new(0, 73, 0, 25)
kr.TextLabel_19.Font = Enum.Font.Arial
kr.TextLabel_19.Text = "Home"
kr.TextLabel_19.TextColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_19.TextScaled = true
kr.TextLabel_19.TextSize = 13.000
kr.TextLabel_19.TextWrapped = true

kr.UIStroke_30.Transparency = 0.500
kr.UIStroke_30.Parent = kr.TextLabel_19

kr.UIAspectRatioConstraint_6.Parent = kr.TextLabel_19
kr.UIAspectRatioConstraint_6.AspectRatio = 2.920

kr.UITextSizeConstraint_3.Parent = kr.TextLabel_19
kr.UITextSizeConstraint_3.MaxTextSize = 13

kr.TextButton_2.Parent = kr.HOMEBTN
kr.TextButton_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextButton_2.BackgroundTransparency = 1.000
kr.TextButton_2.Position = UDim2.new(0, -11, 0, 0)
kr.TextButton_2.Size = UDim2.new(0, 142, 0, 43)
kr.TextButton_2.Font = Enum.Font.SourceSans
kr.TextButton_2.Text = ""
kr.TextButton_2.TextColor3 = Color3.fromRGB(0, 0, 0)
kr.TextButton_2.TextScaled = true
kr.TextButton_2.TextSize = 14.000
kr.TextButton_2.TextWrapped = true

kr.UIAspectRatioConstraint_7.Parent = kr.TextButton_2
kr.UIAspectRatioConstraint_7.AspectRatio = 3.302

kr.UITextSizeConstraint_4.Parent = kr.TextButton_2
kr.UITextSizeConstraint_4.MaxTextSize = 14

kr.UIAspectRatioConstraint_8.Parent = kr.HOMEBTN
kr.UIAspectRatioConstraint_8.AspectRatio = 3.100

kr.SCRIPTSBTN.Name = "SCRIPTSBTN"
kr.SCRIPTSBTN.Parent = kr.Sidebar
kr.SCRIPTSBTN.BackgroundColor3 = Color3.fromRGB(26, 27, 32)
kr.SCRIPTSBTN.BorderColor3 = Color3.fromRGB(23, 24, 27)
kr.SCRIPTSBTN.Position = UDim2.new(0, 7, 0, 106)
kr.SCRIPTSBTN.Size = UDim2.new(0, 124, 0, 40)
kr.SCRIPTSBTN.ZIndex = 99

kr.UICorner_21.CornerRadius = UDim.new(0, 5)
kr.UICorner_21.Parent = kr.SCRIPTSBTN

kr.Frame_11.Parent = kr.SCRIPTSBTN
kr.Frame_11.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
kr.Frame_11.BorderColor3 = Color3.fromRGB(30, 30, 35)
kr.Frame_11.BorderSizePixel = 0
kr.Frame_11.Position = UDim2.new(0, 8, 0, 8)
kr.Frame_11.Size = UDim2.new(0, 24, 0, 24)

kr.UICorner_22.CornerRadius = UDim.new(0, 6)
kr.UICorner_22.Parent = kr.Frame_11

kr.ImageLabel_15.Parent = kr.Frame_11
kr.ImageLabel_15.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ImageLabel_15.BackgroundTransparency = 1.000
kr.ImageLabel_15.Position = UDim2.new(0, 3, 0, 4)
kr.ImageLabel_15.Size = UDim2.new(0, 19, 0, 19)
kr.ImageLabel_15.ZIndex = 99
kr.ImageLabel_15.Image = "rbxassetid://13588228646"

kr.UIStroke_31.Transparency = 0.900
kr.UIStroke_31.Parent = kr.Frame_11

kr.ImageLabel_16.Parent = kr.Frame_11
kr.ImageLabel_16.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ImageLabel_16.BackgroundTransparency = 1.000
kr.ImageLabel_16.Position = UDim2.new(0, 3, 0, 4)
kr.ImageLabel_16.Size = UDim2.new(0, 19, 0, 19)
kr.ImageLabel_16.ZIndex = 99
kr.ImageLabel_16.Image = "rbxassetid://13588228646"

kr.TextLabel_20.Parent = kr.SCRIPTSBTN
kr.TextLabel_20.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_20.BackgroundTransparency = 1.000
kr.TextLabel_20.Position = UDim2.new(0, 39, 0, 7)
kr.TextLabel_20.Size = UDim2.new(0, 65, 0, 25)
kr.TextLabel_20.Font = Enum.Font.Arial
kr.TextLabel_20.Text = "Scripts"
kr.TextLabel_20.TextColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_20.TextScaled = true
kr.TextLabel_20.TextSize = 13.000
kr.TextLabel_20.TextWrapped = true

kr.UIStroke_32.Transparency = 0.500
kr.UIStroke_32.Parent = kr.TextLabel_20

kr.UIAspectRatioConstraint_9.Parent = kr.TextLabel_20
kr.UIAspectRatioConstraint_9.AspectRatio = 2.600

kr.UITextSizeConstraint_5.Parent = kr.TextLabel_20
kr.UITextSizeConstraint_5.MaxTextSize = 13

kr.TextButton_3.Parent = kr.SCRIPTSBTN
kr.TextButton_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextButton_3.BackgroundTransparency = 1.000
kr.TextButton_3.Position = UDim2.new(0, -11, 0, 0)
kr.TextButton_3.Size = UDim2.new(0, 142, 0, 43)
kr.TextButton_3.Font = Enum.Font.SourceSans
kr.TextButton_3.Text = ""
kr.TextButton_3.TextColor3 = Color3.fromRGB(0, 0, 0)
kr.TextButton_3.TextScaled = true
kr.TextButton_3.TextSize = 14.000
kr.TextButton_3.TextWrapped = true

kr.UIAspectRatioConstraint_10.Parent = kr.TextButton_3
kr.UIAspectRatioConstraint_10.AspectRatio = 3.302

kr.UITextSizeConstraint_6.Parent = kr.TextButton_3
kr.UITextSizeConstraint_6.MaxTextSize = 14

kr.UIAspectRatioConstraint_11.Parent = kr.SCRIPTSBTN
kr.UIAspectRatioConstraint_11.AspectRatio = 3.100

kr.SETTINGSBTN.Name = "SETTINGSBTN"
kr.SETTINGSBTN.Parent = kr.Sidebar
kr.SETTINGSBTN.BackgroundColor3 = Color3.fromRGB(26, 27, 32)
kr.SETTINGSBTN.BorderColor3 = Color3.fromRGB(23, 24, 27)
kr.SETTINGSBTN.Position = UDim2.new(0, 7, 0, 182)
kr.SETTINGSBTN.Size = UDim2.new(0, 124, 0, 40)
kr.SETTINGSBTN.ZIndex = 99

kr.UICorner_23.CornerRadius = UDim.new(0, 5)
kr.UICorner_23.Parent = kr.SETTINGSBTN

kr.Frame_12.Parent = kr.SETTINGSBTN
kr.Frame_12.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
kr.Frame_12.BorderColor3 = Color3.fromRGB(30, 30, 35)
kr.Frame_12.BorderSizePixel = 0
kr.Frame_12.Position = UDim2.new(0, 8, 0, 8)
kr.Frame_12.Size = UDim2.new(0, 24, 0, 24)

kr.UICorner_24.CornerRadius = UDim.new(0, 6)
kr.UICorner_24.Parent = kr.Frame_12

kr.ImageLabel_17.Parent = kr.Frame_12
kr.ImageLabel_17.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ImageLabel_17.BackgroundTransparency = 1.000
kr.ImageLabel_17.Position = UDim2.new(0, 3, 0, 3)
kr.ImageLabel_17.Size = UDim2.new(0, 17, 0, 18)
kr.ImageLabel_17.ZIndex = 99
kr.ImageLabel_17.Image = "rbxassetid://13403501059"
kr.ImageLabel_17.ScaleType = Enum.ScaleType.Fit

kr.UIAspectRatioConstraint_12.Parent = kr.ImageLabel_17
kr.UIAspectRatioConstraint_12.AspectRatio = 0.944

kr.UIStroke_33.Transparency = 0.900
kr.UIStroke_33.Parent = kr.Frame_12

kr.ImageLabel_18.Parent = kr.Frame_12
kr.ImageLabel_18.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ImageLabel_18.BackgroundTransparency = 1.000
kr.ImageLabel_18.Position = UDim2.new(0, 3, 0, 3)
kr.ImageLabel_18.Size = UDim2.new(0, 17, 0, 18)
kr.ImageLabel_18.ZIndex = 99
kr.ImageLabel_18.Image = "rbxassetid://13403501059"
kr.ImageLabel_18.ScaleType = Enum.ScaleType.Fit

kr.UIAspectRatioConstraint_13.Parent = kr.ImageLabel_18
kr.UIAspectRatioConstraint_13.AspectRatio = 0.944

kr.TextLabel_21.Parent = kr.SETTINGSBTN
kr.TextLabel_21.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_21.BackgroundTransparency = 1.000
kr.TextLabel_21.Position = UDim2.new(0, 42, 0, 7)
kr.TextLabel_21.Size = UDim2.new(0, 64, 0, 25)
kr.TextLabel_21.Font = Enum.Font.Arial
kr.TextLabel_21.Text = "Settings"
kr.TextLabel_21.TextColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_21.TextScaled = true
kr.TextLabel_21.TextSize = 13.000
kr.TextLabel_21.TextWrapped = true

kr.UIStroke_34.Transparency = 0.500
kr.UIStroke_34.Parent = kr.TextLabel_21

kr.UITextSizeConstraint_7.Parent = kr.TextLabel_21
kr.UITextSizeConstraint_7.MaxTextSize = 13

kr.TextButton_4.Parent = kr.SETTINGSBTN
kr.TextButton_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextButton_4.BackgroundTransparency = 1.000
kr.TextButton_4.Position = UDim2.new(0, -11, 0, 0)
kr.TextButton_4.Size = UDim2.new(0, 142, 0, 43)
kr.TextButton_4.Font = Enum.Font.SourceSans
kr.TextButton_4.Text = ""
kr.TextButton_4.TextColor3 = Color3.fromRGB(0, 0, 0)
kr.TextButton_4.TextScaled = true
kr.TextButton_4.TextSize = 14.000
kr.TextButton_4.TextWrapped = true

kr.UIAspectRatioConstraint_14.Parent = kr.TextButton_4
kr.UIAspectRatioConstraint_14.AspectRatio = 3.302

kr.UITextSizeConstraint_8.Parent = kr.TextButton_4
kr.UITextSizeConstraint_8.MaxTextSize = 14

kr.UIAspectRatioConstraint_15.Parent = kr.SETTINGSBTN
kr.UIAspectRatioConstraint_15.AspectRatio = 3.100

kr.Frame_13.Parent = kr.Sidebar
kr.Frame_13.BackgroundColor3 = Color3.fromRGB(23, 24, 27)
kr.Frame_13.BorderColor3 = Color3.fromRGB(23, 24, 27)
kr.Frame_13.Position = UDim2.new(0, 16, 0, 231)
kr.Frame_13.Size = UDim2.new(0, 107, 0, 17)

kr.UIStroke_35.Color = Color3.fromRGB(39, 40, 45)
kr.UIStroke_35.Thickness = 1.600
kr.UIStroke_35.Parent = kr.Frame_13

kr.UIAspectRatioConstraint_16.Parent = kr.Frame_13
kr.UIAspectRatioConstraint_16.AspectRatio = 6.294

kr.AccFrame.Name = "AccFrame"
kr.AccFrame.Parent = kr.Sidebar
kr.AccFrame.BackgroundColor3 = Color3.fromRGB(26, 27, 32)
kr.AccFrame.BorderColor3 = Color3.fromRGB(23, 24, 27)
kr.AccFrame.BorderSizePixel = 0
kr.AccFrame.Position = UDim2.new(0, 0, 0, 231)
kr.AccFrame.Size = UDim2.new(0, 136, 0, 56)
kr.AccFrame.ZIndex = 2

kr.TextLabel_22.Parent = kr.AccFrame
kr.TextLabel_22.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_22.BackgroundTransparency = 1.000
kr.TextLabel_22.Position = UDim2.new(0, 18, 0, 28)
kr.TextLabel_22.Size = UDim2.new(0, 89, 0, 16)
kr.TextLabel_22.ZIndex = 4
kr.TextLabel_22.Font = Enum.Font.Gotham
kr.TextLabel_22.Text = "View Profile"
kr.TextLabel_22.TextColor3 = Color3.fromRGB(171, 172, 179)
kr.TextLabel_22.TextScaled = true
kr.TextLabel_22.TextSize = 12.000
kr.TextLabel_22.TextWrapped = true
kr.TextLabel_22.TextXAlignment = Enum.TextXAlignment.Left

kr.UIStroke_36.Transparency = 0.600
kr.UIStroke_36.Parent = kr.TextLabel_22

kr.UIAspectRatioConstraint_17.Parent = kr.TextLabel_22
kr.UIAspectRatioConstraint_17.AspectRatio = 5.562

kr.UITextSizeConstraint_9.Parent = kr.TextLabel_22
kr.UITextSizeConstraint_9.MaxTextSize = 12

kr.DName.Name = "DName"
kr.DName.Parent = kr.AccFrame
kr.DName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.DName.BackgroundTransparency = 1.000
kr.DName.ClipsDescendants = true
kr.DName.Position = UDim2.new(0, 18, 0, 7)
kr.DName.Size = UDim2.new(0, 88, 0, 22)
kr.DName.ZIndex = 4
kr.DName.Font = Enum.Font.GothamBold
kr.DName.Text = "Guest"
kr.DName.TextColor3 = Color3.fromRGB(243, 245, 255)
kr.DName.TextScaled = true
kr.DName.TextSize = 12.000
kr.DName.TextWrapped = true
kr.DName.TextXAlignment = Enum.TextXAlignment.Left

kr.UIStroke_37.Transparency = 0.400
kr.UIStroke_37.Parent = kr.DName

kr.UITextSizeConstraint_10.Parent = kr.DName
kr.UITextSizeConstraint_10.MaxTextSize = 12

kr.ImageButton.Parent = kr.AccFrame
kr.ImageButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ImageButton.BackgroundTransparency = 1.000
kr.ImageButton.Position = UDim2.new(0, 113, 0, 20)
kr.ImageButton.Size = UDim2.new(0, 11, 0, 11)
kr.ImageButton.ZIndex = 4
kr.ImageButton.Image = "http://www.roblox.com/asset/?id=6031091008"

kr.UIAspectRatioConstraint_18.Parent = kr.ImageButton

kr.SidebarH.Name = "SidebarH"
kr.SidebarH.Parent = kr.MainMenu
kr.SidebarH.BackgroundColor3 = Color3.fromRGB(23, 24, 27)
kr.SidebarH.Position = UDim2.new(0, 139, 0, 51)
kr.SidebarH.Size = UDim2.new(0, 5, 0, 275)
kr.SidebarH.ZIndex = 4

kr.UIStroke_38.Color = Color3.fromRGB(39, 40, 45)
kr.UIStroke_38.Thickness = 2.000
kr.UIStroke_38.Parent = kr.SidebarH

kr.UIAspectRatioConstraint_19.Parent = kr.SidebarH
kr.UIAspectRatioConstraint_19.AspectRatio = 0.018

kr.Topbar.Name = "Topbar"
kr.Topbar.Parent = kr.MainMenu
kr.Topbar.BackgroundColor3 = Color3.fromRGB(26, 27, 31)
kr.Topbar.BorderColor3 = Color3.fromRGB(23, 24, 27)
kr.Topbar.BorderSizePixel = 0
kr.Topbar.Position = UDim2.new(0, 7, 0, 2)
kr.Topbar.Size = UDim2.new(0, 535, 0, 55)
kr.Topbar.ZIndex = 999999999

kr.closeBtn.Name = "closeBtn"
kr.closeBtn.Parent = kr.Topbar
kr.closeBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.closeBtn.BackgroundTransparency = 1.000
kr.closeBtn.Position = UDim2.new(0, 510, 0, 15)
kr.closeBtn.Size = UDim2.new(0, 25, 0, 26)
kr.closeBtn.ZIndex = 999999999
kr.closeBtn.Image = "http://www.roblox.com/asset/?id=6031094678"

kr.UIAspectRatioConstraint_20.Parent = kr.closeBtn

kr.TextLabel_23.Parent = kr.Topbar
kr.TextLabel_23.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_23.BackgroundTransparency = 2.000
kr.TextLabel_23.Position = UDim2.new(0, 40, 0, 17)
kr.TextLabel_23.Size = UDim2.new(0, 77, 0, 20)
kr.TextLabel_23.ZIndex = 999999999
kr.TextLabel_23.Font = Enum.Font.GothamBold
kr.TextLabel_23.Text = "Krypton"
kr.TextLabel_23.TextColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_23.TextSize = 19.000

kr.UIStroke_39.Transparency = 0.500
kr.UIStroke_39.Parent = kr.TextLabel_23

kr.ImageLabel_19.Parent = kr.Topbar
kr.ImageLabel_19.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ImageLabel_19.BackgroundTransparency = 1.000
kr.ImageLabel_19.Position = UDim2.new(0, 302, 0, 20)
kr.ImageLabel_19.Size = UDim2.new(0, 15, 0, 18)
kr.ImageLabel_19.ZIndex = 999999999
kr.ImageLabel_19.Image = "http://www.roblox.com/asset/?id=6034983856"
kr.ImageLabel_19.ImageColor3 = Color3.fromRGB(214, 216, 226)
kr.ImageLabel_19.ScaleType = Enum.ScaleType.Fit

kr.UIAspectRatioConstraint_21.Parent = kr.ImageLabel_19

kr.TextLabel_24.Parent = kr.Topbar
kr.TextLabel_24.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_24.BackgroundTransparency = 1.000
kr.TextLabel_24.Position = UDim2.new(0, 401, 0, 20)
kr.TextLabel_24.Size = UDim2.new(0, 134, 0, 16)
kr.TextLabel_24.ZIndex = 999999999
kr.TextLabel_24.Font = Enum.Font.ArialBold
kr.TextLabel_24.Text = "24 Hours"
kr.TextLabel_24.TextColor3 = Color3.fromRGB(208, 208, 208)
kr.TextLabel_24.TextSize = 15.000
kr.TextLabel_24.TextWrapped = true

kr.UIStroke_40.Transparency = 0.300
kr.UIStroke_40.Parent = kr.TextLabel_24

kr.ImageLabel_20.Parent = kr.Topbar
kr.ImageLabel_20.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ImageLabel_20.BackgroundTransparency = 1.000
kr.ImageLabel_20.Position = UDim2.new(0, 13, 0, 14)
kr.ImageLabel_20.Size = UDim2.new(0, 19, 0, 22)
kr.ImageLabel_20.ZIndex = 999999999
kr.ImageLabel_20.Image = "rbxassetid://13609494314"

kr.TextLabel_25.Parent = kr.Topbar
kr.TextLabel_25.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_25.BackgroundTransparency = 1.000
kr.TextLabel_25.Position = UDim2.new(0, 318, 0, 18)
kr.TextLabel_25.Size = UDim2.new(0, 118, 0, 19)
kr.TextLabel_25.ZIndex = 999999999
kr.TextLabel_25.Font = Enum.Font.Gotham
kr.TextLabel_25.Text = "Time Remaining:"
kr.TextLabel_25.TextColor3 = Color3.fromRGB(242, 244, 255)
kr.TextLabel_25.TextSize = 14.000
kr.TextLabel_25.TextWrapped = true

kr.UIStroke_41.Transparency = 0.800
kr.UIStroke_41.Parent = kr.TextLabel_25

kr.TextLabel_26.Parent = kr.Topbar
kr.TextLabel_26.BackgroundColor3 = Color3.fromRGB(72, 49, 13)
kr.TextLabel_26.BackgroundTransparency = 1.000
kr.TextLabel_26.BorderSizePixel = 0
kr.TextLabel_26.Position = UDim2.new(0, 117, 0, 21)
kr.TextLabel_26.Size = UDim2.new(0, 60, 0, 15)
kr.TextLabel_26.ZIndex = 999999999
kr.TextLabel_26.Font = Enum.Font.GothamBold
kr.TextLabel_26.Text = "v.1.0-alpha"
kr.TextLabel_26.TextColor3 = Color3.fromRGB(163, 165, 173)
kr.TextLabel_26.TextSize = 11.000
kr.TextLabel_26.TextWrapped = true

kr.UIStroke_42.Transparency = 0.600
kr.UIStroke_42.Parent = kr.TextLabel_26

kr.TextLabel_27.Parent = kr.Topbar
kr.TextLabel_27.BackgroundColor3 = Color3.fromRGB(72, 49, 13)
kr.TextLabel_27.BackgroundTransparency = 1.000
kr.TextLabel_27.BorderSizePixel = 0
kr.TextLabel_27.Position = UDim2.new(0, 117, 0, 21)
kr.TextLabel_27.Size = UDim2.new(0, 60, 0, 15)
kr.TextLabel_27.ZIndex = 999999999
kr.TextLabel_27.Font = Enum.Font.GothamBold
kr.TextLabel_27.Text = "v.1.0-alpha"
kr.TextLabel_27.TextColor3 = Color3.fromRGB(163, 165, 173)
kr.TextLabel_27.TextSize = 11.000
kr.TextLabel_27.TextWrapped = true

kr.UIStroke_43.Transparency = 0.600
kr.UIStroke_43.Parent = kr.TextLabel_27

kr.TopbarH.Name = "TopbarH"
kr.TopbarH.Parent = kr.MainMenu
kr.TopbarH.BackgroundColor3 = Color3.fromRGB(23, 24, 27)
kr.TopbarH.BackgroundTransparency = 1.000
kr.TopbarH.Position = UDim2.new(0, 18, 0, 54)
kr.TopbarH.Size = UDim2.new(0, 520, 0, 3)
kr.TopbarH.ZIndex = 6

kr.UIStroke_44.Color = Color3.fromRGB(39, 40, 45)
kr.UIStroke_44.Thickness = 2.000
kr.UIStroke_44.Parent = kr.TopbarH

kr.UIAspectRatioConstraint_22.Parent = kr.TopbarH
kr.UIAspectRatioConstraint_22.AspectRatio = 173.333

kr.clearWindow.Name = "clearWindow"
kr.clearWindow.Parent = kr.MainMenu
kr.clearWindow.BackgroundColor3 = Color3.fromRGB(15, 15, 17)
kr.clearWindow.BackgroundTransparency = 0.100
kr.clearWindow.Size = UDim2.new(0, 554, 0, 339)
kr.clearWindow.Visible = false
kr.clearWindow.ZIndex = 999999999

kr.UICorner_25.CornerRadius = UDim.new(0, 12)
kr.UICorner_25.Parent = kr.clearWindow

kr.clearFrame.Name = "clearFrame"
kr.clearFrame.Parent = kr.clearWindow
kr.clearFrame.BackgroundColor3 = Color3.fromRGB(26, 27, 30)
kr.clearFrame.Position = UDim2.new(0, 121, 0, 82)
kr.clearFrame.Size = UDim2.new(0, 346, 0, 173)
kr.clearFrame.ZIndex = 999999999

kr.UICorner_26.CornerRadius = UDim.new(0, 6)
kr.UICorner_26.Parent = kr.clearFrame

kr.Frame_14.Parent = kr.clearFrame
kr.Frame_14.BackgroundColor3 = Color3.fromRGB(5, 122, 85)
kr.Frame_14.Position = UDim2.new(0, 212, 0, 116)
kr.Frame_14.Size = UDim2.new(0, 117, 0, 36)
kr.Frame_14.ZIndex = 999999999

kr.UICorner_27.CornerRadius = UDim.new(0, 6)
kr.UICorner_27.Parent = kr.Frame_14

kr.TextLabel_28.Parent = kr.Frame_14
kr.TextLabel_28.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_28.BackgroundTransparency = 1.000
kr.TextLabel_28.Position = UDim2.new(0, 14, 0, 4)
kr.TextLabel_28.Size = UDim2.new(0, 91, 0, 27)
kr.TextLabel_28.ZIndex = 999999999
kr.TextLabel_28.Font = Enum.Font.GothamBold
kr.TextLabel_28.Text = "Clear Editor"
kr.TextLabel_28.TextColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_28.TextScaled = true
kr.TextLabel_28.TextSize = 13.000
kr.TextLabel_28.TextWrapped = true

kr.UIStroke_45.Transparency = 0.600
kr.UIStroke_45.Parent = kr.TextLabel_28

kr.UIAspectRatioConstraint_23.Parent = kr.TextLabel_28
kr.UIAspectRatioConstraint_23.AspectRatio = 3.370

kr.UITextSizeConstraint_11.Parent = kr.TextLabel_28
kr.UITextSizeConstraint_11.MaxTextSize = 13

kr.UIStroke_46.Transparency = 0.800
kr.UIStroke_46.Parent = kr.Frame_14

kr.clear.Name = "clear"
kr.clear.Parent = kr.Frame_14
kr.clear.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.clear.BackgroundTransparency = 1.000
kr.clear.Size = UDim2.new(0, 116, 0, 35)
kr.clear.ZIndex = 999999999
kr.clear.Font = Enum.Font.GothamBold
kr.clear.Text = "  "
kr.clear.TextColor3 = Color3.fromRGB(0, 0, 0)
kr.clear.TextScaled = true
kr.clear.TextSize = 14.000
kr.clear.TextWrapped = true

kr.UICorner_28.CornerRadius = UDim.new(0, 6)
kr.UICorner_28.Parent = kr.clear

kr.UIAspectRatioConstraint_24.Parent = kr.clear
kr.UIAspectRatioConstraint_24.AspectRatio = 3.314

kr.UITextSizeConstraint_12.Parent = kr.clear
kr.UITextSizeConstraint_12.MaxTextSize = 14

kr.UIAspectRatioConstraint_25.Parent = kr.Frame_14
kr.UIAspectRatioConstraint_25.AspectRatio = 3.250

kr.Frame_15.Parent = kr.clearFrame
kr.Frame_15.BackgroundColor3 = Color3.fromRGB(38, 38, 44)
kr.Frame_15.Position = UDim2.new(0, 108, 0, 118)
kr.Frame_15.Size = UDim2.new(0, 89, 0, 33)
kr.Frame_15.ZIndex = 999999999

kr.UICorner_29.CornerRadius = UDim.new(0, 4)
kr.UICorner_29.Parent = kr.Frame_15

kr.TextLabel_29.Parent = kr.Frame_15
kr.TextLabel_29.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_29.BackgroundTransparency = 1.000
kr.TextLabel_29.Position = UDim2.new(0, -1, 0, 4)
kr.TextLabel_29.Size = UDim2.new(0, 91, 0, 23)
kr.TextLabel_29.ZIndex = 999999999
kr.TextLabel_29.Font = Enum.Font.GothamBold
kr.TextLabel_29.Text = "Cancel"
kr.TextLabel_29.TextColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_29.TextScaled = true
kr.TextLabel_29.TextSize = 13.000
kr.TextLabel_29.TextWrapped = true

kr.UIStroke_47.Transparency = 0.600
kr.UIStroke_47.Parent = kr.TextLabel_29

kr.UITextSizeConstraint_13.Parent = kr.TextLabel_29
kr.UITextSizeConstraint_13.MaxTextSize = 13

kr.UIStroke_48.Color = Color3.fromRGB(124, 127, 140)
kr.UIStroke_48.Thickness = 2.000
kr.UIStroke_48.Transparency = 0.800
kr.UIStroke_48.Parent = kr.Frame_15

kr.TextButton_5.Parent = kr.Frame_15
kr.TextButton_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextButton_5.BackgroundTransparency = 1.000
kr.TextButton_5.Position = UDim2.new(0, -2, 0, -1)
kr.TextButton_5.Size = UDim2.new(0, 93, 0, 36)
kr.TextButton_5.ZIndex = 999999999
kr.TextButton_5.Font = Enum.Font.GothamBold
kr.TextButton_5.Text = "  "
kr.TextButton_5.TextColor3 = Color3.fromRGB(0, 0, 0)
kr.TextButton_5.TextScaled = true
kr.TextButton_5.TextSize = 14.000
kr.TextButton_5.TextWrapped = true

kr.UICorner_30.CornerRadius = UDim.new(0, 4)
kr.UICorner_30.Parent = kr.TextButton_5

kr.UIAspectRatioConstraint_26.Parent = kr.TextButton_5
kr.UIAspectRatioConstraint_26.AspectRatio = 2.583

kr.UITextSizeConstraint_14.Parent = kr.TextButton_5
kr.UITextSizeConstraint_14.MaxTextSize = 14

kr.UIAspectRatioConstraint_27.Parent = kr.Frame_15
kr.UIAspectRatioConstraint_27.AspectRatio = 2.697

kr.TextLabel_30.Parent = kr.clearFrame
kr.TextLabel_30.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_30.BackgroundTransparency = 1.000
kr.TextLabel_30.Position = UDim2.new(0, -29, 0, 8)
kr.TextLabel_30.Size = UDim2.new(0, 192, 0, 38)
kr.TextLabel_30.ZIndex = 999999999
kr.TextLabel_30.Font = Enum.Font.Gotham
kr.TextLabel_30.Text = "Clear Editor"
kr.TextLabel_30.TextColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_30.TextScaled = true
kr.TextLabel_30.TextSize = 16.000
kr.TextLabel_30.TextWrapped = true

kr.UIStroke_49.Transparency = 0.600
kr.UIStroke_49.Parent = kr.TextLabel_30

kr.UIAspectRatioConstraint_28.Parent = kr.TextLabel_30
kr.UIAspectRatioConstraint_28.AspectRatio = 5.053

kr.UITextSizeConstraint_15.Parent = kr.TextLabel_30
kr.UITextSizeConstraint_15.MaxTextSize = 16

kr.TextLabel_31.Parent = kr.clearFrame
kr.TextLabel_31.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_31.BackgroundTransparency = 1.000
kr.TextLabel_31.Position = UDim2.new(0, 19, 0, 61)
kr.TextLabel_31.Size = UDim2.new(0, 314, 0, 15)
kr.TextLabel_31.ZIndex = 999999999
kr.TextLabel_31.Font = Enum.Font.Gotham
kr.TextLabel_31.Text = "Are you sure you want to clear the editor? This"
kr.TextLabel_31.TextColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_31.TextScaled = true
kr.TextLabel_31.TextSize = 14.000
kr.TextLabel_31.TextWrapped = true

kr.UIStroke_50.Transparency = 0.600
kr.UIStroke_50.Parent = kr.TextLabel_31

kr.UIAspectRatioConstraint_29.Parent = kr.TextLabel_31
kr.UIAspectRatioConstraint_29.AspectRatio = 20.933

kr.UITextSizeConstraint_16.Parent = kr.TextLabel_31
kr.UITextSizeConstraint_16.MaxTextSize = 14

kr.TextLabel_32.Parent = kr.clearFrame
kr.TextLabel_32.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_32.BackgroundTransparency = 1.000
kr.TextLabel_32.Position = UDim2.new(0, 20, 0, 61)
kr.TextLabel_32.Size = UDim2.new(0, 158, 0, 50)
kr.TextLabel_32.ZIndex = 999999999
kr.TextLabel_32.Font = Enum.Font.Gotham
kr.TextLabel_32.Text = "action can't be undone."
kr.TextLabel_32.TextColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_32.TextScaled = true
kr.TextLabel_32.TextSize = 14.000
kr.TextLabel_32.TextWrapped = true

kr.UIStroke_51.Transparency = 0.600
kr.UIStroke_51.Parent = kr.TextLabel_32

kr.UIAspectRatioConstraint_30.Parent = kr.TextLabel_32
kr.UIAspectRatioConstraint_30.AspectRatio = 3.160

kr.UITextSizeConstraint_17.Parent = kr.TextLabel_32
kr.UITextSizeConstraint_17.MaxTextSize = 14

kr.ImageButton_2.Parent = kr.clearFrame
kr.ImageButton_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ImageButton_2.BackgroundTransparency = 1.000
kr.ImageButton_2.Position = UDim2.new(0, 315, 0, 16)
kr.ImageButton_2.Size = UDim2.new(0, 18, 0, 18)
kr.ImageButton_2.ZIndex = 999999999
kr.ImageButton_2.Image = "http://www.roblox.com/asset/?id=6031094678"

kr.UIAspectRatioConstraint_31.Parent = kr.ImageButton_2

kr.UIStroke_52.Transparency = 0.800
kr.UIStroke_52.Parent = kr.clearFrame

kr.UIAspectRatioConstraint_32.Parent = kr.clearFrame
kr.UIAspectRatioConstraint_32.AspectRatio = 2.000

kr.UIAspectRatioConstraint_33.Parent = kr.clearWindow
kr.UIAspectRatioConstraint_33.AspectRatio = 1.634

kr.ScriptsPage.Name = "ScriptsPage"
kr.ScriptsPage.Parent = kr.MainMenu
kr.ScriptsPage.BackgroundColor3 = Color3.fromRGB(26, 27, 32)
kr.ScriptsPage.BorderColor3 = Color3.fromRGB(23, 24, 27)
kr.ScriptsPage.Position = UDim2.new(0, 112, 0, 41)
kr.ScriptsPage.Size = UDim2.new(0, 445, 0, 295)
kr.ScriptsPage.Visible = false

kr.UICorner_31.CornerRadius = UDim.new(0, 12)
kr.UICorner_31.Parent = kr.ScriptsPage

kr.UIAspectRatioConstraint_34.Parent = kr.ScriptsPage
kr.UIAspectRatioConstraint_34.AspectRatio = 1.493

kr.Frame_16.Parent = kr.ScriptsPage
kr.Frame_16.BackgroundColor3 = Color3.fromRGB(26, 27, 32)
kr.Frame_16.Position = UDim2.new(0.0726414025, 0, 0.0101695042, 0)
kr.Frame_16.Size = UDim2.new(0, 415, 0, 67)

kr.UIStroke_53.Color = Color3.fromRGB(37, 36, 42)
kr.UIStroke_53.Thickness = 2.000
kr.UIStroke_53.Parent = kr.Frame_16

kr.Frame_17.Parent = kr.Frame_16
kr.Frame_17.BackgroundColor3 = Color3.fromRGB(36, 37, 43)
kr.Frame_17.Position = UDim2.new(0.414809346, 0, 0.382398248, 0)
kr.Frame_17.Size = UDim2.new(0, 186, 0, 28)

kr.UICorner_32.CornerRadius = UDim.new(0, 4)
kr.UICorner_32.Parent = kr.Frame_17

kr.UIStroke_54.Color = Color3.fromRGB(46, 46, 53)
kr.UIStroke_54.Thickness = 2.000
kr.UIStroke_54.Parent = kr.Frame_17

kr.TextBox.Parent = kr.Frame_17
kr.TextBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextBox.BackgroundTransparency = 1.000
kr.TextBox.Position = UDim2.new(0.174663916, 0, 0.142124727, 0)
kr.TextBox.Size = UDim2.new(0, 148, 0, 21)
kr.TextBox.Font = Enum.Font.Gotham
kr.TextBox.PlaceholderColor3 = Color3.fromRGB(100, 100, 109)
kr.TextBox.PlaceholderText = "Search your scripts.."
kr.TextBox.Text = ""
kr.TextBox.TextColor3 = Color3.fromRGB(100, 100, 109)
kr.TextBox.TextSize = 14.000
kr.TextBox.TextXAlignment = Enum.TextXAlignment.Left

kr.ImageLabel_21.Parent = kr.Frame_17
kr.ImageLabel_21.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ImageLabel_21.BackgroundTransparency = 1.000
kr.ImageLabel_21.Position = UDim2.new(0.0268817209, 0, 0.178571433, 0)
kr.ImageLabel_21.Size = UDim2.new(0, 19, 0, 19)
kr.ImageLabel_21.Image = "http://www.roblox.com/asset/?id=6031154871"
kr.ImageLabel_21.ImageColor3 = Color3.fromRGB(123, 124, 129)

kr.TextLabel_33.Parent = kr.Frame_16
kr.TextLabel_33.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_33.BackgroundTransparency = 1.000
kr.TextLabel_33.Position = UDim2.new(-1.1287827e-05, 0, 0.298784405, 0)
kr.TextLabel_33.Size = UDim2.new(0, 111, 0, 19)
kr.TextLabel_33.Font = Enum.Font.Gotham
kr.TextLabel_33.Text = "Script Libary"
kr.TextLabel_33.TextColor3 = Color3.fromRGB(222, 222, 222)
kr.TextLabel_33.TextSize = 14.000

kr.UIStroke_55.Transparency = 0.800
kr.UIStroke_55.Parent = kr.TextLabel_33

kr.TextLabel_34.Parent = kr.Frame_16
kr.TextLabel_34.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_34.BackgroundTransparency = 1.000
kr.TextLabel_34.Position = UDim2.new(-1.12510588e-05, 0, 0.525588751, 0)
kr.TextLabel_34.Size = UDim2.new(0, 125, 0, 24)
kr.TextLabel_34.Font = Enum.Font.Gotham
kr.TextLabel_34.Text = "0 scripts loaded"
kr.TextLabel_34.TextColor3 = Color3.fromRGB(166, 166, 166)
kr.TextLabel_34.TextSize = 13.000

kr.Frame_18.Parent = kr.Frame_16
kr.Frame_18.BackgroundColor3 = Color3.fromRGB(36, 37, 43)
kr.Frame_18.Position = UDim2.new(0.892422795, 0, 0.395827562, 0)
kr.Frame_18.Size = UDim2.new(0, 27, 0, 27)

kr.UICorner_33.CornerRadius = UDim.new(0, 4)
kr.UICorner_33.Parent = kr.Frame_18

kr.UIStroke_56.Color = Color3.fromRGB(46, 46, 53)
kr.UIStroke_56.Thickness = 2.000
kr.UIStroke_56.Parent = kr.Frame_18

kr.updateIm.Name = "updateIm"
kr.updateIm.Parent = kr.Frame_18
kr.updateIm.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.updateIm.BackgroundTransparency = 1.000
kr.updateIm.Position = UDim2.new(0, 1, 0, 2)
kr.updateIm.Size = UDim2.new(0, 24, 0, 23)
kr.updateIm.Image = "http://www.roblox.com/asset/?id=6031097226"
kr.updateIm.ImageColor3 = Color3.fromRGB(123, 124, 129)

kr.TextButton_6.Parent = kr.Frame_18
kr.TextButton_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextButton_6.BackgroundTransparency = 1.000
kr.TextButton_6.Position = UDim2.new(-0.0992928967, 0, -0.0303717703, 0)
kr.TextButton_6.Size = UDim2.new(0, 32, 0, 30)
kr.TextButton_6.Font = Enum.Font.SourceSansBold
kr.TextButton_6.Text = "  "
kr.TextButton_6.TextColor3 = Color3.fromRGB(0, 0, 0)
kr.TextButton_6.TextSize = 14.000

kr.UICorner_34.CornerRadius = UDim.new(0, 4)
kr.UICorner_34.Parent = kr.TextButton_6

kr.Frame_19.Parent = kr.ScriptsPage
kr.Frame_19.BackgroundColor3 = Color3.fromRGB(26, 27, 32)
kr.Frame_19.Position = UDim2.new(0.0726414025, 0, 0.2331184, 0)
kr.Frame_19.Size = UDim2.new(0, 415, 0, 31)

kr.UIStroke_57.Color = Color3.fromRGB(37, 36, 42)
kr.UIStroke_57.Thickness = 2.000
kr.UIStroke_57.Parent = kr.Frame_19

kr.TextLabel_35.Parent = kr.Frame_19
kr.TextLabel_35.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_35.BackgroundTransparency = 1.000
kr.TextLabel_35.Position = UDim2.new(-0.00724016689, 0, 0.0806264579, 0)
kr.TextLabel_35.Size = UDim2.new(0, 76, 0, 27)
kr.TextLabel_35.Font = Enum.Font.Gotham
kr.TextLabel_35.Text = "Name"
kr.TextLabel_35.TextColor3 = Color3.fromRGB(222, 222, 222)
kr.TextLabel_35.TextSize = 14.000

kr.UIStroke_58.Transparency = 0.800
kr.UIStroke_58.Parent = kr.TextLabel_35

kr.TextLabel_36.Parent = kr.Frame_19
kr.TextLabel_36.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_36.BackgroundTransparency = 1.000
kr.TextLabel_36.Position = UDim2.new(0.719350994, 0, 0.0806264579, 0)
kr.TextLabel_36.Size = UDim2.new(0, 108, 0, 27)
kr.TextLabel_36.Font = Enum.Font.Gotham
kr.TextLabel_36.Text = "Date Modified"
kr.TextLabel_36.TextColor3 = Color3.fromRGB(222, 222, 222)
kr.TextLabel_36.TextSize = 14.000

kr.UIStroke_59.Transparency = 0.800
kr.UIStroke_59.Parent = kr.TextLabel_36

kr.TextLabel_37.Parent = kr.ScriptsPage
kr.TextLabel_37.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_37.BackgroundTransparency = 1.000
kr.TextLabel_37.Position = UDim2.new(0.39335537, 0, 0.644039631, 0)
kr.TextLabel_37.Size = UDim2.new(0, 109, 0, 20)
kr.TextLabel_37.Font = Enum.Font.Gotham
kr.TextLabel_37.Text = "Nothing saved here yet."
kr.TextLabel_37.TextColor3 = Color3.fromRGB(142, 147, 173)
kr.TextLabel_37.TextSize = 13.000

kr.UIStroke_60.Transparency = 0.700
kr.UIStroke_60.Parent = kr.TextLabel_37

kr.ImageLabel_22.Parent = kr.ScriptsPage
kr.ImageLabel_22.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ImageLabel_22.BackgroundTransparency = 1.000
kr.ImageLabel_22.Position = UDim2.new(0.485640913, 0, 0.577423811, 0)
kr.ImageLabel_22.Size = UDim2.new(0, 22, 0, 19)
kr.ImageLabel_22.Image = "rbxassetid://13600494312"
kr.ImageLabel_22.ImageColor3 = Color3.fromRGB(108, 112, 132)

kr.TopbarH2.Name = "TopbarH2"
kr.TopbarH2.Parent = kr.MainMenu
kr.TopbarH2.BackgroundColor3 = Color3.fromRGB(26, 27, 32)
kr.TopbarH2.BorderSizePixel = 0
kr.TopbarH2.Position = UDim2.new(-0.00705573009, 0, 0.0719522089, 0)
kr.TopbarH2.Size = UDim2.new(0, 556, 0, 23)

kr.WelcomeWindow.Name = "WelcomeWindow"
kr.WelcomeWindow.Parent = kr.MainMenu
kr.WelcomeWindow.BackgroundColor3 = Color3.fromRGB(15, 15, 17)
kr.WelcomeWindow.BackgroundTransparency = 0.100
kr.WelcomeWindow.Size = UDim2.new(0, 554, 0, 339)
kr.WelcomeWindow.Visible = false
kr.WelcomeWindow.ZIndex = 999999999

kr.UICorner_35.CornerRadius = UDim.new(0, 12)
kr.UICorner_35.Parent = kr.WelcomeWindow

kr.welcomerFrame.Name = "welcomerFrame"
kr.welcomerFrame.Parent = kr.WelcomeWindow
kr.welcomerFrame.BackgroundColor3 = Color3.fromRGB(26, 27, 30)
kr.welcomerFrame.ClipsDescendants = true
kr.welcomerFrame.Position = UDim2.new(0, 90, 0, 55)
kr.welcomerFrame.Size = UDim2.new(0, 399, 0, 243)
kr.welcomerFrame.ZIndex = 999999999

kr.UICorner_36.CornerRadius = UDim.new(0, 6)
kr.UICorner_36.Parent = kr.welcomerFrame

kr.UIStroke_61.Transparency = 0.800
kr.UIStroke_61.Parent = kr.welcomerFrame

kr.Page2.Name = "Page2"
kr.Page2.Parent = kr.welcomerFrame
kr.Page2.BackgroundColor3 = Color3.fromRGB(26, 27, 30)
kr.Page2.BorderSizePixel = 0
kr.Page2.Position = UDim2.new(0.0401002504, 0, 0.193031341, 0)
kr.Page2.Size = UDim2.new(0, 375, 0, 186)
kr.Page2.ZIndex = 999999999

kr.TextLabel_38.Parent = kr.Page2
kr.TextLabel_38.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_38.BackgroundTransparency = 1.000
kr.TextLabel_38.Position = UDim2.new(0, -35, 0, 20)
kr.TextLabel_38.Size = UDim2.new(0, 298, 0, 29)
kr.TextLabel_38.ZIndex = 999999999
kr.TextLabel_38.Font = Enum.Font.Gotham
kr.TextLabel_38.Text = "who made this UI available to us."
kr.TextLabel_38.TextColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_38.TextSize = 14.000
kr.TextLabel_38.TextWrapped = true

kr.UIStroke_62.Transparency = 0.600
kr.UIStroke_62.Parent = kr.TextLabel_38

kr.ImageLabel_23.Parent = kr.Page2
kr.ImageLabel_23.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ImageLabel_23.BackgroundTransparency = 1.000
kr.ImageLabel_23.Position = UDim2.new(0.0799999982, 0, 0.317708343, 0)
kr.ImageLabel_23.Size = UDim2.new(0, 41, 0, 41)
kr.ImageLabel_23.ZIndex = 999999999
kr.ImageLabel_23.Image = "rbxassetid://13618770731"
kr.ImageLabel_23.ImageColor3 = Color3.fromRGB(37, 40, 44)

kr.ImageLabel_24.Parent = kr.Page2
kr.ImageLabel_24.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ImageLabel_24.BackgroundTransparency = 1.000
kr.ImageLabel_24.Position = UDim2.new(0.533333302, 0, 0.354166687, 0)
kr.ImageLabel_24.Size = UDim2.new(0, 41, 0, 41)
kr.ImageLabel_24.ZIndex = 999999999
kr.ImageLabel_24.Image = "rbxassetid://13618770731"
kr.ImageLabel_24.ImageColor3 = Color3.fromRGB(37, 40, 44)

kr.ImageLabel_25.Parent = kr.Page2
kr.ImageLabel_25.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ImageLabel_25.BackgroundTransparency = 1.000
kr.ImageLabel_25.Position = UDim2.new(0.717333317, 0, 0.015625, 0)
kr.ImageLabel_25.Size = UDim2.new(0, 41, 0, 41)
kr.ImageLabel_25.Image = "rbxassetid://13618770731"
kr.ImageLabel_25.ImageColor3 = Color3.fromRGB(37, 40, 44)

kr.ImageLabel_26.Parent = kr.Page2
kr.ImageLabel_26.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ImageLabel_26.BackgroundTransparency = 1.000
kr.ImageLabel_26.Position = UDim2.new(0.127999991, 0, -0.0104166567, 0)
kr.ImageLabel_26.Size = UDim2.new(0, 41, 0, 41)
kr.ImageLabel_26.Image = "rbxassetid://13618770731"
kr.ImageLabel_26.ImageColor3 = Color3.fromRGB(37, 40, 44)

kr.ImageLabel_27.Parent = kr.Page2
kr.ImageLabel_27.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ImageLabel_27.BackgroundTransparency = 1.000
kr.ImageLabel_27.Position = UDim2.new(0.79733336, 0, 0.645833373, 0)
kr.ImageLabel_27.Size = UDim2.new(0, 41, 0, 41)
kr.ImageLabel_27.Image = "rbxassetid://13618770731"
kr.ImageLabel_27.ImageColor3 = Color3.fromRGB(37, 40, 44)

kr.ImageLabel_28.Parent = kr.Page2
kr.ImageLabel_28.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ImageLabel_28.BackgroundTransparency = 1.000
kr.ImageLabel_28.Position = UDim2.new(-0.00533336401, 0, 0.885416627, 0)
kr.ImageLabel_28.Size = UDim2.new(0, 41, 0, 41)
kr.ImageLabel_28.Image = "rbxassetid://13618770731"
kr.ImageLabel_28.ImageColor3 = Color3.fromRGB(37, 40, 44)

kr.ImageLabel_29.Parent = kr.Page2
kr.ImageLabel_29.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ImageLabel_29.BackgroundTransparency = 1.000
kr.ImageLabel_29.Position = UDim2.new(-0.00533336401, 0, 0.885416627, 0)
kr.ImageLabel_29.Size = UDim2.new(0, 41, 0, 41)
kr.ImageLabel_29.Image = "rbxassetid://13618770731"
kr.ImageLabel_29.ImageColor3 = Color3.fromRGB(37, 40, 44)

kr.ImageLabel_30.Parent = kr.Page2
kr.ImageLabel_30.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ImageLabel_30.BackgroundTransparency = 1.000
kr.ImageLabel_30.Position = UDim2.new(0.863999963, 0, -0.28124997, 0)
kr.ImageLabel_30.Size = UDim2.new(0, 41, 0, 41)
kr.ImageLabel_30.ZIndex = 999999999
kr.ImageLabel_30.Image = "rbxassetid://13618770731"
kr.ImageLabel_30.ImageColor3 = Color3.fromRGB(37, 40, 44)

kr.ImageLabel_31.Parent = kr.Page2
kr.ImageLabel_31.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ImageLabel_31.BackgroundTransparency = 1.000
kr.ImageLabel_31.Position = UDim2.new(0.330666602, 0, 0.104166687, 0)
kr.ImageLabel_31.Size = UDim2.new(0, 41, 0, 41)
kr.ImageLabel_31.Image = "rbxassetid://13618770731"
kr.ImageLabel_31.ImageColor3 = Color3.fromRGB(37, 40, 44)

kr.ImageLabel_32.Parent = kr.Page2
kr.ImageLabel_32.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ImageLabel_32.BackgroundTransparency = 1.000
kr.ImageLabel_32.Position = UDim2.new(0.250666648, 0, 0.645833373, 0)
kr.ImageLabel_32.Size = UDim2.new(0, 41, 0, 41)
kr.ImageLabel_32.ZIndex = 999999999
kr.ImageLabel_32.Image = "rbxassetid://13618770731"
kr.ImageLabel_32.ImageColor3 = Color3.fromRGB(37, 40, 44)

kr.ImageLabel_33.Parent = kr.Page2
kr.ImageLabel_33.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ImageLabel_33.BackgroundTransparency = 1.000
kr.ImageLabel_33.Position = UDim2.new(0.439999998, 0, 0.79687506, 0)
kr.ImageLabel_33.Size = UDim2.new(0, 41, 0, 41)
kr.ImageLabel_33.ZIndex = 999999999
kr.ImageLabel_33.Image = "rbxassetid://13618770731"
kr.ImageLabel_33.ImageColor3 = Color3.fromRGB(37, 40, 44)

kr.ImageLabel_34.Parent = kr.Page2
kr.ImageLabel_34.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ImageLabel_34.BackgroundTransparency = 1.000
kr.ImageLabel_34.Position = UDim2.new(0.501333296, 0, -0.218749955, 0)
kr.ImageLabel_34.Size = UDim2.new(0, 41, 0, 41)
kr.ImageLabel_34.ZIndex = 999999999
kr.ImageLabel_34.Image = "rbxassetid://13618770731"
kr.ImageLabel_34.ImageColor3 = Color3.fromRGB(37, 40, 44)

kr.TextLabel_39.Parent = kr.Page2
kr.TextLabel_39.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_39.BackgroundTransparency = 1.000
kr.TextLabel_39.Position = UDim2.new(0, 3, 0, 6)
kr.TextLabel_39.Size = UDim2.new(0, 181, 0, 22)
kr.TextLabel_39.ZIndex = 999999999
kr.TextLabel_39.Font = Enum.Font.Gotham
kr.TextLabel_39.Text = "We would like to thank the"
kr.TextLabel_39.TextColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_39.TextSize = 14.000
kr.TextLabel_39.TextWrapped = true

kr.UIStroke_63.Transparency = 0.600
kr.UIStroke_63.Parent = kr.TextLabel_39

kr.Frame_20.Parent = kr.Page2
kr.Frame_20.BackgroundColor3 = Color3.fromRGB(5, 122, 85)
kr.Frame_20.Position = UDim2.new(0, 248, 0, 153)
kr.Frame_20.Size = UDim2.new(0, 117, 0, 36)
kr.Frame_20.ZIndex = 999999999

kr.TextLabel_40.Parent = kr.Frame_20
kr.TextLabel_40.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_40.BackgroundTransparency = 1.000
kr.TextLabel_40.Position = UDim2.new(0, 14, 0, 4)
kr.TextLabel_40.Size = UDim2.new(0, 91, 0, 27)
kr.TextLabel_40.ZIndex = 999999999
kr.TextLabel_40.Font = Enum.Font.GothamBold
kr.TextLabel_40.Text = "I Agree"
kr.TextLabel_40.TextColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_40.TextScaled = true
kr.TextLabel_40.TextSize = 13.000
kr.TextLabel_40.TextWrapped = true

kr.UIStroke_64.Transparency = 0.600
kr.UIStroke_64.Parent = kr.TextLabel_40

kr.UIAspectRatioConstraint_35.Parent = kr.TextLabel_40
kr.UIAspectRatioConstraint_35.AspectRatio = 3.370

kr.UITextSizeConstraint_18.Parent = kr.TextLabel_40
kr.UITextSizeConstraint_18.MaxTextSize = 13

kr.iagree.Name = "iagree"
kr.iagree.Parent = kr.Frame_20
kr.iagree.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.iagree.BackgroundTransparency = 1.000
kr.iagree.Size = UDim2.new(0, 116, 0, 35)
kr.iagree.ZIndex = 999999999
kr.iagree.Font = Enum.Font.GothamBold
kr.iagree.Text = "  "
kr.iagree.TextColor3 = Color3.fromRGB(0, 0, 0)
kr.iagree.TextScaled = true
kr.iagree.TextSize = 14.000
kr.iagree.TextWrapped = true

kr.UICorner_37.CornerRadius = UDim.new(0, 6)
kr.UICorner_37.Parent = kr.iagree

kr.UIAspectRatioConstraint_36.Parent = kr.iagree
kr.UIAspectRatioConstraint_36.AspectRatio = 3.314

kr.UITextSizeConstraint_19.Parent = kr.iagree
kr.UITextSizeConstraint_19.MaxTextSize = 14

kr.UIStroke_65.Transparency = 0.800
kr.UIStroke_65.Parent = kr.Frame_20

kr.UICorner_38.CornerRadius = UDim.new(0, 6)
kr.UICorner_38.Parent = kr.Frame_20

kr.UIAspectRatioConstraint_37.Parent = kr.Frame_20
kr.UIAspectRatioConstraint_37.AspectRatio = 3.250

kr.TextLabel_41.Parent = kr.Page2
kr.TextLabel_41.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_41.BackgroundTransparency = 1.000
kr.TextLabel_41.Position = UDim2.new(0, 375, 0, 92)
kr.TextLabel_41.Size = UDim2.new(0, 23, 0, 22)
kr.TextLabel_41.ZIndex = 999999999
kr.TextLabel_41.Font = Enum.Font.GothamBold
kr.TextLabel_41.Text = ","
kr.TextLabel_41.TextColor3 = Color3.fromRGB(203, 203, 203)
kr.TextLabel_41.TextSize = 14.000
kr.TextLabel_41.TextWrapped = true

kr.UIStroke_66.Transparency = 0.200
kr.UIStroke_66.Parent = kr.TextLabel_41

kr.Frame_21.Parent = kr.Page2
kr.Frame_21.BackgroundColor3 = Color3.fromRGB(23, 24, 27)
kr.Frame_21.BackgroundTransparency = 0.400
kr.Frame_21.Position = UDim2.new(-0.00659684232, 0, 0.271960586, 0)
kr.Frame_21.Size = UDim2.new(0, 372, 0, 93)
kr.Frame_21.ZIndex = 999999999

kr.UICorner_39.Parent = kr.Frame_21

kr.TextLabel_42.Parent = kr.Frame_21
kr.TextLabel_42.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_42.BackgroundTransparency = 1.000
kr.TextLabel_42.Position = UDim2.new(0, 2, 0, 55)
kr.TextLabel_42.Size = UDim2.new(0, 367, 0, 27)
kr.TextLabel_42.ZIndex = 999999999
kr.TextLabel_42.Font = Enum.Font.Gotham
kr.TextLabel_42.Text = "reproduction, or distribution of our content is strictly"
kr.TextLabel_42.TextColor3 = Color3.fromRGB(118, 122, 136)
kr.TextLabel_42.TextSize = 14.000
kr.TextLabel_42.TextWrapped = true

kr.UIStroke_67.Transparency = 0.600
kr.UIStroke_67.Parent = kr.TextLabel_42

kr.TextLabel_43.Parent = kr.Frame_21
kr.TextLabel_43.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_43.BackgroundTransparency = 1.000
kr.TextLabel_43.Position = UDim2.new(0, -17, 0, 1)
kr.TextLabel_43.Size = UDim2.new(0, 372, 0, 22)
kr.TextLabel_43.ZIndex = 999999999
kr.TextLabel_43.Font = Enum.Font.Gotham
kr.TextLabel_43.Text = "There are over 500 hours of work in Krypton. All"
kr.TextLabel_43.TextColor3 = Color3.fromRGB(118, 122, 136)
kr.TextLabel_43.TextSize = 14.000
kr.TextLabel_43.TextWrapped = true

kr.UIStroke_68.Transparency = 0.600
kr.UIStroke_68.Parent = kr.TextLabel_43

kr.TextLabel_44.Parent = kr.Frame_21
kr.TextLabel_44.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_44.BackgroundTransparency = 1.000
kr.TextLabel_44.Position = UDim2.new(0, -5, 0, 42)
kr.TextLabel_44.Size = UDim2.new(0, 374, 0, 24)
kr.TextLabel_44.ZIndex = 999999999
kr.TextLabel_44.Font = Enum.Font.Gotham
kr.TextLabel_44.Text = "protected by copyright laws. Unauthorized copying,"
kr.TextLabel_44.TextColor3 = Color3.fromRGB(118, 122, 136)
kr.TextLabel_44.TextSize = 14.000
kr.TextLabel_44.TextWrapped = true

kr.UIStroke_69.Transparency = 0.600
kr.UIStroke_69.Parent = kr.TextLabel_44

kr.TextLabel_45.Parent = kr.Frame_21
kr.TextLabel_45.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_45.BackgroundTransparency = 1.000
kr.TextLabel_45.Position = UDim2.new(0, -1, 0, 17)
kr.TextLabel_45.Size = UDim2.new(0, 369, 0, 18)
kr.TextLabel_45.ZIndex = 999999999
kr.TextLabel_45.Font = Enum.Font.Gotham
kr.TextLabel_45.Text = "content, including text, images, and graphics, on this"
kr.TextLabel_45.TextColor3 = Color3.fromRGB(118, 122, 136)
kr.TextLabel_45.TextSize = 14.000
kr.TextLabel_45.TextWrapped = true

kr.UIStroke_70.Transparency = 0.600
kr.UIStroke_70.Parent = kr.TextLabel_45

kr.TextLabel_46.Parent = kr.Frame_21
kr.TextLabel_46.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_46.BackgroundTransparency = 1.000
kr.TextLabel_46.Position = UDim2.new(0, -17, 0, 1)
kr.TextLabel_46.Size = UDim2.new(0, 372, 0, 22)
kr.TextLabel_46.ZIndex = 999999999
kr.TextLabel_46.Font = Enum.Font.Gotham
kr.TextLabel_46.Text = "There are over 500 hours of work in Krypton. All"
kr.TextLabel_46.TextColor3 = Color3.fromRGB(118, 122, 136)
kr.TextLabel_46.TextSize = 14.000
kr.TextLabel_46.TextWrapped = true

kr.UIStroke_71.Transparency = 0.600
kr.UIStroke_71.Parent = kr.TextLabel_46

kr.TextLabel_47.Parent = kr.Frame_21
kr.TextLabel_47.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_47.BackgroundTransparency = 1.000
kr.TextLabel_47.Position = UDim2.new(0, -17, 0, 70)
kr.TextLabel_47.Size = UDim2.new(0, 127, 0, 25)
kr.TextLabel_47.ZIndex = 999999999
kr.TextLabel_47.Font = Enum.Font.Gotham
kr.TextLabel_47.Text = "prohibited."
kr.TextLabel_47.TextColor3 = Color3.fromRGB(118, 122, 136)
kr.TextLabel_47.TextSize = 14.000
kr.TextLabel_47.TextWrapped = true

kr.UIStroke_72.Transparency = 0.600
kr.UIStroke_72.Parent = kr.TextLabel_47

kr.TextLabel_48.Parent = kr.Frame_21
kr.TextLabel_48.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_48.BackgroundTransparency = 1.000
kr.TextLabel_48.Position = UDim2.new(0, -1, 0, 17)
kr.TextLabel_48.Size = UDim2.new(0, 369, 0, 18)
kr.TextLabel_48.ZIndex = 999999999
kr.TextLabel_48.Font = Enum.Font.Gotham
kr.TextLabel_48.Text = "content, including text, images, and graphics, on this"
kr.TextLabel_48.TextColor3 = Color3.fromRGB(118, 122, 136)
kr.TextLabel_48.TextSize = 14.000
kr.TextLabel_48.TextWrapped = true

kr.UIStroke_73.Transparency = 0.600
kr.UIStroke_73.Parent = kr.TextLabel_48

kr.TextLabel_49.Parent = kr.Frame_21
kr.TextLabel_49.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_49.BackgroundTransparency = 1.000
kr.TextLabel_49.Position = UDim2.new(0, -14, 0, 31)
kr.TextLabel_49.Size = UDim2.new(0, 373, 0, 19)
kr.TextLabel_49.ZIndex = 999999999
kr.TextLabel_49.Font = Enum.Font.Gotham
kr.TextLabel_49.Text = "app is the intellectual property of Krypton and is"
kr.TextLabel_49.TextColor3 = Color3.fromRGB(118, 122, 136)
kr.TextLabel_49.TextSize = 14.000
kr.TextLabel_49.TextWrapped = true

kr.UIStroke_74.Transparency = 0.600
kr.UIStroke_74.Parent = kr.TextLabel_49

kr.TextLabel_50.Parent = kr.Frame_21
kr.TextLabel_50.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_50.BackgroundTransparency = 1.000
kr.TextLabel_50.Position = UDim2.new(0, 2, 0, 55)
kr.TextLabel_50.Size = UDim2.new(0, 367, 0, 27)
kr.TextLabel_50.ZIndex = 999999999
kr.TextLabel_50.Font = Enum.Font.Gotham
kr.TextLabel_50.Text = "reproduction, or distribution of our content is strictly"
kr.TextLabel_50.TextColor3 = Color3.fromRGB(118, 122, 136)
kr.TextLabel_50.TextSize = 14.000
kr.TextLabel_50.TextWrapped = true

kr.UIStroke_75.Transparency = 0.600
kr.UIStroke_75.Parent = kr.TextLabel_50

kr.TextLabel_51.Parent = kr.Frame_21
kr.TextLabel_51.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_51.BackgroundTransparency = 1.000
kr.TextLabel_51.Position = UDim2.new(0, -5, 0, 42)
kr.TextLabel_51.Size = UDim2.new(0, 374, 0, 24)
kr.TextLabel_51.ZIndex = 999999999
kr.TextLabel_51.Font = Enum.Font.Gotham
kr.TextLabel_51.Text = "protected by copyright laws. Unauthorized copying,"
kr.TextLabel_51.TextColor3 = Color3.fromRGB(118, 122, 136)
kr.TextLabel_51.TextSize = 14.000
kr.TextLabel_51.TextWrapped = true

kr.UIStroke_76.Transparency = 0.600
kr.UIStroke_76.Parent = kr.TextLabel_51

kr.TextLabel_52.Parent = kr.Frame_21
kr.TextLabel_52.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_52.BackgroundTransparency = 1.000
kr.TextLabel_52.Position = UDim2.new(0, -17, 0, 70)
kr.TextLabel_52.Size = UDim2.new(0, 127, 0, 25)
kr.TextLabel_52.ZIndex = 999999999
kr.TextLabel_52.Font = Enum.Font.Gotham
kr.TextLabel_52.Text = "prohibited."
kr.TextLabel_52.TextColor3 = Color3.fromRGB(118, 122, 136)
kr.TextLabel_52.TextSize = 14.000
kr.TextLabel_52.TextWrapped = true

kr.UIStroke_77.Transparency = 0.600
kr.UIStroke_77.Parent = kr.TextLabel_52

kr.TextLabel_53.Parent = kr.Frame_21
kr.TextLabel_53.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_53.BackgroundTransparency = 1.000
kr.TextLabel_53.Position = UDim2.new(0, -14, 0, 31)
kr.TextLabel_53.Size = UDim2.new(0, 373, 0, 19)
kr.TextLabel_53.ZIndex = 999999999
kr.TextLabel_53.Font = Enum.Font.Gotham
kr.TextLabel_53.Text = "app is the intellectual property of Krypton and is"
kr.TextLabel_53.TextColor3 = Color3.fromRGB(118, 122, 136)
kr.TextLabel_53.TextSize = 14.000
kr.TextLabel_53.TextWrapped = true

kr.UIStroke_78.Transparency = 0.600
kr.UIStroke_78.Parent = kr.TextLabel_53

kr.TextLabel_54.Parent = kr.Page2
kr.TextLabel_54.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_54.BackgroundTransparency = 1.000
kr.TextLabel_54.Position = UDim2.new(0, 177, 0, 6)
kr.TextLabel_54.Size = UDim2.new(0, 122, 0, 22)
kr.TextLabel_54.ZIndex = 999999999
kr.TextLabel_54.Font = Enum.Font.GothamBold
kr.TextLabel_54.Text = "Hydrogen-Team"
kr.TextLabel_54.TextColor3 = Color3.fromRGB(7, 181, 126)
kr.TextLabel_54.TextSize = 14.000
kr.TextLabel_54.TextWrapped = true

kr.UIStroke_79.Transparency = 0.500
kr.UIStroke_79.Parent = kr.TextLabel_54

kr.ImageLabel_35.Parent = kr.Page2
kr.ImageLabel_35.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ImageLabel_35.BackgroundTransparency = 1.000
kr.ImageLabel_35.Position = UDim2.new(-0.0880000293, 0, -0.302083313, 0)
kr.ImageLabel_35.Size = UDim2.new(0, 41, 0, 41)
kr.ImageLabel_35.Image = "rbxassetid://13618770731"
kr.ImageLabel_35.ImageColor3 = Color3.fromRGB(37, 40, 44)

kr.TextLabel_55.Parent = kr.Page2
kr.TextLabel_55.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_55.BackgroundTransparency = 1.000
kr.TextLabel_55.Position = UDim2.new(0, 360, 0, 5)
kr.TextLabel_55.Size = UDim2.new(0, 25, 0, 25)
kr.TextLabel_55.ZIndex = 999999999
kr.TextLabel_55.Font = Enum.Font.Gotham
kr.TextLabel_55.Text = ","
kr.TextLabel_55.TextColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_55.TextSize = 14.000
kr.TextLabel_55.TextWrapped = true

kr.UIStroke_80.Transparency = 0.600
kr.UIStroke_80.Parent = kr.TextLabel_55

kr.TextLabel_56.Parent = kr.Page2
kr.TextLabel_56.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_56.BackgroundTransparency = 1.000
kr.TextLabel_56.Position = UDim2.new(0, 288, 0, 10)
kr.TextLabel_56.Size = UDim2.new(0, 38, 0, 14)
kr.TextLabel_56.ZIndex = 999999999
kr.TextLabel_56.Font = Enum.Font.Gotham
kr.TextLabel_56.Text = ", and"
kr.TextLabel_56.TextColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_56.TextSize = 14.000
kr.TextLabel_56.TextWrapped = true

kr.UIStroke_81.Transparency = 0.600
kr.UIStroke_81.Parent = kr.TextLabel_56

kr.TextLabel_57.Parent = kr.Page2
kr.TextLabel_57.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_57.BackgroundTransparency = 1.000
kr.TextLabel_57.Position = UDim2.new(0, 320, 0, 6)
kr.TextLabel_57.Size = UDim2.new(0, 56, 0, 22)
kr.TextLabel_57.ZIndex = 999999999
kr.TextLabel_57.Font = Enum.Font.GothamBold
kr.TextLabel_57.Text = "aspect"
kr.TextLabel_57.TextColor3 = Color3.fromRGB(7, 181, 126)
kr.TextLabel_57.TextSize = 14.000
kr.TextLabel_57.TextWrapped = true

kr.UIStroke_82.Transparency = 0.500
kr.UIStroke_82.Parent = kr.TextLabel_57

kr.TextLabel_58.Parent = kr.welcomerFrame
kr.TextLabel_58.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_58.BackgroundTransparency = 1.000
kr.TextLabel_58.Position = UDim2.new(0, -29, 0, 8)
kr.TextLabel_58.Size = UDim2.new(0, 251, 0, 38)
kr.TextLabel_58.ZIndex = 999999999
kr.TextLabel_58.Font = Enum.Font.Gotham
kr.TextLabel_58.Text = "Welcome to Krypton"
kr.TextLabel_58.TextColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_58.TextScaled = true
kr.TextLabel_58.TextSize = 16.000
kr.TextLabel_58.TextWrapped = true

kr.UIStroke_83.Transparency = 0.600
kr.UIStroke_83.Parent = kr.TextLabel_58

kr.UITextSizeConstraint_20.Parent = kr.TextLabel_58
kr.UITextSizeConstraint_20.MaxTextSize = 16

kr.UIAspectRatioConstraint_38.Parent = kr.WelcomeWindow
kr.UIAspectRatioConstraint_38.AspectRatio = 1.634

kr.SettingsPage.Name = "SettingsPage"
kr.SettingsPage.Parent = kr.MainMenu
kr.SettingsPage.BackgroundColor3 = Color3.fromRGB(26, 27, 32)
kr.SettingsPage.BorderColor3 = Color3.fromRGB(23, 24, 27)
kr.SettingsPage.Position = UDim2.new(0, 112, 0, 41)
kr.SettingsPage.Size = UDim2.new(0, 440, 0, 295)
kr.SettingsPage.Visible = false

kr.UICorner_40.CornerRadius = UDim.new(0, 12)
kr.UICorner_40.Parent = kr.SettingsPage

kr.UIAspectRatioConstraint_39.Parent = kr.SettingsPage
kr.UIAspectRatioConstraint_39.AspectRatio = 1.493

kr.TextLabel_59.Parent = kr.SettingsPage
kr.TextLabel_59.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_59.BackgroundTransparency = 1.000
kr.TextLabel_59.Position = UDim2.new(0, 15, 0, 24)
kr.TextLabel_59.Size = UDim2.new(0, 116, 0, 10)
kr.TextLabel_59.Font = Enum.Font.Gotham
kr.TextLabel_59.Text = "Settings"
kr.TextLabel_59.TextColor3 = Color3.fromRGB(162, 162, 162)
kr.TextLabel_59.TextSize = 15.000
kr.TextLabel_59.TextWrapped = true

kr.UIStroke_84.Transparency = 0.800
kr.UIStroke_84.Parent = kr.TextLabel_59

kr.UITextSizeConstraint_21.Parent = kr.TextLabel_59
kr.UITextSizeConstraint_21.MaxTextSize = 15

kr.f1.Name = "f1"
kr.f1.Parent = kr.SettingsPage
kr.f1.BackgroundColor3 = Color3.fromRGB(26, 27, 32)
kr.f1.Position = UDim2.new(0, 0, 0, 42)
kr.f1.Size = UDim2.new(0, 459, 0, 48)

kr.UIStroke_85.Color = Color3.fromRGB(37, 36, 42)
kr.UIStroke_85.Thickness = 2.000
kr.UIStroke_85.Parent = kr.f1

kr.TextLabel_60.Parent = kr.f1
kr.TextLabel_60.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_60.BackgroundTransparency = 1.000
kr.TextLabel_60.Position = UDim2.new(0, 32, 0, 7)
kr.TextLabel_60.Size = UDim2.new(0, 116, 0, 19)
kr.TextLabel_60.Font = Enum.Font.Gotham
kr.TextLabel_60.Text = "Unlock FPS"
kr.TextLabel_60.TextColor3 = Color3.fromRGB(185, 185, 185)
kr.TextLabel_60.TextScaled = true
kr.TextLabel_60.TextSize = 17.000
kr.TextLabel_60.TextWrapped = true

kr.UIStroke_86.Transparency = 0.800
kr.UIStroke_86.Parent = kr.TextLabel_60

kr.UIAspectRatioConstraint_40.Parent = kr.TextLabel_60
kr.UIAspectRatioConstraint_40.AspectRatio = 6.100

kr.UITextSizeConstraint_22.Parent = kr.TextLabel_60
kr.UITextSizeConstraint_22.MaxTextSize = 17

kr.TextLabel_61.Parent = kr.f1
kr.TextLabel_61.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_61.BackgroundTransparency = 1.000
kr.TextLabel_61.Position = UDim2.new(0, 33, 0, 26)
kr.TextLabel_61.Size = UDim2.new(0, 191, 0, 13)
kr.TextLabel_61.Font = Enum.Font.Gotham
kr.TextLabel_61.Text = "Toggles maximum game FPS."
kr.TextLabel_61.TextColor3 = Color3.fromRGB(166, 166, 166)
kr.TextLabel_61.TextScaled = true
kr.TextLabel_61.TextSize = 12.000
kr.TextLabel_61.TextWrapped = true

kr.UIStroke_87.Transparency = 0.800
kr.UIStroke_87.Parent = kr.TextLabel_61

kr.UITextSizeConstraint_23.Parent = kr.TextLabel_61
kr.UITextSizeConstraint_23.MaxTextSize = 12

kr.ToggleBar.Name = "ToggleBar"
kr.ToggleBar.Parent = kr.f1
kr.ToggleBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ToggleBar.BackgroundTransparency = 1.000
kr.ToggleBar.Position = UDim2.new(0, 383, 0, 3)
kr.ToggleBar.Size = UDim2.new(0, 40, 0, 38)
kr.ToggleBar.Image = "http://www.roblox.com/asset/?id=6031068430"
kr.ToggleBar.ImageColor3 = Color3.fromRGB(5, 122, 85)

kr.UIAspectRatioConstraint_41.Parent = kr.ToggleBar
kr.UIAspectRatioConstraint_41.AspectRatio = 1.051

kr.UIAspectRatioConstraint_42.Parent = kr.f1
kr.UIAspectRatioConstraint_42.AspectRatio = 9.388

kr.cOE.Name = "cOE"
kr.cOE.Parent = kr.SettingsPage
kr.cOE.BackgroundColor3 = Color3.fromRGB(26, 27, 32)
kr.cOE.ClipsDescendants = true
kr.cOE.Position = UDim2.new(0, 2, 0, 90)
kr.cOE.Size = UDim2.new(0, 459, 0, 49)

kr.UIStroke_88.Color = Color3.fromRGB(37, 36, 42)
kr.UIStroke_88.Thickness = 2.000
kr.UIStroke_88.Parent = kr.cOE

kr.TextLabel_62.Parent = kr.cOE
kr.TextLabel_62.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_62.BackgroundTransparency = 1.000
kr.TextLabel_62.Position = UDim2.new(0, 31, 0, 5)
kr.TextLabel_62.Size = UDim2.new(0, 159, 0, 22)
kr.TextLabel_62.Font = Enum.Font.Gotham
kr.TextLabel_62.Text = "Close on Execute"
kr.TextLabel_62.TextColor3 = Color3.fromRGB(185, 185, 185)
kr.TextLabel_62.TextScaled = true
kr.TextLabel_62.TextSize = 17.000
kr.TextLabel_62.TextWrapped = true

kr.UIStroke_89.Transparency = 0.800
kr.UIStroke_89.Parent = kr.TextLabel_62

kr.UIAspectRatioConstraint_43.Parent = kr.TextLabel_62
kr.UIAspectRatioConstraint_43.AspectRatio = 7.391

kr.UITextSizeConstraint_24.Parent = kr.TextLabel_62
kr.UITextSizeConstraint_24.MaxTextSize = 17

kr.TextLabel_63.Parent = kr.cOE
kr.TextLabel_63.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_63.BackgroundTransparency = 1.000
kr.TextLabel_63.Position = UDim2.new(0, 30, 0, 27)
kr.TextLabel_63.Size = UDim2.new(0, 298, 0, 13)
kr.TextLabel_63.Font = Enum.Font.Gotham
kr.TextLabel_63.Text = "Close Krypton whenever a script gets executed."
kr.TextLabel_63.TextColor3 = Color3.fromRGB(166, 166, 166)
kr.TextLabel_63.TextScaled = true
kr.TextLabel_63.TextSize = 12.000
kr.TextLabel_63.TextWrapped = true

kr.UIStroke_90.Transparency = 0.800
kr.UIStroke_90.Parent = kr.TextLabel_63

kr.UITextSizeConstraint_25.Parent = kr.TextLabel_63
kr.UITextSizeConstraint_25.MaxTextSize = 12

kr.on.Name = "on"
kr.on.Parent = kr.cOE
kr.on.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.on.BackgroundTransparency = 1.000
kr.on.Position = UDim2.new(0, 384, 0, 4)
kr.on.Size = UDim2.new(0, 40, 0, 38)
kr.on.Visible = false
kr.on.Image = "http://www.roblox.com/asset/?id=6031068430"
kr.on.ImageColor3 = Color3.fromRGB(4, 97, 67)

kr.UIAspectRatioConstraint_44.Parent = kr.on
kr.UIAspectRatioConstraint_44.AspectRatio = 1.051

kr.ToggleBar_2.Name = "ToggleBar"
kr.ToggleBar_2.Parent = kr.cOE
kr.ToggleBar_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ToggleBar_2.BackgroundTransparency = 1.000
kr.ToggleBar_2.Position = UDim2.new(0, 383, 0, 3)
kr.ToggleBar_2.Size = UDim2.new(0, 40, 0, 38)
kr.ToggleBar_2.Image = "http://www.roblox.com/asset/?id=6031068429"
kr.ToggleBar_2.ImageColor3 = Color3.fromRGB(51, 53, 63)

kr.UIAspectRatioConstraint_45.Parent = kr.ToggleBar_2
kr.UIAspectRatioConstraint_45.AspectRatio = 1.051

kr.UIAspectRatioConstraint_46.Parent = kr.cOE
kr.UIAspectRatioConstraint_46.AspectRatio = 9.200

kr.f3.Name = "f3"
kr.f3.Parent = kr.SettingsPage
kr.f3.BackgroundColor3 = Color3.fromRGB(26, 27, 32)
kr.f3.ClipsDescendants = true
kr.f3.Position = UDim2.new(0, 0, 0, 141)
kr.f3.Size = UDim2.new(0, 459, 0, 49)

kr.UIStroke_91.Color = Color3.fromRGB(37, 36, 42)
kr.UIStroke_91.Thickness = 2.000
kr.UIStroke_91.Parent = kr.f3

kr.TextLabel_64.Parent = kr.f3
kr.TextLabel_64.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_64.BackgroundTransparency = 1.000
kr.TextLabel_64.Position = UDim2.new(0, 30, 0, 5)
kr.TextLabel_64.Size = UDim2.new(0, 189, 0, 22)
kr.TextLabel_64.Font = Enum.Font.Gotham
kr.TextLabel_64.Text = "Smaller Open Button"
kr.TextLabel_64.TextColor3 = Color3.fromRGB(185, 185, 185)
kr.TextLabel_64.TextScaled = true
kr.TextLabel_64.TextSize = 17.000
kr.TextLabel_64.TextWrapped = true

kr.UIStroke_92.Transparency = 0.800
kr.UIStroke_92.Parent = kr.TextLabel_64

kr.UITextSizeConstraint_26.Parent = kr.TextLabel_64
kr.UITextSizeConstraint_26.MaxTextSize = 17

kr.TextLabel_65.Parent = kr.f3
kr.TextLabel_65.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_65.BackgroundTransparency = 1.000
kr.TextLabel_65.Position = UDim2.new(0, 29, 0, 27)
kr.TextLabel_65.Size = UDim2.new(0, 324, 0, 13)
kr.TextLabel_65.Font = Enum.Font.Gotham
kr.TextLabel_65.Text = "Make the Open Button smaller then the default size."
kr.TextLabel_65.TextColor3 = Color3.fromRGB(166, 166, 166)
kr.TextLabel_65.TextScaled = true
kr.TextLabel_65.TextSize = 12.000
kr.TextLabel_65.TextWrapped = true

kr.UIStroke_93.Transparency = 0.800
kr.UIStroke_93.Parent = kr.TextLabel_65

kr.UITextSizeConstraint_27.Parent = kr.TextLabel_65
kr.UITextSizeConstraint_27.MaxTextSize = 12

kr.on_2.Name = "on"
kr.on_2.Parent = kr.f3
kr.on_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.on_2.BackgroundTransparency = 1.000
kr.on_2.Position = UDim2.new(0, 384, 0, 4)
kr.on_2.Size = UDim2.new(0, 40, 0, 38)
kr.on_2.Visible = false
kr.on_2.Image = "http://www.roblox.com/asset/?id=6031068430"
kr.on_2.ImageColor3 = Color3.fromRGB(4, 97, 67)

kr.UIAspectRatioConstraint_47.Parent = kr.on_2
kr.UIAspectRatioConstraint_47.AspectRatio = 1.051

kr.ToggleBar_3.Name = "ToggleBar"
kr.ToggleBar_3.Parent = kr.f3
kr.ToggleBar_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ToggleBar_3.BackgroundTransparency = 1.000
kr.ToggleBar_3.Position = UDim2.new(0, 383, 0, 5)
kr.ToggleBar_3.Size = UDim2.new(0, 40, 0, 38)
kr.ToggleBar_3.Image = "http://www.roblox.com/asset/?id=6031068430"
kr.ToggleBar_3.ImageColor3 = Color3.fromRGB(5, 122, 85)

kr.UIAspectRatioConstraint_48.Parent = kr.ToggleBar_3
kr.UIAspectRatioConstraint_48.AspectRatio = 1.051

kr.UIAspectRatioConstraint_49.Parent = kr.f3
kr.UIAspectRatioConstraint_49.AspectRatio = 9.200

kr.newLabel.Name = "newLabel"
kr.newLabel.Parent = kr.f3
kr.newLabel.BackgroundColor3 = Color3.fromRGB(39, 40, 48)
kr.newLabel.BorderSizePixel = 0
kr.newLabel.Position = UDim2.new(0, 212, 0, 8)
kr.newLabel.Size = UDim2.new(0, 41, 0, 15)
kr.newLabel.ZIndex = 999999999
kr.newLabel.Font = Enum.Font.GothamBold
kr.newLabel.Text = "NEW"
kr.newLabel.TextColor3 = Color3.fromRGB(204, 207, 217)
kr.newLabel.TextScaled = true
kr.newLabel.TextSize = 11.000
kr.newLabel.TextWrapped = true

kr.UIStroke_94.Transparency = 0.600
kr.UIStroke_94.Parent = kr.newLabel

kr.UITextSizeConstraint_28.Parent = kr.newLabel
kr.UITextSizeConstraint_28.MaxTextSize = 11

kr.UICorner_41.CornerRadius = UDim.new(0, 6)
kr.UICorner_41.Parent = kr.newLabel

kr.f4.Name = "f4"
kr.f4.Parent = kr.SettingsPage
kr.f4.BackgroundColor3 = Color3.fromRGB(26, 27, 32)
kr.f4.ClipsDescendants = true
kr.f4.Position = UDim2.new(0, -1, 0, 190)
kr.f4.Size = UDim2.new(0, 459, 0, 49)

kr.UIStroke_95.Color = Color3.fromRGB(37, 36, 42)
kr.UIStroke_95.Thickness = 2.000
kr.UIStroke_95.Parent = kr.f4

kr.TextLabel_66.Parent = kr.f4
kr.TextLabel_66.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_66.BackgroundTransparency = 1.000
kr.TextLabel_66.Position = UDim2.new(0, 30, 0, 5)
kr.TextLabel_66.Size = UDim2.new(0, 93, 0, 22)
kr.TextLabel_66.Font = Enum.Font.Gotham
kr.TextLabel_66.Text = "Minimap"
kr.TextLabel_66.TextColor3 = Color3.fromRGB(185, 185, 185)
kr.TextLabel_66.TextScaled = true
kr.TextLabel_66.TextSize = 17.000
kr.TextLabel_66.TextWrapped = true

kr.UIStroke_96.Transparency = 0.800
kr.UIStroke_96.Parent = kr.TextLabel_66

kr.UITextSizeConstraint_29.Parent = kr.TextLabel_66
kr.UITextSizeConstraint_29.MaxTextSize = 17

kr.TextLabel_67.Parent = kr.f4
kr.TextLabel_67.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_67.BackgroundTransparency = 1.000
kr.TextLabel_67.Position = UDim2.new(0, 29, 0, 27)
kr.TextLabel_67.Size = UDim2.new(0, 365, 0, 13)
kr.TextLabel_67.Font = Enum.Font.Gotham
kr.TextLabel_67.Text = "Enables a minimap beside the Editor in the Execuotr Page."
kr.TextLabel_67.TextColor3 = Color3.fromRGB(166, 166, 166)
kr.TextLabel_67.TextScaled = true
kr.TextLabel_67.TextSize = 12.000
kr.TextLabel_67.TextWrapped = true

kr.UIStroke_97.Transparency = 0.800
kr.UIStroke_97.Parent = kr.TextLabel_67

kr.UITextSizeConstraint_30.Parent = kr.TextLabel_67
kr.UITextSizeConstraint_30.MaxTextSize = 12

kr.on_3.Name = "on"
kr.on_3.Parent = kr.f4
kr.on_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.on_3.BackgroundTransparency = 1.000
kr.on_3.Position = UDim2.new(0, 384, 0, 4)
kr.on_3.Size = UDim2.new(0, 40, 0, 38)
kr.on_3.Visible = false
kr.on_3.Image = "http://www.roblox.com/asset/?id=6031068430"
kr.on_3.ImageColor3 = Color3.fromRGB(4, 97, 67)

kr.UIAspectRatioConstraint_50.Parent = kr.on_3
kr.UIAspectRatioConstraint_50.AspectRatio = 1.051

kr.ToggleBar_4.Name = "ToggleBar"
kr.ToggleBar_4.Parent = kr.f4
kr.ToggleBar_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ToggleBar_4.BackgroundTransparency = 1.000
kr.ToggleBar_4.Position = UDim2.new(0, 383, 0, 5)
kr.ToggleBar_4.Size = UDim2.new(0, 40, 0, 38)
kr.ToggleBar_4.Image = "http://www.roblox.com/asset/?id=6031068429"
kr.ToggleBar_4.ImageColor3 = Color3.fromRGB(51, 53, 63)

kr.UIAspectRatioConstraint_51.Parent = kr.ToggleBar_4
kr.UIAspectRatioConstraint_51.AspectRatio = 1.051

kr.UIAspectRatioConstraint_52.Parent = kr.f4
kr.UIAspectRatioConstraint_52.AspectRatio = 9.200

kr.newLabel_2.Name = "newLabel"
kr.newLabel_2.Parent = kr.f4
kr.newLabel_2.BackgroundColor3 = Color3.fromRGB(39, 40, 48)
kr.newLabel_2.BorderSizePixel = 0
kr.newLabel_2.Position = UDim2.new(0, 115, 0, 8)
kr.newLabel_2.Size = UDim2.new(0, 42, 0, 15)
kr.newLabel_2.ZIndex = 999999999
kr.newLabel_2.Font = Enum.Font.GothamBold
kr.newLabel_2.Text = "NEW"
kr.newLabel_2.TextColor3 = Color3.fromRGB(204, 207, 217)
kr.newLabel_2.TextScaled = true
kr.newLabel_2.TextSize = 11.000
kr.newLabel_2.TextWrapped = true

kr.UIStroke_98.Transparency = 0.600
kr.UIStroke_98.Parent = kr.newLabel_2

kr.UITextSizeConstraint_31.Parent = kr.newLabel_2
kr.UITextSizeConstraint_31.MaxTextSize = 11

kr.UICorner_42.CornerRadius = UDim.new(0, 6)
kr.UICorner_42.Parent = kr.newLabel_2

kr.EditorPage.Name = "EditorPage"
kr.EditorPage.Parent = kr.MainMenu
kr.EditorPage.BackgroundColor3 = Color3.fromRGB(26, 27, 31)
kr.EditorPage.Position = UDim2.new(0, 112, 0, 48)
kr.EditorPage.Size = UDim2.new(0, 440, 0, 289)

kr.UICorner_43.CornerRadius = UDim.new(0, 12)
kr.UICorner_43.Parent = kr.EditorPage

kr.Editor.Name = "Editor"
kr.Editor.Parent = kr.EditorPage
kr.Editor.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
kr.Editor.BorderSizePixel = 0
kr.Editor.Position = UDim2.new(0, 30, 0, 8)
kr.Editor.Size = UDim2.new(0, 397, 0, 241)

kr.UIAspectRatioConstraint_53.Parent = kr.Editor
kr.UIAspectRatioConstraint_53.AspectRatio = 1.647

kr.ScrollingFrame.Parent = kr.Editor
kr.ScrollingFrame.Active = true
kr.ScrollingFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ScrollingFrame.BackgroundTransparency = 1.000
kr.ScrollingFrame.BorderColor3 = Color3.fromRGB(39, 40, 45)
kr.ScrollingFrame.BorderSizePixel = 2
kr.ScrollingFrame.Size = UDim2.new(0, 392, 0, 226)
kr.ScrollingFrame.CanvasSize = UDim2.new(2, 0, 2, 0)
kr.ScrollingFrame.ScrollBarThickness = 8

kr.TextBox_2.Parent = kr.ScrollingFrame
kr.TextBox_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextBox_2.BackgroundTransparency = 1.000
kr.TextBox_2.Position = UDim2.new(0.0149366418, 0, 0.0227800217, 0)
kr.TextBox_2.Size = UDim2.new(0, 367, 0, 204)
kr.TextBox_2.ClearTextOnFocus = false
kr.TextBox_2.Font = Enum.Font.Unknown
kr.TextBox_2.MultiLine = true
kr.TextBox_2.PlaceholderText = "print(\"Hello world!\"),"
kr.TextBox_2.Text = ""
kr.TextBox_2.TextColor3 = Color3.fromRGB(255, 255, 255)
kr.TextBox_2.TextSize = 11.000
kr.TextBox_2.TextStrokeTransparency = 0.600
kr.TextBox_2.TextXAlignment = Enum.TextXAlignment.Left
kr.TextBox_2.TextYAlignment = Enum.TextYAlignment.Top

kr.Frame_22.Parent = kr.EditorPage
kr.Frame_22.BackgroundColor3 = Color3.fromRGB(38, 37, 43)
kr.Frame_22.BorderSizePixel = 0
kr.Frame_22.ClipsDescendants = true
kr.Frame_22.Position = UDim2.new(0, 17, 0, 241)
kr.Frame_22.Size = UDim2.new(0, 407, 0, 35)

kr.UIStroke_99.Color = Color3.fromRGB(53, 52, 58)
kr.UIStroke_99.Thickness = 1.300
kr.UIStroke_99.Parent = kr.Frame_22

kr.UICorner_44.CornerRadius = UDim.new(0, 3)
kr.UICorner_44.Parent = kr.Frame_22

kr.executeF.Name = "executeF"
kr.executeF.Parent = kr.Frame_22
kr.executeF.BackgroundColor3 = Color3.fromRGB(38, 37, 43)
kr.executeF.Position = UDim2.new(0, 10, 0, -3)
kr.executeF.Size = UDim2.new(0, 142, 0, 43)

kr.UIStroke_100.Color = Color3.fromRGB(53, 52, 58)
kr.UIStroke_100.Thickness = 2.000
kr.UIStroke_100.Parent = kr.executeF

kr.TextLabel_68.Parent = kr.executeF
kr.TextLabel_68.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_68.BackgroundTransparency = 1.000
kr.TextLabel_68.Position = UDim2.new(0, 42, 0, 12)
kr.TextLabel_68.Size = UDim2.new(0, 76, 0, 19)
kr.TextLabel_68.Font = Enum.Font.GothamBold
kr.TextLabel_68.Text = "Execute"
kr.TextLabel_68.TextColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_68.TextScaled = true
kr.TextLabel_68.TextSize = 15.000
kr.TextLabel_68.TextWrapped = true

kr.UIStroke_101.Transparency = 0.500
kr.UIStroke_101.Parent = kr.TextLabel_68

kr.UIAspectRatioConstraint_54.Parent = kr.TextLabel_68
kr.UIAspectRatioConstraint_54.AspectRatio = 4.000

kr.UITextSizeConstraint_32.Parent = kr.TextLabel_68
kr.UITextSizeConstraint_32.MaxTextSize = 15

kr.ImageLabel_36.Parent = kr.executeF
kr.ImageLabel_36.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ImageLabel_36.BackgroundTransparency = 1.000
kr.ImageLabel_36.Position = UDim2.new(0, 7, 0, 7)
kr.ImageLabel_36.Size = UDim2.new(0, 27, 0, 28)
kr.ImageLabel_36.Image = "rbxassetid://13625975635"
kr.ImageLabel_36.ImageColor3 = Color3.fromRGB(144, 144, 152)

kr.UIAspectRatioConstraint_55.Parent = kr.ImageLabel_36
kr.UIAspectRatioConstraint_55.AspectRatio = 0.964

kr.ExecuteBtn.Name = "ExecuteBtn"
kr.ExecuteBtn.Parent = kr.executeF
kr.ExecuteBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ExecuteBtn.BackgroundTransparency = 1.000
kr.ExecuteBtn.Position = UDim2.new(0, 0, 0, 3)
kr.ExecuteBtn.Size = UDim2.new(0, 141, 0, 37)
kr.ExecuteBtn.Font = Enum.Font.GothamBold
kr.ExecuteBtn.Text = "  "
kr.ExecuteBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
kr.ExecuteBtn.TextScaled = true
kr.ExecuteBtn.TextSize = 14.000
kr.ExecuteBtn.TextWrapped = true

kr.UIAspectRatioConstraint_56.Parent = kr.ExecuteBtn
kr.UIAspectRatioConstraint_56.AspectRatio = 3.811

kr.UITextSizeConstraint_33.Parent = kr.ExecuteBtn
kr.UITextSizeConstraint_33.MaxTextSize = 14

kr.UIAspectRatioConstraint_57.Parent = kr.executeF
kr.UIAspectRatioConstraint_57.AspectRatio = 3.302

kr.clearF.Name = "clearF"
kr.clearF.Parent = kr.Frame_22
kr.clearF.BackgroundColor3 = Color3.fromRGB(38, 37, 43)
kr.clearF.Position = UDim2.new(0, 152, 0, -5)
kr.clearF.Size = UDim2.new(0, 137, 0, 43)

kr.UIStroke_102.Color = Color3.fromRGB(53, 52, 58)
kr.UIStroke_102.Thickness = 2.000
kr.UIStroke_102.Parent = kr.clearF

kr.TextLabel_69.Parent = kr.clearF
kr.TextLabel_69.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_69.BackgroundTransparency = 1.000
kr.TextLabel_69.Position = UDim2.new(0, 41, 0, 14)
kr.TextLabel_69.Size = UDim2.new(0, 80, 0, 19)
kr.TextLabel_69.Font = Enum.Font.GothamBold
kr.TextLabel_69.Text = "Clear Editor"
kr.TextLabel_69.TextColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_69.TextScaled = true
kr.TextLabel_69.TextSize = 15.000
kr.TextLabel_69.TextWrapped = true

kr.UIStroke_103.Transparency = 0.500
kr.UIStroke_103.Parent = kr.TextLabel_69

kr.UIAspectRatioConstraint_58.Parent = kr.TextLabel_69
kr.UIAspectRatioConstraint_58.AspectRatio = 4.211

kr.UITextSizeConstraint_34.Parent = kr.TextLabel_69
kr.UITextSizeConstraint_34.MaxTextSize = 15

kr.ImageLabel_37.Parent = kr.clearF
kr.ImageLabel_37.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ImageLabel_37.BackgroundTransparency = 1.000
kr.ImageLabel_37.Position = UDim2.new(0, 8, 0, 14)
kr.ImageLabel_37.Size = UDim2.new(0, 18, 0, 17)
kr.ImageLabel_37.Image = "rbxassetid://13626122323"
kr.ImageLabel_37.ImageColor3 = Color3.fromRGB(144, 144, 152)

kr.UIAspectRatioConstraint_59.Parent = kr.ImageLabel_37
kr.UIAspectRatioConstraint_59.AspectRatio = 1.059

kr.clearBtn.Name = "clearBtn"
kr.clearBtn.Parent = kr.clearF
kr.clearBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.clearBtn.BackgroundTransparency = 1.000
kr.clearBtn.Position = UDim2.new(0, 0, 0, 3)
kr.clearBtn.Size = UDim2.new(0, 140, 0, 37)
kr.clearBtn.Font = Enum.Font.GothamBold
kr.clearBtn.Text = "  "
kr.clearBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
kr.clearBtn.TextScaled = true
kr.clearBtn.TextSize = 14.000
kr.clearBtn.TextWrapped = true

kr.UIAspectRatioConstraint_60.Parent = kr.clearF
kr.UIAspectRatioConstraint_60.AspectRatio = 3.186

kr.TextLabel_70.Parent = kr.Frame_22
kr.TextLabel_70.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_70.BackgroundTransparency = 1.000
kr.TextLabel_70.Position = UDim2.new(0, 314, 0, 8)
kr.TextLabel_70.Size = UDim2.new(0, 82, 0, 18)
kr.TextLabel_70.Font = Enum.Font.GothamBold
kr.TextLabel_70.Text = "Save"
kr.TextLabel_70.TextColor3 = Color3.fromRGB(255, 255, 255)
kr.TextLabel_70.TextScaled = true
kr.TextLabel_70.TextSize = 15.000
kr.TextLabel_70.TextWrapped = true

kr.UIStroke_104.Transparency = 0.500
kr.UIStroke_104.Parent = kr.TextLabel_70

kr.UIAspectRatioConstraint_61.Parent = kr.TextLabel_70
kr.UIAspectRatioConstraint_61.AspectRatio = 4.316

kr.UITextSizeConstraint_35.Parent = kr.TextLabel_70
kr.UITextSizeConstraint_35.MaxTextSize = 15

kr.ImageLabel_38.Parent = kr.Frame_22
kr.ImageLabel_38.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ImageLabel_38.BackgroundTransparency = 1.000
kr.ImageLabel_38.Position = UDim2.new(0, 299, 0, 8)
kr.ImageLabel_38.Size = UDim2.new(0, 20, 0, 19)
kr.ImageLabel_38.Image = "rbxassetid://13626156799"
kr.ImageLabel_38.ImageColor3 = Color3.fromRGB(144, 144, 152)

kr.UIAspectRatioConstraint_62.Parent = kr.ImageLabel_38
kr.UIAspectRatioConstraint_62.AspectRatio = 1.053

kr.saveBtn.Name = "saveBtn"
kr.saveBtn.Parent = kr.Frame_22
kr.saveBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.saveBtn.BackgroundTransparency = 1.000
kr.saveBtn.Position = UDim2.new(0, 291, 0, 0)
kr.saveBtn.Size = UDim2.new(0, 119, 0, 37)
kr.saveBtn.Font = Enum.Font.GothamBold
kr.saveBtn.Text = "  "
kr.saveBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
kr.saveBtn.TextScaled = true
kr.saveBtn.TextSize = 14.000
kr.saveBtn.TextWrapped = true

kr.UIAspectRatioConstraint_63.Parent = kr.saveBtn
kr.UIAspectRatioConstraint_63.AspectRatio = 3.216

kr.UITextSizeConstraint_36.Parent = kr.saveBtn
kr.UITextSizeConstraint_36.MaxTextSize = 14

kr.UIAspectRatioConstraint_64.Parent = kr.Frame_22
kr.UIAspectRatioConstraint_64.AspectRatio = 11.629

kr.UIAspectRatioConstraint_65.Parent = kr.EditorPage
kr.UIAspectRatioConstraint_65.AspectRatio = 1.522

kr.preview.Name = "preview"
kr.preview.Parent = kr.EditorPage
kr.preview.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
kr.preview.BorderSizePixel = 0
kr.preview.Position = UDim2.new(0, 341, 0, 3)
kr.preview.Size = UDim2.new(0, 71, 0, 220)
kr.preview.Visible = false

kr.UIStroke_105.Color = Color3.fromRGB(39, 40, 45)
kr.UIStroke_105.Thickness = 2.000
kr.UIStroke_105.Parent = kr.preview

kr.TextBox_3.Parent = kr.preview
kr.TextBox_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.TextBox_3.BackgroundTransparency = 1.000
kr.TextBox_3.ClipsDescendants = true
kr.TextBox_3.Position = UDim2.new(0, 6, 0, 12)
kr.TextBox_3.Size = UDim2.new(0, 59, 0, 201)
kr.TextBox_3.ClearTextOnFocus = false
kr.TextBox_3.Font = Enum.Font.Gotham
kr.TextBox_3.MultiLine = true
kr.TextBox_3.PlaceholderText = "print(\"Hello world!\"),"
kr.TextBox_3.Text = ""
kr.TextBox_3.TextColor3 = Color3.fromRGB(255, 255, 255)
kr.TextBox_3.TextScaled = true
kr.TextBox_3.TextSize = 7.000
kr.TextBox_3.TextWrapped = true
kr.TextBox_3.TextXAlignment = Enum.TextXAlignment.Left
kr.TextBox_3.TextYAlignment = Enum.TextYAlignment.Top

kr.UIAspectRatioConstraint_66.Parent = kr.TextBox_3
kr.UIAspectRatioConstraint_66.AspectRatio = 0.294

kr.UITextSizeConstraint_37.Parent = kr.TextBox_3
kr.UITextSizeConstraint_37.MaxTextSize = 7

kr.UIAspectRatioConstraint_67.Parent = kr.preview
kr.UIAspectRatioConstraint_67.AspectRatio = 0.323

kr.OpenKr.Name = "OpenKr"
kr.OpenKr.Parent = kr.kr
kr.OpenKr.BackgroundColor3 = Color3.fromRGB(26, 27, 31)
kr.OpenKr.Position = UDim2.new(0, 23, 0, 140)
kr.OpenKr.Size = UDim2.new(0, 88, 0, 86)
kr.OpenKr.Visible = false

kr.UICorner_45.CornerRadius = UDim.new(0, 60)
kr.UICorner_45.Parent = kr.OpenKr

kr.ImageLabel_39.Parent = kr.OpenKr
kr.ImageLabel_39.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.ImageLabel_39.BackgroundTransparency = 1.000
kr.ImageLabel_39.Position = UDim2.new(0, 29, 0, 26)
kr.ImageLabel_39.Size = UDim2.new(0, 33, 0, 34)
kr.ImageLabel_39.ZIndex = 999999999
kr.ImageLabel_39.Image = "rbxassetid://13609494314"
kr.ImageLabel_39.ImageColor3 = Color3.fromRGB(236, 236, 236)

kr.UIAspectRatioConstraint_68.Parent = kr.ImageLabel_39
kr.UIAspectRatioConstraint_68.AspectRatio = 0.822

kr.openBtn.Name = "openBtn"
kr.openBtn.Parent = kr.OpenKr
kr.openBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
kr.openBtn.BackgroundTransparency = 1.000
kr.openBtn.Position = UDim2.new(0, 12, 0, 13)
kr.openBtn.Size = UDim2.new(0, 60, 0, 61)
kr.openBtn.ZIndex = 999999999
kr.openBtn.Font = Enum.Font.GothamBold
kr.openBtn.Text = "  "
kr.openBtn.TextColor3 = Color3.fromRGB(5, 122, 85)
kr.openBtn.TextScaled = true
kr.openBtn.TextSize = 14.000
kr.openBtn.TextWrapped = true

kr.UICorner_46.CornerRadius = UDim.new(0, 60)
kr.UICorner_46.Parent = kr.openBtn

kr.UIAspectRatioConstraint_69.Parent = kr.OpenKr
kr.UIAspectRatioConstraint_69.AspectRatio = 1.023

-- Scripts:

local function VFJTW_fake_script() -- kr.MainMenu.Drag 
	local script = Instance.new('LocalScript', kr.MainMenu)

	local UIS = game:GetService('UserInputService')
	local frame = script.Parent
	local dragToggle = nil
	local dragSpeed = 0.25
	local dragStart = nil
	local startPos = nil
	
	local function updateInput(input)
		local delta = input.Position - dragStart
		local position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
			startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		game:GetService('TweenService'):Create(frame, TweenInfo.new(dragSpeed), {Position = position}):Play()
	end
	
	frame.InputBegan:Connect(function(input)
		if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then 
			dragToggle = true
			dragStart = input.Position
			startPos = frame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragToggle = false
				end
			end)
		end
	end)
	
	UIS.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			if dragToggle then
				updateInput(input)
			end
		end
	end)
end
coroutine.wrap(VFJTW_fake_script)()
local function WMQKDZ_fake_script() -- kr.SavedBtn.LocalScript 
	local script = Instance.new('LocalScript', kr.SavedBtn)

	local pr1 = script.Parent.Parent.Parent
	local pr = script.Parent.Parent
	local btn = pr.SavedBtn
	
	-- Pages
	
	local sB = pr.sF
	local hB = pr.hF
	local fB = pr.fF
	
	-- B.ground
	
	local savePage = pr1.saved
	local hubPage = pr1.Hub
	local favPage = pr1.Favourites
	
	-- Color
	
	local color1 = Color3.fromRGB(255, 255, 255)
	local color2 = Color3.fromRGB(26, 27, 32)
	
	btn.MouseButton1Click:Connect(function()
		savePage.Visible = true
		hubPage.Visible = false
		favPage.Visible = false
		
		--
		
		sB.BackgroundColor3 = color1
		hB.BackgroundColor3 = color2
		fB.BackgroundColor3 = color2
		
		--
		
		sB.UIGradient.Enabled = true
		hB.UIGradient.Enabled = false
		fB.UIGradient.Enabled = false
	end)
end
coroutine.wrap(WMQKDZ_fake_script)()
local function LQOSGP_fake_script() -- kr.HubBtn.LocalScript 
	local script = Instance.new('LocalScript', kr.HubBtn)

	local pr1 = script.Parent.Parent.Parent
	local pr = script.Parent.Parent
	local btn = pr.HubBtn
	
	-- Pages
	
	local sB = pr.sF
	local hB = pr.hF
	local fB = pr.fF
	
	-- B.ground
	
	local savePage = pr1.saved
	local hubPage = pr1.Hub
	local favPage = pr1.Favourites
	
	-- Color
	
	local color1 = Color3.fromRGB(255, 255, 255)
	local color2 = Color3.fromRGB(26, 27, 32)
	
	btn.MouseButton1Click:Connect(function()
		savePage.Visible = false
		hubPage.Visible = true
		favPage.Visible = false
	
		--
	
		sB.BackgroundColor3 = color2
		hB.BackgroundColor3 = color1
		fB.BackgroundColor3 = color2
	
		--
	
		sB.UIGradient.Enabled = false
		hB.UIGradient.Enabled = true
		fB.UIGradient.Enabled = false
	end)
end
coroutine.wrap(LQOSGP_fake_script)()
local function SEMAJ_fake_script() -- kr.favBtn.LocalScript 
	local script = Instance.new('LocalScript', kr.favBtn)

	local pr1 = script.Parent.Parent.Parent
	local pr = script.Parent.Parent
	local btn = pr.favBtn
	
	-- Pages
	
	local sB = pr.sF
	local hB = pr.hF
	local fB = pr.fF
	
	-- B.ground
	
	local savePage = pr1.saved
	local hubPage = pr1.Hub
	local favPage = pr1.Favourites
	
	-- Color
	
	local color1 = Color3.fromRGB(255, 255, 255)
	local color2 = Color3.fromRGB(26, 27, 32)
	
	btn.MouseButton1Click:Connect(function()
		savePage.Visible = false
		hubPage.Visible = false
		favPage.Visible = true
	
		--
	
		sB.BackgroundColor3 = color2
		hB.BackgroundColor3 = color2
		fB.BackgroundColor3 = color1
	
		--
	
		sB.UIGradient.Enabled = false
		hB.UIGradient.Enabled = false
		fB.UIGradient.Enabled = true
	end)
end
coroutine.wrap(SEMAJ_fake_script)()
local function ETHY_fake_script() -- kr.TextButton_3.LocalScript 
	local script = Instance.new('LocalScript', kr.TextButton_3)

	
end
coroutine.wrap(ETHY_fake_script)()
local function SCUT_fake_script() -- kr.TextButton_4.LocalScript 
	local script = Instance.new('LocalScript', kr.TextButton_4)

	print("Hello world!")
	
end
coroutine.wrap(SCUT_fake_script)()
local function HEZHBAR_fake_script() -- kr.TextLabel_22.LocalScript 
	local script = Instance.new('LocalScript', kr.TextLabel_22)

	local label = script.Parent.Parent.TextLabel
	
	while true do
		label.Text = "View Profile"
		wait(6)
	
		local currentTime = os.date("%I:%M:%S %p")
		label.Text = currentTime
		wait(6)
	
		label.Text =  "View Friends"
		wait(6)
	end
	
end
coroutine.wrap(HEZHBAR_fake_script)()
local function QWEN_fake_script() -- kr.DName.LocalScript 
	local script = Instance.new('LocalScript', kr.DName)

	local player = game.Players.LocalPlayer
	local textLabel = script.Parent.Parent.DName
	
	textLabel.Text = player.Name
	
	player:GetPropertyChangedSignal("Name"):Connect(function()
		textLabel.Text = player.Name
	end)
	
end
coroutine.wrap(QWEN_fake_script)()
local function IHXPY_fake_script() -- kr.Sidebar.TabHandler 
	local script = Instance.new('LocalScript', kr.Sidebar)

	local currentPage = 1
	local basicColors = Color3.fromHex("#1a1b20")
	local ActivatedColors = Color3.fromHex("#2d2d33")
	
	local iconActives = Color3.fromHex("#30333b") 
	local iconInActives = Color3.fromHex("#1e1e23")
	
	local pages = {
		[1] = {
			page = script.Parent.Parent.HomePage,
			buttonFrame = script.Parent.HOMEBTN,
			button = script.Parent.HOMEBTN.TextButton,
			basicColor = basicColors,
			ActivatedColor = ActivatedColors,
			iconActive = iconActives,
			iconInActive = iconInActives
		},
		[2] = {
			page = script.Parent.Parent.EditorPage,
			buttonFrame = script.Parent.EDITORBTN,
			button = script.Parent.EDITORBTN.TextButton,
			basicColor = basicColors,
			ActivatedColor = ActivatedColors,
			iconActive = iconActives,
			iconInActive = iconInActives
		},
		[3] = {
			page = script.Parent.Parent.ScriptsPage,
			buttonFrame = script.Parent.SCRIPTSBTN,
			button = script.Parent.SCRIPTSBTN.TextButton,
			basicColor = basicColors,
			ActivatedColor = ActivatedColors,
			iconActive = iconActives,
			iconInActive = iconInActives
		},
		[4] = {
			page = script.Parent.Parent.SettingsPage,
			buttonFrame = script.Parent.SETTINGSBTN,
			button = script.Parent.SETTINGSBTN.TextButton,
			basicColor = basicColors,
			ActivatedColor = ActivatedColors,
			iconActive = iconActives,
			iconInActive = iconInActives
		},
	}
	
	
	function setPage(number) 
		currentPage = number
		for i, v in ipairs(pages) do
			--if i == not number then
				v.page.Visible = false
				v.buttonFrame.BackgroundColor3 = v.basicColor
			    v.buttonFrame.Frame.BackgroundColor3 = v.iconInActive
			--end
		end
		pages[number].buttonFrame.BackgroundColor3 = pages[number].ActivatedColor
		pages[number].buttonFrame.Frame.BackgroundColor3 = pages[number].iconActive
		pages[number].page.Visible = true
	end
	
	function getPageAsCount(number) 
		return currentPage
	end
	
	function getPage(number) 
		return pages[currentPage]
	end
	
	--init
	setPage(currentPage)
	for i, v in ipairs(pages) do
		v.button.MouseButton1Click:Connect(function()
			local id = i
			setPage(id)
		end)
	end
end
coroutine.wrap(IHXPY_fake_script)()
local function RYGDR_fake_script() -- kr.closeBtn.closeScript 
	local script = Instance.new('LocalScript', kr.closeBtn)

	local mainMenu = script.Parent.Parent.Parent.Parent.MainMenu
	local openKr = script.Parent.Parent.Parent.Parent.OpenKr
	
	local TweenService = game:GetService("TweenService")
	local Frame = script.Parent.Parent.Parent.Parent.MainMenu
	local OpenButton = script.Parent.Parent.closeBtn
	local ImageLabel = script.Parent.Parent.closeBtn
	local FrameDefaultSize = Frame.Size
	local targetSize = UDim2.new(FrameDefaultSize.X.Scale, FrameDefaultSize.X.Offset, 0, 0)
	local tweenInfo = TweenInfo.new(0.5)
	local tween = TweenService:Create(Frame, tweenInfo, {Size = targetSize})
	
	local function RotateImageLabel()
		local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.Out, 0, false, 0)
		local rotationTween = TweenService:Create(ImageLabel, tweenInfo, {Rotation = ImageLabel.Rotation + 360})
		rotationTween:Play()
	end
	
	OpenButton.MouseButton1Click:Connect(function()
		RotateImageLabel()
		wait(0.5)
		openKr.Visible = true
		mainMenu.Visible = false
	end)
	
end
coroutine.wrap(RYGDR_fake_script)()
local function LHRBTA_fake_script() -- kr.clear.TEST 
	local script = Instance.new('LocalScript', kr.clear)

	local btn = script.Parent.Parent.clear
	
	
	btn.MouseButton1Click:Connect(function()	
	
		local clearW = script.Parent.Parent.Parent.Parent.Parent.clearWindow
		local input = script.Parent.Parent.Parent.Parent.Parent.Parent.MainMenu.EditorPage.Editor.ScrollingFrame.TextBox
		input.Text = ""
		
		clearW.Visible = false
	end)
end
coroutine.wrap(LHRBTA_fake_script)()
local function DZVNTCM_fake_script() -- kr.TextButton_5.LocalScript 
	local script = Instance.new('LocalScript', kr.TextButton_5)

	local btn = script.Parent.Parent.TextButton
	
	local clearW = script.Parent.Parent.Parent.Parent.Parent.clearWindow
	
	btn.MouseButton1Click:Connect(function()
		clearW.Visible = false
	end)
end
coroutine.wrap(DZVNTCM_fake_script)()
local function TKJYUYF_fake_script() -- kr.ImageButton_2.LocalScript 
	local script = Instance.new('LocalScript', kr.ImageButton_2)

	local btn = script.Parent.Parent.ImageButton
	
	local clearW = script.Parent.Parent.Parent.Parent.clearWindow
	
	btn.MouseButton1Click:Connect(function()
		clearW.Visible = false
	end)
end
coroutine.wrap(TKJYUYF_fake_script)()
local function KJQD_fake_script() -- kr.TextButton_6.LocalScript 
	local script = Instance.new('LocalScript', kr.TextButton_6)

	local TweenService = game:GetService("TweenService")
	local Frame = script.Parent.Parent.Parent.Parent.Parent.Parent.MainMenu
	local OpenButton = script.Parent.Parent.TextButton
	local ImageLabel = script.Parent.Parent.updateIm
	local FrameDefaultSize = Frame.Size
	local targetSize = UDim2.new(FrameDefaultSize.X.Scale, FrameDefaultSize.X.Offset, 0, 0)
	local tweenInfo = TweenInfo.new(0.5)
	local tween = TweenService:Create(Frame, tweenInfo, {Size = targetSize})
	
	local function RotateImageLabel()
		local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.Out, 0, false, 0)
		local rotationTween = TweenService:Create(ImageLabel, tweenInfo, {Rotation = ImageLabel.Rotation + 360})
		rotationTween:Play()
	end
	
	OpenButton.MouseButton1Click:Connect(function()
		RotateImageLabel()
	end)
	
end
coroutine.wrap(KJQD_fake_script)()
local function GUSHCYA_fake_script() -- kr.iagree.LocalScript 
	local script = Instance.new('LocalScript', kr.iagree)

	local btn = script.Parent.Parent.iagree
	
	local wmenu = script.Parent.Parent.Parent.Parent.Parent.Parent.WelcomeWindow
	
	btn.MouseButton1Click:Connect(function()
		wmenu.Visible = false
	end)
end
coroutine.wrap(GUSHCYA_fake_script)()
local function UBMJL_fake_script() -- kr.WelcomeWindow.LocalScript 
	local script = Instance.new('LocalScript', kr.WelcomeWindow)

	local wmenu = script.Parent.Parent.WelcomeWindow
	
	wait(0.6)
	
	wmenu.Visible = true
end
coroutine.wrap(UBMJL_fake_script)()
local function PUBUVL_fake_script() -- kr.ToggleBar.LocalScript 
	local script = Instance.new('LocalScript', kr.ToggleBar)

	local toggled = true
	local onImage = "http://www.roblox.com/asset/?id=6031068430"
	local offImage = "http://www.roblox.com/asset/?id=6031068429"
	
	script.Parent.MouseButton1Click:Connect(function()
		toggled = not toggled
		if toggled then
			script.Parent.Image = onImage
			script.Parent.ImageColor3 = Color3.fromRGB(5, 122, 85)
			onClick(true)
		else
			script.Parent.Image = offImage
			script.Parent.ImageColor3 = Color3.fromRGB(51, 53, 63)
			onClick(false)
			setfpscap(60)
		end
	end)
	
	function onClick(active) 
		setfpscap(0)
	end
end
coroutine.wrap(PUBUVL_fake_script)()
local function UNTGGF_fake_script() -- kr.ToggleBar_2.LocalScript 
	local script = Instance.new('LocalScript', kr.ToggleBar_2)

	local toggled = false
	local onImage = "http://www.roblox.com/asset/?id=6031068430"
	local offImage = "http://www.roblox.com/asset/?id=6031068429"
	
	script.Parent.MouseButton1Click:Connect(function()
		toggled = not toggled
		if toggled then
			script.Parent.Image = onImage
			script.Parent.ImageColor3 = Color3.fromRGB(5, 122, 85)
			onClick(true)
		else
			script.Parent.Image = offImage
			script.Parent.ImageColor3 = Color3.fromRGB(51, 53, 63)
			onClick(false)
		end
	end)
	
	function onClick(active) 
		-- nothing
	end
end
coroutine.wrap(UNTGGF_fake_script)()
local function KAXEEDB_fake_script() -- kr.ToggleBar_3.LocalScript 
	local script = Instance.new('LocalScript', kr.ToggleBar_3)

	local toggled = true
	local onImage = "http://www.roblox.com/asset/?id=6031068430"
	local offImage = "http://www.roblox.com/asset/?id=6031068429"
	
	local krOpen = script.Parent.Parent.Parent.Parent.Parent.OpenKr
	local krim = krOpen.ImageLabel
	local krbtn = krOpen.openBtn
	
	script.Parent.MouseButton1Click:Connect(function()
		toggled = not toggled
		if toggled then
			script.Parent.Image = onImage
			script.Parent.ImageColor3 = Color3.fromRGB(5, 122, 85)
			onClick(true)
		else
			script.Parent.Image = offImage
			script.Parent.ImageColor3 = Color3.fromRGB(51, 53, 63)
			onClick(false)
			krOpen.Size = UDim2.new(0, 88, 0, 86)
			krim.Position = UDim2.new(0, 28, 0, 26)
			krbtn.Size =UDim2.new(0, 60, 0, 61)
			krbtn.Position = UDim2.new(0, 12, 0, 13)
		end
	end)
	
	function onClick(active) 
		krOpen.Size = UDim2.new(0, 63, 0, 60)
		krim.Position = UDim2.new(0, 16, 0, 13)
		krbtn.Position = UDim2.new(0, 7, 0, 10)
		krbtn.Size =UDim2.new(0, 34, 0, 35)
	end
end
coroutine.wrap(KAXEEDB_fake_script)()
local function VGFPJFV_fake_script() -- kr.ToggleBar_4.LocalScript 
	local script = Instance.new('LocalScript', kr.ToggleBar_4)

	local toggled = false
	local onImage = "http://www.roblox.com/asset/?id=6031068430"
	local offImage = "http://www.roblox.com/asset/?id=6031068429"
	
	local preview = script.Parent.Parent.Parent.Parent.Parent.MainMenu.EditorPage.preview
	
	script.Parent.MouseButton1Click:Connect(function()
		toggled = not toggled
		if toggled then
			script.Parent.Image = onImage
			script.Parent.ImageColor3 = Color3.fromRGB(5, 122, 85)
			onClick(true)
		else
			script.Parent.Image = offImage
			script.Parent.ImageColor3 = Color3.fromRGB(51, 53, 63)
			onClick(false)
			preview.Visible = false
		end
	end)
	
	function onClick(active) 
		preview.Visible = true
	end
end
coroutine.wrap(VGFPJFV_fake_script)()
local function IDZXZAG_fake_script() -- kr.ExecuteBtn.LocalScript 
	local script = Instance.new('LocalScript', kr.ExecuteBtn)

	local btn = script.Parent.Parent.ExecuteBtn
	
	--local inp = script.Parent.Parent.Parent.Parent.Editor.Require.ScriptEditor.Editor.Scroll.Source
	
	local inp = script.Parent.Parent.Parent.Parent.Editor.ScrollingFrame.TextBox
	
	local menu = script.Parent.Parent.Parent.Parent.Parent.Parent.MainMenu
	local openKr = script.Parent.Parent.Parent.Parent.Parent.Parent.OpenKr
	
	local check = script.Parent.Parent.Parent.Parent.Parent.SettingsPage.cOE.ToggleBar
	
	btn.MouseButton1Click:Connect(function()	
		
	if check.Image == "http://www.roblox.com/asset/?id=6031068430" then
			
			loadstring(inp.Text)()
			warn("ðŸŽ‰ Script successfully executed!ðŸŽ‰")
			
			menu.Visible = false
			openKr.Visible = true
			
		else
			
			loadstring(inp.Text)()
			warn("ðŸŽ‰ Script successfully executed! ðŸŽ‰")
			
		end	
		
	end)
	
end
coroutine.wrap(IDZXZAG_fake_script)()
local function LOKUHQ_fake_script() -- kr.clearBtn.LocalScript 
	local script = Instance.new('LocalScript', kr.clearBtn)

	local btn = script.Parent.Parent.clearBtn
	
	local clearW = script.Parent.Parent.Parent.Parent.Parent.clearWindow
	btn.MouseButton1Click:Connect(function()
		clearW.Visible = true
	end)
end
coroutine.wrap(LOKUHQ_fake_script)()
local function TPML_fake_script() -- kr.saveBtn.LocalScript 
	local script = Instance.new('LocalScript', kr.saveBtn)

	
end
coroutine.wrap(TPML_fake_script)()
local function LPKB_fake_script() -- kr.TextBox_3.LocalScript 
	local script = Instance.new('LocalScript', kr.TextBox_3)

	local textbox1 = script.Parent.Parent.Parent.Parent.Parent.MainMenu.EditorPage.Editor.ScrollingFrame.TextBox
	local textbox2 = script.Parent.Parent.TextBox
	
	local function syncText()
		textbox2.Text = textbox1.Text
	end
	
	textbox1.Changed:Connect(syncText)
end
coroutine.wrap(LPKB_fake_script)()
local function TUKVU_fake_script() -- kr.openBtn.openScript 
	local script = Instance.new('LocalScript', kr.openBtn)

	local btn = script.Parent.Parent.openBtn
	
	local mainMenu = script.Parent.Parent.Parent.MainMenu
	local openKr = script.Parent.Parent.Parent.OpenKr
	
	btn.MouseButton1Click:Connect(function()	
		mainMenu.Visible = true
		
		openKr.Visible = false
	end)
end
coroutine.wrap(TUKVU_fake_script)()
local function EUJB_fake_script() -- kr.OpenKr.LocalScript 
	local script = Instance.new('LocalScript', kr.OpenKr)

	local UIS = game:GetService('UserInputService')
	local frame = script.Parent
	local dragToggle = nil
	local dragSpeed = 0.25
	local dragStart = nil
	local startPos = nil
	
	local function updateInput(input)
		local delta = input.Position - dragStart
		local position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
			startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		game:GetService('TweenService'):Create(frame, TweenInfo.new(dragSpeed), {Position = position}):Play()
	end
	
	frame.InputBegan:Connect(function(input)
		if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then 
			dragToggle = true
			dragStart = input.Position
			startPos = frame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragToggle = false
				end
			end)
		end
	end)
	
	UIS.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			if dragToggle then
				updateInput(input)
			end
		end
	end)
end
coroutine.wrap(EUJB_fake_script)()
end)
tab3.newButton("Codex", "Executor script", function()
    	local framework = setmetatable({
	dependencies = {
		utils = {}
	},
	data = {},
	components = {
		base = {}
	},
	popups = {},
	pages = {
		startup = {},
		navbar = {},
		exploitSettings = {
			optionTypes = {}
		},
		editor = {},
		localScripts = {},
		globalScripts = {}
	}
}, {
	__index = function(t, k)
		local res, split = t, string.split(k, ".");
		for i, v in split do
			res = rawget(res, v);
		end
		return res;
	end
});

do
	--[[ Connection ]]--
	
	local connection = {};
	connection.__index = connection;
	
	function connection.new(signal: {any}, fn: (any))
		return setmetatable({
			_signal = signal,
			_fn = fn
		}, connection);
	end
	
	function connection:Disconnect()
		self._signal[self] = nil;
	end
	
	--[[ Signal ]]--
	
	local signal = {};
	signal.__index = signal;
	
	function signal.new()
		return setmetatable({}, signal);
	end
	
	function signal:Connect(fn: (any))
		local conn = connection.new(self, fn);
		self[conn] = true;
		return conn;
	end
	
	function signal:Once(fn: (any))
		local conn; conn = self:Connect(function(...)
			conn:Disconnect();
			fn(...);
		end);
		return conn;
	end
	
	function signal:Fire(...)
		for conn, _ in self do
			task.spawn(conn._fn, ...);
		end
	end
	
	function signal:Wait()
		local thread = coroutine.running();
		local conn; conn = self:Connect(function(...)
			conn:Disconnect();
			task.spawn(thread, ...);
		end);
		return coroutine.yield();
	end
	
	function signal:DisconnectAll()
		table.clear(self);
	end
	
	framework.dependencies.signal = signal;
end

do
	--[[ Variables ]]--
	
	local runService = game:GetService("RunService");
	local tweenService = game:GetService("TweenService");
	
	local dynamicParent;
	
	--[[ Setup ]]--
	
	if gethui then
		dynamicParent = gethui();
	elseif runService:IsRunning() then
		dynamicParent = runService:IsStudio() and game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui") or game:GetService("CoreGui");
	else
		dynamicParent = game:GetService("StarterGui");
	end
	
	--[[ Module ]]--
	
	local utils = {};
	
	function utils:Create(className: string, properties: {any}, children: {any}?): Instance
		local instance = Instance.new(className);
		for i, v in properties do
			if typeof(instance[i]) == "RBXScriptSignal" then
				instance[i]:Connect(v);
			elseif i ~= "Parent" then
				instance[i] = v;
			end
		end
		if children ~= nil then
			for i, v in children do
				v.Parent = instance;
			end
		end
		instance.Parent = properties.Parent;
		return instance;
	end
	
	function utils:Tween(instance: Instance, duration: number, properties: {any}, ...): Tween
		local tween = tweenService:Create(instance, TweenInfo.new(duration, ...), properties);
		tween:Play();
		return tween;
	end
	
	function utils:DynamicParent(instance: Instance): Instance
		instance.Parent = dynamicParent;
		return instance;
	end
	
	framework.dependencies.utils.instance = utils;
end

do
	--[[ Variables ]]--
	
	local denominations = {
		"K", "M", "B", "T", "q", "Q", "s", "S", "O", "N", "d", "U", "D"
	};
	
	--[[ Module ]]--
	
	local utils = {};
	
	function utils:Round(input: number, float: number): number
		local bracket = 1 / float;
		return math.round(input * bracket) / bracket;
	end
	
	function utils:FormatAsCount(input: number, float: number): string
		if input < 1000 then
			return tostring(input);
		end
		local denominationIndex = math.floor(math.log10(input) / 3);
		return tostring(self:Round(input / (10 ^ (denominationIndex * 3)), float)) .. tostring(denominations[denominationIndex]);
	end
	
	function utils:FormatAsLiteralCount(input: number): string
		local x = string.gsub(string.reverse(tostring(input)), "(%d%d%d)", "%1,");
		return string.gsub(string.reverse(x), "^,", "");
	end
	
	function utils:IsWithin2DBounds(position: Vector2, topLeft: Vector2, bottomRight: Vector2): boolean
		return position.X >= topLeft.X and position.X <= bottomRight.X and position.Y >= topLeft.Y and position.Y <= bottomRight.Y;
	end
	
	framework.dependencies.utils.maths = utils;
end

do
	--[[ Module ]]--
	
	local utils = {};
	
	function utils:DeepCopy(x: {any})
		local y = {};
		for i, v in x do
			y[i] = type(v) == "table" and self:DeepCopy(v) or v;
		end
		return y;
	end
	
	function utils:Concatenate(x: {any}, y: {any})
		if y ~= nil then
			for i, v in y do
				table.insert(x, v);
			end
		end
		return x;
	end
	
	function utils:DeepOverwrite(x: {any}, y: {any}, inclusive: boolean?)
		if y == nil then
			return x;
		end
		for i, v in y do
			if x[i] == nil then
				if inclusive then
					x[i] = v;
				end
			else
				local _type = typeof(x[i]);
				if _type == typeof(v) then
					if _type == "table" then
						self:DeepOverwrite(x[i], v);
					else
						x[i] = v;
					end
				end
			end
		end
		return x;
	end
	
	framework.dependencies.utils.table = utils;
end

do
	--[[ Module ]]--
	
	local utils = {};
	
	function utils:CapitaliseFirst(str: string): string
		return string.upper(string.sub(str, 1, 1)) .. string.lower(string.sub(str, 2));
	end
	
	function utils:ConvertToCamelCase(str: string): string
		local res = "";
		for i, v in string.split(str, " ") do
			res ..= i == 1 and string.lower(v) or self:CapitaliseFirst(v);
		end
		return res;
	end
	
	framework.dependencies.utils.string = utils;
end

do
	--[[ Variables ]]--
	
	local httpService = game:GetService("HttpService");
	
	local httpRequest = request or http_request or (syn and syn.request);
	
	local runcode = runcode and clonefunction(runcode) or function(scr)
		loadstring(scr)();
	end
	
	--[[ Module ]]--
	
	local utils = {};
	
	function utils:Request(url: string, method: string?, headers: {any}?, body: any?): string
		local s, r = pcall(httpRequest, {
			Url = url,
			Method = method or "GET",
			Headers = headers,
			Body = type(body) == "table" and httpService:JSONEncode(body) or body
		});
		if s == false or r.Success == false or r.StatusCode ~= 200 then
			return false;
		end
		return r.Body;
	end
	
	function utils:Execute(scr: string, ...)
		task.spawn(runcode, scr);
	end
	
	framework.dependencies.utils.internal = utils;
end

do
	--[[ Enum ]]--
	
	local codexEnum = {};
	
	function codexEnum.__index(t, k)
		return t._map[k] or codexEnum[k];
	end
	
	function codexEnum.new(items: {any}): {any}
		local map = {};
		
		for i, v in items do
			map[v] = i;
		end
		
		return setmetatable({
			_map = map,
			_items = items
		}, codexEnum);
	end
	
	function codexEnum:GetEnumItems()
		return self._items;
	end
	
	--[[ Module ]]--
	
	framework.dependencies.codexEnum = {
		NavbarState = codexEnum.new({ "Hidden", "Partial", "Full" })
	};
end

do
	--[[ Variables ]]--
	
	local httpService = game:GetService("HttpService");
	
	local signal = framework.dependencies.signal;
	local tableUtils = framework.dependencies.utils.table;
	
	local signalCache = {};
	local settingsCache = {
		executor = {
			autoExecute = true,
			autoSaveTabs = false,
			fps = {
				unlocked = false,
				vSync = false,
				value = 60
			}
		},
		player = {
			walkSpeed = {
				enabled = false,
				value = 16
			},
			jumpPower = {
				enabled = false,
				value = 50
			},
		},
		serverHop = {
			priority = "Most Players"
		}
	};
	
	local userSettings = {};
	
	--[[ Functions ]]--
	
	local function saveUserSettings()
		if writefile then
			writefile("codexSettings.json", httpService:JSONEncode(tableUtils:DeepCopy(settingsCache)));
		end
	end
	
	local function createAutosaveMetatable(options: {any}, hierarchy: string)
		for i, v in options do
			if type(v) == "table" then
				options[i] = createAutosaveMetatable(v, hierarchy == "" and i or string.format("%s.%s", hierarchy, i));
			end
		end
	
		return setmetatable({}, {
			__index = function(_, k)
				return options[k];
			end,
			__newindex = function(_, k, v)
				options[k] = v;
				saveUserSettings();
				userSettings:FirePropertyChangedSignal(hierarchy == "" and k or string.format("%s.%s", hierarchy, k), v);
			end,
			__iter = function()
				return next, options;
			end
		});
	end
	
	--[[ Module ]]--
	
	function userSettings:Initialize()
		if isfile and isfile("codexSettings.json") then
			local succ, res = pcall(httpService.JSONDecode, httpService, readfile("codexSettings.json"));
			if succ then
				tableUtils:DeepOverwrite(settingsCache, res);
			else
				task.defer(error, "settings file is corrupted");
			end
		end
		self.cache = createAutosaveMetatable(settingsCache, "");
	end
	
	function userSettings:GetPropertyChangedSignal(path: string)
		if signalCache[path] == nil then
			signalCache[path] = signal.new();
		end
		return signalCache[path];
	end
	
	function userSettings:FirePropertyChangedSignal(path: string, value: any)
		local sig = signalCache[path];
		if sig then
			sig:Fire(value);
		end
	end
	
	framework.data.userSettings = userSettings;
end

do
	--[[ Variables ]]--
	
	local changelog = {
		{
			stamp = "2023-10-07T17:38:21Z",
			data = {
				"98% UNC Success Rate",
				"Added Server Hopper",
				"Added FPS Settings",
				"Added Auto Save Tabs",
				"Bug Fixes"
			}
		},
		{
			stamp = "2023-10-06T17:47:39Z",
			data = {
				"Updated for V2.596",
				"Bug Fixes"
			}
		},
		{
			stamp = "2023-09-28T10:43:41Z",
			data = {
				"Added Save Scripts from Tabs",
				"Premium Whitelist Page",
				"Game Hub Shows Hot Scripts On Launch",
				"Toggleable Auto Execute"
			}
		},
		{
			stamp = "2023-09-27T01:00:04Z",
			data = {
				"Fixed Bugs in Filesystem Functions",
				"SkyHub and BananaHub Fixed",
				"Performance Upgrades"
			}
		},
		{
			stamp = "2023-09-26T20:16:21Z",
			data = {
				"UI Revamp!",
				"New Whitelist System",
				"New Security Measures [Banwave Bypass]",
				"Added Tabs",
				"Added Save Scripts",
				"Bug & Performance Fixes"
			}
		}
	};
	
	--[[ Module ]]--
	
	framework.data.internalSettings = {
		changelog = changelog
	};
end

do
	--[[ Variables ]]--
	
	local signal = framework.dependencies.signal;
	local internalUtils = framework.dependencies.utils.internal;
	local tableUtils = framework.dependencies.utils.table;
	
	local httpService = game:GetService("HttpService");
	
	local savedScripts = {
		accumulator = 0,
		cache = {},
		onScriptAdded = signal.new(),
		onScriptRemoved = signal.new()
	};
	
	--[[ Functions ]]--
	
	local function reassignIndexes(cache: {any})
		for i, v in cache do
			v.index = i;
		end
		return cache;
	end
	
	local function loadScriptCache()
		if isfile and isfile("codexScriptCache.json") then
			local s, r = pcall(httpService.JSONDecode, httpService, readfile("codexScriptCache.json"));
			if s and type(r) == "table" then
				local accumulation = 0;
				local cache = {};
				local hasFoundDuplicateIndex = false;
				for i, v in r do
					if not (type(v) == "table" and v.title and v.description and v.content and v.index and v.autoExecute ~= nil) then
						continue;
					end
	
					if v.index > accumulation then
						accumulation = v.index;
					end
	
					if hasFoundDuplicateIndex == false then -- backwards fix from an old broken update and/or someone trying to fuck with the system
						for i2, v2 in cache do
							if v2.index == v.index then
								hasFoundDuplicateIndex = true;
							end
						end
					end
					
					v.onAutoExecuteToggled = signal.new();
					cache[#cache + 1] = hasFoundDuplicateIndex and reassignIndexes(v) or v;
				end
				savedScripts.accumulator = accumulation;
				savedScripts.cache = cache;
			end
		end
	end
	
	local function saveScriptCache()
		if writefile then
			local cache = tableUtils:DeepCopy(savedScripts.cache);
			for i, v in cache do
				v.onAutoExecuteToggled = nil;
			end
			writefile("codexScriptCache.json", httpService:JSONEncode(cache));
		end
	end
	
	--[[ Module ]]--
	
	function savedScripts:Initialize()
		loadScriptCache();
		for i, v in savedScripts.cache do
			if v.autoExecute then
				task.spawn(function()
					internalUtils:Execute(v.content);
				end);
			end
		end
	end
	
	function savedScripts:Get(index: number)
		for i, v in self.cache do
			if v.index == index then
				return i, v;
			end
		end
	end
	
	function savedScripts:Add(title: string, description: string, content: string)
		self.accumulator += 1;
		local index = self.accumulator;
		
		local newScript = {
			title = title,
			description = description,
			content = content,
			index = index,
			autoExecute = false,
			onAutoExecuteToggled = signal.new()
		};
		
		self.cache[#self.cache + 1] = newScript;
		self.onScriptAdded:Fire(newScript);
		saveScriptCache();
	end
	
	function savedScripts:Remove(index: number)
		local i, save = self:Get(index);
		if save then
			table.remove(self.cache, i);
			self.onScriptRemoved:Fire(save);
			saveScriptCache();
		end
	end
	
	function savedScripts:ToggleAutomaticExecution(index: number, state: boolean)
		local _, save = self:Get(index);
		if save then
			save.autoExecute = state;
			save.onAutoExecuteToggled:Fire(state);
			saveScriptCache();
		end
	end
	
	framework.data.savedScripts = savedScripts;
end

do
	framework.data.builtInScripts = {
		{
			title = "Dark Dex V4",
			description = "A powerful game explorer GUI. Shows every instance of the game and all their properties. Useful for developers.",
			icon = "rbxassetid://14806198159",
			content = "local file = \"dexV4.lua\"; local raw = isfile and isfile(file) and readfile(file); raw = raw or game:HttpGetAsync(\"https://raw.githubusercontent.com/loglizzy/dexV4/main/source.lua\"); if isfile then task.spawn(writefile, file, game:HttpGet(url)); end loadstring(raw)();"
		},
		{
			title = "Unnamed ESP",
			description = "Player ESP for Roblox, fully undetectable, uses built in drawing API.",
			icon = "rbxassetid://14806221310",
			content = "pcall(function() loadstring(game:HttpGet(\"https://raw.githubusercontent.com/ic3w0lf22/Unnamed-ESP/master/UnnamedESP.lua\"))(); end);"
		},
		{
			title = "Hydroxide",
			description = "General purpose pen-testing tool for games on the Roblox engine",
			icon = "rbxassetid://14806229032",
			content = "loadstring(game:HttpGetAsync(\"https://raw.githubusercontent.com/Upbolt/Hydroxide/revision/init.lua\"))(); loadstring(game:HttpGetAsync(\"https://raw.githubusercontent.com/Upbolt/Hydroxide/revision/ui/main.lua\"))();"
		},
		{
			title = "Infinite Yield",
			description = "Admin command line script with 300+ commands and 6 years of development",
			icon = "rbxassetid://14806239733",
			content = "loadstring(game:HttpGetAsync(\"https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source\"))();"
		},
		{
			title = "Owl Hub",
			description = "Owl Hub is a free Roblox script hub developed by Google Chrome and CriShoux. It currently has 30+ games.",
			icon = "rbxassetid://14806252030",
			content = "loadstring(game:HttpGet(\"https://raw.githubusercontent.com/CriShoux/OwlHub/master/OwlHub.txt\"))();"
		}
	};
end

do
	--[[ Variables ]]--
	
	local signal = framework.dependencies.signal;
	local tableUtils = framework.dependencies.utils.table;
	
	local httpService = game:GetService("HttpService");
	
	local tabSystem = {
		accumulator = 1,
		selected = nil,
		cache = {
			{
				title = "Note",
				content = "-- This is the real Codex UI but Modified.",
				index = 1
			}
		},
		onTabCreated = signal.new(),
		onTabRemoved = signal.new(),
		onTabSelected = signal.new()
	};
	
	--[[ Functions ]]--
	
	local function reassignIndexes(cache: {any})
		for i, v in cache do
			v.index = i;
		end
		return cache;
	end
	
	local function loadTabCache()
		if isfile and isfile("codexTabs.json") then
			local s, r = pcall(httpService.JSONDecode, httpService, readfile("codexTabs.json"));
			if s and type(r) == "table" then
				local accumulation = 0;
				local cache = {};
				local hasFoundDuplicateIndex = false;
				for i, v in r do
					if not (type(v) == "table" and v.title and v.content and v.index) then
						continue;
					end
	
					if v.index > accumulation then
						accumulation = v.index;
					end
	
					if hasFoundDuplicateIndex == false then -- backwards fix from an old broken update and/or someone trying to fuck with the system
						for i2, v2 in cache do
							if v2.index == v.index then
								hasFoundDuplicateIndex = true;
							end
						end
					end
	
					cache[#cache + 1] = hasFoundDuplicateIndex and reassignIndexes(v) or v;
				end
				tabSystem.accumulator = accumulation;
				tabSystem.cache = cache;
			end
		end
	end
	
	--[[ Module ]]--
	
	function tabSystem:Initialize()
		loadTabCache();
	end
	
	function tabSystem:Get(index: number)
		for i, v in self.cache do
			if v.index == index then
				return i, v;
			end
		end
	end
	
	function tabSystem:Add(title: string, content: string?)
		self.accumulator += 1;
		local index = self.accumulator;
		
		local newTab = {
			title = title,
			content = content or "print('Hello World!');",
			index = index
		};
		
		self.cache[#self.cache + 1] = newTab;
		self.onTabCreated:Fire(newTab);
		self:Select(index);
	end
	
	function tabSystem:Remove(index: number)
		if #self.cache > 1 then
			local i, tab = self:Get(index);
			if tab then
				if self.selected == tab then
					self:Select(self.cache[i == 1 and 2 or 1].index);
				end
				table.remove(self.cache, i);
				self.onTabRemoved:Fire(tab);
			end
		end
	end
	
	function tabSystem:Select(index: number)
		local _, tab = self:Get(index);
		if tab and (self.selected == nil or tab.index ~= self.selected.index) then
			self.selected = tab;
			self.onTabSelected:Fire(tab);
		end
	end
	
	function tabSystem:UpdateContent(index: number, content: string)
		local _, tab = self:Get(index);
		if tab then
			tab.content = content;
		end
	end
	
	function tabSystem:Save()
		if writefile then
			writefile("codexTabs.json", httpService:JSONEncode(tableUtils:DeepCopy(self.cache)));
		end
	end
	
	framework.data.tabSystem = tabSystem;
end

do
	--[[ Variables ]]--
	
	local instanceUtils = framework.dependencies.utils.instance;
	local tableUtils = framework.dependencies.utils.table;
	
	--[[ Module ]]--
	
	framework.components.base.textLabel = (function(overwriteProps: {any}, children: {any}): Instance
		return instanceUtils:Create("TextLabel", tableUtils:DeepOverwrite({
			AutomaticSize = Enum.AutomaticSize.XY,
			BackgroundTransparency = 1,
			FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold),
			Size = UDim2.new(),
			TextColor3 = Color3.new(1, 1, 1),
			TextSize = 14,
			TextTruncate = Enum.TextTruncate.AtEnd,
			TextWrapped = true,
			TextXAlignment = Enum.TextXAlignment.Center,
			TextYAlignment = Enum.TextYAlignment.Center
		}, overwriteProps, true), children);
	end);
end

do
	--[[ Variables ]]--
	
	local instanceUtils = framework.dependencies.utils.instance;
	local tableUtils = framework.dependencies.utils.table;
	
	--[[ Module ]]--
	
	framework.components.base.textBox = (function(overwriteProps: {any}, children: {any}): Instance
		return instanceUtils:Create("TextBox", tableUtils:DeepOverwrite({
			AutomaticSize = Enum.AutomaticSize.X,
			BackgroundColor3 = Color3.fromRGB(58, 58, 74),
			FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json"),
			PlaceholderText = "Value...",
			Size = UDim2.new(0, 0, 0, 32),
			Text = "",
			TextColor3 = Color3.fromRGB(159, 164, 186),
			TextSize = 14,
			TextTruncate = Enum.TextTruncate.AtEnd,
			TextWrapped = true,
			TextXAlignment = Enum.TextXAlignment.Center,
			TextYAlignment = Enum.TextYAlignment.Center
		}, overwriteProps, true), tableUtils:Concatenate({
			instanceUtils:Create("UIPadding", {
				Name = "padding",
				PaddingLeft = UDim.new(0, 10),
				PaddingRight = UDim.new(0, 10)
			}),
			instanceUtils:Create("UICorner", {
				Name = "corner",
				CornerRadius = UDim.new(0, 6)
			})
		}, children));
	end);
end

do
	--[[ Variables ]]--
	
	local instanceUtils = framework.dependencies.utils.instance;
	local tableUtils = framework.dependencies.utils.table;
	
	--[[ Module ]]--
	
	framework.components.base.textButton = (function(overwriteProps: {any}, children: {any}): Instance
		return instanceUtils:Create("TextButton", tableUtils:DeepOverwrite({
			AutomaticSize = Enum.AutomaticSize.X,
			BackgroundColor3 = Color3.fromRGB(235, 69, 69),
			FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold),
			Size = UDim2.new(0, 0, 0, 32),
			TextColor3 = Color3.new(1, 1, 1),
			TextSize = 14,
			TextTruncate = Enum.TextTruncate.AtEnd,
			TextWrapped = true,
			TextXAlignment = Enum.TextXAlignment.Center,
			TextYAlignment = Enum.TextYAlignment.Center
		}, overwriteProps, true), tableUtils:Concatenate({
			instanceUtils:Create("UIPadding", {
				Name = "padding",
				PaddingLeft = UDim.new(0, 10),
				PaddingRight = UDim.new(0, 10)
			}),
			instanceUtils:Create("UICorner", {
				Name = "corner",
				CornerRadius = UDim.new(0, 6)
			})
		}, children));
	end);
end

do
	--[[ Variables ]]--
	
	local instanceUtils = framework.dependencies.utils.instance;
	local tableUtils = framework.dependencies.utils.table;
	
	--[[ Module ]]--
	
	framework.components.base.background = (function(overwriteProps: {any}?, children: {any}?): Instance
		return instanceUtils:Create("Frame", tableUtils:DeepOverwrite({
			AnchorPoint = Vector2.new(0.5, 0.5),
			BackgroundColor3 = Color3.fromRGB(21, 21, 29),
			BackgroundTransparency = 0.1,
			BorderSizePixel = 0,
			Name = "background",
			Position = UDim2.new(0.5, 0, 0.5, 0),
			Size = UDim2.new(1, 0, 1, 0),
			ZIndex = 0
		}, overwriteProps, true), children);
	end);
end

do
	--[[ Variables ]]--
	
	local instanceUtils = framework.dependencies.utils.instance;
	local stringUtils = framework.dependencies.utils.string;
	
	--[[ Functions ]]--
	
	local function createButton(title: string, icon: string): Instance
		return instanceUtils:Create("TextButton", { 
			AutoButtonColor = false, 
			BackgroundTransparency = 1, 
			BorderSizePixel = 0, 
			Name = stringUtils:ConvertToCamelCase(title), 
			Size = UDim2.new(1, 0, 0, 50), 
			Text = "",
			ZIndex = 2
		}, {
			instanceUtils:Create("ImageLabel", { 
				AnchorPoint = Vector2.new(0.5, 0.5), 
				BackgroundTransparency = 1, 
				BorderSizePixel = 0, 
				Image = icon, 
				ImageColor3 = Color3.fromHex("979ebd"), 
				ImageTransparency = 0.6, 
				Name = "icon", 
				Position = UDim2.new(0, 38, 0.5, 0), 
				Size = UDim2.new(0, 24, 0, 24),
				ZIndex = 2
			}, {
				instanceUtils:Create("ImageLabel", { 
					AnchorPoint = Vector2.new(0.5, 0.5), 
					BackgroundTransparency = 1, 
					BorderSizePixel = 0, 
					Image = "rbxassetid://11559270573", 
					ImageTransparency = 1, 
					Name = "glow", 
					Position = UDim2.new(0.5, 0, 0.5, 0), 
					Size = UDim2.new(0, 85, 0, 102),
					ZIndex = 2
				})
			}),
			instanceUtils:Create("TextLabel", { 
				AnchorPoint = Vector2.new(0, 0.5), 
				AutomaticSize = Enum.AutomaticSize.XY, 
				BackgroundTransparency = 1, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size12, 
				Name = "text", 
				Position = UDim2.new(0, 70, 0.5, 0), 
				Text = title, 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 12, 
				TextTransparency = 0.2, 
				TextXAlignment = Enum.TextXAlignment.Left,
				ZIndex = 2
			}),
			instanceUtils:Create("ImageLabel", { 
				AnchorPoint = Vector2.new(0, 0.5), 
				BackgroundTransparency = 1, 
				BorderSizePixel = 0, 
				Image = "rbxassetid://11558444554", 
				Name = "arrow", 
				Position = UDim2.new(0, 224, 0.5, 0), 
				Size = UDim2.new(0, 16, 0, 16),
				ZIndex = 2
			})
		});
	end
	
	--[[ Module ]]--
	
	local navbarButton = {};
	navbarButton.__index = navbarButton;
	
	function navbarButton.new(title: string, icon: string)
		return setmetatable({
			instance = createButton(title, icon);
		}, navbarButton);
	end
	
	function navbarButton:Highlight(selected: boolean)
		instanceUtils:Tween(self.instance.icon, 0.2, {
			ImageColor3 = selected and Color3.fromHex("eb4545") or Color3.fromHex("979ebd"),
			ImageTransparency = selected and 0 or 0.6
		});
		instanceUtils:Tween(self.instance.icon.glow, 0.2, {
			ImageTransparency = selected and 0 or 1
		});
	end
	
	framework.components.navbarButton = navbarButton;
end

do
	--[[ Variables ]]--
	
	local instanceUtils = framework.dependencies.utils.instance;
	local stringUtils = framework.dependencies.utils.string;
	local tableUtils = framework.dependencies.utils.table;
	
	--[[ Module ]]--
	
	framework.components.editorButton = (function(title: string, icon: string, overwriteProps: {any}?, foreground: Color3?): Instance
		return instanceUtils:Create("TextButton", tableUtils:DeepOverwrite({ 
			BackgroundColor3 = Color3.fromHex("3a3a4a"), 
			BorderSizePixel = 0, 
			FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
			Name = stringUtils:ConvertToCamelCase(title), 
			Size = UDim2.new(0, 50, 0, 50), 
			Text = "", 
			TextColor3 = Color3.fromHex("1b2a35"),
			ZIndex = 2
		}, overwriteProps, true), {
			instanceUtils:Create("UICorner", { 
				Name = "corner"
			}),
			instanceUtils:Create("ImageLabel", { 
				AnchorPoint = Vector2.new(0.5, 0.5), 
				BackgroundTransparency = 1, 
				BorderSizePixel = 0, 
				Image = icon, 
				ImageColor3 = foreground or Color3.fromHex("9fa4ba"), 
				Name = "icon", 
				Position = UDim2.new(0.5, 0, 0.5, 0), 
				Size = UDim2.new(0, 28, 0, 28),
				ZIndex = 2
			})
		});
	end);
end

do
	--[[ Variables ]]--
	
	local instanceUtils = framework.dependencies.utils.instance;
	local stringUtils = framework.dependencies.utils.string;
	local tabSystem;
	
	local textService = game:GetService("TextService");
	
	--[[ Functions ]]--
	
	local function createButton(title: string): Instance
		return instanceUtils:Create("TextButton", { 
			AutoButtonColor = false, 
			BackgroundColor3 = Color3.fromHex("3a3a4a"), 
			BorderSizePixel = 0, 
			FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
			Name = stringUtils:ConvertToCamelCase(title), 
			Position = UDim2.new(1, -75, 1, -75), 
			Size = UDim2.new(0, textService:GetTextBoundsAsync(instanceUtils:Create("GetTextBoundsParams", {
				Font = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
				Text = title,
				Size = 14,
				Width = math.huge
			})).X + 42, 0, 32), 
			Text = ""
		}, {
			instanceUtils:Create("UICorner", { 
				CornerRadius = UDim.new(0, 6), 
				Name = "corner"
			}),
			instanceUtils:Create("ImageButton", { 
				AnchorPoint = Vector2.new(1, 0.5), 
				AutoButtonColor = false,
				BackgroundTransparency = 1, 
				BorderSizePixel = 0, 
				Image = "rbxassetid://14808246706", 
				Name = "close", 
				Position = UDim2.new(1, -6, 0.5, 0), 
				Size = UDim2.new(0, 20, 0, 20)
			}),
			instanceUtils:Create("TextLabel", { 
				AnchorPoint = Vector2.new(0.5, 0.5), 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "title", 
				Position = UDim2.new(0.5, 0, 0.5, 0), 
				Size = UDim2.new(1, -18, 1, 0), 
				Text = title, 
				TextColor3 = Color3.fromHex("9fa4ba"), 
				TextSize = 14, 
				TextXAlignment = Enum.TextXAlignment.Left
			})
		});
	end
	
	--[[ Module ]]--
	
	local tabButton = {};
	tabButton.__index = tabButton;
	
	function tabButton.new(tab: {any})
		if tabSystem == nil then
			tabSystem = framework.data.tabSystem;
		end
		
		local btn = createButton(tab.title);
		
		btn.MouseButton1Click:Connect(function()
			tabSystem:Select(tab.index);
		end);
	
		btn.close.MouseButton1Click:Connect(function()
			tabSystem:Remove(tab.index);
		end);
		
		return setmetatable({
			instance = btn
		}, tabButton);
	end
	
	function tabButton:Highlight(selected: boolean)
		instanceUtils:Tween(self.instance, 0.2, {
			BackgroundColor3 = Color3.fromHex(selected and "eb4545" or "3a3a4a");
		});
		instanceUtils:Tween(self.instance.title, 0.2, {
			TextColor3 = Color3.fromHex(selected and "ffffff" or "9fa4ba");
		});
		instanceUtils:Tween(self.instance.close, 0.2, {
			ImageColor3 = Color3.fromHex(selected and "ffffff" or "9fa4ba");
		});
	end
	
	function tabButton:Destroy()
		self.instance:Destroy();
	end
	
	framework.components.tabButton = tabButton;
end

do
	--[[ Variables ]]--
	
	local savedScripts = framework.data.savedScripts;
	local instanceUtils = framework.dependencies.utils.instance;
	local internalUtils = framework.dependencies.utils.internal;
	local mathsUtils = framework.dependencies.utils.maths;
	local tabSystem;
	
	local globalScriptSelection = {};
	
	--[[ Functions ]]--
	
	local function createUI(directory: Instance): Instance
		local base = instanceUtils:Create("Frame", { 
			AnchorPoint = Vector2.new(0.5, 0.5), 
			BackgroundColor3 = Color3.fromHex("15151d"), 
			BorderColor3 = Color3.fromHex("000000"), 
			BorderSizePixel = 0, 
			Name = "globalScriptSelection", 
			Parent = directory, 
			Position = UDim2.new(0.5, 0, 0.5, 20), 
			Size = UDim2.new(0.6, 0, 0.4, 100), 
			Visible = false
		}, {
			instanceUtils:Create("UICorner", { 
				CornerRadius = UDim.new(0, 5), 
				Name = "corner"
			}),
			instanceUtils:Create("UIStroke", { 
				Color = Color3.fromHex("202028"), 
				Name = "stroke", 
				Thickness = 2
			}),
			instanceUtils:Create("TextLabel", { 
				AutomaticSize = Enum.AutomaticSize.Y, 
				BackgroundTransparency = 1, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size18, 
				Name = "selectedScript", 
				Position = UDim2.new(0, 30, 0, 20), 
				Size = UDim2.new(1, -232, 0, 0), 
				Text = "Selected Script:", 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 16, 
				TextTruncate = Enum.TextTruncate.AtEnd, 
				TextXAlignment = Enum.TextXAlignment.Left, 
				TextYAlignment = Enum.TextYAlignment.Top
			}),
			instanceUtils:Create("Frame", { 
				AnchorPoint = Vector2.new(0.5, 1), 
				AutomaticSize = Enum.AutomaticSize.Y, 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				Name = "buttons", 
				Position = UDim2.new(0.5, 0, 1, -30), 
				Size = UDim2.new(1, -60, 0, 0)
			}, {
				instanceUtils:Create("UIGridLayout", { 
					CellPadding = UDim2.new(0, 18, 0, 16), 
					CellSize = UDim2.new(0.5, -9, 0, 36), 
					Name = "grid", 
					SortOrder = Enum.SortOrder.LayoutOrder, 
					VerticalAlignment = Enum.VerticalAlignment.Bottom
				}),
				instanceUtils:Create("TextButton", { 
					AutoButtonColor = false, 
					BackgroundColor3 = Color3.fromHex("3a3a4a"), 
					BorderColor3 = Color3.fromHex("000000"), 
					BorderSizePixel = 0, 
					FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
					FontSize = Enum.FontSize.Size14, 
					Name = "execute", 
					Size = UDim2.new(0, 200, 0, 50), 
					Text = "Execute", 
					TextColor3 = Color3.fromHex("ffffff"), 
					TextSize = 14
				}, {
					instanceUtils:Create("UICorner", { 
						CornerRadius = UDim.new(0, 5), 
						Name = "corner"
					})
				}),
				instanceUtils:Create("TextButton", { 
					AutoButtonColor = false, 
					BackgroundColor3 = Color3.fromHex("3a3a4a"), 
					BorderColor3 = Color3.fromHex("000000"), 
					BorderSizePixel = 0, 
					FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
					FontSize = Enum.FontSize.Size14, 
					Name = "loadToEditor", 
					Size = UDim2.new(0, 200, 0, 50), 
					Text = "Load to Editor", 
					TextColor3 = Color3.fromHex("ffffff"), 
					TextSize = 14
				}, {
					instanceUtils:Create("UICorner", { 
						CornerRadius = UDim.new(0, 5), 
						Name = "corner"
					})
				}),
				instanceUtils:Create("TextButton", { 
					AutoButtonColor = false, 
					BackgroundColor3 = Color3.fromHex("3a3a4a"), 
					BorderColor3 = Color3.fromHex("000000"), 
					BorderSizePixel = 0, 
					FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
					FontSize = Enum.FontSize.Size14, 
					Name = "saveScript", 
					Size = UDim2.new(0, 200, 0, 50), 
					Text = "Save Script", 
					TextColor3 = Color3.fromHex("ffffff"), 
					TextSize = 14
				}, {
					instanceUtils:Create("UICorner", { 
						CornerRadius = UDim.new(0, 5), 
						Name = "corner"
					})
				}),
				instanceUtils:Create("TextButton", { 
					AutoButtonColor = false, 
					BackgroundColor3 = Color3.fromHex("3a3a4a"), 
					BorderColor3 = Color3.fromHex("000000"), 
					BorderSizePixel = 0, 
					FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
					FontSize = Enum.FontSize.Size14, 
					Name = "cancel", 
					Size = UDim2.new(0, 200, 0, 50), 
					Text = "Cancel", 
					TextColor3 = Color3.fromHex("ffffff"), 
					TextSize = 14
				}, {
					instanceUtils:Create("UICorner", { 
						CornerRadius = UDim.new(0, 5), 
						Name = "corner"
					})
				})
			}),
			instanceUtils:Create("ImageLabel", { 
				AnchorPoint = Vector2.new(1, 0), 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				Image = "", 
				Name = "icon", 
				Position = UDim2.new(1, -30, 0, 20), 
				Size = UDim2.new(0, 100, 1, -158)
			}, {
				instanceUtils:Create("UICorner", { 
					CornerRadius = UDim.new(0, 5), 
					Name = "corner"
				}),
				instanceUtils:Create("UIAspectRatioConstraint", { 
					AspectRatio = 16 / 9, 
					AspectType = Enum.AspectType.ScaleWithParentSize, 
					DominantAxis = Enum.DominantAxis.Height, 
					Name = "aspectRatio"
				})
			}),
			instanceUtils:Create("TextLabel", { 
				AutomaticSize = Enum.AutomaticSize.Y, 
				BackgroundTransparency = 1, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "text", 
				Position = UDim2.new(0, 30, 0, 40), 
				Size = UDim2.new(1, -232, 0, 0), 
				Text = "", 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 14, 
				TextTruncate = Enum.TextTruncate.AtEnd, 
				TextXAlignment = Enum.TextXAlignment.Left, 
				TextYAlignment = Enum.TextYAlignment.Top
			}),
			instanceUtils:Create("TextLabel", { 
				AutomaticSize = Enum.AutomaticSize.Y, 
				BackgroundTransparency = 1, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "views", 
				Position = UDim2.new(0, 30, 0, 70), 
				RichText = true, 
				Size = UDim2.new(1, -232, 0, 0), 
				Text = "<font weight=\"bold\">Views:</font>", 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 14, 
				TextTruncate = Enum.TextTruncate.AtEnd, 
				TextXAlignment = Enum.TextXAlignment.Left, 
				TextYAlignment = Enum.TextYAlignment.Top
			}),
			instanceUtils:Create("TextLabel", { 
				AutomaticSize = Enum.AutomaticSize.Y, 
				BackgroundTransparency = 1, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "updatedAt", 
				Position = UDim2.new(0, 30, 0, 90), 
				RichText = true, 
				Size = UDim2.new(1, -232, 0, 0), 
				Text = "<font weight=\"bold\">Updated:</font>", 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 14, 
				TextTruncate = Enum.TextTruncate.AtEnd, 
				TextXAlignment = Enum.TextXAlignment.Left, 
				TextYAlignment = Enum.TextYAlignment.Top
			}),
			instanceUtils:Create("UIAspectRatioConstraint", { 
				AspectRatio = 480 / 244, 
				Name = "aspectRatio"
			})
		});
	
		base.buttons.execute.MouseButton1Click:Connect(function()
			internalUtils:Execute(globalScriptSelection.selectedScript.script);
			globalScriptSelection:Hide();
		end);
	
		base.buttons.loadToEditor.MouseButton1Click:Connect(function()
			if tabSystem == nil then
				tabSystem = framework.data.tabSystem;
			end
			tabSystem:Add(globalScriptSelection.selectedScript.title, globalScriptSelection.selectedScript.script);
			globalScriptSelection:Hide();
		end);
	
		base.buttons.saveScript.MouseButton1Click:Connect(function()
			savedScripts:Add(globalScriptSelection.selectedScript.title, "", globalScriptSelection.selectedScript.script);
			globalScriptSelection:Hide();
		end);
	
		base.buttons.cancel.MouseButton1Click:Connect(function()
			globalScriptSelection:Hide();
		end);
		
		return base;
	end
	
	--[[ Module ]]--
	
	function globalScriptSelection:CreateUI(gui: ScreenGui)
		if self.frame == nil then
			self.frame = createUI(gui);
		end
	end
	
	function globalScriptSelection:Show(scriptResult: {any})
		self.selectedScript = scriptResult;
		self.frame.icon.Image = string.format("https://assetgame.roblox.com/Game/Tools/ThumbnailAsset.ashx?aid=%d&fmt=png&wd=1920&ht=1080", scriptResult.isUniversal and 4483381587 or scriptResult.game.gameId);
		self.frame.text.Text = scriptResult.title;
		self.frame.views.Text = "<font weight=\"bold\">Views:</font> " .. mathsUtils:FormatAsLiteralCount(scriptResult.views);
		self.frame.updatedAt.Text = "<font weight=\"bold\">Updated:</font> " .. DateTime.fromIsoDate(scriptResult.updatedAt or scriptResult.createdAt):FormatLocalTime("ll", "en-us");
		self.frame.Visible = true;
	end
	
	function globalScriptSelection:Hide()
		self.frame.Visible = false;
	end
	
	framework.popups.globalScriptSelection = globalScriptSelection;
end

do
	--[[ Variables ]]--
	
	local savedScripts = framework.data.savedScripts;
	local instanceUtils = framework.dependencies.utils.instance;
	
	local saveCurrentTab = {};
	
	--[[ Functions ]]--
	
	local function createUI(directory: Instance): Instance
		local base = instanceUtils:Create("Frame", { 
			AnchorPoint = Vector2.new(0.5, 0.5), 
			BackgroundColor3 = Color3.fromHex("15151d"), 
			BorderColor3 = Color3.fromHex("000000"), 
			BorderSizePixel = 0, 
			Name = "saveCurrentTab", 
			Parent = directory, 
			Position = UDim2.new(0.5, 0, 0.5, 0), 
			Size = UDim2.new(0.6, 0, 0.4, 100), 
			Visible = false
		}, {
			instanceUtils:Create("UICorner", { 
				CornerRadius = UDim.new(0, 5), 
				Name = "corner"
			}),
			instanceUtils:Create("UIStroke", { 
				Color = Color3.fromHex("202028"), 
				Name = "stroke", 
				Thickness = 2
			}),
			instanceUtils:Create("Frame", { 
				AnchorPoint = Vector2.new(0.5, 1), 
				AutomaticSize = Enum.AutomaticSize.Y, 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				Name = "buttons", 
				Position = UDim2.new(0.5, 0, 1, -30), 
				Size = UDim2.new(1, -60, 0, 0)
			}, {
				instanceUtils:Create("UIGridLayout", { 
					CellPadding = UDim2.new(0, 18, 0, 16), 
					CellSize = UDim2.new(0.5, -9, 0, 36), 
					Name = "grid", 
					SortOrder = Enum.SortOrder.LayoutOrder, 
					VerticalAlignment = Enum.VerticalAlignment.Bottom
				}),
				instanceUtils:Create("TextButton", { 
					AutoButtonColor = false, 
					BackgroundColor3 = Color3.fromHex("3a3a4a"), 
					BorderColor3 = Color3.fromHex("000000"), 
					BorderSizePixel = 0, 
					FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
					FontSize = Enum.FontSize.Size14, 
					Name = "saveScript", 
					Size = UDim2.new(0, 200, 0, 50), 
					Text = "Save Script", 
					TextColor3 = Color3.fromHex("ffffff"), 
					TextSize = 14
				}, {
					instanceUtils:Create("UICorner", { 
						CornerRadius = UDim.new(0, 5), 
						Name = "corner"
					})
				}),
				instanceUtils:Create("TextButton", { 
					AutoButtonColor = false, 
					BackgroundColor3 = Color3.fromHex("3a3a4a"), 
					BorderColor3 = Color3.fromHex("000000"), 
					BorderSizePixel = 0, 
					FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
					FontSize = Enum.FontSize.Size14, 
					Name = "cancel", 
					Size = UDim2.new(0, 200, 0, 50), 
					Text = "Cancel", 
					TextColor3 = Color3.fromHex("ffffff"), 
					TextSize = 14
				}, {
					instanceUtils:Create("UICorner", { 
						CornerRadius = UDim.new(0, 5), 
						Name = "corner"
					})
				})
			}),
			instanceUtils:Create("TextLabel", { 
				AnchorPoint = Vector2.new(0.5, 0), 
				AutomaticSize = Enum.AutomaticSize.Y, 
				BackgroundTransparency = 1, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "text", 
				Position = UDim2.new(0.5, 0, 0, 40), 
				Size = UDim2.new(1, -60, 0, 0), 
				Text = "Script 1", 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 14, 
				TextTruncate = Enum.TextTruncate.AtEnd, 
				TextXAlignment = Enum.TextXAlignment.Left, 
				TextYAlignment = Enum.TextYAlignment.Top
			}),
			instanceUtils:Create("TextLabel", { 
				AnchorPoint = Vector2.new(0.5, 0), 
				AutomaticSize = Enum.AutomaticSize.Y, 
				BackgroundTransparency = 1, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size18, 
				Name = "currentTab", 
				Position = UDim2.new(0.5, 0, 0, 20), 
				Size = UDim2.new(1, -60, 0, 0), 
				Text = "Current Tab:", 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 16, 
				TextTruncate = Enum.TextTruncate.AtEnd, 
				TextXAlignment = Enum.TextXAlignment.Left, 
				TextYAlignment = Enum.TextYAlignment.Top
			}),
			instanceUtils:Create("TextBox", { 
				AnchorPoint = Vector2.new(0.5, 1), 
				BackgroundColor3 = Color3.fromHex("202028"), 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "title", 
				PlaceholderText = "Title...", 
				Position = UDim2.new(0.5, 0, 1, -125), 
				Size = UDim2.new(1, -62, 0, 32), 
				Text = "", 
				TextColor3 = Color3.fromHex("9fa4ba"), 
				TextSize = 14, 
				TextTruncate = Enum.TextTruncate.AtEnd
			}, {
				instanceUtils:Create("UICorner", { 
					CornerRadius = UDim.new(0, 6), 
					Name = "corner"
				}),
				instanceUtils:Create("UIPadding", { 
					Name = "padding", 
					PaddingLeft = UDim.new(0, 10), 
					PaddingRight = UDim.new(0, 10)
				}),
				instanceUtils:Create("UIStroke", { 
					ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
					Color = Color3.fromHex("3a3a4a"), 
					Name = "stroke"
				})
			}),
			instanceUtils:Create("TextBox", { 
				AnchorPoint = Vector2.new(0.5, 1), 
				BackgroundColor3 = Color3.fromHex("202028"), 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "description", 
				PlaceholderText = "Description...", 
				Position = UDim2.new(0.5, 0, 1, -79), 
				Size = UDim2.new(1, -62, 0, 32), 
				Text = "", 
				TextColor3 = Color3.fromHex("9fa4ba"), 
				TextSize = 14, 
				TextTruncate = Enum.TextTruncate.AtEnd
			}, {
				instanceUtils:Create("UICorner", { 
					CornerRadius = UDim.new(0, 6), 
					Name = "corner"
				}),
				instanceUtils:Create("UIPadding", { 
					Name = "padding", 
					PaddingLeft = UDim.new(0, 10), 
					PaddingRight = UDim.new(0, 10)
				}),
				instanceUtils:Create("UIStroke", { 
					ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
					Color = Color3.fromHex("3a3a4a"), 
					Name = "stroke"
				})
			}),
			instanceUtils:Create("UISizeConstraint", { 
				MaxSize = Vector2.new(600, math.huge), 
				Name = "sizeConstraint"
			}),
			instanceUtils:Create("UIAspectRatioConstraint", { 
				AspectRatio = 480 / 244, 
				Name = "aspectRatio"
			})
		});
	
		base.buttons.saveScript.MouseButton1Click:Connect(function()
			local title = base.title.Text;
			if #title > 0 then
				savedScripts:Add(title, base.description.Text, saveCurrentTab.selectedTab.content);
				saveCurrentTab:Hide();
			end
		end);
	
		base.buttons.cancel.MouseButton1Click:Connect(function()
			saveCurrentTab:Hide();
		end);
		
		return base;
	end
	
	--[[ Module ]]--
	
	function saveCurrentTab:CreateUI(gui: ScreenGui)
		if self.frame == nil then
			self.frame = createUI(gui);
		end
	end
	
	function saveCurrentTab:Show(selectedTab: {any})
		self.selectedTab = selectedTab;
		self.frame.text.Text = selectedTab.title;
		self.frame.title.Text = selectedTab.title;
		self.frame.Visible = true;
	end
	
	function saveCurrentTab:Hide()
		self.frame.Visible = false;
	end
	
	framework.popups.saveCurrentTab = saveCurrentTab;
end

do
	--[[ Variables ]]--
	
	local userSettings = framework.data.userSettings;
	local signal = framework.dependencies.signal;
	local instanceUtils = framework.dependencies.utils.instance;
	local stringUtils = framework.dependencies.utils.string;
	
	local textService = game:GetService("TextService");
	
	local dropdown = {
		selectedDropdown = nil,
		selectedItem = nil,
		onDropdownChanged = signal.new(),
		onSelectionChanged = signal.new()
	};
	
	--[[ Functions ]]--
	
	local function createItem(title: string)
		return instanceUtils:Create("TextButton", { 
			AutoButtonColor = false, 
			BackgroundColor3 = Color3.fromHex("3a3a4a"), 
			BackgroundTransparency = 1, 
			BorderSizePixel = 0, 
			FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal), 
			FontSize = Enum.FontSize.Size14, 
			Name = stringUtils:ConvertToCamelCase(title),  
			Parent = dropdown.frame.container, 
			Position = UDim2.new(1, -75, 1, -75), 
			Size = UDim2.new(1, -4, 0, 28), 
			Text = title, 
			TextColor3 = Color3.fromHex("9fa4ba"), 
			TextSize = 14
		}, {
			instanceUtils:Create("UICorner", { 
				CornerRadius = UDim.new(0, 4), 
				Name = "corner"
			}),
			instanceUtils:Create("UIPadding", { 
				Name = "padding", 
				PaddingLeft = UDim.new(0, 10), 
				PaddingRight = UDim.new(0, 10)
			})
		});
	end
	
	local function toggleItemSelection(item: TextButton, selected: boolean)
		instanceUtils:Tween(item, 0.25, {
			BackgroundTransparency = selected and 0 or 1,
			TextColor3 = Color3.fromHex(selected and "ffffff" or "9fa4ba")
		});
	end
	
	local function createUI(directory: Instance): Instance
		return instanceUtils:Create("Frame", { 
			AnchorPoint = Vector2.new(1, 0), 
			BackgroundColor3 = Color3.fromHex("202028"), 
			BorderColor3 = Color3.fromHex("000000"), 
			BorderSizePixel = 0, 
			Name = "dropdown", 
			Parent = directory, 
			Position = UDim2.new(1, -22, 0, 128), 
			Size = UDim2.new(0, 180, 0, 142)
		}, {
			instanceUtils:Create("UICorner", { 
				CornerRadius = UDim.new(0, 6), 
				Name = "corner"
			}),
			instanceUtils:Create("UIStroke", { 
				Color = Color3.fromHex("3a3a4a"), 
				Name = "stroke", 
				Thickness = 2
			}),
			instanceUtils:Create("ScrollingFrame", { 
				Active = true, 
				AnchorPoint = Vector2.new(1, 0.5), 
				AutomaticCanvasSize = Enum.AutomaticSize.Y, 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				CanvasSize = UDim2.new(0, 0, 0, 0), 
				Name = "container", 
				Position = UDim2.new(1, -2, 0.5, 0), 
				ScrollBarImageColor3 = Color3.fromHex("53536b"), 
				ScrollBarThickness = 4, 
				ScrollingDirection = Enum.ScrollingDirection.Y, 
				Size = UDim2.new(1, -8, 1, -12), 
				VerticalScrollBarInset = Enum.ScrollBarInset.ScrollBar
			}, {
				instanceUtils:Create("UIListLayout", { 
					Name = "list", 
					Padding = UDim.new(0, 6), 
					SortOrder = Enum.SortOrder.LayoutOrder
				})
			})
		});
	end
	
	local function clearDropdown()
		for i, v in dropdown.frame.container:GetChildren() do
			if v:IsA("TextButton") then
				v:Destroy();
			end
		end
	end
	
	--[[ Module ]]--
	
	function dropdown:CreateUI(gui: ScreenGui)
		if self.frame == nil then
			self.frame = createUI(gui);
		end
	end
	
	function dropdown:Show(item: {any}, adornee: GuiBase2d)
		clearDropdown();
		self.selectedDropdown = item.title;
		self.onDropdownChanged:Fire(item.title);
		
		if self.adornConnection then
			self.adornConnection:Disconnect();
		end
		
		do
			local bottomRight = adornee.AbsolutePosition + adornee.AbsoluteSize;
			self.frame.Position = UDim2.new(0, bottomRight.X, 0, bottomRight.Y + 44);
			
			self.adornConnection = adornee:GetPropertyChangedSignal("AbsoluteSize"):Connect(function()
				bottomRight = adornee.AbsolutePosition + adornee.AbsoluteSize;
				self.frame.Position = UDim2.new(0, bottomRight.X, 0, bottomRight.Y + 44);
			end);
		end
		
		for i, v in item.items do
			local currentItem = createItem(v);
			if v == item.value then
				toggleItemSelection(currentItem, true);
				self.selectedItem = currentItem;
			end
	
			currentItem.MouseButton1Click:Connect(function()
				toggleItemSelection(self.selectedItem, false);
				toggleItemSelection(currentItem, true);
				self.selectedItem = currentItem;
				self.onSelectionChanged:Fire(v);
			end);
		end
	
		self.frame.Visible = true;
	end
	
	function dropdown:Hide()
		clearDropdown();
		self.selectedDropdown = nil;
		self.selectedItem = nil;
		self.onDropdownChanged:Fire();
		self.frame.Visible = false;
	end
	
	framework.popups.dropdown = dropdown;
end

do
	--[[ Module ]]--
	
	local popups = {
		cache = {}
	};
	
	function popups:RegisterGUI(gui: ScreenGui)
		self.gui = gui;
	end
	
	function popups:Show(name: string, ...)
		local module = self.cache[name];
		if module == nil then
			module = framework["popups." .. name];
			module:CreateUI(self.gui);
			self.cache[name] = module;
		end
		module:Show(...);
	end
	
	function popups:Hide(name: string,  ...)
		local module = self.cache[name];
		if module then
			module:Hide(...);
		end
	end
	
	framework.popups.popups = popups;
end

do
	--[[ Variables ]]--
	
	local textLabel = framework.components.base.textLabel;
	local changelog = framework.data.internalSettings.changelog;
	local instanceUtils = framework.dependencies.utils.instance;
	
	--[[ Functions ]]--
	
	local function formatChangelog()
		local str = "";
		for i, v in changelog do
			str ..= string.format("%s<font color=\"#eb4545\">[%s]</font>\n\n", str == "" and "" or "\n\n", DateTime.fromIsoDate(v.stamp):FormatLocalTime("ll", "en-us"));
			for i2, v2 in v.data do
				str ..= "ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â¢ " .. v2;
				if i2 < #v.data then
					str ..= "\n";
				end
			end
		end
		return str;
	end
	
	--[[ Module ]]--
	
	framework.pages.startup.changelog = (function()
		return instanceUtils:Create("Frame", {
			BackgroundTransparency = 1,
			Name = "changelog",
			Position = UDim2.new(0.5, 12, 0.2, 46),
			Size = UDim2.new(0.2, 120, 0.5, 0)
		}, {
			textLabel({
				Text = "Changelog",
				TextColor3 = Color3.fromRGB(159, 164, 186),
				TextSize = 20
			}),
			instanceUtils:Create("ScrollingFrame", {
				AnchorPoint = Vector2.new(0.5, 1),
				AutomaticCanvasSize = Enum.AutomaticSize.XY,
				BackgroundTransparency = 1,
				BorderSizePixel = 0,
				CanvasSize = UDim2.new(),
				HorizontalScrollBarInset = Enum.ScrollBarInset.ScrollBar,
				Name = "container",
				Position = UDim2.new(0.5, 0, 1, 0),
				ScrollBarImageColor3 = Color3.fromRGB(15, 15, 21),
				ScrollBarThickness = 4,
				Size = UDim2.new(1, -16, 1, -36),
				VerticalScrollBarInset = Enum.ScrollBarInset.ScrollBar
			}, {
				textLabel({
					FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json"),
					LineHeight = 1.1,
					RichText = true,
					Text = formatChangelog(),
					TextColor3 = Color3.fromRGB(159, 164, 186),
					TextTruncate = Enum.TextTruncate.None,
					TextXAlignment = Enum.TextXAlignment.Left,
					TextYAlignment = Enum.TextYAlignment.Top
				})
			})
		});
	end);
end

do
	--[[ Variables ]]--
	
	local textLabel = framework.components.base.textLabel;
	local instanceUtils = framework.dependencies.utils.instance;
	
	local stepCount = 0;
	
	--[[ Module ]]--
	
	local startupStep = {};
	startupStep.__index = startupStep;
	
	function startupStep.new(startText: string, finishText: string, parent: Instance): {any}
		stepCount += 1;
	
		local frame = instanceUtils:Create("Frame", {
			AnchorPoint = Vector2.new(0.5, 0),
			BackgroundTransparency = 1,
			Name = stepCount,
			Parent = parent,
			Size = UDim2.new(1, 0, 0, 22)
		}, {
			instanceUtils:Create("ImageLabel", {
				BackgroundTransparency = 1,
				Image = "rbxassetid://14840862230",
				ImageColor3 = Color3.fromRGB(235, 69, 69),
				ImageTransparency = 1,
				Name = "icon",
				Size = UDim2.new(0, 22, 0, 22)
			}),
			textLabel({
				AnchorPoint = Vector2.new(0, 0.5),
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json"),
				Name = "note",
				Position = UDim2.new(0, 34, 0.5, 0),
				Text = startText,
				TextColor3 = Color3.fromRGB(159, 164, 186),
				TextTransparency = 1
			})
		});
		
		return setmetatable({
			frame = frame,
			finishText = finishText,
			isFinished = false
		}, startupStep);
	end
	
	function startupStep:Start(): {any}
		self.tween = instanceUtils:Tween(self.frame.icon, 1, {
			Rotation = 360
		}, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut, math.huge);
	
		instanceUtils:Tween(self.frame.icon, 0.4, {
			ImageTransparency = 0
		});
	
		instanceUtils:Tween(self.frame.note, 0.4, {
			TextTransparency = 0
		}).Completed:Wait();
		return self;
	end
	
	function startupStep:Complete()
		if self.isFinished then
			return;
		end	
		self.isFinished = true;
		
		local icon = self.frame.icon;
		local note = self.frame.note;
	
		instanceUtils:Tween(note, 0.4, {
			TextTransparency = 1
		}).Completed:Connect(function()
			note.Text = self.finishText;
			instanceUtils:Tween(note, 0.4, {
				TextTransparency = 0
			});
		end);
		
		instanceUtils:Tween(icon, 0.4, {
			ImageTransparency = 1
		}).Completed:Wait();
		self.tween:Cancel();
		icon.Image = "rbxassetid://14840859703";
		icon.Rotation = 0;
		instanceUtils:Tween(icon, 0.4, {
			ImageTransparency = 0
		});
	end
	
	framework.pages.startup.startupStep = startupStep;
end

do
	--[[ Variables ]]--
	
	local background = framework.components.base.background;
	local textBox = framework.components.base.textBox;
	local textButton = framework.components.base.textButton;
	local textLabel = framework.components.base.textLabel;
	local userSettings = framework.data.userSettings;
	local savedScripts = framework.data.savedScripts;
	local tabSystem = framework.data.tabSystem;
	local instanceUtils = framework.dependencies.utils.instance;
	local internalUtils = framework.dependencies.utils.internal;
	local changelog = framework.pages.startup.changelog;
	local startupStep = framework.pages.startup.startupStep;
	
	local httpService = game:GetService("HttpService");
	
	local completionSignal;
	local ui;
	
	--[[ Functions ]]--
	
	dd = true
	
	local function checkWhitelist()
		if getgenv then
			return internalUtils:Request("https://api.codex.lol/v1/auth/authenticate", "POST") ~= true;
		end
		return false;
	end
	
	local function createBasis(directory: Instance)
		local gui = instanceUtils:Create("ScreenGui", {
			Enabled = false,
			IgnoreGuiInset = true,
			Name = "gui",
			ResetOnSpawn = false,
			ZIndexBehavior = Enum.ZIndexBehavior.Global
		}, {
			instanceUtils:Create("Frame", {
				AnchorPoint = Vector2.new(0.5, 0.5),
				BackgroundColor3 = Color3.fromRGB(21, 21, 29),
				BackgroundTransparency = 1,
				Name = "background",
				Position = UDim2.new(0.5, 0, 0.5, 0),
				Size = UDim2.new(1, 0, 1, 0),
				ZIndex = 0
			}),
			instanceUtils:Create("Folder", {
				Name = "tabs"
			})
		});
	
		local popups = instanceUtils:Create("ScreenGui", {
			Enabled = false,
			IgnoreGuiInset = true,
			Name = "popups",
			ResetOnSpawn = false,
			ZIndexBehavior = Enum.ZIndexBehavior.Global
		});
	
		gui.Parent = directory;
		popups.Parent = directory;
		
		return {
			gui = gui,
			popups = popups
		};
	end
	
	local function doSetup()
		userSettings:Initialize();
		if runautoexec and userSettings.cache.executor.autoExecute then
			runautoexec();
		end
		tabSystem:Initialize();
		savedScripts:Initialize();
	end
	
	local function changeTab(isMainTab: boolean)
		ui.whitelist.Visible = isMainTab;
		ui.changelog.Visible = isMainTab;
		ui.specialUserInput.Visible = not isMainTab;
		ui.note.Text = isMainTab and "Please complete the whitelist to gain access to Codex" or "Please enter your key to activate your Premium License";
	end
	
	local function createUI(directory: Instance): ScreenGui
		ui = instanceUtils:Create("ScreenGui", {
			IgnoreGuiInset = true,
			Name = "startup",
			Parent = directory,
			ResetOnSpawn = false,
			ZIndexBehavior = Enum.ZIndexBehavior.Global
		}, {
			background(),
			textLabel({
				AnchorPoint = Vector2.new(0.5, 0.5),
				Name = "title",
				Position = UDim2.new(0.5, 0, 0.2, -20),
				Text = "Codex Modified",
				TextSize = 24
			}),
			textLabel({
				AnchorPoint = Vector2.new(0.5, 0.5),
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json"),
				Name = "note",
				Position = UDim2.new(0.5, 0, 0.2, 2),
				Text = "Please complete the whitelist to gain access to Codex",
				TextColor3 = Color3.fromRGB(159, 164, 186)
			}),
			instanceUtils:Create("Frame", {
				AnchorPoint = Vector2.new(1, 0),
				BackgroundTransparency = 1,
				Name = "whitelist",
				Position = UDim2.new(0.5, -12, 0.2, 46),
				Size = UDim2.new(0.2, 120, 0.5, 0)
			}, {
				instanceUtils:Create("Frame", {
					AnchorPoint = Vector2.new(0.5, 0),
					BackgroundTransparency = 1,
					Name = "process",
					Position = UDim2.new(0.5, 0, 0, 0),
					Size = UDim2.new(1, 0, 1, -36)
				}, {
					instanceUtils:Create("UIListLayout", {
						Name = "list",
						Padding = UDim.new(0, 6),
						SortOrder = Enum.SortOrder.LayoutOrder
					})
				}),
				textButton({
					AnchorPoint = Vector2.new(0.5, 1),
					AutomaticSize = Enum.AutomaticSize.None,
					MouseButton1Click = function()
						if setclipboard then
							local data = internalUtils:Request("https://api.codex.lol/v1/auth/session", "POST");
							if data then
								setclipboard("https://mobile.codex.lol?token=" .. httpService:JSONDecode(data).token);
							end
						end
						game:GetService("StarterGui"):SetCore("SendNotification", {
							Title = "Codex Android",
							Text = "Whitelist link has been set to your clipboard."
						});
					end,
					Name = "copyWhitelistLink",
					Position = UDim2.new(0.5, 0, 1, -28),
					Size = UDim2.new(1, 0, 0, 32),
					Text = "Copy Whitelist Link"
				}),
				textButton({ 
					AnchorPoint = Vector2.new(0.5, 1), 
					AutomaticSize = Enum.AutomaticSize.None,
					BackgroundTransparency = 1, 
					FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
					MouseButton1Click = function()
						changeTab(false);
					end,
					Name = "premiumUser", 
					Position = UDim2.new(0.5, 0, 1, 0), 
					RichText = true, 
					Size = UDim2.new(1, 0, 0, 20), 
					Text = "Premium User?  <font color=\"#eb4545\">Click Here!</font>", 
					TextColor3 = Color3.fromHex("9fa4ba")
				})
			}),
			changelog(),
			instanceUtils:Create("Frame", { 
				AnchorPoint = Vector2.new(0.5, 0), 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				Name = "specialUserInput", 
				Position = UDim2.new(0.5, 0, 0.2, 46), 
				Size = UDim2.new(0.4, 264, 0.5, 0), 
				Visible = false
			}, {
				textButton({
					AnchorPoint = Vector2.new(1, 0), 
					AutomaticSize = Enum.AutomaticSize.None,
					MouseButton1Click = function()
						changeTab(true);
					end,
					Name = "cancel", 
					Position = UDim2.new(0.5, -6, 0.5, 6), 
					Size = UDim2.new(0, 160, 0, 32), 
					Text = "Cancel"
				}),
				textButton({
					AutomaticSize = Enum.AutomaticSize.None,
					MouseButton1Click = function()
						local key = ui.specialUserInput.key.Text;
						if #key > 0 then
							local res = internalUtils:Request("https://api.codex.lol/v1/auth/claim", "POST", {
								["Content-Type"] = "application/json"
							}, {
								key = key
							});
							if res then
								changeTab(true);
								return;
							end
						end
						game:GetService("StarterGui"):SetCore("SendNotification", {
							Title = "Codex Android",
							Text = "Invalid key."
						});
					end,
					Name = "register", 
					Position = UDim2.new(0.5, 6, 0.5, 6), 
					Size = UDim2.new(0, 160, 0, 32), 
					Text = "Register", 
				}),
				textBox({
					AnchorPoint = Vector2.new(0.5, 1), 
					AutomaticSize = Enum.AutomaticSize.None,
					Name = "key", 
					PlaceholderText = "Key...", 
					Position = UDim2.new(0.5, 0, 0.5, -6),
					Size = UDim2.new(1, -62, 0, 32)
				})
			})
		});

		task.spawn(function()
			local whitelistStep = startupStep.new("Whitelisting...", "Whitelisted!", ui.whitelist.process):Start();
			repeat
				task.wait(3);
			until checkWhitelist();
			whitelistStep:Complete();
	
			local setupStep = startupStep.new("Setting Up...", "Setup Completed!", ui.whitelist.process):Start();
			doSetup();
			setupStep:Complete();
	
			local loadUIStep = startupStep.new("Loading UI...", "Loaded!", ui.whitelist.process):Start();
			local basis = createBasis(directory);
			loadUIStep:Complete();
			task.wait(1);
			completionSignal:Fire(basis);
		end);
		
		return ui;
	end
	
	--[[ Module ]]--
	
	framework.pages.startup.startup = (function(directory: Instance, signal: {any}): ScreenGui
		completionSignal = signal;
		
		if checkWhitelist() then
			doSetup();
			signal:Fire(createBasis(directory));
			return;
		end
		
		return createUI(directory);
	end);
end

do
	--[[ Variables ]]--
	
	local navbarButton = framework.components.navbarButton;
	local instanceUtils = framework.dependencies.utils.instance;
	local mathsUtils = framework.dependencies.utils.maths;
	local codexEnum = framework.dependencies.codexEnum;
	
	local userInputService = game:GetService("UserInputService");
	
	local navbar = {
		state = "hidden"
	};
	
	local map = {};
	local selected;
	
	--[[ Functions ]]--
	
	local function setupDragBar(dragBar: TextButton, indent: NumberValue)
		local isDragging = false;
		local startPosition, startOffset;
		
		userInputService.InputBegan:Connect(function(input)
			if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) and mathsUtils:IsWithin2DBounds(input.Position, dragBar.AbsolutePosition, dragBar.AbsolutePosition + dragBar.AbsoluteSize) then
				isDragging = true;
				startPosition, startOffset = input.Position.X, input.Position.X - dragBar.AbsolutePosition.X;
				local endedConn; endedConn = input.Changed:Connect(function(property)
					if input.UserInputState == Enum.UserInputState.End then
						isDragging = false;
						endedConn:Disconnect();
						navbar:SetState(codexEnum.NavbarState[input.Position.X > 140 and "Full" or input.Position.X > 40 and "Partial" or "Hidden"]);
					end
				end);
			end
		end);
	
		userInputService.InputChanged:Connect(function(input)
			if isDragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
				instanceUtils:Tween(indent, 0.06, {
					Value = math.clamp(input.Position.X - startOffset, 0, 260)
				});
			end
		end);
	end
	
	local function createNavbar(gui: ScreenGui): Instance
		local bar = instanceUtils:Create("Frame", {
			BackgroundTransparency = 1,
			Name = "navbar",
			Parent = gui,
			Size = UDim2.new(0, 0, 1, 0),
			ZIndex = 2
		}, {
			instanceUtils:Create("NumberValue", {
				Name = "indent",
				Value = 0
			}),
			instanceUtils:Create("TextButton", {
				BackgroundTransparency = 1,
				Name = "dragBar",
				Position = UDim2.new(1, 0, 0, 0),
				Size = UDim2.new(0, 20, 1, 0),
				Text = "",
				ZIndex = 2
			}, {
				instanceUtils:Create("Frame", {
					AnchorPoint = Vector2.new(0.5, 0.5),
					BackgroundTransparency = 0.8,
					BorderSizePixel = 0,
					Name = "indicator",
					Position = UDim2.new(0.5, 0, 0.5, 0),
					Size = UDim2.new(0, 2, 0, 80),
					ZIndex = 2
				}, {
					instanceUtils:Create("UICorner", {
						CornerRadius = UDim.new(1, 0),
						Name = "corner"
					})
				})
			}),
			instanceUtils:Create("Frame", { 
				BackgroundColor3 = Color3.fromHex("15151d"), 
				BorderSizePixel = 0, 
				ClipsDescendants = true, 
				Name = "main", 
				Size = UDim2.new(1, 0, 1, 0),
				ZIndex = 2
			}, {
				instanceUtils:Create("ImageLabel", { 
					BackgroundTransparency = 1, 
					BorderSizePixel = 0, 
					Image = "rbxassetid://11558559086", 
					Name = "codexIcon", 
					Position = UDim2.new(0, 20, 0, 30), 
					Size = UDim2.new(0, 36, 0, 36),
					ZIndex = 2
				}),
				instanceUtils:Create("TextLabel", { 
					BackgroundTransparency = 1, 
					FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
					FontSize = Enum.FontSize.Size18, 
					Name = "title", 
					Position = UDim2.new(0, 78, 0, 38), 
					Text = "Codex Modified", 
					TextColor3 = Color3.fromHex("ffffff"), 
					TextSize = 16, 
					TextTransparency = 1,
					TextXAlignment = Enum.TextXAlignment.Left, 
					TextYAlignment = Enum.TextYAlignment.Top,
					ZIndex = 2
				}),
				instanceUtils:Create("TextLabel", { 
					BackgroundTransparency = 1, 
					FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
					FontSize = Enum.FontSize.Size12, 
					Name = "poweredBy", 
					Position = UDim2.new(0, 78, 0, 59), 
					Text = "", 
					TextColor3 = Color3.fromHex("ffffff"), 
					TextSize = 12, 
					TextTransparency = 1, 
					TextXAlignment = Enum.TextXAlignment.Left, 
					TextYAlignment = Enum.TextYAlignment.Top,
					ZIndex = 2
				}),
				instanceUtils:Create("Frame", { 
					BackgroundTransparency = 1, 
					BorderSizePixel = 0, 
					Name = "container", 
					Size = UDim2.new(1, 0, 1, 0),
					ZIndex = 2
				}, {
					instanceUtils:Create("UIListLayout", { 
						HorizontalAlignment = Enum.HorizontalAlignment.Center, 
						Name = "list", 
						SortOrder = Enum.SortOrder.LayoutOrder, 
						VerticalAlignment = Enum.VerticalAlignment.Center
					})
				})
			})
		});
		
		bar.indent:GetPropertyChangedSignal("Value"):Connect(function()
			local value = bar.indent.Value;
			local percentage = (math.clamp(value, 76, 260) - 76) / 184;
	
			navbar.bar.Size = UDim2.new(0, value, 1, 0);
			navbar.bar.main.codexIcon.Size = UDim2.new(0, 36 + percentage * 12, 0, 36 + percentage * 12);
			navbar.bar.main.title.TextTransparency = 1 - percentage;
			navbar.bar.main.poweredBy.TextTransparency = 0.6 + (1 - percentage) * 0.4;
			for i, v in map do
				i.instance.text.TextTransparency = 0.2 + (1 - percentage) * 0.8;
			end
			navbar.fade.BackgroundTransparency = 1 - percentage;
		end);
	
		setupDragBar(bar.dragBar, bar.indent);
		
		return bar;
	end
	
	local function createFade(gui: ScreenGui): Instance
		return instanceUtils:Create("Frame", {
			BackgroundColor3 = Color3.new(),
			BackgroundTransparency = 1,
			Name = "fade",
			Parent = gui,
			Size = UDim2.new(1, 0, 1, 0),
			ZIndex = 0
		}, {
			instanceUtils:Create("UIGradient", {
				Name = "gradient",
				Transparency = NumberSequence.new({
					NumberSequenceKeypoint.new(0, 0.3),
					NumberSequenceKeypoint.new(0.2, 0.3),
					NumberSequenceKeypoint.new(1, 1)
				})
			})
		});
	end
	
	--[[ Module ]]--
	
	function navbar:Initialize(directory: Instance)
		self.bar = createNavbar(directory.gui);
		self.fade = createFade(directory.gui);
		self.background = directory.gui.background;
		
		for i, v in { "editor", "localScripts", "globalScripts", "exploitSettings" } do
			local module = framework[string.format("pages.%s.%s", v, v)];
			self:Add(module.title, module.icon, module:Initialize(), module.overwritePosition);
		end
	
		self:SetState(codexEnum.NavbarState.Full, true);
	end
	
	function navbar:Add(text: string, icon: string, designatedFrame: Frame, overwritePosition: UDim2?)
		local button = navbarButton.new(text, icon);
		map[button] = designatedFrame;
	
		button.instance.MouseButton1Click:Connect(function()
			self:Select(button);
		end);
		
		if self.state ~= "full" then
			button.instance.text.TextTransparency = 1;
		end
	
		if overwritePosition then
			button.instance.Position = overwritePosition;
			button.instance.Parent = self.bar.main;
		else
			button.instance.Parent = self.bar.main.container;
		end
		designatedFrame.Parent = self.bar.Parent.tabs;
	end
	
	function navbar:SetState(navbarState: number, ignoreTimeouts: boolean?)
		local indent, state = 0, "hidden";
		if navbarState == codexEnum.NavbarState.Partial then
			indent, state = 76, "partial";
		elseif navbarState == codexEnum.NavbarState.Full then
			indent, state = 260, "full";
		end
	
		if self.tween then
			self.tween:Cancel();
		end
		if self.nextInputCheck then
			self.nextInputCheck:Disconnect();
			pcall(task.cancel, self.timeoutDelay); -- if this is called from self.timeoutDelay itself, it will error. Cba to do a proper check. It'll be dead immediately after anyways
		end
	
		self.state = state;
		self.tween = instanceUtils:Tween(self.bar.indent, 0.25, {
			Value = indent;
		});
		
		if state ~= "hidden" and not ignoreTimeouts then
			self.timeoutDelay = task.delay(5, function()
				if self.state == state then
					self:SetState(codexEnum.NavbarState.Hidden);
				end
			end);
			
			self.nextInputCheck = userInputService.InputBegan:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
					if self.state ~= "hidden" and input.Position.X > self.bar.indent.Value then
						self:SetState(codexEnum.NavbarState.Hidden);
					end
				end
			end);
		end
	end
	
	function navbar:Select(button: TextButton)
		if selected ~= nil then
			selected:Highlight(false);
			instanceUtils:Tween(map[selected], 0.2, {
				Position = UDim2.new(1, 0, 1, 0)
			});
			if selected == button then
				selected = nil;
				instanceUtils:Tween(self.background, 0.2, {
					BackgroundTransparency = 1
				});
				return;
			end
		end
		selected = button;
		selected:Highlight(true);
		self:SetState(codexEnum.NavbarState.Partial);
		instanceUtils:Tween(self.background, 0.2, {
			BackgroundTransparency = 0.1
		});
		instanceUtils:Tween(map[button], 0.2, {
			Position = UDim2.new(0, 0, 1, 0)
		});
	end
	
	framework.pages.navbar.navbar = navbar;
end

do
	--[[ Variables ]]--
	
	local internalUtils = framework.dependencies.utils.internal;
	local userSettings = framework.data.userSettings;
	local cache;
	
	local httpService = game:GetService("HttpService");
	local teleportService = game:GetService("TeleportService");
	local userInputService = game:GetService("UserInputService");
	
	local player = game:GetService("Players").LocalPlayer;
	local char, hum, root;
	
	local connections = {};
	
	--[[ Functions ]]--
	
	local function getFlagFromLink(link: string)
		local value = cache;
		for i, v in string.split(link, ".") do
			value = value[v];
		end
		return value;
	end
	
	local function registerCharacter(character: Instance)
		char, hum, root = character, character:WaitForChild("Humanoid", 5), character:WaitForChild("HumanoidRootPart", 5);
		if hum and root then
			if cache.player.walkSpeed.enabled then
				hum.WalkSpeed = cache.player.walkSpeed.value;
			end
			if cache.player.jumpPower.enabled then
				hum.WalkSpeed = cache.player.jumpPower.value;
			end
			
			hum.Died:Connect(function()
				char, hum, root = nil, nil, nil;
			end);
		end
	end
	
	local function joinServer(searchPriority: string?, id: number?)
		local jobId = id;
		if jobId == nil then
			if searchPriority == "Best Ping" or searchPriority == "Random" then
				local servers = {};
				local res, cursor, count = nil, "", 0;
				repeat
					res = internalUtils:Request(string.format("https://games.roblox.com/v1/games/%d/servers/0?&excludeFullGames=true&cursor=%s", game.PlaceId, cursor));
					if res then
						for i, v in httpService:JSONDecode(res).data do
							if v.id ~= game.JobId then
								servers[#servers + 1] = v;
							end
						end
						cursor = res.nextPageCursor;
						count = count + 1;
					end
				until res == false or cursor == nil or count >= 10;
				if searchPriority == "Ping" then
					table.sort(servers, function(a, b)
						return a.ping < b.ping;
					end);
					jobId = servers[1] and servers[1].id;
				else
					jobId = servers[1] and servers[math.random(1, #servers)].id;
				end
			else
				local res = internalUtils:Request(string.format("https://games.roblox.com/v1/games/%d/servers/0?sortOrder=%d&excludeFullGames=true&limit=10", game.PlaceId, searchPriority == "Most Players" and 2 or 1));
				if res then
					for i, v in httpService:JSONDecode(res).data do
						if v.id ~= game.JobId then
							jobId = v.id;
							break;
						end
					end
				end
			end
		end
		if jobId then
			teleportService:TeleportToPlaceInstance(game.PlaceId, jobId);
		else
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Codex Android",
				Text = "No suitable servers found"
			});
		end
	end
	
	--[[ Setup ]]--
	
	player.CharacterAdded:Connect(registerCharacter);
	
	--[[ Module ]]--
	
	local map = {
		{
			title = "Executor",
			items = {
				{
					title = "Auto Execute",
					linkedSetting = "executor.autoExecute",
					optionType = "toggle",
					state = true
				},
				{
					title = "Auto Save Tabs",
					linkedSetting = "executor.autoSaveTabs",
					optionType = "toggle",
					state = false,
					callback = function(state)
						if state == false and isfile and isfile("codexTabs.json") then
							delfile("codexTabs.json");
						end
					end
				},
				{
					optionType = "separator"
				},
				{
					title = "Unlock FPS",
					linkedSetting = "executor.fps.unlocked",
					optionType = "toggle",
					state = false,
					callback = function(state)
						setfpscap(state and (cache.executor.fps.vSync and getfpscap() or cache.executor.fps.value) or 60);
					end
				},
				{
					title = "V-Sync",
					linkedSetting = "executor.fps.vSync",
					optionType = "toggle",
					state = false,
					callback = function(state)
						if cache.executor.fps.unlocked then
							setfpscap(state and getfpsmax() or cache.executor.fps.value);
						end
					end
				},
				{
					title = "FPS Value",
					linkedSetting = "executor.fps.value",
					optionType = "slider",
					min = 1,
					max = 999,
					float = 1,
					callback = function(value)
						if cache.executor.fps.unlocked and not cache.executor.fps.vSync then
							setfpscap(value);
						end
					end
				}
			}
		},
		{
			title = "Player",
			items = {
				{
					title = "WalkSpeed Enabled",
					linkedSetting = "player.walkSpeed.enabled",
					optionType = "toggle",
					state = false,
					callback = function(state)
						if hum then
							hum.WalkSpeed = state and cache.player.walkSpeed.value or 16;
						end
					end
				},
				{
					title = "WalkSpeed Value",
					linkedSetting = "player.walkSpeed.value",
					optionType = "slider",
					min = 16,
					max = 500,
					float = 1,
					callback = function(value)
						if hum and cache.player.walkSpeed.enabled then
							hum.WalkSpeed = value;
						end
					end
				},
				{
					title = "JumpPower Enabled",
					linkedSetting = "player.jumpPower.enabled",
					optionType = "toggle",
					state = false,
					callback = function(state)
						if hum then
							hum.JumpPower = state and cache.player.jumpPower.value or 16;
						end
					end
				},
				{
					title = "JumpPower Value",
					linkedSetting = "player.jumpPower.value",
					optionType = "slider",
					min = 50,
					max = 500,
					float = 1,
					callback = function(value)
						if hum and cache.player.jumpPower.enabled then
							hum.JumpPower = value;
						end
					end
				}
			}
		},
		{
			title = "Server Hop",
			items = {
				{
					title = "Server Priority",
					linkedSetting = "serverHop.priority",
					optionType = "dropdown",
					items = { "Most Players", "Least Players", "Best Ping", "Random" }
				},
				{
					title = "Server Hop",
					optionType = "button",
					callback = function()
						joinServer(cache.serverHop.priority);
					end
				},
				{
					title = "Rejoin Current Server",
					optionType = "button",
					callback = function()
						joinServer(nil, game.JobId);
					end
				}
			}
		}
	};
	
	--[[ Module ]]--
	
	local layoutMap = {
		map = map
	};
	
	function layoutMap:Initialize()
		cache = userSettings.cache;
	
		for i, v in self.map do
			for i2, v2 in v.items do
				if v2.optionType == "toggle" then
					v2.state = getFlagFromLink(v2.linkedSetting);
				elseif v2.optionType == "slider" then
					v2.value = getFlagFromLink(v2.linkedSetting);
				end
			end
		end
		
		if player.Character then
			task.spawn(registerCharacter, player.Character);
		end
	end
	
	framework.pages.exploitSettings.layoutMap = layoutMap;
end

do
	--[[ Variables ]]--
	
	local userSettings = framework.data.userSettings;
	local instanceUtils = framework.dependencies.utils.instance;
	local stringUtils = framework.dependencies.utils.string;
	
	--[[ Functions ]]--
	
	local function createToggle(title: string, parent: Instance): Instance
		return instanceUtils:Create("TextButton", { 
			AutoButtonColor = false, 
			BackgroundColor3 = Color3.fromHex("ffffff"), 
			BackgroundTransparency = 1, 
			BorderColor3 = Color3.fromHex("000000"), 
			BorderSizePixel = 0, 
			FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
			FontSize = Enum.FontSize.Size14, 
			Name = stringUtils:ConvertToCamelCase(title), 
			Parent = parent,
			Size = UDim2.new(1, 0, 0, 36), 
			Text = "", 
			TextColor3 = Color3.fromHex("000000"), 
			TextSize = 14
		}, {
			instanceUtils:Create("TextLabel", { 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size18, 
				Name = "text", 
				Size = UDim2.new(1, 0, 0, 36), 
				Text = title, 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 16, 
				TextWrap = true, 
				TextWrapped = true, 
				TextXAlignment = Enum.TextXAlignment.Left
			}),
			instanceUtils:Create("Frame", { 
				AnchorPoint = Vector2.new(1, 0.5), 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				Name = "indicator", 
				Position = UDim2.new(1, -2, 0.5, 0), 
				Size = UDim2.new(0, 42, 0, 24)
			}, {
				instanceUtils:Create("UICorner", { 
					CornerRadius = UDim.new(1, 0), 
					Name = "corner"
				}),
				instanceUtils:Create("UIStroke", { 
					ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
					Color = Color3.fromHex("3a3a4a"), 
					Name = "stroke", 
					Thickness = 2
				}),
				instanceUtils:Create("Frame", { 
					AnchorPoint = Vector2.new(0.5, 0.5), 
					BackgroundColor3 = Color3.fromHex("3a3a4a"), 
					BorderColor3 = Color3.fromHex("000000"), 
					BorderSizePixel = 0, 
					Name = "dot", 
					Position = UDim2.new(0.5, -9, 0.5, 0), 
					Size = UDim2.new(0, 18, 0, 18)
				}, {
					instanceUtils:Create("UICorner", { 
						CornerRadius = UDim.new(1, 0), 
						Name = "corner"
					})
				})
			})
		});
	end
	
	local function getDeterminingFactors(path: string)
		local dict, key = userSettings.cache, nil;
		for i, v in string.split(path, ".") do
			if key ~= nil then
				dict = dict[key];
			end
			key = v;
		end
		return dict, key;
	end
	
	--[[ Module ]]--
	
	local toggle = {};
	toggle.__index = toggle;
	
	function toggle.new(toggleData: {any}, parent: Instance)
		local newToggle = setmetatable({
			instance = createToggle(toggleData.title or "Unnamed Toggle", parent),
			state = toggleData.state or false,
			linkedSetting = toggleData.linkedSetting,
			callback = toggleData.callback
		}, toggle);
		
		local determiningDict, determiningKey = getDeterminingFactors(newToggle.linkedSetting);
		
		userSettings:GetPropertyChangedSignal(newToggle.linkedSetting):Connect(function(state: boolean)
			newToggle:Set(state);
		end);
	
		newToggle.instance.MouseButton1Click:Connect(function()
			determiningDict[determiningKey] = not determiningDict[determiningKey];
		end);
		
		if newToggle.state then
			newToggle:Set(true);
		end
		
		return newToggle;
	end
	
	function toggle:Set(state: boolean)
		instanceUtils:Tween(self.instance.indicator.dot, 0.2, {
			BackgroundColor3 = state and Color3.fromRGB(235, 69, 69) or Color3.fromHex("3a3a4a"),
			Position = UDim2.new(0.5, state and 9 or -9, 0.5, 0)
		});
		instanceUtils:Tween(self.instance.indicator.stroke, 0.2, {
			Color = state and Color3.fromRGB(235, 69, 69) or Color3.fromHex("3a3a4a")
		});
		if self.callback then
			self.callback(state);
		end
	end
	
	framework.pages.exploitSettings.optionTypes.toggle = toggle;
end

do
	--[[ Variables ]]--
	
	local userSettings = framework.data.userSettings;
	local instanceUtils = framework.dependencies.utils.instance;
	local stringUtils = framework.dependencies.utils.string;
	
	local userInputService = game:GetService("UserInputService");
	
	--[[ Functions ]]--
	
	local function createSlider(title: string, parent: Instance): Instance
		return instanceUtils:Create("Frame", { 
			BackgroundColor3 = Color3.fromHex("ffffff"), 
			BackgroundTransparency = 1, 
			BorderColor3 = Color3.fromHex("000000"), 
			BorderSizePixel = 0, 
			Name = stringUtils:ConvertToCamelCase(title), 
			Parent = parent, 
			Size = UDim2.new(1, 0, 0, 60)
		}, {
			instanceUtils:Create("TextLabel", { 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size18, 
				Name = "text", 
				Size = UDim2.new(1, 0, 0, 36), 
				Text = title, 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 16, 
				TextWrap = true, 
				TextWrapped = true, 
				TextXAlignment = Enum.TextXAlignment.Left
			}),
			instanceUtils:Create("TextBox", { 
				AnchorPoint = Vector2.new(1, 0), 
				AutomaticSize = Enum.AutomaticSize.X, 
				BackgroundColor3 = Color3.fromHex("3a3a4a"), 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "input", 
				PlaceholderColor3 = Color3.fromHex("b2b2b2"), 
				PlaceholderText = "...", 
				Position = UDim2.new(1, 0, 0, 0), 
				Size = UDim2.new(0, 0, 0, 36), 
				Text = "", 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 14
			}, {
				instanceUtils:Create("UICorner", { 
					CornerRadius = UDim.new(0, 6), 
					Name = "corner"
				}),
				instanceUtils:Create("UIPadding", { 
					Name = "padding", 
					PaddingLeft = UDim.new(0, 10), 
					PaddingRight = UDim.new(0, 10)
				})
			}),
			instanceUtils:Create("Frame", { 
				AnchorPoint = Vector2.new(0.5, 1), 
				BackgroundColor3 = Color3.fromHex("3a3a4a"), 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				Name = "bar", 
				Position = UDim2.new(0.5, 0, 1, -8), 
				Size = UDim2.new(1, -12, 0, 4)
			}, {
				instanceUtils:Create("UICorner", { 
					CornerRadius = UDim.new(1, 0), 
					Name = "corner"
				}),
				instanceUtils:Create("Frame", { 
					AnchorPoint = Vector2.new(0, 0.5), 
					BackgroundColor3 = Color3.fromHex("eb4545"), 
					BorderColor3 = Color3.fromHex("000000"), 
					BorderSizePixel = 0, 
					Name = "indicator", 
					Position = UDim2.new(0, 0, 0.5, 0), 
					Size = UDim2.new(0, 0, 1, 0)
				}, {
					instanceUtils:Create("UICorner", { 
						CornerRadius = UDim.new(1, 0), 
						Name = "corner"
					}),
					instanceUtils:Create("Frame", { 
						AnchorPoint = Vector2.new(0.5, 0.5), 
						BackgroundColor3 = Color3.fromHex("eb4545"), 
						BorderColor3 = Color3.fromHex("000000"), 
						BorderSizePixel = 0, 
						Name = "dot", 
						Position = UDim2.new(1, 0, 0.5, 0), 
						Size = UDim2.new(0, 12, 0, 12)
					}, {
						instanceUtils:Create("UICorner", { 
							CornerRadius = UDim.new(1, 0), 
							Name = "corner"
						})
					})
				})
			})
		});
	end
	
	local function getDeterminingFactors(path: string)
		local dict, key = userSettings.cache, nil;
		for i, v in string.split(path, ".") do
			if key ~= nil then
				dict = dict[key];
			end
			key = v;
		end
		return dict, key;
	end
	
	local function getRoundedValue(input: number, float: number): number
		local bracket = 1 / float;
		return math.round(input * bracket) / bracket;
	end
	
	--[[ Module ]]--
	
	local slider = {};
	slider.__index = slider;
	
	function slider.new(sliderData: {any}, parent: Instance)
		local newSlider = setmetatable({
			instance = createSlider(sliderData.title or "Unnamed Slider", parent),
			value = sliderData.value or sliderData.min,
			min = sliderData.min,
			max = sliderData.max,
			float = sliderData.float,
			linkedSetting = sliderData.linkedSetting,
			callback = sliderData.callback
		}, slider);
		
		local determiningDict, determiningKey = getDeterminingFactors(newSlider.linkedSetting);
		local isDragging = false;
		
		userSettings:GetPropertyChangedSignal(newSlider.linkedSetting):Connect(function(value: number)
			newSlider:Set(value);
		end);
		
		newSlider.instance.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				isDragging = true;
				local endedConn; endedConn = input.Changed:Connect(function()
					if input.UserInputState == Enum.UserInputState.End then
						endedConn:Disconnect();
						isDragging = false;
					end
				end);
			end
		end)
		
		userInputService.InputChanged:Connect(function(input)
			if isDragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
				local value = newSlider.min + ((newSlider.max - newSlider.min) * ((input.Position.X - newSlider.instance.bar.AbsolutePosition.X) / newSlider.instance.bar.AbsoluteSize.X));
				determiningDict[determiningKey] = math.clamp(getRoundedValue(value, newSlider.float), newSlider.min, newSlider.max);
			end
		end);
	
		newSlider.instance.input.FocusLost:Connect(function()
			local value = tonumber(newSlider.instance.input.Text);
			if value then
				determiningDict[determiningKey] = math.clamp(getRoundedValue(value, newSlider.float), newSlider.min, newSlider.max);
			end
		end);
	
		newSlider:Set(newSlider.value);
		
		return newSlider;
	end
	
	function slider:Set(value: number)
		instanceUtils:Tween(self.instance.bar.indicator, 0.2, {
			Size = UDim2.new((value - self.min) / (self.max - self.min), 0, 0.5, 0)
		});
		self.instance.input.Text = tostring(value);
		if self.callback then
			self.callback(value);
		end
	end
	
	framework.pages.exploitSettings.optionTypes.slider = slider;
end

do
	--[[ Variables ]]--
	
	local userSettings = framework.data.userSettings;
	local instanceUtils = framework.dependencies.utils.instance;
	local stringUtils = framework.dependencies.utils.string;
	local dropdownPopup = framework.popups.dropdown;
	local popups = framework.popups.popups;
	
	local textService = game:GetService("TextService");
	
	--[[ Functions ]]--
	
	local function createDropdown(title: string, default: string, parent: Instance): Instance
		return instanceUtils:Create("Frame", { 
			Active = true, 
			BackgroundColor3 = Color3.fromHex("ffffff"), 
			BackgroundTransparency = 1, 
			BorderColor3 = Color3.fromHex("000000"), 
			BorderSizePixel = 0, 
			Name = stringUtils:ConvertToCamelCase(title), 
			Parent = parent, 
			Selectable = true, 
			Size = UDim2.new(1, 0, 0, 36)
		}, {
			instanceUtils:Create("TextLabel", { 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size18, 
				Name = "text", 
				Size = UDim2.new(1, 0, 0, 36), 
				Text = title, 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 16, 
				TextWrap = true, 
				TextWrapped = true, 
				TextXAlignment = Enum.TextXAlignment.Left
			}),
			instanceUtils:Create("TextButton", { 
				Active = false, 
				AnchorPoint = Vector2.new(1, 0.5), 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				Name = "indicator", 
				Position = UDim2.new(1, -2, 0.5, 0), 
				Selectable = false, 
				Size = UDim2.new(0, 52 + textService:GetTextBoundsAsync(instanceUtils:Create("GetTextBoundsParams", {
					Font = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal),
					Text = default,
					Size = 14,
					Width = math.huge
				})).X, 0, 32), 
				Text = ""
			}, {
				instanceUtils:Create("UICorner", { 
					CornerRadius = UDim.new(0, 6), 
					Name = "corner"
				}),
				instanceUtils:Create("UIStroke", { 
					ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
					Color = Color3.fromHex("3a3a4a"), 
					Name = "stroke", 
					Thickness = 2
				}),
				instanceUtils:Create("TextLabel", { 
					AnchorPoint = Vector2.new(0, 0.5), 
					AutomaticSize = Enum.AutomaticSize.X, 
					BackgroundColor3 = Color3.fromHex("ffffff"), 
					BackgroundTransparency = 1, 
					BorderColor3 = Color3.fromHex("000000"), 
					BorderSizePixel = 0, 
					FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal), 
					FontSize = Enum.FontSize.Size14, 
					Name = "selected", 
					Position = UDim2.new(0, 8, 0.5, 0), 
					Size = UDim2.new(0, 0, 1, 0), 
					Text = default, 
					TextColor3 = Color3.fromHex("9fa4ba"), 
					TextSize = 14,  
					TextXAlignment = Enum.TextXAlignment.Left
				}),
				instanceUtils:Create("ImageLabel", { 
					AnchorPoint = Vector2.new(1, 0.5), 
					BackgroundColor3 = Color3.fromHex("ffffff"), 
					BackgroundTransparency = 1, 
					BorderColor3 = Color3.fromHex("000000"), 
					BorderSizePixel = 0, 
					Image = "rbxassetid://14967733915", 
					ImageColor3 = Color3.fromHex("9fa4ba"), 
					Name = "icon", 
					Position = UDim2.new(1, -8, 0.5, 0), 
					Size = UDim2.new(0, 24, 0, 24)
				})
			})
		});
	end
	
	local function getDeterminingFactors(path: string)
		local dict, key = userSettings.cache, nil;
		for i, v in string.split(path, ".") do
			if key ~= nil then
				dict = dict[key];
			end
			key = v;
		end
		return dict, key;
	end
	
	--[[ Module ]]--
	
	local dropdown = {};
	dropdown.__index = dropdown;
	
	function dropdown.new(dropData: {any}, parent: Instance)
		local newDropdown = setmetatable({
			instance = createDropdown(dropData.title or "Unnamed Dropdown", dropData.value, parent),
			title = dropData.title or "Unnamed Dropdown",
			items = dropData.items,
			value = dropData.value or dropData.items[1],
			linkedSetting = dropData.linkedSetting,
			callback = dropData.callback
		}, dropdown);
	
		local determiningDict, determiningKey = getDeterminingFactors(newDropdown.linkedSetting);
		
		userSettings:GetPropertyChangedSignal(newDropdown.linkedSetting):Connect(function(value: number)
			newDropdown:Set(value);
		end);
		
		newDropdown.instance.indicator.MouseButton1Click:Connect(function()
			if dropdownPopup.selectedDropdown == dropData.title then
				popups:Hide("dropdown");
			else
				popups:Show("dropdown", newDropdown, newDropdown.instance.indicator);
				newDropdown.selectionChangedConnection = dropdownPopup.onSelectionChanged:Connect(function(value: string)
					determiningDict[determiningKey] = value;
				end);
			end
		end);
		
		dropdownPopup.onDropdownChanged:Connect(function(value: string?)
			if value and value ~= dropData.title and newDropdown.selectionChangedConnection then
				newDropdown.selectionChangedConnection:Disconnect();
			end
		end);
	
		newDropdown:Set(newDropdown.value);
		
		return newDropdown;
	end
	
	function dropdown:Set(value: string)
		self.value = value;
		self.instance.indicator.selected.Text = value;
		self.instance.indicator.Size = UDim2.new(0, 52 + textService:GetTextBoundsAsync(instanceUtils:Create("GetTextBoundsParams", {
			Font = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal),
			Text = value,
			Size = 14,
			Width = math.huge
		})).X, 0, 32);
		if self.callback then
			self.callback(value);
		end
	end
	
	framework.pages.exploitSettings.optionTypes.dropdown = dropdown;
end

do
	--[[ Variables ]]--
	
	local instanceUtils = framework.dependencies.utils.instance;
	local stringUtils = framework.dependencies.utils.string;
	
	--[[ Functions ]]--
	
	local function createButton(title: string, parent: Instance): Instance
		return instanceUtils:Create("Frame", { 
			BackgroundColor3 = Color3.fromHex("ffffff"), 
			BackgroundTransparency = 1, 
			BorderColor3 = Color3.fromHex("000000"), 
			BorderSizePixel = 0, 
			Name = stringUtils:ConvertToCamelCase(title), 
			Parent = parent, 
			Size = UDim2.new(1, 0, 0, 36)
		}, {
			instanceUtils:Create("TextLabel", { 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size18, 
				Name = "text", 
				Size = UDim2.new(1, 0, 1, 0), 
				Text = title, 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 16, 
				TextWrap = true, 
				TextWrapped = true, 
				TextXAlignment = Enum.TextXAlignment.Left
			}),
			instanceUtils:Create("TextButton", { 
				AnchorPoint = Vector2.new(1, 0.5), 
				AutomaticSize = Enum.AutomaticSize.X, 
				BackgroundColor3 = Color3.fromHex("eb4545"), 
				BorderSizePixel = 0, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "click", 
				Position = UDim2.new(1, 0, 0.5, 0), 
				Size = UDim2.new(0, 0, 0, 32), 
				Text = "Click Here!", 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 14
			}, {
				instanceUtils:Create("UICorner", { 
					CornerRadius = UDim.new(0, 6), 
					Name = "corner"
				}),
				instanceUtils:Create("UIPadding", { 
					Name = "padding", 
					PaddingLeft = UDim.new(0, 10), 
					PaddingRight = UDim.new(0, 10)
				})
			})
		});
	end
	
	--[[ Module ]]--
	
	local button = {};
	button.__index = button;
	
	function button.new(buttonData: {any}, parent: Instance)
		local newButton = setmetatable({
			instance = createButton(buttonData.title or "Unnamed Button", parent),
			callback = buttonData.callback
		}, button);
	
		newButton.instance.click.MouseButton1Click:Connect(function()
			if newButton.callback then
				newButton.callback();
			end
		end);
		
		return newButton;
	end
	
	framework.pages.exploitSettings.optionTypes.button = button;
end

do
	--[[ Variables ]]--
	
	local instanceUtils = framework.dependencies.utils.instance;
	
	--[[ Functions ]]--
	
	local function createSeparator(parent: Instance): Instance
		return instanceUtils:Create("Frame", { 
			BackgroundColor3 = Color3.fromHex("ffffff"), 
			BackgroundTransparency = 1, 
			BorderColor3 = Color3.fromHex("000000"), 
			BorderSizePixel = 0, 
			Name = "separator", 
			Parent = parent, 
			Size = UDim2.new(1, 0, 0, 14)
		}, {
			instanceUtils:Create("Frame", { 
				AnchorPoint = Vector2.new(0.5, 0.5), 
				BackgroundColor3 = Color3.fromHex("3a3a4a"), 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				Name = "line", 
				Position = UDim2.new(0.5, 0, 0.5, 0), 
				Size = UDim2.new(1, 0, 0, 2)
			}, {
				instanceUtils:Create("UIGradient", { 
					Name = "gradient", 
					Transparency = NumberSequence.new({ 
						NumberSequenceKeypoint.new(0, 1), 
						NumberSequenceKeypoint.new(0.175, 0), 
						NumberSequenceKeypoint.new(0.825, 0), 
						NumberSequenceKeypoint.new(1, 1)
					})
				})
			})
		});
	end
	
	--[[ Module ]]--
	
	local separator = {};
	separator.__index = separator;
	
	function separator.new(separatorData: {any}, parent: Instance)
		return setmetatable({
			instance = createSeparator(parent)
		}, separator);
	end
	
	framework.pages.exploitSettings.optionTypes.separator = separator;
end

do
	--[[ Variables ]]--
	
	local textButton = framework.components.base.textButton;
	local instanceUtils = framework.dependencies.utils.instance;
	local stringUtils = framework.dependencies.utils.string;
	local layoutMap = framework.pages.exploitSettings.layoutMap;
	
	local map = {};
	
	--[[ Functions ]]--
	
	local function createUI(directory: Instance): Instance
		return instanceUtils:Create("Frame", { 
			AnchorPoint = Vector2.new(0, 1), 
			BackgroundColor3 = Color3.fromHex("15151d"), 
			BackgroundTransparency = 1, 
			BorderSizePixel = 0, 
			Name = "exploitSettings", 
			Parent = directory, 
			Position = UDim2.new(1, 0, 1, 0), 
			Size = UDim2.new(1, 0, 1, -36)
		}, {
			instanceUtils:Create("ScrollingFrame", { 
				AnchorPoint = Vector2.new(0.5, 0), 
				AutomaticCanvasSize = Enum.AutomaticSize.X, 
				BackgroundTransparency = 1, 
				BorderSizePixel = 0, 
				CanvasSize = UDim2.new(0, 0, 0, 0), 
				Name = "tabButtons", 
				Position = UDim2.new(0.5, 0, 0, 10), 
				ScrollBarImageColor3 = Color3.fromHex("515158"), 
				ScrollBarThickness = 4, 
				ScrollingDirection = Enum.ScrollingDirection.X, 
				Size = UDim2.new(1, -20, 0, 40)
			}, {
				instanceUtils:Create("UIListLayout", { 
					FillDirection = Enum.FillDirection.Horizontal, 
					Name = "list", 
					Padding = UDim.new(0, 6), 
					SortOrder = Enum.SortOrder.LayoutOrder
				})
			}),
			instanceUtils:Create("Folder", { 
				Name = "tabs"
			})
		});
	end
	
	local function createFrame(title: string, directory: Instance)
		return instanceUtils:Create("ScrollingFrame", { 
			AnchorPoint = Vector2.new(0.5, 1), 
			BackgroundTransparency = 1, 
			BorderSizePixel = 0, 
			CanvasSize = UDim2.new(0, 0, 0, 130), 
			Name = stringUtils:ConvertToCamelCase(title), 
			Parent = directory,
			Position = UDim2.new(0.5, 0, 1, 0), 
			ScrollBarThickness = 2, 
			Size = UDim2.new(1, -40, 1, -50),
			Visible = false
		}, {
			instanceUtils:Create("UIListLayout", { 
				Name = "list", 
				Padding = UDim.new(0, 5), 
				SortOrder = Enum.SortOrder.LayoutOrder
			})
		});
	end
	
	--[[ Module ]]--
	
	local exploitSettings = {
		title = "Exploit Settings",
		icon = "rbxassetid://11558196447",
		overwritePosition = UDim2.new(0, 0, 1, -66),
		selected = nil
	};
	
	function exploitSettings:Initialize(directory: Instance)
		self.base = createUI(directory);
		
		layoutMap:Initialize();
		for i, v in layoutMap.map do
			self:Add(v);
		end
		
		return self.base;
	end
	
	function exploitSettings:Add(tab: {any})
		local btn = textButton({
			BackgroundColor3 = Color3.fromRGB(58, 58, 74),
			Name = stringUtils:ConvertToCamelCase(tab.title),
			Text = tab.title,
			TextColor3 = Color3.fromRGB(159, 164, 186),
			Parent = self.base.tabButtons
		});
		
		local frame = createFrame(tab.title, self.base.tabs);
		
		btn.MouseButton1Click:Connect(function()
			self:Select(tab);
		end)
		
		map[tab] = {
			btn = btn,
			frame = frame
		};
		
		for i, v in tab.items do
			framework["pages.exploitSettings.optionTypes." .. v.optionType].new(v, frame);
		end
	
		if self.selected == nil then
			self:Select(tab);
		end
	end
	
	function exploitSettings:Select(tab: {any})
		if self.selected then
			if self.selected == tab then
				return;
			end
			local oldMap = map[self.selected];
			oldMap.frame.Visible = false;
			instanceUtils:Tween(oldMap.btn, 0.2, {
				BackgroundColor3 = Color3.fromRGB(58, 58, 74),
				TextColor3 = Color3.fromRGB(159, 164, 186)
			});
		end
		self.selected = tab;
		local newMap = map[tab];
		newMap.frame.Visible = true;
		instanceUtils:Tween(newMap.btn, 0.2, {
			BackgroundColor3 = Color3.fromRGB(235, 69, 69),
			TextColor3 = Color3.fromRGB(255, 255, 255)
		});
	end
	
	framework.pages.exploitSettings.exploitSettings = exploitSettings;
end

do
	--[[ Variables ]]--
	
	local sets = {
		keywords = {
			"local",
			"function",
			"if",
			"and",
			"or",
			"not",
			"then",
			"else",
			"elseif",
			"repeat",
			"until",
			"while",
			"do",
			"end",
			"for",
			"in",
			"break",
			"continue",
			"return"
		},
		constants = {
			"true",
			"false",
			"nil"
		},
		operators = {
			"and",
			"or",
			"not",
			"<",
			">",
			"<=",
			">=",
			"==",
			"~=",
			"+",
			"-",
			"*",
			"/",
			"%",
			"^",
			"#",
			".."
		},
		assignments = {
			"=",
			"+=",
			"-=",
			"*=",
			"/=",
			"%=",
			"^=",
			"..="
		},
		globals = getfenv()
	};
	
	--[[ Functions ]]--
	
	local function isDigit(character: string, index: number): boolean
		return (character >= "0" and character <= "9") or (index > 0 and (character == "e" or character == "_"));
	end
	
	local function isHexadecimalDigit(character: string): boolean
		return (character >= "0" and character <= "9") or (character >= "a" and character <= "f") or (character >= "A" and character <= "F");
	end
	
	local function isWord(character: string, isFirstCharacter: boolean): boolean
		return character == "_" or (character >= "a" and character <= "z") or (character >= "A" and character <= "Z") or (not isFirstCharacter and isDigit(character, 0));
	end
	
	local function isWhitespace(character: string): boolean
		return character == " " or character == "\t" or character == "\n";
	end
	
	--[[ Module ]]--
	
	local lexer = {};
	
	function lexer:_consume(): string
		self.position += 1;
		return string.sub(self.string, self.position, self.position);
	end
	
	function lexer:_peek(amount: number | nil): string
		local index = self.position + (amount or 1);
		return string.sub(self.string, index, index);
	end
	
	function lexer:_pushToken(tokenName: string, value: string)
		self.result[#self.result + 1] = {
			token = tokenName,
			value = value
		};
	end
	
	function lexer:_pushSymbol(text: string)
		local token = "symbol";
		if table.find(sets.operators, text) then
			token = "operator";
		elseif table.find(sets.assignments, text) then
			token = "assignment";
		end
		self:_pushToken(token, text);
	end
	
	function lexer:_readString(): string
		local delimiter, value = self:_peek(), self:_consume();
		while self.position <= self.length do
			local character = self:_consume();
			if character == "\\" then
				value ..= character .. self:_consume();
			else
				value ..= character;
				if character == delimiter then
					break;
				end
			end
		end
		return value;
	end
	
	function lexer:_readMultilineString(): string | nil
		local delimiter = self:_peek();
		if delimiter ~= "[" then
			return nil;
		end	
		local start = self.position;
		local value = self:_consume();
		local nestedEquals = 0;
		while self.position <= self.length and self:_peek() == "=" do
			value ..= self:_consume();
			nestedEquals += 1;
		end
		if self:_peek() ~= "[" then
			self.position = start;
			return nil;
		end
		value ..= self:_consume();
		while self.position <= self.length do
			local character = self:_consume();
			value ..= character;
			if character == "]" then
				local equalsCount = 0;
				while self.position <= self.length and self:_peek() == "=" do
					value ..= self:_consume();
					equalsCount += 1;
				end
				if self:_peek() == "]" and nestedEquals == equalsCount then
					value ..= self:_consume();
					break;
				end
			end
		end
		return value;
	end
	
	function lexer:_readComment(): string
		local value = self:_consume() .. self:_consume();
		if self:_peek() == "[" then
			local multilineString = self:_readMultilineString();
			if multilineString ~= nil then
				return value .. multilineString;
			end
		end
		while self.position <= self.length do
			local character = self:_peek();
			if character == "\n" then
				break;
			end
			value ..= self:_consume();
		end
		return value;
	end
	
	function lexer:_readWord(): string | nil
		local value = "";
		local isFirstCharacter = true;
		while self.position <= self.length do
			local character = self:_peek();
			if not isWord(character, isFirstCharacter) then
				break;
			end
			value ..= self:_consume();
			isFirstCharacter = false;
		end
		return value ~= "" and value or nil;
	end
	
	function lexer:_readWhitespace(): string | nil
		local value = "";
		while self.position <= self.length do
			local character = self:_peek();
			if not isWhitespace(character) then
				break;
			end
			value ..= self:_consume();
		end
		return value ~= "" and value or nil
	end
	
	function lexer:_readNumber(): string | nil
		local value = "";
		local isHexadecimal = false;
		local index = 0;
		while self.position <= self.length do
			local character = self:_peek();
			if character == "0" or character == "x" then
				isHexadecimal = true;
				value ..= self:_consume();
				index += 1;
				continue;
			elseif (isHexadecimal and not isHexadecimalDigit(character)) or not isDigit(character, index) then
				break;
			end
			value ..= self:_consume();
			index += 1;
		end
		return value ~= "" and value or nil;
	end
	
	function lexer:_getAssociatedToken(word: string): string
		if table.find(sets.keywords, word) then
			return "keyword";
		elseif table.find(sets.constants, word) then
			return "constant";
		elseif table.find(sets.operators, word) then
			return "operator";
		elseif sets.globals[word] then
			return "global";
		elseif self:_peek() == "(" then
			return "callback";
		end
		return "identifier";
	end
	
	function lexer:Parse(text: string): {any}
		self.string = text;
		self.position = 0;
		self.length = #text;
		self.result = {};
		
		local symbol = "";
	
		while self.position <= self.length do
			local character = self:_peek();
			if character == "[" then
				local multilineString = self:_readMultilineString();
				if multilineString ~= nil then
					self:_pushToken("string", multilineString);
					continue;
				end
			elseif character == "'" or character == "\"" then
				self:_pushToken("string", self:_readString());
				continue;
			elseif isDigit(character, 0) then
				local value = self:_readNumber();
				if value ~= nil then
					self:_pushToken("number", value);
					continue;
				end
			elseif isWord(character, true) then
				local value = self:_readWord();
				if value ~= nil then
					self:_pushToken(self:_getAssociatedToken(value), value);
					continue;
				end
			elseif character == "-" and self:_peek(2) == "-" then
				self:_pushToken("comment", self:_readComment());
				continue;
			elseif isWhitespace(character) then
				local value = self:_readWhitespace();
				if value ~= nil then
					self:_pushToken("whitespace", value);
					continue;
				end
			end
			
			symbol ..= self:_consume();
			if symbol ~= "" then
				self:_pushSymbol(symbol);
				symbol = "";
			else
				break;
			end
		end
	
		local result = {};
		for i, v in self.result do
			if string.match(v.value, "\n") then
				local lines = string.split(v.value, "\n");
				for i2, v2 in lines do
					if v2 ~= "" then
						result[#result + 1] = {
							token = v.token,
							value = v2
						};
					end
					if i2 < #lines then
						result[#result + 1] = {
							token = "whitespace",
							value = "\n"
						};
					end
				end
			else
				result[#result + 1] = v;
			end
		end
		
		return result;
	end
	
	framework.pages.editor.lexer = lexer;
end

do
	--[[ Variables ]]--
	
	local editorButton = framework.components.editorButton;
	local tabButton = framework.components.tabButton;
	local userSettings = framework.data.userSettings;
	local instanceUtils = framework.dependencies.utils.instance;
	local internalUtils = framework.dependencies.utils.internal;
	local lexer = framework.pages.editor.lexer;
	local tabSystem = framework.data.tabSystem;
	local popups = framework.popups.popups;
	
	local userInputService = game:GetService("UserInputService");
	local textService = game:GetService("TextService");
	
	local highlightAssociations = {
		string = "#69B397",
		number = "#91C087",
		constant = "#E0BA91",
		callback = "#81a6da",
		keyword = "#E18DB9",
		comment = "#606060",
		global = "#bd93db",
		operator = "#AAAAAA",
		assignment = "#AAAAAA",
		identifier = "#DCDCCC",
		symbol = "#DCDCCC"
	};
	local map = {};
	
	local base;
	
	--[[ Functions ]]--
	
	local function insertHighlight(position: Vector2, size: number, text: string, colour: string)
		instanceUtils:Create("TextLabel", {
			BackgroundTransparency = 1,
			FontFace = Font.new("rbxasset://fonts/families/RobotoMono.json", Enum.FontWeight.SemiBold, Enum.FontStyle.Normal),
			Name = text,
			Parent = base.contentContainer.inputBox,
			Position = position,
			Size = UDim2.new(0, size, 0, 12),
			Text = text,
			TextColor3 = Color3.fromHex(colour),
			TextSize = 16,
			ZIndex = 2
		});
	end
	
	local function handleLexResult(lexResult: {any}, addTruncateEllipsis: boolean)
		base.contentContainer.inputBox:ClearAllChildren();
		
		local x, y = 0, 0;
		local lastX = 0;
		for i, v in lexResult do
			lastX = textService:GetTextBoundsAsync(instanceUtils:Create("GetTextBoundsParams", {
				Font = Font.new("rbxasset://fonts/families/RobotoMono.json", Enum.FontWeight.SemiBold, Enum.FontStyle.Normal),
				Size = 16,
				Text = v.value,
				Width = math.huge
			})).X;
	
			if v.token == "whitespace" then
				if v.value == "\n" then
					y += 16;
					x = 0;
				end
			else
				local associatedColour = highlightAssociations[v.token];
				if associatedColour then
					insertHighlight(UDim2.new(0, x, 0, y), lastX, v.value, associatedColour);
				end
			end
	
			x += lastX;
			
			if i == #lexResult and addTruncateEllipsis then
				insertHighlight(UDim2.new(0, x, 0, y), lastX + 24, "...", highlightAssociations.identifier);
			end
		end
	end
	
	local function generateLineNumberString(text: string)
		local str = "";
		for i = 1, #string.split(text, "\n") do
			str ..= tostring(i) .. "\n";
		end
		return string.sub(str, 1, #str - 1);
	end
	
	local function createUI(directory: Instance): Instance
		return instanceUtils:Create("Frame", { 
			AnchorPoint = Vector2.new(0, 1), 
			BackgroundColor3 = Color3.fromHex("15151d"), 
			BackgroundTransparency = 1, 
			BorderSizePixel = 0, 
			Name = "editor", 
			Parent = directory, 
			Position = UDim2.new(1, 0, 1, 0), 
			Size = UDim2.new(1, 0, 1, -36)
		}, {
			instanceUtils:Create("ScrollingFrame", { 
				AnchorPoint = Vector2.new(0.5, 0), 
				AutomaticCanvasSize = Enum.AutomaticSize.X, 
				BackgroundTransparency = 1, 
				BorderSizePixel = 0, 
				CanvasSize = UDim2.new(0, 0, 0, 0), 
				Name = "tabButtons", 
				Position = UDim2.new(0.5, 0, 0, 10), 
				ScrollBarImageColor3 = Color3.fromHex("515158"), 
				ScrollBarThickness = 4, 
				ScrollingDirection = Enum.ScrollingDirection.X, 
				Size = UDim2.new(1, -20, 0, 40)
			}, {
				instanceUtils:Create("UIListLayout", { 
					FillDirection = Enum.FillDirection.Horizontal, 
					Name = "list", 
					Padding = UDim.new(0, 6), 
					SortOrder = Enum.SortOrder.LayoutOrder
				})
			}),
			instanceUtils:Create("ScrollingFrame", { 
				AutomaticCanvasSize = Enum.AutomaticSize.XY,
				BackgroundTransparency = 1, 
				BorderSizePixel = 0, 
				CanvasSize = UDim2.new(),
				HorizontalScrollBarInset = Enum.ScrollBarInset.ScrollBar,
				Name = "contentContainer", 
				Position = UDim2.new(0, 0, 0, 50), 
				ScrollBarThickness = 4,
				Size = UDim2.new(1, 0, 1, -50),
				VerticalScrollBarInset = Enum.ScrollBarInset.ScrollBar
			}, {
				instanceUtils:Create("TextLabel", { 
					AutomaticSize = Enum.AutomaticSize.Y,
					BackgroundTransparency = 1, 
					FontFace = Font.new("rbxasset://fonts/families/RobotoMono.json", Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), 
					FontSize = Enum.FontSize.Size18, 
					Name = "lineNumbers", 
					Size = UDim2.new(0, 30, 0, 0), 
					Text = "1", 
					TextColor3 = Color3.fromHex("ffffff"), 
					TextSize = 16, 
					TextTransparency = 0.7, 
					TextXAlignment = Enum.TextXAlignment.Right, 
					TextYAlignment = Enum.TextYAlignment.Top
				}),
				instanceUtils:Create("TextBox", { 
					BackgroundTransparency = 1, 
					ClearTextOnFocus = false, 
					CursorPosition = -1, 
					FontFace = Font.new("rbxasset://fonts/families/RobotoMono.json", Enum.FontWeight.SemiBold, Enum.FontStyle.Normal), 
					FontSize = Enum.FontSize.Size18, 
					MultiLine = true, 
					Name = "inputBox", 
					Position = UDim2.new(0, 40, 0, 0), 
					Size = UDim2.new(1, -40, 1, 0), 
					Text = "", 
					TextColor3 = Color3.fromHex("ffffff"), 
					TextSize = 16, 
					TextTransparency = 1, 
					TextTruncate = Enum.TextTruncate.AtEnd, 
					TextXAlignment = Enum.TextXAlignment.Left, 
					TextYAlignment = Enum.TextYAlignment.Top
				})
			}),
			instanceUtils:Create("Frame", { 
				AnchorPoint = Vector2.new(1, 1), 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				Name = "buttons", 
				Position = UDim2.new(1, -25, 1, -25), 
				Size = UDim2.new(1, -50, 0, 50)
			}, {
				instanceUtils:Create("UIListLayout", { 
					FillDirection = Enum.FillDirection.Horizontal, 
					HorizontalAlignment = Enum.HorizontalAlignment.Right, 
					Name = "list", 
					Padding = UDim.new(0, 6), 
					SortOrder = Enum.SortOrder.LayoutOrder
				})
			})
		});
	end
	
	--[[ Module ]]--
	
	local editor = {
		title = "Editor",
		icon = "rbxassetid://11558196842",
		selected = nil,
		text = ""
	};
	
	function editor:Initialize(directory: Instance)
		base = createUI();
		
		do
			local inputBox = base.contentContainer.inputBox;
			
			inputBox:GetPropertyChangedSignal("Text"):Connect(function()
				if userInputService:GetFocusedTextBox() == inputBox then
					self:SetText(inputBox.Text);
				end
			end);
			
			inputBox.FocusLost:Connect(function()
				if userSettings.cache.executor.autoSaveTabs then
					tabSystem:Save();
				end
			end);
		end
	
		do
			editorButton("New Tab", "rbxassetid://14808232261", {
				MouseButton1Click = function()
					tabSystem:Add("Script " .. tostring(tabSystem.accumulator + 1));
				end,
				Parent = base.buttons
			});
			
			editorButton("Save Current Tab", "rbxassetid://14883119324", {
				MouseButton1Click = function()
					popups:Show("saveCurrentTab", select(-1, tabSystem:Get(self.selected)));
				end,
				Parent = base.buttons
			});
			
			editorButton("Execute Clipboard", "rbxassetid://14808228630", {
				MouseButton1Click = function()
					if getclipboard then
						internalUtils:Execute(getclipboard());
					end
				end,
				Parent = base.buttons
			});
	
			editorButton("Clear", "rbxassetid://14808219001", {
				MouseButton1Click = function()
					self:SetText("");
				end,
				Parent = base.buttons
			});
	
			editorButton("Execute", "rbxassetid://14808225296", {
				BackgroundColor3 = Color3.fromRGB(235, 69, 69),
				MouseButton1Click = function()
					internalUtils:Execute(self.text);
				end,
				Parent = base.buttons
			}, Color3.new(1, 1, 1));
		end
		
		tabSystem.onTabCreated:Connect(function(tab)
			local btn = tabButton.new(tab);
			btn.instance.Parent = base.tabButtons;
			map[tab.index] = btn;
			if userSettings.cache.executor.autoSaveTabs then
				tabSystem:Save();
			end
		end);
		
		tabSystem.onTabRemoved:Connect(function(tab)
			map[tab.index]:Destroy();
			map[tab.index] = nil;
			if userSettings.cache.executor.autoSaveTabs then
				tabSystem:Save();
			end
		end);
	
		tabSystem.onTabSelected:Connect(function(tab)
			if self.selected then
				map[self.selected]:Highlight(false);
			end
			map[tab.index]:Highlight(true);
	
			self.selected = tab.index;
			self:SetText(tab.content);
		end);
		
		if #tabSystem.cache > 0 then
			for i, v in tabSystem.cache do
				tabSystem.onTabCreated:Fire(v);
			end
			tabSystem:Select(tabSystem.cache[1].index);
		else
			tabSystem:Add("Script 1");
		end
		
		return base;
	end
	
	function editor:SetText(text: string)
		local truncatedText = string.sub(text, 1, 16384);
		self.text = text;
		tabSystem:UpdateContent(self.selected, text);
		base.contentContainer.inputBox.Text = truncatedText;
		base.contentContainer.lineNumbers.Text = generateLineNumberString(truncatedText);
		handleLexResult(lexer:Parse(truncatedText), #truncatedText < #text);
	end
	
	framework.pages.editor.editor = editor;
end

do
	--[[ Variables ]]--
	
	local instanceUtils = framework.dependencies.utils.instance;
	local internalUtils = framework.dependencies.utils.internal;
	local stringUtils = framework.dependencies.utils.string;
	
	--[[ Module ]]--
	
	framework.pages.localScripts.builtInScript = (function(builtInScript: {any})
		local base = instanceUtils:Create("ImageLabel", { 
			BackgroundTransparency = 1, 
			BorderSizePixel = 0, 
			Image = builtInScript.icon, 
			ImageTransparency = 0.5, 
			Name = stringUtils:ConvertToCamelCase(builtInScript.title), 
			Size = UDim2.new(1, 0, 1, 0)
		}, {
			instanceUtils:Create("UICorner", { 
				CornerRadius = UDim.new(0, 5), 
				Name = "corner"
			}),
			instanceUtils:Create("TextButton", { 
				AnchorPoint = Vector2.new(1, 1), 
				AutoButtonColor = false, 
				BackgroundColor3 = Color3.fromHex("eb4545"), 
				BorderSizePixel = 0, 
				FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
				Name = "execute", 
				Position = UDim2.new(1, -10, 1, -10), 
				Size = UDim2.new(0, 40, 0, 40), 
				Text = ""
			}, {
				instanceUtils:Create("UICorner", { 
					Name = "corner"
				}),
				instanceUtils:Create("ImageLabel", { 
					AnchorPoint = Vector2.new(0.5, 0.5), 
					BackgroundTransparency = 1, 
					BorderSizePixel = 0, 
					Image = "rbxassetid://13075469149", 
					Name = "icon", 
					Position = UDim2.new(0.5, 0, 0.5, 0), 
					Size = UDim2.new(0, 18, 0, 18)
				})
			}),
			instanceUtils:Create("TextLabel", { 
				AnchorPoint = Vector2.new(0.5, 0), 
				AutomaticSize = Enum.AutomaticSize.Y, 
				BackgroundTransparency = 1, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size18, 
				Name = "title", 
				Position = UDim2.new(0.5, 0, 0, 14), 
				Size = UDim2.new(1, -28, 0, 0), 
				Text = builtInScript.title, 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 16, 
				TextTruncate = Enum.TextTruncate.AtEnd, 
				TextXAlignment = Enum.TextXAlignment.Left, 
				TextYAlignment = Enum.TextYAlignment.Top
			}),
			instanceUtils:Create("TextLabel", { 
				AnchorPoint = Vector2.new(0, 1), 
				BackgroundTransparency = 1, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "description", 
				Position = UDim2.new(0, 14, 1, -14), 
				Size = UDim2.new(1, -70, 1, -52), 
				Text = builtInScript.description, 
				TextColor3 = Color3.fromHex("c8c8c8"), 
				TextSize = 13, 
				TextTruncate = Enum.TextTruncate.AtEnd, 
				TextWrap = true, 
				TextWrapped = true, 
				TextXAlignment = Enum.TextXAlignment.Left, 
				TextYAlignment = Enum.TextYAlignment.Top
			})
		});
		
		base.execute.MouseButton1Click:Connect(function()
			internalUtils:Execute(builtInScript.content);
		end);
		
		return base;
	end);
end

do
	--[[ Variables ]]--
	
	local textButton = framework.components.base.textButton;
	local savedScripts = framework.data.savedScripts;
	local instanceUtils = framework.dependencies.utils.instance;
	local internalUtils = framework.dependencies.utils.internal;
	local stringUtils = framework.dependencies.utils.string;
	local tabSystem;
	
	--[[ Functions ]]--
	
	local function createSavedScript(scriptData: {any}): Instance
		return instanceUtils:Create("Frame", { 
			BackgroundColor3 = Color3.fromHex("202028"), 
			BorderColor3 = Color3.fromHex("000000"), 
			BorderSizePixel = 0, 
			Name = stringUtils:ConvertToCamelCase(scriptData.title), 
			Size = UDim2.new(1, -4, 0, 82)
		}, {
			instanceUtils:Create("UICorner", { 
				Name = "corner"
			}),
			instanceUtils:Create("TextLabel", { 
				AnchorPoint = Vector2.new(0.5, 1), 
				AutomaticSize = Enum.AutomaticSize.Y, 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size18, 
				Name = "text", 
				Position = UDim2.new(0.5, 0, 0.5, -2), 
				Size = UDim2.new(1, -32, 0, 0), 
				Text = scriptData.title, 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 16, 
				TextWrap = true, 
				TextWrapped = true, 
				TextXAlignment = Enum.TextXAlignment.Left
			}),
			instanceUtils:Create("Frame", { 
				AnchorPoint = Vector2.new(1, 1), 
				AutomaticSize = Enum.AutomaticSize.X, 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				Name = "buttons", 
				Position = UDim2.new(1, -8, 1, -8), 
				Size = UDim2.new(0, 0, 0, 30)
			}, {
				instanceUtils:Create("UIListLayout", { 
					FillDirection = Enum.FillDirection.Horizontal, 
					Name = "list", 
					Padding = UDim.new(0, 6), 
					SortOrder = Enum.SortOrder.LayoutOrder
				}),
				textButton({
					BackgroundColor3 = Color3.fromHex("3a3a4a"), 
					Name = "execute",
					Text = "Execute"
				}),
				textButton({
					BackgroundColor3 = Color3.fromHex("3a3a4a"), 
					Name = "loadToEditor",
					Text = "Load to Editor"
				}),
				textButton({
					BackgroundColor3 = Color3.fromHex("3a3a4a"), 
					Name = "delete",
					Text = "Delete"
				})
			}),
			instanceUtils:Create("TextButton", { 
				AnchorPoint = Vector2.new(1, 0), 
				AutoButtonColor = false, 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "autoExecute", 
				Position = UDim2.new(1, -8, 0, 8), 
				Size = UDim2.new(0, 160, 0, 28), 
				Text = "", 
				TextColor3 = Color3.fromHex("000000"), 
				TextSize = 14
			}, {
				instanceUtils:Create("TextLabel", { 
					BackgroundColor3 = Color3.fromHex("ffffff"), 
					BackgroundTransparency = 1, 
					BorderColor3 = Color3.fromHex("000000"), 
					BorderSizePixel = 0, 
					FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal), 
					FontSize = Enum.FontSize.Size18, 
					Name = "text", 
					Size = UDim2.new(1, 0, 1, 0), 
					Text = "Auto Execute", 
					TextColor3 = Color3.fromHex("9fa4ba"), 
					TextSize = 16, 
					TextWrap = true, 
					TextWrapped = true, 
					TextXAlignment = Enum.TextXAlignment.Left
				}),
				instanceUtils:Create("Frame", { 
					AnchorPoint = Vector2.new(1, 0.5), 
					BackgroundColor3 = Color3.fromHex("ffffff"), 
					BackgroundTransparency = 1, 
					BorderColor3 = Color3.fromHex("000000"), 
					BorderSizePixel = 0, 
					Name = "indicator", 
					Position = UDim2.new(1, -2, 0.5, 0), 
					Size = UDim2.new(0, 42, 0, 24)
				}, {
					instanceUtils:Create("UICorner", { 
						CornerRadius = UDim.new(1, 0), 
						Name = "corner"
					}),
					instanceUtils:Create("UIStroke", { 
						ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
						Color = scriptData.autoExecute and Color3.fromRGB(235, 69, 69) or Color3.fromRGB(58, 58, 74), 
						Name = "stroke", 
						Thickness = 2
					}),
					instanceUtils:Create("Frame", { 
						AnchorPoint = Vector2.new(0.5, 0.5), 
						BackgroundColor3 = scriptData.autoExecute and Color3.fromRGB(235, 69, 69) or Color3.fromRGB(58, 58, 74), 
						BorderColor3 = Color3.fromHex("000000"), 
						BorderSizePixel = 0, 
						Name = "dot", 
						Position = UDim2.new(0.5, scriptData.autoExecute and 9 or -9, 0.5, 0), 
						Size = UDim2.new(0, 18, 0, 18)
					}, {
						instanceUtils:Create("UICorner", { 
							CornerRadius = UDim.new(1, 0), 
							Name = "corner"
						})
					})
				})
			}),
			instanceUtils:Create("TextLabel", { 
				AnchorPoint = Vector2.new(0.5, 0), 
				AutomaticSize = Enum.AutomaticSize.Y, 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "description", 
				Position = UDim2.new(0.5, 0, 0.5, 2), 
				Size = UDim2.new(1, -32, 0, 0), 
				Text = scriptData.description, 
				TextColor3 = Color3.fromHex("9fa4ba"), 
				TextSize = 14, 
				TextWrap = true, 
				TextWrapped = true, 
				TextXAlignment = Enum.TextXAlignment.Left
			})
		});
	end
	
	--[[ Module ]]--
	
	local savedScript = {};
	savedScript.__index = savedScript;
	
	function savedScript.new(scriptData: {any})
		local newSavedScript = setmetatable({
			scriptData = scriptData,
			instance = createSavedScript(scriptData)
		}, savedScript);
		
		newSavedScript.instance.buttons.execute.MouseButton1Click:Connect(function()
			internalUtils:Execute(scriptData.content);
		end);
		
		newSavedScript.instance.buttons.loadToEditor.MouseButton1Click:Connect(function()
			if tabSystem == nil then
				tabSystem = framework.data.tabSystem;
			end
			tabSystem:Add(scriptData.title, scriptData.content);
		end);
		
		newSavedScript.instance.buttons.delete.MouseButton1Click:Connect(function()
			savedScripts:Remove(scriptData.index);
		end);
		
		if scriptData.autoExecute then
			newSavedScript:ToggleAutomaticExecution(true);
		end
		
		scriptData.onAutoExecuteToggled:Connect(function(state: boolean)
			newSavedScript:ToggleAutomaticExecution(state);
		end);
		
		newSavedScript.instance.autoExecute.MouseButton1Click:Connect(function()
			savedScripts:ToggleAutomaticExecution(scriptData.index, not scriptData.autoExecute);
		end);
		
		return newSavedScript;	
	end
	
	function savedScript:ToggleAutomaticExecution(state: boolean)
		instanceUtils:Tween(self.instance.autoExecute.indicator.dot, 0.2, {
			BackgroundColor3 = state and Color3.fromRGB(235, 69, 69) or Color3.fromHex("3a3a4a"),
			Position = UDim2.new(0.5, state and 9 or -9, 0.5, 0)
		});
		instanceUtils:Tween(self.instance.autoExecute.indicator.stroke, 0.2, {
			Color = state and Color3.fromRGB(235, 69, 69) or Color3.fromHex("3a3a4a")
		});
	end
	
	framework.pages.localScripts.savedScript = savedScript;
end

do
	--[[ Variables ]]--
	
	local savedScripts = framework.data.savedScripts;
	local textButton = framework.components.base.textButton;
	local instanceUtils = framework.dependencies.utils.instance;
	local builtInScript = framework.pages.localScripts.builtInScript;
	local savedScript = framework.pages.localScripts.savedScript;
	
	local map = {};
	local savedScriptMap = {};
	
	--[[ Functions ]]--
	
	local function createUI(directory: Instance): Instance
		return instanceUtils:Create("Frame", { 
			AnchorPoint = Vector2.new(0, 1), 
			BackgroundColor3 = Color3.fromHex("15151d"), 
			BackgroundTransparency = 1, 
			BorderSizePixel = 0, 
			Name = "localScripts", 
			Parent = directory, 
			Position = UDim2.new(1, 0, 1, 0), 
			Size = UDim2.new(1, 0, 1, -36)
		}, {
			instanceUtils:Create("ScrollingFrame", { 
				AnchorPoint = Vector2.new(0.5, 0), 
				AutomaticCanvasSize = Enum.AutomaticSize.X, 
				BackgroundTransparency = 1, 
				BorderSizePixel = 0, 
				CanvasSize = UDim2.new(0, 0, 0, 0), 
				Name = "tabButtons", 
				Position = UDim2.new(0.5, 0, 0, 10), 
				ScrollBarImageColor3 = Color3.fromHex("515158"), 
				ScrollBarThickness = 4, 
				ScrollingDirection = Enum.ScrollingDirection.X, 
				Size = UDim2.new(1, -20, 0, 40)
			}, {
				instanceUtils:Create("UIListLayout", { 
					FillDirection = Enum.FillDirection.Horizontal, 
					Name = "list", 
					Padding = UDim.new(0, 6), 
					SortOrder = Enum.SortOrder.LayoutOrder
				}),
				textButton({
					BackgroundColor3 = Color3.fromRGB(58, 58, 74), 
					Name = "builtInLibrary", 
					Text = "Built-in Library",
					TextColor3 = Color3.fromRGB(159, 164, 186)
				}),
				textButton({
					BackgroundColor3 = Color3.fromRGB(58, 58, 74), 
					Name = "savedScripts", 
					Text = "Saved Scripts",
					TextColor3 = Color3.fromRGB(159, 164, 186)
				})
			}),
			instanceUtils:Create("Folder", { 
				Name = "tabs"
			}, {
				instanceUtils:Create("ScrollingFrame", { 
					AnchorPoint = Vector2.new(0.5, 1), 
					AutomaticCanvasSize = Enum.AutomaticSize.Y, 
					BackgroundTransparency = 1, 
					BorderSizePixel = 0, 
					CanvasSize = UDim2.new(0, 0, 0, 0), 
					Name = "builtInLibrary", 
					Position = UDim2.new(0.5, 0, 1, 0), 
					ScrollBarImageColor3 = Color3.fromHex("191923"), 
					ScrollBarThickness = 4, 
					Size = UDim2.new(1, -28, 1, -60), 
					VerticalScrollBarInset = Enum.ScrollBarInset.ScrollBar
				}, {
					instanceUtils:Create("UIGridLayout", { 
						CellPadding = UDim2.new(0, 12, 0, 12), 
						CellSize = UDim2.new(0.333, -12, 0.3, 50), 
						HorizontalAlignment = Enum.HorizontalAlignment.Center, 
						Name = "grid", 
						SortOrder = Enum.SortOrder.LayoutOrder
					})
				}),
				instanceUtils:Create("ScrollingFrame", { 
					AnchorPoint = Vector2.new(0, 1), 
					AutomaticCanvasSize = Enum.AutomaticSize.Y, 
					BackgroundTransparency = 1, 
					BorderSizePixel = 0, 
					CanvasSize = UDim2.new(0, 0, 0, 0), 
					Name = "savedScripts", 
					Position = UDim2.new(0, 14, 1, 0), 
					ScrollBarImageColor3 = Color3.fromHex("191923"), 
					ScrollBarThickness = 4, 
					Size = UDim2.new(1, -24, 1, -60), 
					VerticalScrollBarInset = Enum.ScrollBarInset.ScrollBar, 
					Visible = false
				}, {
					instanceUtils:Create("UIListLayout", { 
						Name = "list", 
						Padding = UDim.new(0, 12), 
						SortOrder = Enum.SortOrder.LayoutOrder
					})
				})
			})
		});
	end
	
	--[[ Module ]]--
	
	local localScripts = {
		title = "Local Scripts",
		icon = "rbxassetid://11558196718",
		selected = nil
	};
	
	function localScripts:Initialize(directory: Instance)
		self.base = createUI(directory);
		
		map[self.base.tabButtons.builtInLibrary] = self.base.tabs.builtInLibrary;
		map[self.base.tabButtons.savedScripts] =self. base.tabs.savedScripts;
		
		for i, v in framework.data.builtInScripts do
			builtInScript(v).Parent = self.base.tabs.builtInLibrary;
		end
		
		for i, v in savedScripts.cache do
			self:AddSavedScript(v);
		end
		
		savedScripts.onScriptAdded:Connect(function(newScript)
			self:AddSavedScript(newScript);
		end);
		
		savedScripts.onScriptRemoved:Connect(function(oldScript)
			local oldSavedScript = savedScriptMap[oldScript];
			if oldSavedScript then
				oldSavedScript.instance:Destroy();
			end
		end);
	
		for i, v in map do
			i.MouseButton1Click:Connect(function()
				self:Select(i);
			end);
		end
	
		self:Select(self.base.tabButtons.builtInLibrary);
		return self.base;
	end
	
	function localScripts:AddSavedScript(newScript: {any})
		local newSavedScript = savedScript.new(newScript);
		savedScriptMap[newScript] = newSavedScript;
		newSavedScript.instance.Parent = self.base.tabs.savedScripts;
	end
	
	function localScripts:Select(button: TextButton)
		if self.selected then
			if self.selected == button then
				return;
			end
			map[self.selected].Visible = false;
			instanceUtils:Tween(self.selected, 0.2, {
				BackgroundColor3 = Color3.fromRGB(58, 58, 74),
				TextColor3 = Color3.fromRGB(159, 164, 186)
			});
		end
		self.selected = button;
		map[button].Visible = true;
		instanceUtils:Tween(self.selected, 0.2, {
			BackgroundColor3 = Color3.fromRGB(235, 69, 69),
			TextColor3 = Color3.fromRGB(255, 255, 255)
		});
	end
	
	framework.pages.localScripts.localScripts = localScripts;
end

do
	--[[ Variables ]]--
	
	local instanceUtils = framework.dependencies.utils.instance;
	local mathsUtils = framework.dependencies.utils.maths;
	local popups = framework.popups.popups;
	
	local textService = game:GetService("TextService");
	
	local tagOrder = { "verified", "isPatched", "isUniversal", "key" };
	local tags = {
		key = {
			title = "Key",
			colour = "#eab515"
		},
		isPatched = {
			title = "Patched",
			colour = "#eb4545"
		},
		isUniversal = {
			title = "Universal",
			colour = "#459beb"
		},
		verified = {
			title = "Verified",
			colour = "#15151d"
		}
	};
	
	--[[ Functions ]]--
	
	local function generateTag(data: {any}): Instance
		return instanceUtils:Create("TextLabel", { 
			AutomaticSize = Enum.AutomaticSize.X, 
			BackgroundColor3 = Color3.fromHex(data.colour), 
			FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal), 
			FontSize = Enum.FontSize.Size14, 
			Name = data.title, 
			Size = UDim2.new(0, 0, 0, 30), 
			Text = data.title, 
			TextColor3 = Color3.fromHex("ffffff"), 
			TextSize = 14
		}, {
			instanceUtils:Create("UICorner", { 
				CornerRadius = UDim.new(0, 5), 
				Name = "corner"
			}),
			instanceUtils:Create("UIPadding", { 
				Name = "padding", 
				PaddingLeft = UDim.new(0, 10), 
				PaddingRight = UDim.new(0, 10)
			})
		});
	end
	
	--[[ Module ]]--
	
	framework.pages.globalScripts.scriptResult = (function(scriptResult: {any}): Instance
		local viewCount = mathsUtils:FormatAsCount(scriptResult.views, 0.1);
		
		local base = instanceUtils:Create("ImageButton", { 
			Active = false, 
			AutoButtonColor = false, 
			BackgroundTransparency = 1, 
			BorderSizePixel = 0, 
			Image = string.format("https://assetgame.roblox.com/Game/Tools/ThumbnailAsset.ashx?aid=%d&fmt=png&wd=1920&ht=1080", scriptResult.isUniversal and 4483381587 or scriptResult.game.gameId), 
			ImageTransparency = 0.5, 
			Name = scriptResult.title, 
			Selectable = false, 
			Size = UDim2.new(1, 0, 1, 0)
		}, {
			instanceUtils:Create("UICorner", { 
				CornerRadius = UDim.new(0, 5), 
				Name = "corner"
			}),
			instanceUtils:Create("TextLabel", { 
				AnchorPoint = Vector2.new(0.5, 0), 
				AutomaticSize = Enum.AutomaticSize.Y, 
				BackgroundTransparency = 1, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size18, 
				Name = "title", 
				Position = UDim2.new(0.5, 0, 0, 48), 
				Size = UDim2.new(1, -28, 0, 0), 
				Text = scriptResult.title, 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 16, 
				TextTruncate = Enum.TextTruncate.AtEnd, 
				TextXAlignment = Enum.TextXAlignment.Left, 
				TextYAlignment = Enum.TextYAlignment.Top
			}),
			instanceUtils:Create("TextLabel", { 
				AnchorPoint = Vector2.new(0.5, 1), 
				BackgroundTransparency = 1, 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "description", 
				Position = UDim2.new(0.5, 0, 1, -14), 
				Size = UDim2.new(1, -28, 1, -86), 
				Text = scriptResult.description or "", 
				TextColor3 = Color3.fromHex("c8c8c8"), 
				TextSize = 13, 
				TextTruncate = Enum.TextTruncate.AtEnd, 
				TextWrap = true, 
				TextWrapped = true, 
				TextXAlignment = Enum.TextXAlignment.Left, 
				TextYAlignment = Enum.TextYAlignment.Top
			}),
			instanceUtils:Create("TextLabel", { 
				AnchorPoint = Vector2.new(1, 0), 
				AutomaticSize = Enum.AutomaticSize.X, 
				BackgroundColor3 = Color3.fromHex("3a3a4a"), 
				FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "views", 
				Position = UDim2.new(1, -10, 0, 10), 
				Size = UDim2.new(0, 0, 0, 30), 
				Text = viewCount, 
				TextColor3 = Color3.fromHex("ffffff"), 
				TextSize = 14
			}, {
				instanceUtils:Create("UICorner", { 
					CornerRadius = UDim.new(0, 5), 
					Name = "corner"
				}),
				instanceUtils:Create("UIPadding", { 
					Name = "padding", 
					PaddingLeft = UDim.new(0, 10), 
					PaddingRight = UDim.new(0, 10)
				})
			}),
			instanceUtils:Create("ScrollingFrame", { 
				Active = true, 
				AutomaticCanvasSize = Enum.AutomaticSize.X, 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				BorderColor3 = Color3.fromHex("000000"), 
				BorderSizePixel = 0, 
				CanvasSize = UDim2.new(0, 0, 0, 0), 
				Name = "tags", 
				Position = UDim2.new(0, 10, 0, 10), 
				ScrollBarImageColor3 = Color3.fromHex("000000"), 
				ScrollBarThickness = 0, 
				ScrollingDirection = Enum.ScrollingDirection.X, 
				Size = UDim2.new(1, -(textService:GetTextBoundsAsync(instanceUtils:Create("GetTextBoundsParams", {
					Font = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal),
					Text = viewCount,
					Size = 14,
					Width = math.huge
				})).X + 46), 0, 30)
			}, {
				instanceUtils:Create("UIListLayout", { 
					FillDirection = Enum.FillDirection.Horizontal, 
					Name = "list", 
					Padding = UDim.new(0, 6), 
					SortOrder = Enum.SortOrder.LayoutOrder
				})
			})
		});
	
		for i, v in tagOrder do
			if scriptResult[v] then
				generateTag(tags[v]).Parent = base.tags;
			end
		end
		
		base.MouseButton1Click:Connect(function()
			popups:Show("globalScriptSelection", scriptResult);
		end);
		
		return base;
	end);
end

do
	--[[ Variables ]]--
	
	local instanceUtils = framework.dependencies.utils.instance;
	local internalUtils = framework.dependencies.utils.internal;
	local scriptResult = framework.pages.globalScripts.scriptResult;
	
	local httpService = game:GetService("HttpService");
	
	local basis;
	
	--[[ Module ]]--
	
	local globalScripts = {
		title = "Global Scripts",
		icon = "rbxassetid://13449277995",
		isSearching = false
	};
	
	function globalScripts:Initialize(directory: Instance)
		basis = instanceUtils:Create("Frame", { 
			AnchorPoint = Vector2.new(0, 1), 
			BackgroundColor3 = Color3.fromHex("15151d"), 
			BackgroundTransparency = 1, 
			BorderSizePixel = 0, 
			Name = "globalScripts", 
			Position = UDim2.new(1, 0, 1, 0), 
			Size = UDim2.new(1, 0, 1, -36)
		}, {
			instanceUtils:Create("ScrollingFrame", { 
				AnchorPoint = Vector2.new(0.5, 1), 
				AutomaticCanvasSize = Enum.AutomaticSize.Y, 
				BackgroundTransparency = 1, 
				BorderSizePixel = 0, 
				CanvasSize = UDim2.new(0, 0, 0, 0), 
				Name = "container", 
				Position = UDim2.new(0.5, 0, 1, 0), 
				ScrollBarImageColor3 = Color3.fromHex("050507"), 
				ScrollBarThickness = 4, 
				ScrollingDirection = Enum.ScrollingDirection.Y, 
				Size = UDim2.new(1, -28, 1, -60), 
				VerticalScrollBarInset = Enum.ScrollBarInset.ScrollBar
			}, {
				instanceUtils:Create("UIGridLayout", { 
					CellPadding = UDim2.new(0, 12, 0, 12), 
					CellSize = UDim2.new(0.333, -12, 0.3, 50), 
					HorizontalAlignment = Enum.HorizontalAlignment.Center, 
					Name = "grid", 
					SortOrder = Enum.SortOrder.LayoutOrder
				})
			}),
			instanceUtils:Create("TextButton", {
				AnchorPoint = Vector2.new(0.5, 0),
				AutoButtonColor = false,
				BackgroundColor3 = Color3.fromRGB(21, 21, 29),
				MouseButton1Click = function()
					basis.searchBox.input:CaptureFocus();
				end,
				Name = "searchBox",
				Position = UDim2.new(0.5, 0, 0, 14),
				Size = UDim2.new(1, -28, 0, 36),
				Text = ""
			}, {
				instanceUtils:Create("TextBox", { 
					AnchorPoint = Vector2.new(0.5, 0.5), 
					BackgroundTransparency = 1, 
					FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal), 
					FontSize = Enum.FontSize.Size14, 
					Name = "input", 
					PlaceholderColor3 = Color3.fromHex("b2b2b2"), 
					PlaceholderText = "Search...", 
					Position = UDim2.new(0.5, 0, 0.5, 0), 
					Size = UDim2.new(1, 0, 1, 0), 
					Text = "", 
					TextColor3 = Color3.fromHex("ffffff"), 
					TextSize = 14, 
					TextTruncate = Enum.TextTruncate.AtEnd, 
					TextXAlignment = Enum.TextXAlignment.Left
				}),
				instanceUtils:Create("UICorner", { 
					CornerRadius = UDim.new(0, 5), 
					Name = "corner"
				}),
				instanceUtils:Create("UIPadding", { 
					Name = "padding", 
					PaddingLeft = UDim.new(0, 12), 
					PaddingRight = UDim.new(0, 12)
				})
			});
		});
		
		basis.searchBox.input.FocusLost:Connect(function()
			local contents = basis.searchBox.input.Text;
			if #contents > 0 then
				self:Search(contents);
			end
		end);
		
		do
			local res = internalUtils:Request("https://scriptblox.com/api/script/search?filters=free&q=Hub", "GET", {
				["Content-Type"] = "application/json"
			});
	
			if res then
				self:ParseResults(httpService:JSONDecode(res).result.scripts);
			end
		end
	
		return basis;
	end
	
	function globalScripts:Search(query: string)
		if self.isSearching or getgenv == nil then
			return;
		end
		self.isSearching = true;
		local res = internalUtils:Request("https://scriptblox.com/api/script/search?filters=free&q=" .. httpService:UrlEncode(query), "GET", {
			["Content-Type"] = "application/json"
		});
		if res then
			self:ParseResults(httpService:JSONDecode(res).result.scripts);
		end
		self.isSearching = false;
	end
	
	function globalScripts:ParseResults(res: {any})
		for i, v in basis.container:GetChildren() do
			if v:IsA("ImageButton") then
				v:Destroy();
			end
		end
		for i, v in res do
			scriptResult(v).Parent = basis.container;
		end
	end
	
	framework.pages.globalScripts.globalScripts = globalScripts;
end

do
	local signal = framework.dependencies.signal;
	local instanceUtils = framework.dependencies.utils.instance;
	
	framework.init = (function()
		local sig = signal.new();
		local directory = instanceUtils:DynamicParent(instanceUtils:Create("Folder", {
			Name = "Codex"
		}));
		local login;
	
		sig:Connect(function(basis)
			if login then
				login:Destroy();
			end
	
			basis.gui.Enabled = true;
			basis.popups.Enabled = true;
			
			framework.popups.popups:RegisterGUI(basis.popups);
			framework.pages.navbar.navbar:Initialize(directory);
			
			if getgenv then
				for i, v in { "runcode", "isuifile", "readuifile", "writeuifile"--[[, "iscustomasset", "writecustomasset"]] } do
					getgenv()[i] = nil;
				end
			end
		end);
	
		login = framework.pages.startup.startup(directory, sig);
	end);
end

framework.init();
end)
tab3.newButton("Vegax", "Executor script", function()
    -- Gui to Lua
-- Version: 3.2

-- Instances:

local VegaXAndroidUI = Instance.new("ScreenGui")
local SettingsWindow = Instance.new("Frame")
local WindowMainTitle = Instance.new("TextLabel")
local CloseB = Instance.new("ImageButton")
local ScrollingFrame = Instance.new("ScrollingFrame")
local UIListLayout = Instance.new("UIListLayout")
local S0 = Instance.new("Frame")
local Title = Instance.new("TextLabel")
local SubTitle = Instance.new("TextLabel")
local UICorner = Instance.new("UICorner")
local UIGradient = Instance.new("UIGradient")
local VegaXLogo = Instance.new("ImageLabel")
local S2 = Instance.new("Frame")
local Title_2 = Instance.new("TextLabel")
local SubTitle_2 = Instance.new("TextLabel")
local UICorner_2 = Instance.new("UICorner")
local SubmitFPS = Instance.new("ImageButton")
local UICorner_3 = Instance.new("UICorner")
local FPSTextBox = Instance.new("TextBox")
local UICorner_4 = Instance.new("UICorner")
local ResetFPS = Instance.new("ImageButton")
local UICorner_5 = Instance.new("UICorner")
local S3 = Instance.new("Frame")
local Title_3 = Instance.new("TextLabel")
local SubTitle_3 = Instance.new("TextLabel")
local UICorner_6 = Instance.new("UICorner")
local SubmitCode = Instance.new("ImageButton")
local UICorner_7 = Instance.new("UICorner")
local InjectCodeTextbox = Instance.new("TextBox")
local UICorner_8 = Instance.new("UICorner")
local ResetCode = Instance.new("ImageButton")
local UICorner_9 = Instance.new("UICorner")
local S1 = Instance.new("Frame")
local Title_4 = Instance.new("TextLabel")
local SubTitle_4 = Instance.new("TextLabel")
local UICorner_10 = Instance.new("UICorner")
local AccentColorPreview = Instance.new("Frame")
local UICorner_11 = Instance.new("UICorner")
local SubmitAccent = Instance.new("ImageButton")
local UICorner_12 = Instance.new("UICorner")
local AccentTextBox = Instance.new("TextBox")
local UICorner_13 = Instance.new("UICorner")
local S4 = Instance.new("Frame")
local Title_5 = Instance.new("TextLabel")
local SubTitle_5 = Instance.new("TextLabel")
local UICorner_14 = Instance.new("UICorner")
local ToggleBTN = Instance.new("TextButton")
local UICorner_15 = Instance.new("UICorner")
local ScriptHubWindow = Instance.new("Frame")
local WindowMainTitle_2 = Instance.new("TextLabel")
local CloseB_2 = Instance.new("ImageButton")
local ScrollingFrame_2 = Instance.new("ScrollingFrame")
local S1_2 = Instance.new("Frame")
local Execute = Instance.new("ImageButton")
local UICorner_16 = Instance.new("UICorner")
local UICorner_17 = Instance.new("UICorner")
local ImageLabel = Instance.new("ImageLabel")
local UICorner_18 = Instance.new("UICorner")
local SubTitle_6 = Instance.new("TextLabel")
local Title_6 = Instance.new("TextLabel")
local UIListLayout_2 = Instance.new("UIListLayout")
local SearchBox = Instance.new("TextBox")
local UICorner_19 = Instance.new("UICorner")
local SearchButton = Instance.new("ImageButton")
local WindowSubTitle = Instance.new("TextLabel")
local PaginationFrame = Instance.new("Frame")
local UICorner_20 = Instance.new("UICorner")
local LeftPage = Instance.new("ImageButton")
local RightPage = Instance.new("ImageButton")
local PageLabel = Instance.new("TextLabel")
local ExecutorWindow = Instance.new("Frame")
local ExecuteB = Instance.new("TextButton")
local UICorner_21 = Instance.new("UICorner")
local PasteandExecuteB = Instance.new("TextButton")
local UICorner_22 = Instance.new("UICorner")
local CloseB_3 = Instance.new("ImageButton")
local ScrollingBox = Instance.new("ScrollingFrame")
local TextBox = Instance.new("TextBox")
local Line = Instance.new("TextLabel")
local UICorner_23 = Instance.new("UICorner")
local TabbingSystem = Instance.new("Frame")
local ScriptPage = Instance.new("TextLabel")
local NextPage = Instance.new("TextButton")
local LastPage = Instance.new("TextButton")
local UICorner_24 = Instance.new("UICorner")
local EditTabName = Instance.new("ImageButton")
local EditTabBox = Instance.new("TextBox")
local WindowMainTitle_3 = Instance.new("TextLabel")
local ClearB = Instance.new("TextButton")
local UICorner_25 = Instance.new("UICorner")
local DevModeB = Instance.new("TextButton")
local UICorner_26 = Instance.new("UICorner")
local SidebarFrame = Instance.new("Frame")
local Banner = Instance.new("Frame")
local HappyGuy = Instance.new("ImageLabel")
local VegaXLogo_2 = Instance.new("ImageLabel")
local TitleLabel = Instance.new("TextLabel")
local ScrollingFrame_3 = Instance.new("ScrollingFrame")
local UIListLayout_3 = Instance.new("UIListLayout")
local UsernamePlace = Instance.new("Frame")
local Title_7 = Instance.new("TextLabel")
local Icon = Instance.new("Frame")
local UICorner_27 = Instance.new("UICorner")
local ProfileImage = Instance.new("ImageLabel")
local UICorner_28 = Instance.new("UICorner")
local Choice1 = Instance.new("Frame")
local Title_8 = Instance.new("TextLabel")
local C1EB = Instance.new("TextButton")
local UICorner_29 = Instance.new("UICorner")
local Icon_2 = Instance.new("Frame")
local UICorner_30 = Instance.new("UICorner")
local ImageLabel_2 = Instance.new("ImageLabel")
local Choice2 = Instance.new("Frame")
local Title_9 = Instance.new("TextLabel")
local C2EB = Instance.new("TextButton")
local UICorner_31 = Instance.new("UICorner")
local Icon_3 = Instance.new("Frame")
local UICorner_32 = Instance.new("UICorner")
local ImageLabel_3 = Instance.new("ImageLabel")
local Choice3 = Instance.new("Frame")
local Title_10 = Instance.new("TextLabel")
local C3EB = Instance.new("TextButton")
local UICorner_33 = Instance.new("UICorner")
local Icon_4 = Instance.new("Frame")
local UICorner_34 = Instance.new("UICorner")
local ImageLabel_4 = Instance.new("ImageLabel")
local VegaXMenuToggleFrame = Instance.new("Frame")
local UICorner_35 = Instance.new("UICorner")
local VegaXMenuToggle = Instance.new("TextButton")
local UICorner_36 = Instance.new("UICorner")
local ImageLabel_5 = Instance.new("ImageLabel")
local DragTouch = Instance.new("ImageLabel")
local KeySystem = Instance.new("Frame")
local MainTitle = Instance.new("TextLabel")
local CloseB_4 = Instance.new("ImageButton")
local TextBox_2 = Instance.new("TextBox")
local UICorner_37 = Instance.new("UICorner")
local ApproveKeyB = Instance.new("TextButton")
local UICorner_38 = Instance.new("UICorner")
local EULALabel = Instance.new("TextLabel")
local GetKeyB = Instance.new("TextButton")
local UICorner_39 = Instance.new("UICorner")
local JoinDiscordB = Instance.new("TextButton")
local UICorner_40 = Instance.new("UICorner")
local Banner_2 = Instance.new("Frame")
local VegaXLogo_3 = Instance.new("ImageLabel")
local UICorner_41 = Instance.new("UICorner")
local HappyGuy_2 = Instance.new("ImageLabel")
local TitleLabel_2 = Instance.new("TextLabel")
local ScrollingBox_2 = Instance.new("ScrollingFrame")
local TextBox_3 = Instance.new("TextBox")
local UICorner_42 = Instance.new("UICorner")
local SubTitle_7 = Instance.new("TextLabel")
local KSMenuToggleFrame = Instance.new("Frame")
local UICorner_43 = Instance.new("UICorner")
local VegaXKSToggle = Instance.new("TextButton")
local UICorner_44 = Instance.new("UICorner")
local ImageLabel_6 = Instance.new("ImageLabel")
local IntroFrame = Instance.new("Frame")
local BackgroundFrame = Instance.new("Frame")
local R1 = Instance.new("Frame")
local R2 = Instance.new("Frame")
local R3 = Instance.new("Frame")
local R4 = Instance.new("Frame")
local R5 = Instance.new("Frame")
local R6 = Instance.new("Frame")
local R7 = Instance.new("Frame")
local R8 = Instance.new("Frame")
local R9 = Instance.new("Frame")
local R10 = Instance.new("Frame")
local R11 = Instance.new("Frame")
local R12 = Instance.new("Frame")
local R13 = Instance.new("Frame")
local R14 = Instance.new("Frame")
local R15 = Instance.new("Frame")
local R16 = Instance.new("Frame")
local R17 = Instance.new("Frame")
local R18 = Instance.new("Frame")
local R19 = Instance.new("Frame")
local R20 = Instance.new("Frame")
local VegaXLogo_4 = Instance.new("ImageLabel")
local ScriptListWindow = Instance.new("Frame")
local WindowMainTitle_4 = Instance.new("TextLabel")
local CloseB_5 = Instance.new("ImageButton")
local ScriptListFrame = Instance.new("ScrollingFrame")
local S1_3 = Instance.new("Frame")
local Trash = Instance.new("ImageButton")
local UICorner_45 = Instance.new("UICorner")
local UICorner_46 = Instance.new("UICorner")
local Title_11 = Instance.new("TextLabel")
local Execute_2 = Instance.new("ImageButton")
local UICorner_47 = Instance.new("UICorner")
local UIListLayout_4 = Instance.new("UIListLayout")
local WindowSubTitle_2 = Instance.new("TextLabel")

--Properties:

VegaXAndroidUI.Name = "VegaXAndroidUI"
VegaXAndroidUI.Parent = gethui()

SettingsWindow.Name = "SettingsWindow"
SettingsWindow.Parent = VegaXAndroidUI
SettingsWindow.AnchorPoint = Vector2.new(0, 0.5)
SettingsWindow.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
SettingsWindow.BorderColor3 = Color3.fromRGB(30, 30, 30)
SettingsWindow.BorderSizePixel = 0
SettingsWindow.Position = UDim2.new(1, 200, 0.5, -20)
SettingsWindow.Size = UDim2.new(1, -200, 1, 40)

WindowMainTitle.Name = "WindowMainTitle"
WindowMainTitle.Parent = SettingsWindow
WindowMainTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
WindowMainTitle.BackgroundTransparency = 1.000
WindowMainTitle.BorderSizePixel = 0
WindowMainTitle.Position = UDim2.new(0, 7, 0, 52)
WindowMainTitle.Size = UDim2.new(0, 200, 0, 21)
WindowMainTitle.Font = Enum.Font.GothamBold
WindowMainTitle.Text = "Settings"
WindowMainTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
WindowMainTitle.TextSize = 18.000
WindowMainTitle.TextXAlignment = Enum.TextXAlignment.Left
WindowMainTitle.TextYAlignment = Enum.TextYAlignment.Top

CloseB.Name = "CloseB"
CloseB.Parent = SettingsWindow
CloseB.AnchorPoint = Vector2.new(1, 0)
CloseB.BackgroundTransparency = 1.000
CloseB.BorderSizePixel = 0
CloseB.LayoutOrder = 6
CloseB.Position = UDim2.new(1, -5, 0, 45)
CloseB.Size = UDim2.new(0, 25, 0, 25)
CloseB.ZIndex = 2
CloseB.Image = "rbxassetid://3926307971"
CloseB.ImageRectOffset = Vector2.new(884, 284)
CloseB.ImageRectSize = Vector2.new(36, 36)

ScrollingFrame.Parent = SettingsWindow
ScrollingFrame.Active = true
ScrollingFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ScrollingFrame.BackgroundTransparency = 1.000
ScrollingFrame.BorderSizePixel = 0
ScrollingFrame.Position = UDim2.new(0, 0, 0, 78)
ScrollingFrame.Size = UDim2.new(1, 0, 1, -78)
ScrollingFrame.CanvasSize = UDim2.new(0, 0, 1.5, 0)
ScrollingFrame.ScrollBarThickness = 0

UIListLayout.Parent = ScrollingFrame
UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Padding = UDim.new(0, 5)

S0.Name = "S0"
S0.Parent = ScrollingFrame
S0.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
S0.BorderSizePixel = 0
S0.Size = UDim2.new(1, -10, 0, 75)

Title.Name = "Title"
Title.Parent = S0
Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title.BackgroundTransparency = 1.000
Title.BorderSizePixel = 0
Title.Position = UDim2.new(0, 87, 0, 0)
Title.Size = UDim2.new(0.5, 0, 0.5, 0)
Title.Font = Enum.Font.GothamBold
Title.Text = "Vega X 4.0"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextSize = 19.000
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.TextYAlignment = Enum.TextYAlignment.Bottom

SubTitle.Name = "SubTitle"
SubTitle.Parent = S0
SubTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SubTitle.BackgroundTransparency = 1.000
SubTitle.BorderSizePixel = 0
SubTitle.Position = UDim2.new(0, 87, 0.5, 0)
SubTitle.Size = UDim2.new(0.5, 0, 0.5, 0)
SubTitle.Font = Enum.Font.Gotham
SubTitle.Text = "Developed by 1 F0 & Rudy"
SubTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
SubTitle.TextSize = 14.000
SubTitle.TextXAlignment = Enum.TextXAlignment.Left
SubTitle.TextYAlignment = Enum.TextYAlignment.Top

UICorner.CornerRadius = UDim.new(0, 10)
UICorner.Parent = S0

UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(195, 57, 57)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 85, 88))}
UIGradient.Parent = S0

VegaXLogo.Name = "VegaXLogo"
VegaXLogo.Parent = S0
VegaXLogo.AnchorPoint = Vector2.new(0, 0.5)
VegaXLogo.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
VegaXLogo.BackgroundTransparency = 1.000
VegaXLogo.BorderSizePixel = 0
VegaXLogo.Position = UDim2.new(0, 25, 0.5, 0)
VegaXLogo.Size = UDim2.new(0, 52, 0, 52)
VegaXLogo.ZIndex = 21
VegaXLogo.Image = "http://www.roblox.com/asset/?id=15861930865"

S2.Name = "S2"
S2.Parent = ScrollingFrame
S2.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
S2.BorderSizePixel = 0
S2.Size = UDim2.new(1, -10, 0, 75)

Title_2.Name = "Title"
Title_2.Parent = S2
Title_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title_2.BackgroundTransparency = 1.000
Title_2.BorderSizePixel = 0
Title_2.Position = UDim2.new(0, 25, 0, 0)
Title_2.Size = UDim2.new(0.5, 0, 0.5, 0)
Title_2.Font = Enum.Font.GothamBold
Title_2.Text = "FPS Limit"
Title_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Title_2.TextSize = 19.000
Title_2.TextXAlignment = Enum.TextXAlignment.Left
Title_2.TextYAlignment = Enum.TextYAlignment.Bottom

SubTitle_2.Name = "SubTitle"
SubTitle_2.Parent = S2
SubTitle_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SubTitle_2.BackgroundTransparency = 1.000
SubTitle_2.BorderSizePixel = 0
SubTitle_2.Position = UDim2.new(0, 25, 0.5, 0)
SubTitle_2.Size = UDim2.new(0.5, 0, 0.5, 0)
SubTitle_2.Font = Enum.Font.Gotham
SubTitle_2.Text = "Set Max FPS for the Game."
SubTitle_2.TextColor3 = Color3.fromRGB(255, 255, 255)
SubTitle_2.TextSize = 14.000
SubTitle_2.TextXAlignment = Enum.TextXAlignment.Left
SubTitle_2.TextYAlignment = Enum.TextYAlignment.Top

UICorner_2.CornerRadius = UDim.new(0, 10)
UICorner_2.Parent = S2

SubmitFPS.Name = "SubmitFPS"
SubmitFPS.Parent = S2
SubmitFPS.AnchorPoint = Vector2.new(1, 0.5)
SubmitFPS.BackgroundColor3 = Color3.fromRGB(67, 67, 67)
SubmitFPS.BorderSizePixel = 0
SubmitFPS.LayoutOrder = 10
SubmitFPS.Position = UDim2.new(1, -59, 0.5, 0)
SubmitFPS.Size = UDim2.new(0, 34, 0, 34)
SubmitFPS.ZIndex = 2
SubmitFPS.Image = "rbxassetid://3926305904"
SubmitFPS.ImageRectOffset = Vector2.new(124, 924)
SubmitFPS.ImageRectSize = Vector2.new(36, 36)

UICorner_3.CornerRadius = UDim.new(0, 10)
UICorner_3.Parent = SubmitFPS

FPSTextBox.Name = "FPSTextBox"
FPSTextBox.Parent = S2
FPSTextBox.AnchorPoint = Vector2.new(1, 0.5)
FPSTextBox.BackgroundColor3 = Color3.fromRGB(89, 89, 89)
FPSTextBox.BackgroundTransparency = 0.200
FPSTextBox.BorderSizePixel = 0
FPSTextBox.Position = UDim2.new(1, -98, 0.5, 0)
FPSTextBox.Size = UDim2.new(0.200000003, 0, 0, 34)
FPSTextBox.ClearTextOnFocus = false
FPSTextBox.Font = Enum.Font.Gotham
FPSTextBox.MultiLine = true
FPSTextBox.PlaceholderText = "Max FPS"
FPSTextBox.Text = ""
FPSTextBox.TextColor3 = Color3.fromRGB(220, 220, 220)
FPSTextBox.TextSize = 16.000

UICorner_4.CornerRadius = UDim.new(0, 10)
UICorner_4.Parent = FPSTextBox

ResetFPS.Name = "ResetFPS"
ResetFPS.Parent = S2
ResetFPS.AnchorPoint = Vector2.new(1, 0.5)
ResetFPS.BackgroundColor3 = Color3.fromRGB(67, 67, 67)
ResetFPS.BorderSizePixel = 0
ResetFPS.LayoutOrder = 10
ResetFPS.Position = UDim2.new(1, -20, 0.5, 0)
ResetFPS.Size = UDim2.new(0, 34, 0, 34)
ResetFPS.ZIndex = 2
ResetFPS.Image = "rbxassetid://3926307971"
ResetFPS.ImageRectOffset = Vector2.new(404, 84)
ResetFPS.ImageRectSize = Vector2.new(36, 36)

UICorner_5.CornerRadius = UDim.new(0, 10)
UICorner_5.Parent = ResetFPS

S3.Name = "S3"
S3.Parent = ScrollingFrame
S3.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
S3.BorderSizePixel = 0
S3.Size = UDim2.new(1, -10, 0, 75)

Title_3.Name = "Title"
Title_3.Parent = S3
Title_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title_3.BackgroundTransparency = 1.000
Title_3.BorderSizePixel = 0
Title_3.Position = UDim2.new(0, 25, 0, 0)
Title_3.Size = UDim2.new(0.5, 0, 0.5, 0)
Title_3.Font = Enum.Font.GothamBold
Title_3.Text = "Dev Mode"
Title_3.TextColor3 = Color3.fromRGB(255, 255, 255)
Title_3.TextSize = 19.000
Title_3.TextXAlignment = Enum.TextXAlignment.Left
Title_3.TextYAlignment = Enum.TextYAlignment.Bottom

SubTitle_3.Name = "SubTitle"
SubTitle_3.Parent = S3
SubTitle_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SubTitle_3.BackgroundTransparency = 1.000
SubTitle_3.BorderSizePixel = 0
SubTitle_3.Position = UDim2.new(0, 25, 0.5, 0)
SubTitle_3.Size = UDim2.new(0.5, 0, 0.5, 0)
SubTitle_3.Font = Enum.Font.Gotham
SubTitle_3.Text = "Allow Vega X Cross Platform Connection with the Windows UI."
SubTitle_3.TextColor3 = Color3.fromRGB(255, 255, 255)
SubTitle_3.TextSize = 14.000
SubTitle_3.TextXAlignment = Enum.TextXAlignment.Left
SubTitle_3.TextYAlignment = Enum.TextYAlignment.Top

UICorner_6.CornerRadius = UDim.new(0, 10)
UICorner_6.Parent = S3

SubmitCode.Name = "SubmitCode"
SubmitCode.Parent = S3
SubmitCode.AnchorPoint = Vector2.new(1, 0.5)
SubmitCode.BackgroundColor3 = Color3.fromRGB(67, 67, 67)
SubmitCode.BorderSizePixel = 0
SubmitCode.LayoutOrder = 10
SubmitCode.Position = UDim2.new(1, -59, 0.5, 0)
SubmitCode.Size = UDim2.new(0, 34, 0, 34)
SubmitCode.ZIndex = 2
SubmitCode.Image = "rbxassetid://3926305904"
SubmitCode.ImageRectOffset = Vector2.new(124, 924)
SubmitCode.ImageRectSize = Vector2.new(36, 36)

UICorner_7.CornerRadius = UDim.new(0, 10)
UICorner_7.Parent = SubmitCode

InjectCodeTextbox.Name = "InjectCodeTextbox"
InjectCodeTextbox.Parent = S3
InjectCodeTextbox.AnchorPoint = Vector2.new(1, 0.5)
InjectCodeTextbox.BackgroundColor3 = Color3.fromRGB(89, 89, 89)
InjectCodeTextbox.BackgroundTransparency = 0.200
InjectCodeTextbox.BorderSizePixel = 0
InjectCodeTextbox.Position = UDim2.new(1, -98, 0.5, 0)
InjectCodeTextbox.Size = UDim2.new(0.200000003, 0, 0, 34)
InjectCodeTextbox.ClearTextOnFocus = false
InjectCodeTextbox.Font = Enum.Font.Gotham
InjectCodeTextbox.MultiLine = true
InjectCodeTextbox.PlaceholderText = "Inject Code"
InjectCodeTextbox.Text = ""
InjectCodeTextbox.TextColor3 = Color3.fromRGB(220, 220, 220)
InjectCodeTextbox.TextSize = 16.000

UICorner_8.CornerRadius = UDim.new(0, 10)
UICorner_8.Parent = InjectCodeTextbox

ResetCode.Name = "ResetCode"
ResetCode.Parent = S3
ResetCode.AnchorPoint = Vector2.new(1, 0.5)
ResetCode.BackgroundColor3 = Color3.fromRGB(67, 67, 67)
ResetCode.BorderSizePixel = 0
ResetCode.LayoutOrder = 10
ResetCode.Position = UDim2.new(1, -20, 0.5, 0)
ResetCode.Size = UDim2.new(0, 34, 0, 34)
ResetCode.ZIndex = 2
ResetCode.Image = "rbxassetid://3926305904"
ResetCode.ImageRectOffset = Vector2.new(644, 724)
ResetCode.ImageRectSize = Vector2.new(36, 36)

UICorner_9.CornerRadius = UDim.new(0, 10)
UICorner_9.Parent = ResetCode

S1.Name = "S1"
S1.Parent = ScrollingFrame
S1.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
S1.BorderSizePixel = 0
S1.Size = UDim2.new(1, -10, 0, 75)

Title_4.Name = "Title"
Title_4.Parent = S1
Title_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title_4.BackgroundTransparency = 1.000
Title_4.BorderSizePixel = 0
Title_4.Position = UDim2.new(0, 25, 0, 0)
Title_4.Size = UDim2.new(0.5, 0, 0.5, 0)
Title_4.Font = Enum.Font.GothamBold
Title_4.Text = "Change UI Accent Color"
Title_4.TextColor3 = Color3.fromRGB(255, 255, 255)
Title_4.TextSize = 19.000
Title_4.TextXAlignment = Enum.TextXAlignment.Left
Title_4.TextYAlignment = Enum.TextYAlignment.Bottom

SubTitle_4.Name = "SubTitle"
SubTitle_4.Parent = S1
SubTitle_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SubTitle_4.BackgroundTransparency = 1.000
SubTitle_4.BorderSizePixel = 0
SubTitle_4.Position = UDim2.new(0, 25, 0.5, 0)
SubTitle_4.Size = UDim2.new(0.5, 0, 0.5, 0)
SubTitle_4.Font = Enum.Font.Gotham
SubTitle_4.Text = "Change Vega X  Button Colors."
SubTitle_4.TextColor3 = Color3.fromRGB(255, 255, 255)
SubTitle_4.TextSize = 14.000
SubTitle_4.TextXAlignment = Enum.TextXAlignment.Left
SubTitle_4.TextYAlignment = Enum.TextYAlignment.Top

UICorner_10.CornerRadius = UDim.new(0, 10)
UICorner_10.Parent = S1

AccentColorPreview.Name = "AccentColorPreview"
AccentColorPreview.Parent = S1
AccentColorPreview.AnchorPoint = Vector2.new(1, 0.5)
AccentColorPreview.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
AccentColorPreview.Position = UDim2.new(1, -20, 0.5, 0)
AccentColorPreview.Size = UDim2.new(0, 34, 0, 34)

UICorner_11.CornerRadius = UDim.new(0, 10)
UICorner_11.Parent = AccentColorPreview

SubmitAccent.Name = "SubmitAccent"
SubmitAccent.Parent = S1
SubmitAccent.AnchorPoint = Vector2.new(1, 0.5)
SubmitAccent.BackgroundColor3 = Color3.fromRGB(67, 67, 67)
SubmitAccent.BorderSizePixel = 0
SubmitAccent.LayoutOrder = 10
SubmitAccent.Position = UDim2.new(1, -59, 0.5, 0)
SubmitAccent.Size = UDim2.new(0, 34, 0, 34)
SubmitAccent.ZIndex = 2
SubmitAccent.Image = "rbxassetid://3926305904"
SubmitAccent.ImageRectOffset = Vector2.new(124, 924)
SubmitAccent.ImageRectSize = Vector2.new(36, 36)

UICorner_12.CornerRadius = UDim.new(0, 10)
UICorner_12.Parent = SubmitAccent

AccentTextBox.Name = "AccentTextBox"
AccentTextBox.Parent = S1
AccentTextBox.AnchorPoint = Vector2.new(1, 0.5)
AccentTextBox.BackgroundColor3 = Color3.fromRGB(89, 89, 89)
AccentTextBox.BackgroundTransparency = 0.200
AccentTextBox.BorderSizePixel = 0
AccentTextBox.Position = UDim2.new(1, -98, 0.5, 0)
AccentTextBox.Size = UDim2.new(0.200000003, 0, 0, 34)
AccentTextBox.ClearTextOnFocus = false
AccentTextBox.Font = Enum.Font.Gotham
AccentTextBox.MultiLine = true
AccentTextBox.PlaceholderText = "Hex Value"
AccentTextBox.Text = ""
AccentTextBox.TextColor3 = Color3.fromRGB(220, 220, 220)
AccentTextBox.TextSize = 16.000

UICorner_13.CornerRadius = UDim.new(0, 10)
UICorner_13.Parent = AccentTextBox

S4.Name = "S4"
S4.Parent = ScrollingFrame
S4.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
S4.BorderSizePixel = 0
S4.Size = UDim2.new(1, -10, 0, 75)
S4.Visible = false

Title_5.Name = "Title"
Title_5.Parent = S4
Title_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title_5.BackgroundTransparency = 1.000
Title_5.BorderSizePixel = 0
Title_5.Position = UDim2.new(0, 25, 0, 0)
Title_5.Size = UDim2.new(0.5, 0, 0.5, 0)
Title_5.Font = Enum.Font.GothamBold
Title_5.Text = "ç¦ç”¨ä»‹ç»åŠ¨ç”»"
Title_5.TextColor3 = Color3.fromRGB(255, 255, 255)
Title_5.TextSize = 19.000
Title_5.TextXAlignment = Enum.TextXAlignment.Left
Title_5.TextYAlignment = Enum.TextYAlignment.Bottom

SubTitle_5.Name = "SubTitle"
SubTitle_5.Parent = S4
SubTitle_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SubTitle_5.BackgroundTransparency = 1.000
SubTitle_5.BorderSizePixel = 0
SubTitle_5.Position = UDim2.new(0, 25, 0.5, 0)
SubTitle_5.Size = UDim2.new(0.5, 0, 0.5, 0)
SubTitle_5.Font = Enum.Font.Gotham
SubTitle_5.Text = "ç«‹å³è·³è½¬åˆ° Vega X"
SubTitle_5.TextColor3 = Color3.fromRGB(255, 255, 255)
SubTitle_5.TextSize = 14.000
SubTitle_5.TextXAlignment = Enum.TextXAlignment.Left
SubTitle_5.TextYAlignment = Enum.TextYAlignment.Top

UICorner_14.CornerRadius = UDim.new(0, 10)
UICorner_14.Parent = S4

ToggleBTN.Name = "ToggleBTN"
ToggleBTN.Parent = S4
ToggleBTN.AnchorPoint = Vector2.new(1, 0.5)
ToggleBTN.BackgroundColor3 = Color3.fromRGB(195, 57, 57)
ToggleBTN.BorderColor3 = Color3.fromRGB(0, 0, 0)
ToggleBTN.BorderSizePixel = 0
ToggleBTN.Position = UDim2.new(1, -20, 0.5, 0)
ToggleBTN.Size = UDim2.new(0, 34, 0, 34)
ToggleBTN.Font = Enum.Font.SourceSans
ToggleBTN.Text = ""
ToggleBTN.TextColor3 = Color3.fromRGB(0, 0, 0)
ToggleBTN.TextSize = 14.000

UICorner_15.CornerRadius = UDim.new(0, 10)
UICorner_15.Parent = ToggleBTN

ScriptHubWindow.Name = "ScriptHubWindow"
ScriptHubWindow.Parent = VegaXAndroidUI
ScriptHubWindow.AnchorPoint = Vector2.new(0, 0.5)
ScriptHubWindow.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
ScriptHubWindow.BorderColor3 = Color3.fromRGB(30, 30, 30)
ScriptHubWindow.BorderSizePixel = 0
ScriptHubWindow.Position = UDim2.new(1, 200, 0.5, -20)
ScriptHubWindow.Size = UDim2.new(1, -200, 1, 40)

WindowMainTitle_2.Name = "WindowMainTitle"
WindowMainTitle_2.Parent = ScriptHubWindow
WindowMainTitle_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
WindowMainTitle_2.BackgroundTransparency = 1.000
WindowMainTitle_2.BorderSizePixel = 0
WindowMainTitle_2.Position = UDim2.new(0, 7, 0, 52)
WindowMainTitle_2.Size = UDim2.new(0, 309, 0, 21)
WindowMainTitle_2.Font = Enum.Font.GothamBold
WindowMainTitle_2.Text = "Script Hub"
WindowMainTitle_2.TextColor3 = Color3.fromRGB(255, 255, 255)
WindowMainTitle_2.TextSize = 18.000
WindowMainTitle_2.TextXAlignment = Enum.TextXAlignment.Left
WindowMainTitle_2.TextYAlignment = Enum.TextYAlignment.Top

CloseB_2.Name = "CloseB"
CloseB_2.Parent = ScriptHubWindow
CloseB_2.AnchorPoint = Vector2.new(1, 0)
CloseB_2.BackgroundTransparency = 1.000
CloseB_2.BorderSizePixel = 0
CloseB_2.LayoutOrder = 6
CloseB_2.Position = UDim2.new(1, -5, 0, 45)
CloseB_2.Size = UDim2.new(0, 25, 0, 25)
CloseB_2.ZIndex = 2
CloseB_2.Image = "rbxassetid://3926307971"
CloseB_2.ImageRectOffset = Vector2.new(884, 284)
CloseB_2.ImageRectSize = Vector2.new(36, 36)

ScrollingFrame_2.Parent = ScriptHubWindow
ScrollingFrame_2.Active = true
ScrollingFrame_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ScrollingFrame_2.BackgroundTransparency = 1.000
ScrollingFrame_2.BorderSizePixel = 0
ScrollingFrame_2.Position = UDim2.new(0, 0, 0, 136)
ScrollingFrame_2.Size = UDim2.new(1, 0, 1, -126)
ScrollingFrame_2.CanvasSize = UDim2.new(0, 0, 1, 0)
ScrollingFrame_2.ScrollBarThickness = 0

S1_2.Name = "S1"
S1_2.Parent = ScrollingFrame_2
S1_2.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
S1_2.BorderSizePixel = 0
S1_2.Size = UDim2.new(1, -10, 0, 80)
S1_2.Visible = false

Execute.Name = "Execute"
Execute.Parent = S1_2
Execute.AnchorPoint = Vector2.new(1, 0.5)
Execute.BackgroundColor3 = Color3.fromRGB(67, 67, 67)
Execute.BackgroundTransparency = 0.400
Execute.BorderSizePixel = 0
Execute.LayoutOrder = 10
Execute.Position = UDim2.new(1, -23, 0.5, 0)
Execute.Size = UDim2.new(0, 34, 0, 34)
Execute.ZIndex = 2
Execute.Image = "rbxassetid://3926307971"
Execute.ImageRectOffset = Vector2.new(764, 244)
Execute.ImageRectSize = Vector2.new(36, 36)

UICorner_16.CornerRadius = UDim.new(0, 10)
UICorner_16.Parent = Execute

UICorner_17.CornerRadius = UDim.new(0, 10)
UICorner_17.Parent = S1_2

ImageLabel.Parent = S1_2
ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel.BackgroundTransparency = 1.000
ImageLabel.BorderSizePixel = 0
ImageLabel.Size = UDim2.new(1, 0, 1, 0)
ImageLabel.Image = "http://www.roblox.com/asset/?id=11716682263"
ImageLabel.ScaleType = Enum.ScaleType.Crop

UICorner_18.CornerRadius = UDim.new(0, 10)
UICorner_18.Parent = ImageLabel

SubTitle_6.Name = "SubTitle"
SubTitle_6.Parent = S1_2
SubTitle_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SubTitle_6.BackgroundTransparency = 1.000
SubTitle_6.BorderSizePixel = 0
SubTitle_6.Position = UDim2.new(0, 25, 0.5, 0)
SubTitle_6.Size = UDim2.new(1, -93, 0.5, 0)
SubTitle_6.Font = Enum.Font.Gotham
SubTitle_6.Text = "MM2 Aim Trainer ðŸŽ¯ "
SubTitle_6.TextColor3 = Color3.fromRGB(255, 255, 255)
SubTitle_6.TextSize = 14.000
SubTitle_6.TextXAlignment = Enum.TextXAlignment.Left
SubTitle_6.TextYAlignment = Enum.TextYAlignment.Top

Title_6.Name = "Title"
Title_6.Parent = S1_2
Title_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title_6.BackgroundTransparency = 1.000
Title_6.BorderSizePixel = 0
Title_6.Position = UDim2.new(0, 25, 0, 0)
Title_6.Size = UDim2.new(1, -93, 0.5, 0)
Title_6.Font = Enum.Font.GothamBold
Title_6.Text = "Silent"
Title_6.TextColor3 = Color3.fromRGB(255, 255, 255)
Title_6.TextSize = 19.000
Title_6.TextXAlignment = Enum.TextXAlignment.Left
Title_6.TextYAlignment = Enum.TextYAlignment.Bottom

UIListLayout_2.Parent = ScrollingFrame_2
UIListLayout_2.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_2.Padding = UDim.new(0, 5)

SearchBox.Name = "SearchBox"
SearchBox.Parent = ScriptHubWindow
SearchBox.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
SearchBox.BorderSizePixel = 0
SearchBox.Position = UDim2.new(0, 5, 0, 91)
SearchBox.Size = UDim2.new(1, -115, 0, 40)
SearchBox.Font = Enum.Font.Gotham
SearchBox.PlaceholderText = "Search for a Script Here"
SearchBox.Text = ""
SearchBox.TextColor3 = Color3.fromRGB(220, 220, 220)
SearchBox.TextSize = 14.000
SearchBox.TextXAlignment = Enum.TextXAlignment.Left

UICorner_19.CornerRadius = UDim.new(0, 10)
UICorner_19.Parent = SearchBox

SearchButton.Name = "SearchButton"
SearchButton.Parent = ScriptHubWindow
SearchButton.AnchorPoint = Vector2.new(1, 0)
SearchButton.BackgroundTransparency = 1.000
SearchButton.LayoutOrder = 1
SearchButton.Position = UDim2.new(1, -115, 0, 99)
SearchButton.Size = UDim2.new(0, 25, 0, 25)
SearchButton.ZIndex = 2
SearchButton.AutoButtonColor = false
SearchButton.Image = "rbxassetid://3926305904"
SearchButton.ImageRectOffset = Vector2.new(964, 324)
SearchButton.ImageRectSize = Vector2.new(36, 36)

WindowSubTitle.Name = "WindowSubTitle"
WindowSubTitle.Parent = ScriptHubWindow
WindowSubTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
WindowSubTitle.BackgroundTransparency = 1.000
WindowSubTitle.BorderSizePixel = 0
WindowSubTitle.Position = UDim2.new(0, 7, 0, 72)
WindowSubTitle.Size = UDim2.new(0, 309, 0, 14)
WindowSubTitle.Font = Enum.Font.Gotham
WindowSubTitle.Text = "Powered by ScriptBlox, Aggregation System by Zyrex, Modified by Rudy."
WindowSubTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
WindowSubTitle.TextSize = 12.000
WindowSubTitle.TextXAlignment = Enum.TextXAlignment.Left
WindowSubTitle.TextYAlignment = Enum.TextYAlignment.Top

PaginationFrame.Name = "PaginationFrame"
PaginationFrame.Parent = ScriptHubWindow
PaginationFrame.AnchorPoint = Vector2.new(1, 0)
PaginationFrame.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
PaginationFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
PaginationFrame.BorderSizePixel = 0
PaginationFrame.Position = UDim2.new(1, -5, 0, 91)
PaginationFrame.Size = UDim2.new(0, 100, 0, 40)

UICorner_20.CornerRadius = UDim.new(0, 10)
UICorner_20.Parent = PaginationFrame

LeftPage.Name = "LeftPage"
LeftPage.Parent = PaginationFrame
LeftPage.BackgroundTransparency = 1.000
LeftPage.LayoutOrder = 5
LeftPage.Rotation = 180.000
LeftPage.Size = UDim2.new(0, 25, 1, 0)
LeftPage.ZIndex = 2
LeftPage.Image = "rbxassetid://3926307971"
LeftPage.ImageRectOffset = Vector2.new(764, 244)
LeftPage.ImageRectSize = Vector2.new(36, 36)
LeftPage.ScaleType = Enum.ScaleType.Fit

RightPage.Name = "RightPage"
RightPage.Parent = PaginationFrame
RightPage.AnchorPoint = Vector2.new(1, 0)
RightPage.BackgroundTransparency = 1.000
RightPage.LayoutOrder = 5
RightPage.Position = UDim2.new(1, 0, 0, 0)
RightPage.Size = UDim2.new(0, 25, 1, 0)
RightPage.ZIndex = 2
RightPage.Image = "rbxassetid://3926307971"
RightPage.ImageRectOffset = Vector2.new(764, 244)
RightPage.ImageRectSize = Vector2.new(36, 36)
RightPage.ScaleType = Enum.ScaleType.Fit

PageLabel.Name = "PageLabel"
PageLabel.Parent = PaginationFrame
PageLabel.AnchorPoint = Vector2.new(0.5, 0)
PageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
PageLabel.BackgroundTransparency = 1.000
PageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
PageLabel.BorderSizePixel = 0
PageLabel.Position = UDim2.new(0.5, 0, 0, 0)
PageLabel.Size = UDim2.new(1, -50, 1, 0)
PageLabel.Font = Enum.Font.Gotham
PageLabel.Text = "1"
PageLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
PageLabel.TextSize = 14.000

ExecutorWindow.Name = "ExecutorWindow"
ExecutorWindow.Parent = VegaXAndroidUI
ExecutorWindow.AnchorPoint = Vector2.new(0, 0.5)
ExecutorWindow.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
ExecutorWindow.BackgroundTransparency = 0.400
ExecutorWindow.BorderColor3 = Color3.fromRGB(30, 30, 30)
ExecutorWindow.BorderSizePixel = 0
ExecutorWindow.Position = UDim2.new(1, 200, 0.5, -20)
ExecutorWindow.Size = UDim2.new(1, -200, 1, 40)

ExecuteB.Name = "ExecuteB"
ExecuteB.Parent = ExecutorWindow
ExecuteB.Active = false
ExecuteB.BackgroundColor3 = Color3.fromRGB(195, 57, 57)
ExecuteB.BorderSizePixel = 0
ExecuteB.Position = UDim2.new(0, 5, 0, 78)
ExecuteB.Size = UDim2.new(0, 80, 0, 30)
ExecuteB.Font = Enum.Font.GothamBold
ExecuteB.Text = "Execute"
ExecuteB.TextColor3 = Color3.fromRGB(255, 255, 255)
ExecuteB.TextSize = 14.000

UICorner_21.CornerRadius = UDim.new(0, 4)
UICorner_21.Parent = ExecuteB

PasteandExecuteB.Name = "PasteandExecuteB"
PasteandExecuteB.Parent = ExecutorWindow
PasteandExecuteB.Active = false
PasteandExecuteB.BackgroundColor3 = Color3.fromRGB(195, 57, 57)
PasteandExecuteB.BackgroundTransparency = 0.300
PasteandExecuteB.BorderSizePixel = 0
PasteandExecuteB.Position = UDim2.new(0, 90, 0, 78)
PasteandExecuteB.Size = UDim2.new(0, 140, 0, 30)
PasteandExecuteB.Font = Enum.Font.GothamBold
PasteandExecuteB.Text = "Paste and Execute"
PasteandExecuteB.TextColor3 = Color3.fromRGB(255, 255, 255)
PasteandExecuteB.TextSize = 14.000

UICorner_22.CornerRadius = UDim.new(0, 4)
UICorner_22.Parent = PasteandExecuteB

CloseB_3.Name = "CloseB"
CloseB_3.Parent = ExecutorWindow
CloseB_3.AnchorPoint = Vector2.new(1, 0)
CloseB_3.BackgroundTransparency = 1.000
CloseB_3.BorderSizePixel = 0
CloseB_3.LayoutOrder = 6
CloseB_3.Position = UDim2.new(1, -5, 0, 45)
CloseB_3.Size = UDim2.new(0, 25, 0, 25)
CloseB_3.ZIndex = 2
CloseB_3.Image = "rbxassetid://3926307971"
CloseB_3.ImageRectOffset = Vector2.new(884, 284)
CloseB_3.ImageRectSize = Vector2.new(36, 36)

ScrollingBox.Name = "ScrollingBox"
ScrollingBox.Parent = ExecutorWindow
ScrollingBox.Active = true
ScrollingBox.AnchorPoint = Vector2.new(0.5, 1)
ScrollingBox.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
ScrollingBox.BackgroundTransparency = 0.200
ScrollingBox.BorderSizePixel = 0
ScrollingBox.Position = UDim2.new(0.5, 0, 1, -5)
ScrollingBox.Size = UDim2.new(1, -10, 1, -153)
ScrollingBox.CanvasSize = UDim2.new(0, 0, 0, 0)
ScrollingBox.ScrollBarThickness = 2

TextBox.Parent = ScrollingBox
TextBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextBox.BackgroundTransparency = 1.000
TextBox.Position = UDim2.new(0, 30, 0, 0)
TextBox.Size = UDim2.new(1, -30, 1, 0)
TextBox.ZIndex = 4
TextBox.ClearTextOnFocus = false
TextBox.Font = Enum.Font.Code
TextBox.MultiLine = true
TextBox.Text = ""
TextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
TextBox.TextSize = 16.000
TextBox.TextWrapped = true
TextBox.TextXAlignment = Enum.TextXAlignment.Left
TextBox.TextYAlignment = Enum.TextYAlignment.Top

Line.Name = "Line"
Line.Parent = ScrollingBox
Line.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Line.BackgroundTransparency = 1.000
Line.BorderColor3 = Color3.fromRGB(27, 42, 53)
Line.BorderSizePixel = 0
Line.Size = UDim2.new(0, 27, 1, 0)
Line.ZIndex = 4
Line.Font = Enum.Font.Code
Line.Text = "1  "
Line.TextColor3 = Color3.fromRGB(203, 203, 203)
Line.TextSize = 16.000
Line.TextWrapped = true
Line.TextYAlignment = Enum.TextYAlignment.Top

UICorner_23.CornerRadius = UDim.new(0, 5)
UICorner_23.Parent = ScrollingBox

TabbingSystem.Name = "TabbingSystem"
TabbingSystem.Parent = ExecutorWindow
TabbingSystem.BackgroundColor3 = Color3.fromRGB(195, 57, 57)
TabbingSystem.Position = UDim2.new(0, 5, 0, 113)
TabbingSystem.Size = UDim2.new(0, 224, 0, 30)

ScriptPage.Name = "ScriptPage"
ScriptPage.Parent = TabbingSystem
ScriptPage.BackgroundColor3 = Color3.fromRGB(24, 144, 255)
ScriptPage.BackgroundTransparency = 1.000
ScriptPage.BorderSizePixel = 0
ScriptPage.Position = UDim2.new(0, 5, 0, 0)
ScriptPage.Size = UDim2.new(1, -70, 1, 0)
ScriptPage.Font = Enum.Font.Gotham
ScriptPage.Text = "Script 1"
ScriptPage.TextColor3 = Color3.fromRGB(255, 255, 255)
ScriptPage.TextSize = 14.000
ScriptPage.TextWrapped = true
ScriptPage.TextXAlignment = Enum.TextXAlignment.Left

NextPage.Name = "NextPage"
NextPage.Parent = TabbingSystem
NextPage.Active = false
NextPage.AnchorPoint = Vector2.new(1, 0)
NextPage.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
NextPage.BackgroundTransparency = 1.000
NextPage.BorderSizePixel = 0
NextPage.Position = UDim2.new(1, 0, 0, 0)
NextPage.Size = UDim2.new(0, 20, 0, 30)
NextPage.Font = Enum.Font.GothamBold
NextPage.Text = ">"
NextPage.TextColor3 = Color3.fromRGB(255, 255, 255)
NextPage.TextSize = 14.000

LastPage.Name = "LastPage"
LastPage.Parent = TabbingSystem
LastPage.Active = false
LastPage.AnchorPoint = Vector2.new(1, 0)
LastPage.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
LastPage.BackgroundTransparency = 1.000
LastPage.BorderSizePixel = 0
LastPage.Position = UDim2.new(1, -20, 0, 0)
LastPage.Size = UDim2.new(0, 20, 0, 30)
LastPage.Font = Enum.Font.GothamBold
LastPage.Text = "<"
LastPage.TextColor3 = Color3.fromRGB(255, 255, 255)
LastPage.TextSize = 14.000

UICorner_24.CornerRadius = UDim.new(0, 4)
UICorner_24.Parent = TabbingSystem

EditTabName.Name = "EditTabName"
EditTabName.Parent = TabbingSystem
EditTabName.AnchorPoint = Vector2.new(1, 0)
EditTabName.BackgroundTransparency = 1.000
EditTabName.Position = UDim2.new(1, -40, 0, 0)
EditTabName.Size = UDim2.new(0, 20, 0, 30)
EditTabName.ZIndex = 2
EditTabName.Image = "rbxassetid://3926305904"
EditTabName.ImageRectOffset = Vector2.new(924, 364)
EditTabName.ImageRectSize = Vector2.new(36, 36)
EditTabName.ScaleType = Enum.ScaleType.Fit

EditTabBox.Name = "EditTabBox"
EditTabBox.Parent = TabbingSystem
EditTabBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
EditTabBox.BackgroundTransparency = 1.000
EditTabBox.BorderSizePixel = 0
EditTabBox.Position = UDim2.new(0, 5, 0, 0)
EditTabBox.Size = UDim2.new(1, -70, 1, 0)
EditTabBox.Visible = false
EditTabBox.Font = Enum.Font.Gotham
EditTabBox.PlaceholderColor3 = Color3.fromRGB(230, 230, 230)
EditTabBox.PlaceholderText = "Place New Name Here"
EditTabBox.Text = ""
EditTabBox.TextColor3 = Color3.fromRGB(255, 255, 255)
EditTabBox.TextSize = 14.000
EditTabBox.TextWrapped = true
EditTabBox.TextXAlignment = Enum.TextXAlignment.Left

WindowMainTitle_3.Name = "WindowMainTitle"
WindowMainTitle_3.Parent = ExecutorWindow
WindowMainTitle_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
WindowMainTitle_3.BackgroundTransparency = 1.000
WindowMainTitle_3.BorderSizePixel = 0
WindowMainTitle_3.Position = UDim2.new(0, 7, 0, 52)
WindowMainTitle_3.Size = UDim2.new(0, 200, 0, 21)
WindowMainTitle_3.Font = Enum.Font.GothamBold
WindowMainTitle_3.Text = "Executor"
WindowMainTitle_3.TextColor3 = Color3.fromRGB(255, 255, 255)
WindowMainTitle_3.TextSize = 18.000
WindowMainTitle_3.TextXAlignment = Enum.TextXAlignment.Left
WindowMainTitle_3.TextYAlignment = Enum.TextYAlignment.Top

ClearB.Name = "ClearB"
ClearB.Parent = ExecutorWindow
ClearB.Active = false
ClearB.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
ClearB.BorderSizePixel = 0
ClearB.Position = UDim2.new(0, 325, 0, 78)
ClearB.Size = UDim2.new(0, 50, 0, 30)
ClearB.Font = Enum.Font.GothamBold
ClearB.Text = "Clear"
ClearB.TextColor3 = Color3.fromRGB(255, 255, 255)
ClearB.TextSize = 14.000

UICorner_25.CornerRadius = UDim.new(0, 4)
UICorner_25.Parent = ClearB

DevModeB.Name = "DevModeB"
DevModeB.Parent = ExecutorWindow
DevModeB.Active = false
DevModeB.BackgroundColor3 = Color3.fromRGB(195, 57, 57)
DevModeB.BackgroundTransparency = 0.300
DevModeB.BorderSizePixel = 0
DevModeB.Position = UDim2.new(0, 235, 0, 78)
DevModeB.Size = UDim2.new(0, 85, 0, 30)
DevModeB.Font = Enum.Font.GothamBold
DevModeB.Text = "Dev Mode"
DevModeB.TextColor3 = Color3.fromRGB(255, 255, 255)
DevModeB.TextSize = 14.000

UICorner_26.CornerRadius = UDim.new(0, 4)
UICorner_26.Parent = DevModeB

SidebarFrame.Name = "SidebarFrame"
SidebarFrame.Parent = VegaXAndroidUI
SidebarFrame.AnchorPoint = Vector2.new(0, 0.5)
SidebarFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
SidebarFrame.BorderSizePixel = 0
SidebarFrame.Position = UDim2.new(0, -200, 0.5, 0)
SidebarFrame.Size = UDim2.new(0, 200, 1, 0)

Banner.Name = "Banner"
Banner.Parent = SidebarFrame
Banner.BackgroundColor3 = Color3.fromRGB(195, 57, 57)
Banner.BorderSizePixel = 0
Banner.Position = UDim2.new(0, 0, 0, -40)
Banner.Size = UDim2.new(1, 0, 0, 190)

HappyGuy.Name = "HappyGuy"
HappyGuy.Parent = Banner
HappyGuy.AnchorPoint = Vector2.new(0.5, 1)
HappyGuy.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
HappyGuy.BackgroundTransparency = 1.000
HappyGuy.BorderSizePixel = 0
HappyGuy.Position = UDim2.new(0.5, 0, 1, 0)
HappyGuy.Size = UDim2.new(1, 0, 1, -90)
HappyGuy.Image = "http://www.roblox.com/asset/?id=13329667664"
HappyGuy.ImageTransparency = 0.500
HappyGuy.ScaleType = Enum.ScaleType.Fit

VegaXLogo_2.Name = "VegaXLogo"
VegaXLogo_2.Parent = Banner
VegaXLogo_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
VegaXLogo_2.BackgroundTransparency = 1.000
VegaXLogo_2.BorderSizePixel = 0
VegaXLogo_2.Position = UDim2.new(0, 10, 0, 50)
VegaXLogo_2.Size = UDim2.new(0, 25, 0, 25)
VegaXLogo_2.Image = "http://www.roblox.com/asset/?id=15861930865"

TitleLabel.Name = "TitleLabel"
TitleLabel.Parent = Banner
TitleLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TitleLabel.BackgroundTransparency = 1.000
TitleLabel.BorderSizePixel = 0
TitleLabel.Position = UDim2.new(0, 40, 0, 50)
TitleLabel.Size = UDim2.new(0, 150, 0, 25)
TitleLabel.Font = Enum.Font.GothamBold
TitleLabel.Text = "Vega X 4.0.6"
TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TitleLabel.TextSize = 12.000
TitleLabel.TextXAlignment = Enum.TextXAlignment.Left

ScrollingFrame_3.Parent = SidebarFrame
ScrollingFrame_3.Active = true
ScrollingFrame_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ScrollingFrame_3.BackgroundTransparency = 1.000
ScrollingFrame_3.BorderSizePixel = 0
ScrollingFrame_3.Position = UDim2.new(0, 0, 0, 150)
ScrollingFrame_3.Size = UDim2.new(1, 0, 1, -150)
ScrollingFrame_3.CanvasSize = UDim2.new(0, 0, 1.5, 0)
ScrollingFrame_3.ScrollBarThickness = 0

UIListLayout_3.Parent = ScrollingFrame_3
UIListLayout_3.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout_3.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_3.Padding = UDim.new(0, 2)

UsernamePlace.Name = "UsernamePlace"
UsernamePlace.Parent = ScrollingFrame_3
UsernamePlace.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
UsernamePlace.BorderSizePixel = 0
UsernamePlace.Position = UDim2.new(0, 0, 1, -10)
UsernamePlace.Size = UDim2.new(1, 0, 0, 62)

Title_7.Name = "Title"
Title_7.Parent = UsernamePlace
Title_7.AnchorPoint = Vector2.new(0, 0.5)
Title_7.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title_7.BackgroundTransparency = 1.000
Title_7.BorderSizePixel = 0
Title_7.Position = UDim2.new(0, 62, 0.5, 0)
Title_7.Size = UDim2.new(0.639999986, 0, 1, -20)
Title_7.Font = Enum.Font.Gotham
Title_7.Text = "Hello!"
Title_7.TextColor3 = Color3.fromRGB(255, 255, 255)
Title_7.TextSize = 14.000
Title_7.TextWrapped = true
Title_7.TextXAlignment = Enum.TextXAlignment.Left

Icon.Name = "Icon"
Icon.Parent = UsernamePlace
Icon.BackgroundColor3 = Color3.fromRGB(195, 57, 57)
Icon.BorderSizePixel = 0
Icon.Position = UDim2.new(0, 10, 0, 10)
Icon.Size = UDim2.new(0, 42, 0, 42)

UICorner_27.CornerRadius = UDim.new(0, 10)
UICorner_27.Parent = Icon

ProfileImage.Name = "ProfileImage"
ProfileImage.Parent = Icon
ProfileImage.AnchorPoint = Vector2.new(0.5, 0.5)
ProfileImage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ProfileImage.BackgroundTransparency = 1.000
ProfileImage.BorderSizePixel = 0
ProfileImage.Position = UDim2.new(0.5, 0, 0.5, 0)
ProfileImage.Size = UDim2.new(1, 0, 1, 0)

UICorner_28.CornerRadius = UDim.new(0, 10)
UICorner_28.Parent = ProfileImage

Choice1.Name = "Choice1"
Choice1.Parent = ScrollingFrame_3
Choice1.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
Choice1.BorderSizePixel = 0
Choice1.Size = UDim2.new(1, 0, 0, 100)

Title_8.Name = "Title"
Title_8.Parent = Choice1
Title_8.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title_8.BackgroundTransparency = 1.000
Title_8.BorderSizePixel = 0
Title_8.Position = UDim2.new(0, 62, 0, 10)
Title_8.Size = UDim2.new(0.529999971, 0, 0.209999993, 20)
Title_8.Font = Enum.Font.Gotham
Title_8.Text = "Executor"
Title_8.TextColor3 = Color3.fromRGB(255, 255, 255)
Title_8.TextSize = 14.000
Title_8.TextWrapped = true
Title_8.TextXAlignment = Enum.TextXAlignment.Left

C1EB.Name = "C1EB"
C1EB.Parent = Choice1
C1EB.AnchorPoint = Vector2.new(0.5, 1)
C1EB.BackgroundColor3 = Color3.fromRGB(195, 57, 57)
C1EB.BorderSizePixel = 0
C1EB.Position = UDim2.new(0.5, 0, 1, -10)
C1EB.Size = UDim2.new(1, -20, 0, 30)
C1EB.Font = Enum.Font.GothamBold
C1EB.Text = "Open"
C1EB.TextColor3 = Color3.fromRGB(255, 255, 255)
C1EB.TextSize = 14.000

UICorner_29.CornerRadius = UDim.new(0, 4)
UICorner_29.Parent = C1EB

Icon_2.Name = "Icon"
Icon_2.Parent = Choice1
Icon_2.BackgroundColor3 = Color3.fromRGB(195, 57, 57)
Icon_2.BorderSizePixel = 0
Icon_2.Position = UDim2.new(0, 10, 0, 10)
Icon_2.Size = UDim2.new(0, 42, 0, 42)

UICorner_30.CornerRadius = UDim.new(0, 10)
UICorner_30.Parent = Icon_2

ImageLabel_2.Parent = Icon_2
ImageLabel_2.AnchorPoint = Vector2.new(0.5, 0.5)
ImageLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel_2.BackgroundTransparency = 1.000
ImageLabel_2.BorderSizePixel = 0
ImageLabel_2.Position = UDim2.new(0.5, 0, 0.5, 0)
ImageLabel_2.Size = UDim2.new(0.800000012, 0, 0.800000012, 0)
ImageLabel_2.Image = "rbxassetid://3926307971"
ImageLabel_2.ImageRectOffset = Vector2.new(764, 244)
ImageLabel_2.ImageRectSize = Vector2.new(36, 36)

Choice2.Name = "Choice2"
Choice2.Parent = ScrollingFrame_3
Choice2.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
Choice2.BorderSizePixel = 0
Choice2.Size = UDim2.new(1, 0, 0, 100)

Title_9.Name = "Title"
Title_9.Parent = Choice2
Title_9.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title_9.BackgroundTransparency = 1.000
Title_9.BorderSizePixel = 0
Title_9.Position = UDim2.new(0, 62, 0, 10)
Title_9.Size = UDim2.new(0.529999971, 0, 0.209999993, 20)
Title_9.Font = Enum.Font.Gotham
Title_9.Text = "Script Hub"
Title_9.TextColor3 = Color3.fromRGB(255, 255, 255)
Title_9.TextSize = 14.000
Title_9.TextWrapped = true
Title_9.TextXAlignment = Enum.TextXAlignment.Left

C2EB.Name = "C2EB"
C2EB.Parent = Choice2
C2EB.AnchorPoint = Vector2.new(0.5, 1)
C2EB.BackgroundColor3 = Color3.fromRGB(195, 57, 57)
C2EB.BorderSizePixel = 0
C2EB.Position = UDim2.new(0.5, 0, 1, -10)
C2EB.Size = UDim2.new(1, -20, 0, 30)
C2EB.Font = Enum.Font.GothamBold
C2EB.Text = "Open"
C2EB.TextColor3 = Color3.fromRGB(255, 255, 255)
C2EB.TextSize = 14.000

UICorner_31.CornerRadius = UDim.new(0, 4)
UICorner_31.Parent = C2EB

Icon_3.Name = "Icon"
Icon_3.Parent = Choice2
Icon_3.BackgroundColor3 = Color3.fromRGB(195, 57, 57)
Icon_3.BorderSizePixel = 0
Icon_3.Position = UDim2.new(0, 10, 0, 10)
Icon_3.Size = UDim2.new(0, 42, 0, 42)

UICorner_32.CornerRadius = UDim.new(0, 10)
UICorner_32.Parent = Icon_3

ImageLabel_3.Parent = Icon_3
ImageLabel_3.AnchorPoint = Vector2.new(0.5, 0.5)
ImageLabel_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel_3.BackgroundTransparency = 1.000
ImageLabel_3.BorderSizePixel = 0
ImageLabel_3.Position = UDim2.new(0.5, 0, 0.5, 0)
ImageLabel_3.Size = UDim2.new(0.800000012, 0, 0.800000012, 0)
ImageLabel_3.Image = "rbxassetid://3926307971"
ImageLabel_3.ImageRectOffset = Vector2.new(804, 404)
ImageLabel_3.ImageRectSize = Vector2.new(36, 36)

Choice3.Name = "Choice3"
Choice3.Parent = ScrollingFrame_3
Choice3.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
Choice3.BorderSizePixel = 0
Choice3.Size = UDim2.new(1, 0, 0, 100)

Title_10.Name = "Title"
Title_10.Parent = Choice3
Title_10.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title_10.BackgroundTransparency = 1.000
Title_10.BorderSizePixel = 0
Title_10.Position = UDim2.new(0, 62, 0, 10)
Title_10.Size = UDim2.new(0.529999971, 0, 0.209999993, 20)
Title_10.Font = Enum.Font.Gotham
Title_10.Text = "Settings"
Title_10.TextColor3 = Color3.fromRGB(255, 255, 255)
Title_10.TextSize = 14.000
Title_10.TextWrapped = true
Title_10.TextXAlignment = Enum.TextXAlignment.Left

C3EB.Name = "C3EB"
C3EB.Parent = Choice3
C3EB.AnchorPoint = Vector2.new(0.5, 1)
C3EB.BackgroundColor3 = Color3.fromRGB(195, 57, 57)
C3EB.BorderSizePixel = 0
C3EB.Position = UDim2.new(0.5, 0, 1, -10)
C3EB.Size = UDim2.new(1, -20, 0, 30)
C3EB.Font = Enum.Font.GothamBold
C3EB.Text = "Open"
C3EB.TextColor3 = Color3.fromRGB(255, 255, 255)
C3EB.TextSize = 14.000

UICorner_33.CornerRadius = UDim.new(0, 4)
UICorner_33.Parent = C3EB

Icon_4.Name = "Icon"
Icon_4.Parent = Choice3
Icon_4.BackgroundColor3 = Color3.fromRGB(195, 57, 57)
Icon_4.BorderSizePixel = 0
Icon_4.Position = UDim2.new(0, 10, 0, 10)
Icon_4.Size = UDim2.new(0, 42, 0, 42)

UICorner_34.CornerRadius = UDim.new(0, 10)
UICorner_34.Parent = Icon_4

ImageLabel_4.Parent = Icon_4
ImageLabel_4.AnchorPoint = Vector2.new(0.5, 0.5)
ImageLabel_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel_4.BackgroundTransparency = 1.000
ImageLabel_4.BorderSizePixel = 0
ImageLabel_4.Position = UDim2.new(0.5, 0, 0.5, 0)
ImageLabel_4.Size = UDim2.new(0.800000012, 0, 0.800000012, 0)
ImageLabel_4.Image = "rbxassetid://3926307971"
ImageLabel_4.ImageRectOffset = Vector2.new(324, 124)
ImageLabel_4.ImageRectSize = Vector2.new(36, 36)

VegaXMenuToggleFrame.Name = "VegaXMenuToggleFrame"
VegaXMenuToggleFrame.Parent = VegaXAndroidUI
VegaXMenuToggleFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
VegaXMenuToggleFrame.BackgroundTransparency = 0.500
VegaXMenuToggleFrame.BorderSizePixel = 0
VegaXMenuToggleFrame.ClipsDescendants = true
VegaXMenuToggleFrame.Position = UDim2.new(0, 104, 0, -32)
VegaXMenuToggleFrame.Size = UDim2.new(0, 64, 0, 32)
VegaXMenuToggleFrame.Visible = true
VegaXMenuToggleFrame.ZIndex = 10

UICorner_35.CornerRadius = UDim.new(0, 10)
UICorner_35.Parent = VegaXMenuToggleFrame

VegaXMenuToggle.Name = "VegaXMenuToggle"
VegaXMenuToggle.Parent = VegaXMenuToggleFrame
VegaXMenuToggle.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
VegaXMenuToggle.BackgroundTransparency = 1.000
VegaXMenuToggle.BorderSizePixel = 0
VegaXMenuToggle.Size = UDim2.new(0, 32, 0, 32)
VegaXMenuToggle.ZIndex = 11
VegaXMenuToggle.Font = Enum.Font.SourceSans
VegaXMenuToggle.Text = ""
VegaXMenuToggle.TextColor3 = Color3.fromRGB(0, 0, 0)
VegaXMenuToggle.TextSize = 14.000

UICorner_36.CornerRadius = UDim.new(0, 10)
UICorner_36.Parent = VegaXMenuToggle

ImageLabel_5.Parent = VegaXMenuToggle
ImageLabel_5.AnchorPoint = Vector2.new(0.5, 0.5)
ImageLabel_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel_5.BackgroundTransparency = 1.000
ImageLabel_5.BorderSizePixel = 0
ImageLabel_5.Position = UDim2.new(0.5, 0, 0.5, 0)
ImageLabel_5.Size = UDim2.new(0.699999988, 0, 0.699999988, 0)
ImageLabel_5.ZIndex = 11
ImageLabel_5.Image = "http://www.roblox.com/asset/?id=15861930865"

DragTouch.Name = "DragTouch"
DragTouch.Parent = VegaXMenuToggleFrame
DragTouch.AnchorPoint = Vector2.new(1, 0)
DragTouch.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
DragTouch.BackgroundTransparency = 1.000
DragTouch.BorderSizePixel = 0
DragTouch.Position = UDim2.new(1, 0, 0, 0)
DragTouch.Size = UDim2.new(0, 32, 0, 32)
DragTouch.ZIndex = 11
DragTouch.Image = "rbxassetid://3926307971"
DragTouch.ImageRectOffset = Vector2.new(564, 364)
DragTouch.ImageRectSize = Vector2.new(36, 36)

KeySystem.Name = "KeySystem"
KeySystem.Parent = VegaXAndroidUI
KeySystem.AnchorPoint = Vector2.new(0, 0.5)
KeySystem.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
KeySystem.BackgroundTransparency = 0.200
KeySystem.BorderColor3 = Color3.fromRGB(30, 30, 30)
KeySystem.BorderSizePixel = 0
KeySystem.Position = UDim2.new(0, 0, 2, -20)
KeySystem.Size = UDim2.new(1, 0, 1, 40)
KeySystem.Visible = false

MainTitle.Name = "MainTitle"
MainTitle.Parent = KeySystem
MainTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
MainTitle.BackgroundTransparency = 1.000
MainTitle.BorderSizePixel = 0
MainTitle.Position = UDim2.new(0, 7, 0, 88)
MainTitle.Size = UDim2.new(1, -14, 0, 21)
MainTitle.Font = Enum.Font.GothamBold
MainTitle.Text = "[Vega X] Key System"
MainTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
MainTitle.TextSize = 18.000
MainTitle.TextYAlignment = Enum.TextYAlignment.Top

CloseB_4.Name = "CloseB"
CloseB_4.Parent = KeySystem
CloseB_4.AnchorPoint = Vector2.new(1, 0)
CloseB_4.BackgroundTransparency = 1.000
CloseB_4.BorderSizePixel = 0
CloseB_4.LayoutOrder = 6
CloseB_4.Position = UDim2.new(1, -5, 0, 45)
CloseB_4.Size = UDim2.new(0, 25, 0, 25)
CloseB_4.ZIndex = 2
CloseB_4.Image = "rbxassetid://3926307971"
CloseB_4.ImageRectOffset = Vector2.new(884, 284)
CloseB_4.ImageRectSize = Vector2.new(36, 36)

TextBox_2.Parent = KeySystem
TextBox_2.AnchorPoint = Vector2.new(0, 1)
TextBox_2.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
TextBox_2.BackgroundTransparency = 0.200
TextBox_2.BorderSizePixel = 0
TextBox_2.Position = UDim2.new(0, 25, 1, -137)
TextBox_2.Size = UDim2.new(1, -50, 0, 50)
TextBox_2.ClearTextOnFocus = false
TextBox_2.Font = Enum.Font.Code
TextBox_2.MultiLine = true
TextBox_2.PlaceholderText = "Insert the Key Here!"
TextBox_2.Text = ""
TextBox_2.TextColor3 = Color3.fromRGB(220, 220, 220)
TextBox_2.TextSize = 16.000

UICorner_37.CornerRadius = UDim.new(0, 5)
UICorner_37.Parent = TextBox_2

ApproveKeyB.Name = "ApproveKeyB"
ApproveKeyB.Parent = KeySystem
ApproveKeyB.Active = false
ApproveKeyB.AnchorPoint = Vector2.new(0.5, 1)
ApproveKeyB.BackgroundColor3 = Color3.fromRGB(195, 57, 57)
ApproveKeyB.BorderSizePixel = 0
ApproveKeyB.Position = UDim2.new(0.5, 0, 1, -76)
ApproveKeyB.Size = UDim2.new(0, 120, 0, 40)
ApproveKeyB.Font = Enum.Font.GothamBold
ApproveKeyB.Text = "Check Key"
ApproveKeyB.TextColor3 = Color3.fromRGB(255, 255, 255)
ApproveKeyB.TextSize = 16.000

UICorner_38.CornerRadius = UDim.new(0, 4)
UICorner_38.Parent = ApproveKeyB

EULALabel.Name = "EULALabel"
EULALabel.Parent = KeySystem
EULALabel.AnchorPoint = Vector2.new(0, 1)
EULALabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
EULALabel.BackgroundTransparency = 1.000
EULALabel.BorderSizePixel = 0
EULALabel.Position = UDim2.new(0, 7, 1, -35)
EULALabel.Size = UDim2.new(1, -14, 0, 21)
EULALabel.Font = Enum.Font.GothamBold
EULALabel.Text = "By pressing \"Get Key\", you accept to the terms of the Pelican Key System EULA."
EULALabel.TextColor3 = Color3.fromRGB(255, 255, 255)
EULALabel.TextSize = 12.000

GetKeyB.Name = "GetKeyB"
GetKeyB.Parent = KeySystem
GetKeyB.Active = false
GetKeyB.AnchorPoint = Vector2.new(0.5, 1)
GetKeyB.BackgroundColor3 = Color3.fromRGB(195, 57, 57)
GetKeyB.BackgroundTransparency = 0.500
GetKeyB.BorderSizePixel = 0
GetKeyB.Position = UDim2.new(0.5, -125, 1, -76)
GetKeyB.Size = UDim2.new(0, 120, 0, 40)
GetKeyB.Font = Enum.Font.GothamBold
GetKeyB.Text = "Get Key"
GetKeyB.TextColor3 = Color3.fromRGB(255, 255, 255)
GetKeyB.TextSize = 16.000

UICorner_39.CornerRadius = UDim.new(0, 4)
UICorner_39.Parent = GetKeyB

JoinDiscordB.Name = "JoinDiscordB"
JoinDiscordB.Parent = KeySystem
JoinDiscordB.Active = false
JoinDiscordB.AnchorPoint = Vector2.new(0.5, 1)
JoinDiscordB.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
JoinDiscordB.BorderSizePixel = 0
JoinDiscordB.Position = UDim2.new(0.5, 125, 1, -76)
JoinDiscordB.Size = UDim2.new(0, 120, 0, 40)
JoinDiscordB.Font = Enum.Font.GothamBold
JoinDiscordB.Text = "Join Discord"
JoinDiscordB.TextColor3 = Color3.fromRGB(255, 255, 255)
JoinDiscordB.TextSize = 16.000

UICorner_40.CornerRadius = UDim.new(0, 4)
UICorner_40.Parent = JoinDiscordB

Banner_2.Name = "Banner"
Banner_2.Parent = KeySystem
Banner_2.AnchorPoint = Vector2.new(0.5, 0)
Banner_2.BackgroundColor3 = Color3.fromRGB(195, 57, 57)
Banner_2.BorderSizePixel = 0
Banner_2.ClipsDescendants = true
Banner_2.Position = UDim2.new(0.5, 0, 0, 150)
Banner_2.Size = UDim2.new(1, -50, 1, -345)

VegaXLogo_3.Name = "VegaXLogo"
VegaXLogo_3.Parent = Banner_2
VegaXLogo_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
VegaXLogo_3.BackgroundTransparency = 1.000
VegaXLogo_3.BorderSizePixel = 0
VegaXLogo_3.Position = UDim2.new(0, 10, 0, 10)
VegaXLogo_3.Size = UDim2.new(0, 25, 0, 25)
VegaXLogo_3.Image = "http://www.roblox.com/asset/?id=15861930865"

UICorner_41.Parent = Banner_2

HappyGuy_2.Name = "HappyGuy"
HappyGuy_2.Parent = Banner_2
HappyGuy_2.AnchorPoint = Vector2.new(0.5, 1)
HappyGuy_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
HappyGuy_2.BackgroundTransparency = 1.000
HappyGuy_2.BorderSizePixel = 0
HappyGuy_2.Position = UDim2.new(0.5, 0, 1, 0)
HappyGuy_2.Size = UDim2.new(1, 0, 0.800000012, 0)
HappyGuy_2.Image = "http://www.roblox.com/asset/?id=13329667664"
HappyGuy_2.ImageTransparency = 0.500
HappyGuy_2.ScaleType = Enum.ScaleType.Fit

TitleLabel_2.Name = "TitleLabel"
TitleLabel_2.Parent = Banner_2
TitleLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TitleLabel_2.BackgroundTransparency = 1.000
TitleLabel_2.BorderSizePixel = 0
TitleLabel_2.Position = UDim2.new(0, 40, 0, 10)
TitleLabel_2.Size = UDim2.new(0, 150, 0, 25)
TitleLabel_2.Font = Enum.Font.GothamBold
TitleLabel_2.Text = "Happy Guy"
TitleLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TitleLabel_2.TextSize = 12.000
TitleLabel_2.TextXAlignment = Enum.TextXAlignment.Left

ScrollingBox_2.Name = "ScrollingBox"
ScrollingBox_2.Parent = Banner_2
ScrollingBox_2.Active = true
ScrollingBox_2.AnchorPoint = Vector2.new(0.5, 1)
ScrollingBox_2.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
ScrollingBox_2.BackgroundTransparency = 1.000
ScrollingBox_2.BorderSizePixel = 0
ScrollingBox_2.Position = UDim2.new(0.5, 0, 1, -10)
ScrollingBox_2.Size = UDim2.new(1, -20, 1, -55)
ScrollingBox_2.Visible = false
ScrollingBox_2.CanvasSize = UDim2.new(0, 0, 1.5, 0)
ScrollingBox_2.ScrollBarThickness = 2

TextBox_3.Parent = ScrollingBox_2
TextBox_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextBox_3.BackgroundTransparency = 1.000
TextBox_3.Selectable = false
TextBox_3.Size = UDim2.new(1, 0, 1, 0)
TextBox_3.ZIndex = 4
TextBox_3.ClearTextOnFocus = false
TextBox_3.Font = Enum.Font.Gotham
TextBox_3.MultiLine = true
TextBox_3.ShowNativeInput = false
TextBox_3.Text = ""
TextBox_3.TextColor3 = Color3.fromRGB(255, 255, 255)
TextBox_3.TextSize = 16.000
TextBox_3.TextWrapped = true
TextBox_3.TextXAlignment = Enum.TextXAlignment.Left
TextBox_3.TextYAlignment = Enum.TextYAlignment.Top

UICorner_42.CornerRadius = UDim.new(0, 5)
UICorner_42.Parent = ScrollingBox_2

SubTitle_7.Name = "SubTitle"
SubTitle_7.Parent = KeySystem
SubTitle_7.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SubTitle_7.BackgroundTransparency = 1.000
SubTitle_7.BorderSizePixel = 0
SubTitle_7.Position = UDim2.new(0, 7, 0, 109)
SubTitle_7.Size = UDim2.new(1, -14, 0, 40)
SubTitle_7.Font = Enum.Font.Gotham
SubTitle_7.Text = "Press \"Get Key\" to get started!"
SubTitle_7.TextColor3 = Color3.fromRGB(255, 255, 255)
SubTitle_7.TextSize = 14.000
SubTitle_7.TextWrapped = true
SubTitle_7.TextYAlignment = Enum.TextYAlignment.Top

KSMenuToggleFrame.Name = "KSMenuToggleFrame"
KSMenuToggleFrame.Parent = VegaXAndroidUI
KSMenuToggleFrame.AnchorPoint = Vector2.new(1, 1)
KSMenuToggleFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
KSMenuToggleFrame.BackgroundTransparency = 0.500
KSMenuToggleFrame.BorderSizePixel = 0
KSMenuToggleFrame.ClipsDescendants = true
KSMenuToggleFrame.Position = UDim2.new(1, -10, 1, -10)
KSMenuToggleFrame.Visible = false
KSMenuToggleFrame.ZIndex = 10

UICorner_43.CornerRadius = UDim.new(0, 10)
UICorner_43.Parent = KSMenuToggleFrame

VegaXKSToggle.Name = "VegaXKSToggle"
VegaXKSToggle.Parent = KSMenuToggleFrame
VegaXKSToggle.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
VegaXKSToggle.BackgroundTransparency = 1.000
VegaXKSToggle.BorderSizePixel = 0
VegaXKSToggle.Size = UDim2.new(0, 32, 0, 32)
VegaXKSToggle.ZIndex = 11
VegaXKSToggle.Font = Enum.Font.SourceSans
VegaXKSToggle.Text = ""
VegaXKSToggle.TextColor3 = Color3.fromRGB(0, 0, 0)
VegaXKSToggle.TextSize = 14.000

UICorner_44.CornerRadius = UDim.new(0, 10)
UICorner_44.Parent = VegaXKSToggle

ImageLabel_6.Parent = VegaXKSToggle
ImageLabel_6.AnchorPoint = Vector2.new(0.5, 0.5)
ImageLabel_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel_6.BackgroundTransparency = 1.000
ImageLabel_6.BorderSizePixel = 0
ImageLabel_6.Position = UDim2.new(0.5, 0, 0.5, 0)
ImageLabel_6.Size = UDim2.new(0.699999988, 0, 0.699999988, 0)
ImageLabel_6.ZIndex = 11
ImageLabel_6.Image = "http://www.roblox.com/asset/?id=15861930865"

IntroFrame.Name = "IntroFrame"
IntroFrame.Parent = VegaXAndroidUI
IntroFrame.AnchorPoint = Vector2.new(0.5, 0.5)
IntroFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
IntroFrame.BackgroundTransparency = 1.000
IntroFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
IntroFrame.BorderSizePixel = 0
IntroFrame.ClipsDescendants = true
IntroFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
IntroFrame.Size = UDim2.new(1, 0, 1, 0)

BackgroundFrame.Name = "BackgroundFrame"
BackgroundFrame.Parent = IntroFrame
BackgroundFrame.AnchorPoint = Vector2.new(0.5, 0.5)
BackgroundFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
BackgroundFrame.BackgroundTransparency = 1.000
BackgroundFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
BackgroundFrame.BorderSizePixel = 0
BackgroundFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
BackgroundFrame.Rotation = 45.000
BackgroundFrame.Size = UDim2.new(1.29999995, 0, 3, 0)

R1.Name = "R1"
R1.Parent = BackgroundFrame
R1.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
R1.BackgroundTransparency = 1.000
R1.BorderColor3 = Color3.fromRGB(0, 0, 0)
R1.BorderSizePixel = 0
R1.Size = UDim2.new(0.075000003, 0, 0, 0)

R2.Name = "R2"
R2.Parent = BackgroundFrame
R2.BackgroundColor3 = Color3.fromRGB(19, 6, 6)
R2.BackgroundTransparency = 1.000
R2.BorderColor3 = Color3.fromRGB(0, 0, 0)
R2.BorderSizePixel = 0
R2.Position = UDim2.new(0.0500000007, 0, 0, 0)
R2.Size = UDim2.new(0.075000003, 0, 0, 0)
R2.ZIndex = 2

R3.Name = "R3"
R3.Parent = BackgroundFrame
R3.BackgroundColor3 = Color3.fromRGB(39, 11, 11)
R3.BackgroundTransparency = 1.000
R3.BorderColor3 = Color3.fromRGB(0, 0, 0)
R3.BorderSizePixel = 0
R3.Position = UDim2.new(0.100000001, 0, 0, 0)
R3.Size = UDim2.new(0.075000003, 0, 0, 0)
R3.ZIndex = 3

R4.Name = "R4"
R4.Parent = BackgroundFrame
R4.BackgroundColor3 = Color3.fromRGB(58, 17, 17)
R4.BackgroundTransparency = 1.000
R4.BorderColor3 = Color3.fromRGB(0, 0, 0)
R4.BorderSizePixel = 0
R4.Position = UDim2.new(0.150000006, 0, 0, 0)
R4.Size = UDim2.new(0.075000003, 0, 0, 0)
R4.ZIndex = 4

R5.Name = "R5"
R5.Parent = BackgroundFrame
R5.BackgroundColor3 = Color3.fromRGB(78, 23, 23)
R5.BackgroundTransparency = 1.000
R5.BorderColor3 = Color3.fromRGB(0, 0, 0)
R5.BorderSizePixel = 0
R5.Position = UDim2.new(0.200000003, 0, 0, 0)
R5.Size = UDim2.new(0.075000003, 0, 0, 0)
R5.ZIndex = 5

R6.Name = "R6"
R6.Parent = BackgroundFrame
R6.BackgroundColor3 = Color3.fromRGB(117, 34, 34)
R6.BackgroundTransparency = 1.000
R6.BorderColor3 = Color3.fromRGB(0, 0, 0)
R6.BorderSizePixel = 0
R6.Position = UDim2.new(0.25, 0, 0, 0)
R6.Size = UDim2.new(0.075000003, 0, 0, 0)
R6.ZIndex = 6

R7.Name = "R7"
R7.Parent = BackgroundFrame
R7.BackgroundColor3 = Color3.fromRGB(137, 40, 40)
R7.BackgroundTransparency = 1.000
R7.BorderColor3 = Color3.fromRGB(0, 0, 0)
R7.BorderSizePixel = 0
R7.Position = UDim2.new(0.300000012, 0, 0, 0)
R7.Size = UDim2.new(0.075000003, 0, 0, 0)
R7.ZIndex = 7

R8.Name = "R8"
R8.Parent = BackgroundFrame
R8.BackgroundColor3 = Color3.fromRGB(156, 46, 46)
R8.BackgroundTransparency = 1.000
R8.BorderColor3 = Color3.fromRGB(0, 0, 0)
R8.BorderSizePixel = 0
R8.Position = UDim2.new(0.349999994, 0, 0, 0)
R8.Size = UDim2.new(0.075000003, 0, 0, 0)
R8.ZIndex = 8

R9.Name = "R9"
R9.Parent = BackgroundFrame
R9.BackgroundColor3 = Color3.fromRGB(176, 51, 51)
R9.BackgroundTransparency = 1.000
R9.BorderColor3 = Color3.fromRGB(0, 0, 0)
R9.BorderSizePixel = 0
R9.Position = UDim2.new(0.400000006, 0, 0, 0)
R9.Size = UDim2.new(0.075000003, 0, 0, 0)
R9.ZIndex = 9

R10.Name = "R10"
R10.Parent = BackgroundFrame
R10.BackgroundColor3 = Color3.fromRGB(195, 57, 57)
R10.BackgroundTransparency = 1.000
R10.BorderColor3 = Color3.fromRGB(0, 0, 0)
R10.BorderSizePixel = 0
R10.Position = UDim2.new(0.449999988, 0, 0, 0)
R10.Size = UDim2.new(0.075000003, 0, 0, 0)
R10.ZIndex = 10

R11.Name = "R11"
R11.Parent = BackgroundFrame
R11.BackgroundColor3 = Color3.fromRGB(176, 51, 51)
R11.BackgroundTransparency = 1.000
R11.BorderColor3 = Color3.fromRGB(0, 0, 0)
R11.BorderSizePixel = 0
R11.Position = UDim2.new(0.5, 0, 0, 0)
R11.Size = UDim2.new(0.075000003, 0, 0, 0)
R11.ZIndex = 11

R12.Name = "R12"
R12.Parent = BackgroundFrame
R12.BackgroundColor3 = Color3.fromRGB(156, 46, 46)
R12.BackgroundTransparency = 1.000
R12.BorderColor3 = Color3.fromRGB(0, 0, 0)
R12.BorderSizePixel = 0
R12.Position = UDim2.new(0.550000012, 0, 0, 0)
R12.Size = UDim2.new(0.075000003, 0, 0, 0)
R12.ZIndex = 12

R13.Name = "R13"
R13.Parent = BackgroundFrame
R13.BackgroundColor3 = Color3.fromRGB(137, 40, 40)
R13.BackgroundTransparency = 1.000
R13.BorderColor3 = Color3.fromRGB(0, 0, 0)
R13.BorderSizePixel = 0
R13.Position = UDim2.new(0.600000024, 0, 0, 0)
R13.Size = UDim2.new(0.075000003, 0, 0, 0)
R13.ZIndex = 13

R14.Name = "R14"
R14.Parent = BackgroundFrame
R14.BackgroundColor3 = Color3.fromRGB(117, 34, 34)
R14.BackgroundTransparency = 1.000
R14.BorderColor3 = Color3.fromRGB(0, 0, 0)
R14.BorderSizePixel = 0
R14.Position = UDim2.new(0.649999976, 0, 0, 0)
R14.Size = UDim2.new(0.075000003, 0, 0, 0)
R14.ZIndex = 14

R15.Name = "R15"
R15.Parent = BackgroundFrame
R15.BackgroundColor3 = Color3.fromRGB(98, 29, 29)
R15.BackgroundTransparency = 1.000
R15.BorderColor3 = Color3.fromRGB(0, 0, 0)
R15.BorderSizePixel = 0
R15.Position = UDim2.new(0.699999988, 0, 0, 0)
R15.Size = UDim2.new(0.075000003, 0, 0, 0)
R15.ZIndex = 15

R16.Name = "R16"
R16.Parent = BackgroundFrame
R16.BackgroundColor3 = Color3.fromRGB(78, 23, 23)
R16.BackgroundTransparency = 1.000
R16.BorderColor3 = Color3.fromRGB(0, 0, 0)
R16.BorderSizePixel = 0
R16.Position = UDim2.new(0.75, 0, 0, 0)
R16.Size = UDim2.new(0.075000003, 0, 0, 0)
R16.ZIndex = 16

R17.Name = "R17"
R17.Parent = BackgroundFrame
R17.BackgroundColor3 = Color3.fromRGB(58, 17, 17)
R17.BackgroundTransparency = 1.000
R17.BorderColor3 = Color3.fromRGB(0, 0, 0)
R17.BorderSizePixel = 0
R17.Position = UDim2.new(0.800000012, 0, 0, 0)
R17.Size = UDim2.new(0.075000003, 0, 0, 0)
R17.ZIndex = 17

R18.Name = "R18"
R18.Parent = BackgroundFrame
R18.BackgroundColor3 = Color3.fromRGB(39, 11, 11)
R18.BackgroundTransparency = 1.000
R18.BorderColor3 = Color3.fromRGB(0, 0, 0)
R18.BorderSizePixel = 0
R18.Position = UDim2.new(0.850000024, 0, 0, 0)
R18.Size = UDim2.new(0.075000003, 0, 0, 0)
R18.ZIndex = 18

R19.Name = "R19"
R19.Parent = BackgroundFrame
R19.BackgroundColor3 = Color3.fromRGB(19, 6, 6)
R19.BackgroundTransparency = 1.000
R19.BorderColor3 = Color3.fromRGB(0, 0, 0)
R19.BorderSizePixel = 0
R19.Position = UDim2.new(0.899999976, 0, 0, 0)
R19.Size = UDim2.new(0.075000003, 0, 0, 0)
R19.ZIndex = 19

R20.Name = "R20"
R20.Parent = BackgroundFrame
R20.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
R20.BackgroundTransparency = 1.000
R20.BorderColor3 = Color3.fromRGB(0, 0, 0)
R20.BorderSizePixel = 0
R20.Position = UDim2.new(0.949999988, 0, 0, 0)
R20.Size = UDim2.new(0.075000003, 0, 0, 0)
R20.ZIndex = 20

VegaXLogo_4.Name = "VegaXLogo"
VegaXLogo_4.Parent = IntroFrame
VegaXLogo_4.AnchorPoint = Vector2.new(0.5, 0.5)
VegaXLogo_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
VegaXLogo_4.BackgroundTransparency = 1.000
VegaXLogo_4.BorderSizePixel = 0
VegaXLogo_4.Position = UDim2.new(0.5, 0, 0.699999988, 0)
VegaXLogo_4.Size = UDim2.new(0, 100, 0, 100)
VegaXLogo_4.ZIndex = 21
VegaXLogo_4.Image = "http://www.roblox.com/asset/?id=15861930865"
VegaXLogo_4.ImageTransparency = 1.000

ScriptListWindow.Name = "ScriptListWindow"
ScriptListWindow.Parent = VegaXAndroidUI
ScriptListWindow.AnchorPoint = Vector2.new(0, 0.5)
ScriptListWindow.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
ScriptListWindow.BorderColor3 = Color3.fromRGB(30, 30, 30)
ScriptListWindow.BorderSizePixel = 0
ScriptListWindow.Position = UDim2.new(0, 200, 0.5, -20)
ScriptListWindow.Size = UDim2.new(1, -200, 1, 40)
ScriptListWindow.Visible = false

WindowMainTitle_4.Name = "WindowMainTitle"
WindowMainTitle_4.Parent = ScriptListWindow
WindowMainTitle_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
WindowMainTitle_4.BackgroundTransparency = 1.000
WindowMainTitle_4.BorderSizePixel = 0
WindowMainTitle_4.Position = UDim2.new(0, 7, 0, 52)
WindowMainTitle_4.Size = UDim2.new(0, 309, 0, 21)
WindowMainTitle_4.Font = Enum.Font.GothamBold
WindowMainTitle_4.Text = "Script List"
WindowMainTitle_4.TextColor3 = Color3.fromRGB(255, 255, 255)
WindowMainTitle_4.TextSize = 18.000
WindowMainTitle_4.TextXAlignment = Enum.TextXAlignment.Left
WindowMainTitle_4.TextYAlignment = Enum.TextYAlignment.Top

CloseB_5.Name = "CloseB"
CloseB_5.Parent = ScriptListWindow
CloseB_5.AnchorPoint = Vector2.new(1, 0)
CloseB_5.BackgroundTransparency = 1.000
CloseB_5.BorderSizePixel = 0
CloseB_5.LayoutOrder = 6
CloseB_5.Position = UDim2.new(1, -5, 0, 45)
CloseB_5.Size = UDim2.new(0, 25, 0, 25)
CloseB_5.ZIndex = 2
CloseB_5.Image = "rbxassetid://3926307971"
CloseB_5.ImageRectOffset = Vector2.new(884, 284)
CloseB_5.ImageRectSize = Vector2.new(36, 36)

ScriptListFrame.Name = "ScriptListFrame"
ScriptListFrame.Parent = ScriptListWindow
ScriptListFrame.Active = true
ScriptListFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ScriptListFrame.BackgroundTransparency = 1.000
ScriptListFrame.BorderSizePixel = 0
ScriptListFrame.Position = UDim2.new(0, 0, 0, 91)
ScriptListFrame.Size = UDim2.new(1, 0, 1, -91)
ScriptListFrame.CanvasSize = UDim2.new(0, 0, 1, 0)
ScriptListFrame.ScrollBarThickness = 0

S1_3.Name = "S1"
S1_3.Parent = ScriptListFrame
S1_3.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
S1_3.BorderSizePixel = 0
S1_3.Size = UDim2.new(1, -10, 0, 60)

Trash.Name = "Trash"
Trash.Parent = S1_3
Trash.AnchorPoint = Vector2.new(1, 0.5)
Trash.BackgroundColor3 = Color3.fromRGB(67, 67, 67)
Trash.BackgroundTransparency = 0.400
Trash.BorderSizePixel = 0
Trash.LayoutOrder = 10
Trash.Position = UDim2.new(1, -23, 0.5, 0)
Trash.Size = UDim2.new(0, 34, 0, 34)
Trash.ZIndex = 2
Trash.Image = "rbxassetid://3926305904"
Trash.ImageRectOffset = Vector2.new(644, 724)
Trash.ImageRectSize = Vector2.new(36, 36)

UICorner_45.CornerRadius = UDim.new(0, 10)
UICorner_45.Parent = Trash

UICorner_46.CornerRadius = UDim.new(0, 10)
UICorner_46.Parent = S1_3

Title_11.Name = "Title"
Title_11.Parent = S1_3
Title_11.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title_11.BackgroundTransparency = 1.000
Title_11.BorderSizePixel = 0
Title_11.Position = UDim2.new(0, 25, 0, 0)
Title_11.Size = UDim2.new(1, -93, 1, 0)
Title_11.Font = Enum.Font.GothamBold
Title_11.Text = "somethingnice.txt"
Title_11.TextColor3 = Color3.fromRGB(255, 255, 255)
Title_11.TextSize = 19.000
Title_11.TextXAlignment = Enum.TextXAlignment.Left

Execute_2.Name = "Execute"
Execute_2.Parent = S1_3
Execute_2.AnchorPoint = Vector2.new(1, 0.5)
Execute_2.BackgroundColor3 = Color3.fromRGB(67, 67, 67)
Execute_2.BackgroundTransparency = 0.400
Execute_2.BorderSizePixel = 0
Execute_2.LayoutOrder = 10
Execute_2.Position = UDim2.new(1, -62, 0.5, 0)
Execute_2.Size = UDim2.new(0, 34, 0, 34)
Execute_2.ZIndex = 2
Execute_2.Image = "rbxassetid://3926307971"
Execute_2.ImageRectOffset = Vector2.new(764, 244)
Execute_2.ImageRectSize = Vector2.new(36, 36)

UICorner_47.CornerRadius = UDim.new(0, 10)
UICorner_47.Parent = Execute_2

UIListLayout_4.Parent = ScriptListFrame
UIListLayout_4.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout_4.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_4.Padding = UDim.new(0, 5)

WindowSubTitle_2.Name = "WindowSubTitle"
WindowSubTitle_2.Parent = ScriptListWindow
WindowSubTitle_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
WindowSubTitle_2.BackgroundTransparency = 1.000
WindowSubTitle_2.BorderSizePixel = 0
WindowSubTitle_2.Position = UDim2.new(0, 7, 0, 72)
WindowSubTitle_2.Size = UDim2.new(0, 309, 0, 14)
WindowSubTitle_2.Font = Enum.Font.Gotham
WindowSubTitle_2.Text = "I cum making this. - Rudy"
WindowSubTitle_2.TextColor3 = Color3.fromRGB(255, 255, 255)
WindowSubTitle_2.TextSize = 12.000
WindowSubTitle_2.TextXAlignment = Enum.TextXAlignment.Left
WindowSubTitle_2.TextYAlignment = Enum.TextYAlignment.Top

-- Scripts:

local function UENDBFZ_fake_script() -- VegaXAndroidUI.EverythingElse 
	local script = Instance.new('LocalScript', VegaXAndroidUI)

	--local WriteToMocorFolder = clonefunction(arceus.writearceusfile)
	
	-- Dev Connect
	
	getgenv().DevConnect = function(devcode)
		warn("(Panda-Pelican Development | HTTP Protocol [ Beta ])")
		local No_Execute = "No_Data_Set_Here"
		local IPv4 = base64.decode(devcode)
		if IPv4 == "" or IPv4 == nil then
			warn("[Unable to Start HTTP-Protocol] - Missing IP Address / Port")
			return
		end
		task.spawn(function() 
			script.Parent.ExecutorWindow.DevModeB.BackgroundColor3 = Color3.fromRGB(57, 195, 57)
			while true do
				wait(0.1)
				local content = game:HttpGet("http://"..IPv4..":2023".."/readcontent")     
				if content ~= No_Execute then
					local success, result = pcall(function()
						runcode(content)
						local a = tostring(game:HttpGet("http://"..IPv4..":2023".."/clear"))
					end)
	
					if not success then
						-- Handle the exception here
						warn("Error executing loaded code:", result)
						local b = tostring(game:HttpGet("http://"..IPv4..":2023".."/clear"))
					end        
				end
			end
		end) 
	end
	
	-- Dragging Menu
	
	local UserInputService = game:GetService("UserInputService")
	
	local gui = script.Parent.VegaXMenuToggleFrame
	
	local dragging
	local dragInput
	local dragStart
	local startPos
	
	local function update(input)
		local delta = input.Position - dragStart
		gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
	
	gui.DragTouch.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position
	
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	
	gui.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	
	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			update(input)
		end
	end)
	
	
	local TweenService = game:GetService("TweenService")
	local ExecutorWindowOpen = false
	local ScriptHubWindowOpen = false
	local SettingsWindowOpen = false
	
	_G.MenuOpen = true
	
	script.Parent.VegaXMenuToggleFrame.VegaXMenuToggle.MouseButton1Click:connect(function()	
		if _G.MenuOpen == false then
			_G.MenuOpen = true
			script.Parent.SidebarFrame:TweenPosition(UDim2.new(0,0,0.5,0), "Out", "Quint", 1, true)
			
			if ExecutorWindowOpen == true then
				script.Parent.ExecutorWindow:TweenPosition(UDim2.new(0,200,0.5,-20), "Out", "Quint", 1, true)
			end
			if ScriptHubWindowOpen == true then
				script.Parent.ScriptHubWindow:TweenPosition(UDim2.new(0,200,0.5,-20), "Out", "Quint", 1, true)
			end
			if SettingsWindowOpen == true then
				script.Parent.SettingsWindow:TweenPosition(UDim2.new(0,200,0.5,-20), "Out", "Quint", 1, true)
			end
		else
			_G.MenuOpen = false
			script.Parent.SidebarFrame:TweenPosition(UDim2.new(0,-200,0.5,0), "Out", "Quint", 1, true)
			
			script.Parent.ExecutorWindow:TweenPosition(UDim2.new(1,200,0.5,-20), "Out", "Quint", 1, true)
			script.Parent.ScriptHubWindow:TweenPosition(UDim2.new(1,200,0.5,-20), "Out", "Quint", 1, true)
			script.Parent.SettingsWindow:TweenPosition(UDim2.new(1,200,0.5,-20), "Out", "Quint", 1, true)
		end
	end)
	
	-- Menu Switching
	
	script.Parent.SidebarFrame.ScrollingFrame.Choice1.C1EB.MouseButton1Click:connect(function()
		if ExecutorWindowOpen == false then
			ExecutorWindowOpen = true
			script.Parent.ExecutorWindow:TweenPosition(UDim2.new(0,200,0.5,-20), "Out", "Quint", 1, true)
			
			ScriptHubWindowOpen = false
			script.Parent.ScriptHubWindow:TweenPosition(UDim2.new(1,200,0.5,-20), "Out", "Quint", 1, true)
			SettingsWindowOpen = false
			script.Parent.SettingsWindow:TweenPosition(UDim2.new(1,200,0.5,-20), "Out", "Quint", 1, true)
			
		else
			ExecutorWindowOpen = false
			script.Parent.ExecutorWindow:TweenPosition(UDim2.new(1,200,0.5,-20), "Out", "Quint", 1, true)
		end
	end)
	
	script.Parent.SidebarFrame.ScrollingFrame.Choice2.C2EB.MouseButton1Click:connect(function()
		if ScriptHubWindowOpen == false then
			ScriptHubWindowOpen = true
			script.Parent.ScriptHubWindow:TweenPosition(UDim2.new(0,200,0.5,-20), "Out", "Quint", 1, true)
			
			ExecutorWindowOpen = false
			script.Parent.ExecutorWindow:TweenPosition(UDim2.new(1,200,0.5,-20), "Out", "Quint", 1, true)
			SettingsWindowOpen = false
			script.Parent.SettingsWindow:TweenPosition(UDim2.new(1,200,0.5,-20), "Out", "Quint", 1, true)
		else
			ScriptHubWindowOpen = false
			script.Parent.ScriptHubWindow:TweenPosition(UDim2.new(1,200,0.5,-20), "Out", "Quint", 1, true)
		end
	end)
	
	script.Parent.SidebarFrame.ScrollingFrame.Choice3.C3EB.MouseButton1Click:connect(function()
		if SettingsWindowOpen == false then
			SettingsWindowOpen = true
			script.Parent.SettingsWindow:TweenPosition(UDim2.new(0,200,0.5,-20), "Out", "Quint", 1, true)
			
			ExecutorWindowOpen = false
			script.Parent.ExecutorWindow:TweenPosition(UDim2.new(1,200,0.5,-20), "Out", "Quint", 1, true)
			ScriptHubWindowOpen = false
			script.Parent.ScriptHubWindow:TweenPosition(UDim2.new(1,200,0.5,-20), "Out", "Quint", 1, true)
		else
			SettingsWindowOpen = false
			script.Parent.SettingsWindow:TweenPosition(UDim2.new(1,200,0.5,-20), "Out", "Quint", 1, true)
		end
	end)
	
	-- Executor Window
	
	script.Parent.ExecutorWindow.CloseB.MouseButton1Click:connect(function()
		ExecutorWindowOpen = false
		script.Parent.ExecutorWindow:TweenPosition(UDim2.new(1,200,0.5,-20), "Out", "Quint", 1, true)
	end)
	
	script.Parent.ExecutorWindow.ExecuteB.MouseButton1Click:connect(function()
		--print(script.Parent.ExecutorWindow.ScrollingBox.TextBox.Text)
		executecode(script.Parent.ExecutorWindow.ScrollingBox.TextBox.Text)
	end)
	
	script.Parent.ExecutorWindow.PasteandExecuteB.MouseButton1Click:connect(function()
		executeclipboard()
	end)
	
	script.Parent.ExecutorWindow.DevModeB.MouseButton1Click:connect(function()
		if isfile("injectcode.txt") == false then
			script.Parent.ExecutorWindow.ScrollingBox.TextBox.Text = "The inject code for Dev Mode is not found, please open the Vega X Windows Client, get your inject code, and paste it in settings."
		else
			DevConnect(readfile("injectcode.txt"))
		end
		
	end)
	
	-- Executor Window Tabbing System
	
	local scriptamt = 1
	local listamt = 1
	local scripts = {""}
	local scriptsname = {"Script 1"}
	
	script.Parent.ExecutorWindow.TabbingSystem.LastPage.MouseButton1Click:connect(function()
		if scriptamt > 1 then
			scripts[scriptamt] = script.Parent.ExecutorWindow.ScrollingBox.TextBox.Text
			scriptamt = scriptamt - 1
			script.Parent.ExecutorWindow.ScrollingBox.TextBox.Text = scripts[scriptamt]
			script.Parent.ExecutorWindow.TabbingSystem.ScriptPage.Text = scriptsname[scriptamt]
		end
	end)
	
	script.Parent.ExecutorWindow.TabbingSystem.NextPage.MouseButton1Click:connect(function()
	
		-- Save Current Script Tab
		scripts[scriptamt] = script.Parent.ExecutorWindow.ScrollingBox.TextBox.Text
		scriptamt = scriptamt + 1
	
		if scriptamt ~= listamt then
			table.insert(scripts, "")
			table.insert(scriptsname, "Script "..scriptamt)
			listamt = listamt + 1
		end
	
		script.Parent.ExecutorWindow.ScrollingBox.TextBox.Text = scripts[scriptamt]
		script.Parent.ExecutorWindow.TabbingSystem.ScriptPage.Text = scriptsname[scriptamt]
	end)
	
	script.Parent.ExecutorWindow.TabbingSystem.EditTabName.MouseButton1Click:connect(function()
		script.Parent.ExecutorWindow.TabbingSystem.ScriptPage.Visible = false
		script.Parent.ExecutorWindow.TabbingSystem.EditTabBox.Visible = true
	end)
	
	script.Parent.ExecutorWindow.TabbingSystem.EditTabBox.FocusLost:connect(function()
		scriptsname[scriptamt] = script.Parent.ExecutorWindow.TabbingSystem.EditTabBox.Text
		script.Parent.ExecutorWindow.TabbingSystem.ScriptPage.Text = scriptsname[scriptamt]
	
		script.Parent.ExecutorWindow.TabbingSystem.ScriptPage.Visible = true
		script.Parent.ExecutorWindow.TabbingSystem.EditTabBox.Visible = false
	
		script.Parent.ExecutorWindow.TabbingSystem.EditTabBox.Text = ""
	end)
	
	
	script.Parent.ExecutorWindow.ClearB.MouseButton1Click:connect(function()
		script.Parent.ExecutorWindow.ScrollingBox.TextBox.Text = ""
	end)
	
	-- Script Hub Window
	
	script.Parent.ScriptHubWindow.CloseB.MouseButton1Click:connect(function()
		ScriptHubWindowOpen = false
		script.Parent.ScriptHubWindow:TweenPosition(UDim2.new(1,200,0.5,-20), "Out", "Quint", 1, true)
	end)
	
	-- Settings Window
	
	script.Parent.SettingsWindow.CloseB.MouseButton1Click:connect(function()
		SettingsWindowOpen = false
		script.Parent.SettingsWindow:TweenPosition(UDim2.new(1,200,0.5,-20), "Out", "Quint", 1, true)
	end)
	
	-- Scrolling Frame Canvas Adjuster
	-- Credits: https://devforum.roblox.com/t/have-uilistlayout-set-the-canvassize-property-of-scrollingframes-automatically/76287
	
	script.Parent.ScriptHubWindow.ScrollingFrame.UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
		script.Parent.ScriptHubWindow.ScrollingFrame.CanvasSize = UDim2.new(0,0,0,script.Parent.ScriptHubWindow.ScrollingFrame.UIListLayout.AbsoluteContentSize.Y)
	end)
	
	script.Parent.ScriptListWindow.ScriptListFrame.UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
		script.Parent.ScriptListWindow.ScriptListFrame.CanvasSize = UDim2.new(0,0,0,script.Parent.ScriptListWindow.ScriptListFrame.UIListLayout.AbsoluteContentSize.Y)
	end)
	
	script.Parent.SettingsWindow.ScrollingFrame.UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
		script.Parent.SettingsWindow.ScrollingFrame.CanvasSize = UDim2.new(0,0,0,script.Parent.SettingsWindow.ScrollingFrame.UIListLayout.AbsoluteContentSize.Y)
	end)
	
	script.Parent.SidebarFrame.ScrollingFrame.UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
		script.Parent.SidebarFrame.ScrollingFrame.CanvasSize = UDim2.new(0,0,0,script.Parent.SidebarFrame.ScrollingFrame.UIListLayout.AbsoluteContentSize.Y)
	end)
	
	-- Username Setting
	-- From: https://www.youtube.com/watch?v=e4nBaHjr5Hw
	-- dunno how to make one myself l0l
	
	local plrAvatar, isReady = game:GetService("Players"):GetUserThumbnailAsync(game:GetService("Players").LocalPlayer.UserId, Enum.ThumbnailType.AvatarBust, Enum.ThumbnailSize.Size48x48)
	
	script.Parent.SidebarFrame.ScrollingFrame.UsernamePlace.Title.Text = "Hello!\n"..game:GetService("Players").LocalPlayer.Name
	script.Parent.SidebarFrame.ScrollingFrame.UsernamePlace.Icon.ProfileImage.Image = plrAvatar
	
	
end
coroutine.wrap(UENDBFZ_fake_script)()
local function KEARIL_fake_script() -- ScriptHubWindow.ScriptBloxCode 
	local script = Instance.new('LocalScript', ScriptHubWindow)

	ChosenColor = "#1890ff"
	local page = 1
	local searchstring = "a"
	
	if isfile("theme_vegax_color.txt") == true then
		ChosenColor = readfile("theme_vegax_color.txt")
	end
	
	local httpService = game:GetService("HttpService");
	local content = {};
	
	local scriptBlox = {
		host = "https://scriptblox.com"
	}
	--[[
	
	function scriptBlox:loadImage(path, id)
		if not isfolder("ScriptBlox") then
			makefolder("ScriptBlox");
		end
	
		local fileName = "ScriptBlox/" .. id .. ".webp";
		local data = http_request({
			Url = scriptBlox.host .. path,
			Method = "GET"
		});
	
		if data.Success then
			writefile(fileName, data.Body);
	        return getcustomasset(fileName);
	    else
	        return "";
		end
	end
	
	function scriptBlox:loadImage(gameId)
		local thumbnailUrl = "https://www.roblox.com/asset-thumbnail/image?assetId=" .. tostring(gameId) .. "&width=420&height=420&format=png"
	
		local success, imageData = pcall(function()
			return http_request({
				Url = thumbnailUrl,
				Method = "GET"
			})
		end)
	
		if success and imageData.Success then
			local thumbnailId = game:GetService("ContentProvider"):PreloadAsync({ imageData.Body })
			return thumbnailId
		else
			warn("Failed to load image for game ID:", gameId)
			return ""
		end
	end
	
	]]
	
	--[[
	function scriptBlox:GET(path)
		local result = http_request({
			Url = scriptBlox.host .. path,
			Method = "GET"
		})
	
		if result.Success then
			local status, data = pcall(function()
				return httpService:JSONDecode(result.Body)
			end)
	
			if status then
				return data.result.scripts
			else
				warn("Error decoding JSON:", data)
				return {
					result = {
						totalPages = 1,
						scripts = {}
					}
				}
			end
		else
			warn("HTTP request failed:", result.StatusCode, result.Body)
			return {
				result = {
					totalPages = 1,
					scripts = {}
				}
			}
		end
	end
	
	]]
	
	function scriptBlox:GET(path)
		local result = http_request({
			Url = scriptBlox.host .. path,
			Method = "GET"
		})
	
		if result.Success then
			local status, data = pcall(function()
				return httpService:JSONDecode(result.Body)
			end)
	
			if status and data and data.result and data.result.scripts then
				return data.result.scripts
			else
				warn("Error decoding JSON:", data)
			end
		else
			warn("HTTP request failed:", result.StatusCode, result.Body)
		end
	
		-- Return a default value in case of error or missing data
		return {
			result = {
				totalPages = 1,
				scripts = {}
			}
		}
	end
	
	
	function scriptBlox:getScripts(searchQuery, page, maxResults)
		local path = "/api/script/search?q=" .. searchQuery .. "&mode=free&max=" .. tostring(maxResults) .. "&page=" .. tostring(page);
		local data = scriptBlox:GET(path);
		
		return data;
	end
	
	function Create_Script_Rectangle(title, subtitle, gamingid, scripttext)
		local S1 = Instance.new("Frame")
		local Execute = Instance.new("ImageButton")
		local UICorner = Instance.new("UICorner")
		local UICorner_2 = Instance.new("UICorner")
		local ImageLabel = Instance.new("ImageLabel")
		local UICorner_3 = Instance.new("UICorner")
		local SubTitle = Instance.new("TextLabel")
		local Title = Instance.new("TextLabel")
	
		--Properties:
	
		S1.Name = "S1"
		S1.Parent = ScrollingFrame_2
		S1.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
		S1.BorderSizePixel = 0
		S1.Size = UDim2.new(1, -10, 0, 80)
	
		Execute.Name = "Execute"
		Execute.Parent = S1
		Execute.AnchorPoint = Vector2.new(1, 0.5)
		Execute.BackgroundColor3 = Color3.fromRGB(67, 67, 67)
		Execute.BackgroundTransparency = 0.400
		Execute.BorderSizePixel = 0
		Execute.LayoutOrder = 10
		Execute.Position = UDim2.new(1, -23, 0.5, 0)
		Execute.Size = UDim2.new(0, 34, 0, 34)
		Execute.ZIndex = 2
		Execute.Image = "rbxassetid://3926307971"
		Execute.ImageRectOffset = Vector2.new(764, 244)
		Execute.ImageRectSize = Vector2.new(36, 36)
		Execute.MouseButton1Click:Connect(function()
			executecode(scripttext)
		end)
	
		UICorner.CornerRadius = UDim.new(0, 10)
		UICorner.Parent = Execute
	
		UICorner_2.CornerRadius = UDim.new(0, 10)
		UICorner_2.Parent = S1
	
		ImageLabel.Parent = S1
		ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		ImageLabel.BackgroundTransparency = 1.000
		ImageLabel.BorderSizePixel = 0
		ImageLabel.Size = UDim2.new(1, 0, 1, 0)
		ImageLabel.Image = "https://assetgame.roblox.com/Game/Tools/ThumbnailAsset.ashx?aid="..gamingid.."&fmt=png&wd=420&ht=420"
		ImageLabel.ScaleType = Enum.ScaleType.Crop
	
		UICorner_3.CornerRadius = UDim.new(0, 10)
		UICorner_3.Parent = ImageLabel
	
		SubTitle.Name = "SubTitle"
		SubTitle.Parent = S1
		SubTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		SubTitle.BackgroundTransparency = 1.000
		SubTitle.BorderSizePixel = 0
		SubTitle.Position = UDim2.new(0, 25, 0.5, 0)
		SubTitle.Size = UDim2.new(1, -93, 0.5, 0)
		SubTitle.Font = Enum.Font.Gotham
		SubTitle.Text = subtitle
		SubTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
		SubTitle.TextSize = 14.000
		SubTitle.TextXAlignment = Enum.TextXAlignment.Left
		SubTitle.TextYAlignment = Enum.TextYAlignment.Top
	
		Title.Name = "Title"
		Title.Parent = S1
		Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Title.BackgroundTransparency = 1.000
		Title.BorderSizePixel = 0
		Title.Position = UDim2.new(0, 25, 0, 0)
		Title.Size = UDim2.new(1, -93, 0.5, 0)
		Title.Font = Enum.Font.GothamBold
		Title.Text = title
		Title.TextColor3 = Color3.fromRGB(255, 255, 255)
		Title.TextSize = 19.000
		Title.TextXAlignment = Enum.TextXAlignment.Left
		Title.TextYAlignment = Enum.TextYAlignment.Bottom
	
		table.insert(content, S1);
	end
	
	function Clear() -- Clears the script list
		for _, element in pairs(content) do
			element:Destroy();
		end
	
		content = {};
		--delfolder("ScriptBlox"); -- clearing cache
	end
	
	--[[
	function Handle_Results(results) 
		if results.error then
			print("Error: "..results.error);
			--table.foreach(results.error, print)
			return
		end
	
		Clear();
	
		for _, scriptData in pairs(results) do
			local gameData = scriptData.game;
			--local image = scriptBlox:loadImage(gameData.imageUrl, scriptData._id);
	
			Create_Script_Rectangle(scriptData.title, gameData.name, gameData.gameId, scriptData.script);
		end
	end
	
	]]
	
	function Handle_Results(results)
		if results then
			Clear()
	
			for _, scriptData in pairs(results) do
				local gameData = scriptData.game
				Create_Script_Rectangle(scriptData.title, gameData.name, gameData.gameId, scriptData.script)
			end
		else
			error("Invalid JSON structure. Unable to process results.")
		end
	end
	
	
	function Search(query) -- Searches using a query and parses the result into a script list
		page = 1
		script.Parent.PaginationFrame.PageLabel.Text = page
		if query == "" then
			searchstring = "a"
		else
			searchstring = httpService:UrlEncode(query)
		end
		
		local searchResults = scriptBlox:getScripts(searchstring, 1, 20);
		Handle_Results(searchResults);
	end
	
	-- Front page
	
	local frontPage = scriptBlox:getScripts("a", 1, 20);
	
	Handle_Results(frontPage);
	
	script.Parent.SearchBox.FocusLost:connect(function()
		script.Parent.PaginationFrame.PageLabel.Text = page
		Search(script.Parent.SearchBox.Text)
	end)
	
	script.Parent.PaginationFrame.LeftPage.MouseButton1Click:connect(function()	
		if page ~= 1 then
			page -= 1
			Handle_Results(scriptBlox:getScripts(searchstring, page, 20));
		end
		script.Parent.PaginationFrame.PageLabel.Text = page
	end)
	
	script.Parent.PaginationFrame.RightPage.MouseButton1Click:connect(function()
		page += 1	
		Handle_Results(scriptBlox:getScripts(searchstring, page, 20));
		script.Parent.PaginationFrame.PageLabel.Text = page
	end)
end
coroutine.wrap(KEARIL_fake_script)()
local function WVKWVWW_fake_script() -- ScrollingBox.TextBoxCode 
	local script = Instance.new('LocalScript', ScrollingBox)

	local TextBox = script.Parent.TextBox
	local LineWatcher = script.Parent.Line
	local FontSize = TextBox.TextSize
	local TopCount
	-----
	local function resize(iter, subtract, maxsize)
	    for i = 1,iter do
			maxsize.CanvasSize = UDim2.new(0,maxsize.CanvasSize.X.Offset,0,(iter * FontSize))
			maxsize.CanvasPosition = Vector2.new(maxsize.CanvasPosition.X, (iter * FontSize))
	    end
	end
	-----
	TextBox:GetPropertyChangedSignal("Text"):Connect(function()
		local str = TextBox.Text
	    local offset = 32
		local textsize = TextBox.TextBounds.X + offset
		script.Parent.CanvasSize = UDim2.new(0,textsize,0,script.Parent.CanvasSize.Y.Offset)
		script.Parent.CanvasPosition = Vector2.new(textsize, script.Parent.CanvasPosition.Y)
	    local _,count = str:gsub('\n','\n')
	    local NewCount = count + 1
		if not LineWatcher.Text:find(NewCount) then
			TopCount = NewCount
			for i = 1,TopCount do
				local PreviousText = LineWatcher.Text
				if not LineWatcher.Text:find(i) then
					LineWatcher.Text = tostring(PreviousText..i..'\n')
	            end
	        end
			resize(TopCount,false,script.Parent)
		else if TopCount ~= NewCount and TopCount ~= nil then
				LineWatcher.Text = ""
				TopCount = NewCount
				for i = 1,TopCount do
					LineWatcher.Text = tostring(LineWatcher.Text..i..'\n')
	            end
				resize(TopCount,true,script.Parent)
	        end
	    end
	end)
end
coroutine.wrap(WVKWVWW_fake_script)()
local function VJJF_fake_script() -- VegaXAndroidUI.SettingsSystem 
	local script = Instance.new('LocalScript', VegaXAndroidUI)

	ChosenColor = "#C33939"
	
	function LoadColors()
		script.Parent.SidebarFrame.Banner.BackgroundColor3 = Color3.fromHex(ChosenColor)
		script.Parent.SidebarFrame.ScrollingFrame.UsernamePlace.Icon.BackgroundColor3 = Color3.fromHex(ChosenColor)
	
		script.Parent.SidebarFrame.ScrollingFrame.Choice1.Icon.BackgroundColor3 = Color3.fromHex(ChosenColor)
		script.Parent.SidebarFrame.ScrollingFrame.Choice1.C1EB.BackgroundColor3 = Color3.fromHex(ChosenColor)
	
		script.Parent.SidebarFrame.ScrollingFrame.Choice2.Icon.BackgroundColor3 = Color3.fromHex(ChosenColor)
		script.Parent.SidebarFrame.ScrollingFrame.Choice2.C2EB.BackgroundColor3 = Color3.fromHex(ChosenColor)
	
		script.Parent.SidebarFrame.ScrollingFrame.Choice3.Icon.BackgroundColor3 = Color3.fromHex(ChosenColor)
		script.Parent.SidebarFrame.ScrollingFrame.Choice3.C3EB.BackgroundColor3 = Color3.fromHex(ChosenColor)
	
		script.Parent.KeySystem.Banner.BackgroundColor3 = Color3.fromHex(ChosenColor)
		script.Parent.KeySystem.GetKeyB.BackgroundColor3 = Color3.fromHex(ChosenColor)
		script.Parent.KeySystem.ApproveKeyB.BackgroundColor3 = Color3.fromHex(ChosenColor)
	
		script.Parent.ExecutorWindow.TabbingSystem.BackgroundColor3 = Color3.fromHex(ChosenColor)
		script.Parent.ExecutorWindow.ExecuteB.BackgroundColor3 = Color3.fromHex(ChosenColor)
		script.Parent.ExecutorWindow.PasteandExecuteB.BackgroundColor3 = Color3.fromHex(ChosenColor)
		script.Parent.ExecutorWindow.DevModeB.BackgroundColor3 = Color3.fromHex(ChosenColor)
	
		script.Parent.SettingsWindow.ScrollingFrame.S1.AccentColorPreview.BackgroundColor3 = Color3.fromHex(ChosenColor)
	end
	
	-- Set Color
	
	if not isfile("theme_vegax_color.txt") then
		writefile("theme_vegax_color.txt", "#C33939")
	else
		local success, ChosenColor = pcall(readfile, "theme_vegax_color.txt")
	
		if success then
			LoadColors()
		else
			warn("æ— æ³•è¯»å–æ–‡ä»¶: " .. ChosenColor)
		end
	end
	
	
	--if not isfile("theme_vegax_color.txt") then
		--writefile("theme_vegax_color.txt", "#C33939")
	--else
		--ChosenColor = readfile("theme_vegax_color.txt")
		--script.Parent.IntroFrame.ImageColor3 = Color3.fromHex(ChosenColor)
		--LoadColors()
	--end
	
	
	-- Set FPS
	local success, result = pcall(function()
		if isfile("settings_fps.txt") == true then
			setfpscap(tonumber(readfile("settings_fps.txt")))
		end
	end)
	
	if not success then
		-- Handle the error, you can print a message or take other appropriate actions
		print("æ— æ³•è¯»å–æ–‡ä»¶:", result)
	end
	
	
	--if isfile("settings_fps.txt") == true then
		--setfpscap(tonumber(readfile("settings_fps.txt")))
	--end
	
	-- Set Inject Code
	local success, result = pcall(function()
		if isfile("injectcode.txt") then
			script.Parent.SettingsWindow.ScrollingFrame.S3.InjectCodeTextbox.Text = readfile("injectcode.txt")
		end
	end)
	
	if not success then
		print("æ— æ³•è¯»å–æ–‡ä»¶:", result)
	end
	
	--if isfile("injectcode.txt") == true then
		--script.Parent.SettingsWindow.ScrollingFrame.S3.InjectCodeTextbox.Text = readfile("injectcode.txt")
	--end
	
	
	script.Parent.SettingsWindow.ScrollingFrame.S1.SubmitAccent.MouseButton1Click:Connect(function()
		writefile("theme_vegax_color.txt", script.Parent.SettingsWindow.ScrollingFrame.S1.AccentTextBox.Text)
		ChosenColor = script.Parent.SettingsWindow.ScrollingFrame.S1.AccentTextBox.Text
		LoadColors()
	end)
	
	script.Parent.SettingsWindow.ScrollingFrame.S2.SubmitFPS.MouseButton1Click:Connect(function()
		writefile("settings_fps.txt", script.Parent.SettingsWindow.ScrollingFrame.S2.FPSTextBox.Text)
		setfpscap(tonumber(script.Parent.SettingsWindow.ScrollingFrame.S2.FPSTextBox.Text))
	end)
	
	script.Parent.SettingsWindow.ScrollingFrame.S2.ResetFPS.MouseButton1Click:Connect(function()
		writefile("settings_fps.txt", "60")
		setfpscap(60)
	end)
	
	script.Parent.SettingsWindow.ScrollingFrame.S3.SubmitCode.MouseButton1Click:Connect(function()
		writefile("injectcode.txt", script.Parent.SettingsWindow.ScrollingFrame.S3.InjectCodeTextbox.Text)
		DevConnect(script.Parent.SettingsWindow.ScrollingFrame.S3.InjectCodeTextbox.Text)
	end)
	
	script.Parent.SettingsWindow.ScrollingFrame.S3.ResetCode.MouseButton1Click:Connect(function()
		script.Parent.SettingsWindow.ScrollingFrame.S3.InjectCodeTextbox.Text = ""
		delfile("injectcode.txt")
	end)
	
	script.Parent.SettingsWindow.ScrollingFrame.S4.ToggleBTN.MouseButton1Click:Connect(function()
	
	end)
end
coroutine.wrap(VJJF_fake_script)()
local function KJDH_fake_script() -- VegaXAndroidUI.Loading 
	local script = Instance.new('LocalScript', VegaXAndroidUI)

	ATime = 2
	zidongjiaobenyunxinglujingzifuchuan = "è‡ªåŠ¨è„šæœ¬è¿è¡Œ"
	
	-- Key System Pre-Requisities
	
	local PandaAuth = loadstring(game:HttpGet('https://pandadevelopment.net/servicelib?service=vegax&core=roblox&param=v2'))()
	
	function Generate_Key()
		return PandaAuth:GetKey("vegax");
	end
	
	function ValidateKey(Key)
		return PandaAuth:ValidateKey("vegax", tostring(Key))
	end
	
	function CheckIfAutoexecExists()
		
		if (arceus.isarceusfolder(zidongjiaobenyunxinglujingzifuchuan) == false) then
			arceus.makearceusfolder("è‡ªåŠ¨è„šæœ¬è¿è¡Œ")
		end
		
	end
	
	function LoadAutoexec()
		if (arceus.isarceusfolder(zidongjiaobenyunxinglujingzifuchuan) == false) then
			for _, scriptfile in pairs(arceus.listarceusfiles(zidongjiaobenyunxinglujingzifuchuan)) do
				executecode(arceus.readarceusfile(scriptfile))
			end
		end
	end
	
	-- Multi-Language Key System Variables
	local KSSubTitleNotif1 = "The Key System Link has been pasted into your Clipboard, insert it into your Browser (Desktop Recommended)."
	local KSSubTitleNotif2 = "This key is not valid, go to our Discord Server if this is not correct."
	local KSSubTitleNotif3 = "The Discord Link has been pasted into your Clipboard, insert it into the Discord app."
	local KSSubTitleNotif4 = "This key is valid, enjoy Vega X!"
	
	-- Loading
	
	--CheckIfAutoexecExists()
	
	if not isfile("vegax_key.txt") then
		writefile("vegax_key.txt", "")
	end
	
	script.Parent.VegaXMenuToggleFrame.Visible = true
	
	
	repeat until game:IsLoaded()
	for _,Key in pairs(script.Parent.IntroFrame.BackgroundFrame:GetChildren()) do
		game:GetService("TweenService"):Create(Key, TweenInfo.new(ATime), {BackgroundTransparency = 0}):Play()
		Key:TweenSize(UDim2.new(0.075,0,1,0), "Out", "Quad", ATime, true)
		wait(0.05)
	end
	
	wait(0.25)
	
	game:GetService("TweenService"):Create(script.Parent.IntroFrame.VegaXLogo, TweenInfo.new(1), {ImageTransparency = 0}):Play()
	script.Parent.IntroFrame.VegaXLogo:TweenPosition(UDim2.new(0.5,0,0.5,0), "Out", "Quad", 1, true)
	
	wait(1.5)
	
	game:GetService("TweenService"):Create(script.Parent.IntroFrame.VegaXLogo, TweenInfo.new(1), {ImageTransparency = 1}):Play()
	script.Parent.IntroFrame.VegaXLogo:TweenPosition(UDim2.new(0.5,0,0.3,0), "Out", "Quad", 1, true)
	
	for _,Key in pairs(script.Parent.IntroFrame.BackgroundFrame:GetChildren()) do
		game:GetService("TweenService"):Create(Key, TweenInfo.new(ATime), {BackgroundTransparency = 1}):Play()
		Key:TweenSize(UDim2.new(0.075,0,0,0), "Out", "Quad", ATime, true)
		wait(0.05)
	end
	
	wait(1)
	
	script.Parent.IntroFrame:Destroy()
	
	local success, result = pcall(function()
		return ValidateKey(readfile("vegax_key.txt"))
	end)
	
	if success and result then
		-- LoadAutoexec()
		script.Parent.KeySystem.Visible = false
		script.Parent.VegaXMenuToggleFrame.Visible = true
		_G.MenuOpen = true
		script.Parent.SidebarFrame:TweenPosition(UDim2.new(0, 0, 0.5, 0), "Out", "Quint", 1, true)
		getgenv().arceus = nil
	else
		script.Parent.KeySystem:TweenPosition(UDim2.new(0, 0, 0.5, -20), "Out", "Quad", 1, true)
	end
	
	
	-- Key System Stuff --
	script.Parent.KeySystem.CloseB.MouseButton1Click:connect(function()
		script.Parent.KeySystem:TweenPosition(UDim2.new(0,0,2,-20), "Out", "Quint", 1, true)
		wait(1)
		script.Parent.KSMenuToggleFrame.Visible = true
		script.Parent.KSMenuToggleFrame:TweenSize(UDim2.new(0,32,0,32), "Out", "Quint", 1, true)
	end)
	
	script.Parent.KSMenuToggleFrame.VegaXKSToggle.MouseButton1Click:connect(function()
		script.Parent.KSMenuToggleFrame:TweenSize(UDim2.new(0,0,0,0), "Out", "Quint", 1, true)
		wait(1)
		script.Parent.KSMenuToggleFrame.Visible = false
		script.Parent.KeySystem:TweenPosition(UDim2.new(0,0,0.5,-20), "Out", "Quint", 1, true)
	end)
	
	script.Parent.KeySystem.GetKeyB.MouseButton1Click:connect(function()
		script.Parent.KeySystem.SubTitle.FontFace.Weight = Enum.FontWeight.Bold
		script.Parent.KeySystem.SubTitle.Text = KSSubTitleNotif1
		setclipboard(Generate_Key())
	end)
	
	script.Parent.KeySystem.ApproveKeyB.MouseButton1Click:connect(function()
		script.Parent.KeySystem.SubTitle.FontFace.Weight = Enum.FontWeight.Regular
		if ValidateKey(script.Parent.KeySystem.TextBox.Text) then
			writefile("vegax_key.txt", script.Parent.KeySystem.TextBox.Text)
			-- LoadAutoexec()
			script.Parent.KeySystem.SubTitle.Text = KSSubTitleNotif4
	
			script.Parent.KeySystem:TweenPosition(UDim2.new(0, 0, 2, -20), "Out", "Quad", 1, true)
	
			wait(1)
	
			script.Parent.KeySystem.Visible = false;
			script.Parent.VegaXMenuToggleFrame.Visible = true;
	
			_G.MenuOpen = true;
	
			script.Parent.SidebarFrame:TweenPosition(UDim2.new(0,0,0.5,0), "Out", "Quint", 1, true)
			getgenv().arceus = nil
		else
			script.Parent.KeySystem.SubTitle.Text = KSSubTitleNotif2
		end
	end)
	
	script.Parent.KeySystem.JoinDiscordB.MouseButton1Click:connect(function()
		script.Parent.KeySystem.SubTitle.FontFace.Weight = Enum.FontWeight.Regular
		script.Parent.KeySystem.SubTitle.Text = KSSubTitleNotif3
		setclipboard("https://vegax.gg/discord.html")
	end)

	
end
coroutine.wrap(KJDH_fake_script)()
end)
tab3.newButton("Delta X", "Executor script", function()
DeltaVX()
end)
function DeltaVX()
-- BY SPDM TEAM

--[[

    Title: Delta Version: X
    Created By: Chillz#0348
    Retarded author: Lxnny the black chink
]]

local httpService = cloneref(game:GetService("HttpService"));

local _tablefind = clonefunction(table.find);

local isA = clonefunction(game.IsA);

local GuiService = game:GetService("GuiService")

makefolder("d_android_script_dir")

if gethui():FindFirstChild("DeltaGui") then
    gethui():FindFirstChild("DeltaGui"):Destroy()
end



if not isfile("iconsize") then
    writefile("iconsize", "Medium")
end

if not isfile("iconshape") then
    writefile("iconshape", "Squircle")
end

if not isfile("iconcolor") then
    writefile("iconcolor", "Blue")
end


getgenv().syn_backup = syn

if not isfile("uses_syn") then
    getgenv().syn = nil
end

-- Go to near end line for configs.

local function executescript(sc) runcode(sc) end

--local executeclipboard = readclipboard_hideenv


getgenv().readclipboard_hideenv = nil

local DELTA = {};
getgenv().Vm9vaE59PzVBeTVNdyY4JDsieDglUzdwRDNabyExbjR1ezBmYHNNT2kjOXk = true



if gethui():FindFirstChild("Delta") then
    gethui():FindFirstChild("Delta"):Destroy()
end

-- StarterGui.Delta
DELTA["1"] = Instance.new("ScreenGui", gethui());
DELTA["1"]["Name"] = [[Delta]];
DELTA["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;
DELTA["1"]["ResetOnSpawn"] = false;
DELTA["1"]["DisplayOrder"] = 10;
DELTA["1"].Enabled = false

-- Dis is for floating icon Players
DELTA["Ui"] = Instance.new("ScreenGui", gethui())
DELTA["Ui"].Enabled = false
DELTA["Ui"].Name = "DeltaIcon"

DELTA["DaIcon"] = Instance.new("ImageButton", DELTA["Ui"])

local iconsize = readfile("iconsize")
if iconsize == "Medium" then
    DELTA["DaIcon"].Size = UDim2.new(0,45,0,45)
elseif iconsize == "Small" then
    DELTA["DaIcon"].Size = UDim2.new(0,30,0,30)
elseif iconsize == "Large" then
    DELTA["DaIcon"].Size = UDim2.new(0,60,0,60)
else
    DELTA["DaIcon"].Size = UDim2.new(0,45,0,45)
end

local DaIconSize = DELTA["DaIcon"].Size
local ScreenCenterX = GuiService:GetScreenResolution().X / 2
local ScreenCenterY = GuiService:GetScreenResolution().Y / 2

local DaIconPositionX = ScreenCenterX - DaIconSize.X.Offset / 2
local DaIconPositionY = ScreenCenterY - DaIconSize.Y.Offset / 2
DELTA["DaIcon"].Position = UDim2.new(0, DaIconPositionX, 0, DaIconPositionY/20)
DELTA["DaIcon"].Draggable = true
DELTA["DaIcon"].Image = "rbxassetid://12730597972"
DELTA["DaIcon"].BackgroundColor3 = Color3.fromRGB(26, 28, 36)

DELTA["das"] = Instance.new("UICorner", DELTA["DaIcon"]);

local iconsize = readfile("iconshape")
if iconsize == "Squircle" then
    DELTA["das"]["CornerRadius"] = UDim.new(0.20000000298023224, 0);
elseif iconsize == "Circle" then
    DELTA["das"]["CornerRadius"] = UDim.new(0.50000000298023224, 0);
elseif iconsize == "Square" then
    DELTA["das"]["CornerRadius"] = UDim.new(0, 0);
else
    DELTA["das"]["CornerRadius"] = UDim.new(0.20000000298023224, 0);
end




DELTA["daStroke"] = Instance.new("UIStroke", DELTA["DaIcon"])
DELTA["daStroke"].Thickness = 2
DELTA["daStroke"].ApplyStrokeMode = Enum.ApplyStrokeMode.Border
local iconsize = readfile("iconcolor")
if iconsize == "Blue" then
    DELTA["daStroke"].Color = Color3.fromRGB(65, 169, 255)
elseif iconsize == "Green" then
    DELTA["daStroke"].Color = Color3.fromRGB(55, 219, 69)
elseif iconsize == "Purple" then
    DELTA["daStroke"].Color = Color3.fromRGB(125, 65, 255)
else
    DELTA["daStroke"].Color = Color3.fromRGB(65, 169, 255)
end


-- StarterGui.Delta.KeySystem
DELTA["2"] = Instance.new("Frame", DELTA["1"]);
DELTA["2"]["BackgroundColor3"] = Color3.fromRGB(26, 28, 36);
DELTA["2"]["AnchorPoint"] = Vector2.new(1, 0.5);
DELTA["2"]["Size"] = UDim2.new(0.328000009059906, 0, 1.2, 0);
DELTA["2"]["Position"] = UDim2.new(1, 0, 0.5, 0);
DELTA["2"]["Visible"] = false;
DELTA["2"]["Name"] = [[KeySystem]];

-- StarterGui.Delta.KeySystem.Holder
DELTA["3"] = Instance.new("Frame", DELTA["2"]);
DELTA["3"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["3"]["AnchorPoint"] = Vector2.new(1, 0.5);
DELTA["3"]["BackgroundTransparency"] = 1;
DELTA["3"]["Size"] = UDim2.new(1, 0, 1, 0);
DELTA["3"]["Position"] = UDim2.new(1, 0, 0.5, 0);
DELTA["3"]["Name"] = [[Holder]];

-- StarterGui.Delta.KeySystem.Holder.UIListLayout
DELTA["4"] = Instance.new("UIListLayout", DELTA["3"]);
DELTA["4"]["Padding"] = UDim.new(0.03999999910593033, 0);
DELTA["4"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

-- StarterGui.Delta.KeySystem.Holder.Title
DELTA["5"] = Instance.new("Frame", DELTA["3"]);
DELTA["5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["5"]["BackgroundTransparency"] = 1;
DELTA["5"]["Size"] = UDim2.new(1, 0, 0.18677474558353424, 0);
DELTA["5"]["Name"] = [[Title]];

-- StarterGui.Delta.KeySystem.Holder.Title.UIListLayout
DELTA["6"] = Instance.new("UIListLayout", DELTA["5"]);
DELTA["6"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

-- StarterGui.Delta.KeySystem.Holder.Title.Title
DELTA["7"] = Instance.new("TextLabel", DELTA["5"]);
DELTA["7"]["TextWrapped"] = true;
DELTA["7"]["TextScaled"] = true;
DELTA["7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["7"]["TextXAlignment"] = Enum.TextXAlignment.Left;
DELTA["7"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
DELTA["7"]["TextSize"] = 14;
DELTA["7"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["7"]["AnchorPoint"] = Vector2.new(0.5, 0);
DELTA["7"]["Size"] = UDim2.new(0.8398135900497437, 0, 0.4, 0);
DELTA["7"]["Text"] = [[Go use Arceus or Codex]];
DELTA["7"]["Name"] = [[Title]];
DELTA["7"]["BackgroundTransparency"] = 1;
DELTA["7"]["Position"] = UDim2.new(0.4199067950248718, 0, 0, 0);

-- StarterGui.Delta.KeySystem.Holder.Title.Paragraph
DELTA["8"] = Instance.new("TextLabel", DELTA["5"]);
DELTA["8"]["TextWrapped"] = true;
DELTA["8"]["TextScaled"] = true;
DELTA["8"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["8"]["TextXAlignment"] = Enum.TextXAlignment.Left;
DELTA["8"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
DELTA["8"]["TextSize"] = 14;
DELTA["8"]["TextColor3"] = Color3.fromRGB(115, 127, 152);
DELTA["8"]["AnchorPoint"] = Vector2.new(0.5, 1);
DELTA["8"]["Size"] = UDim2.new(0.8980631828308105, 0, 0.35361653566360474, 0);
DELTA["8"]["Text"] = [[Delta is so stupid lol]];
DELTA["8"]["Name"] = [[Paragraph]];
DELTA["8"]["BackgroundTransparency"] = 1;
DELTA["8"]["Position"] = UDim2.new(0.4490315914154053, 0, 0.85361647605896, 0);

-- StarterGui.Delta.KeySystem.Holder.Input
DELTA["9"] = Instance.new("Frame", DELTA["3"]);
DELTA["9"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["9"]["BackgroundTransparency"] = 1;
DELTA["9"]["LayoutOrder"] = 1;
DELTA["9"]["Size"] = UDim2.new(1, 0, 0.13557736575603485, 0);
DELTA["9"]["Position"] = UDim2.new(0, 0, 0.22365736961364746, 0);
DELTA["9"]["Name"] = [[Input]];

-- StarterGui.Delta.KeySystem.Holder.Input.Title
DELTA["a"] = Instance.new("TextLabel", DELTA["9"]);
DELTA["a"]["TextWrapped"] = true;
DELTA["a"]["TextScaled"] = true;
DELTA["a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["a"]["TextXAlignment"] = Enum.TextXAlignment.Left;
DELTA["a"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
DELTA["a"]["TextSize"] = 14;
DELTA["a"]["TextColor3"] = Color3.fromRGB(129, 143, 164);
DELTA["a"]["AnchorPoint"] = Vector2.new(0.5, 0);
DELTA["a"]["Size"] = UDim2.new(0.6213776469230652, 0, 0.2623675465583801, 0);
DELTA["a"]["Text"] = [[Enter key]];
DELTA["a"]["Name"] = [[Title]];
DELTA["a"]["BackgroundTransparency"] = 1;
DELTA["a"]["Position"] = UDim2.new(0.3106888234615326, 0, -2.339766922432318e-07, 0);

-- StarterGui.Delta.KeySystem.Holder.Input.TextBox
DELTA["b"] = Instance.new("Frame", DELTA["9"]);
DELTA["b"]["BorderSizePixel"] = 0;
DELTA["b"]["BackgroundColor3"] = Color3.fromRGB(31, 37, 47);
DELTA["b"]["AnchorPoint"] = Vector2.new(0.5, 1);
DELTA["b"]["Size"] = UDim2.new(0.9975729584693909, 0, 0.6160375475883484, 0);
DELTA["b"]["Position"] = UDim2.new(0.49878647923469543, 0, 1, 0);
DELTA["b"]["Name"] = [[TextBox]];

-- StarterGui.Delta.KeySystem.Holder.Input.TextBox.Input
DELTA["c"] = Instance.new("TextBox", DELTA["b"]);
DELTA["c"]["Active"] = true;
DELTA["c"]["PlaceholderColor3"] = Color3.fromRGB(104, 120, 144);
DELTA["c"]["BorderSizePixel"] = 0;
DELTA["c"]["TextSize"] = 14;
DELTA["c"]["TextXAlignment"] = Enum.TextXAlignment.Left;
DELTA["c"]["TextWrapped"] = true;
DELTA["c"]["TextScaled"] = true;
DELTA["c"]["BackgroundColor3"] = Color3.fromRGB(31, 37, 47);
DELTA["c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["c"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
DELTA["c"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
DELTA["c"]["BackgroundTransparency"] = 1;
DELTA["c"]["PlaceholderText"] = [[examplekey123$]];
DELTA["c"]["Size"] = UDim2.new(0.8865329027175903, 0, 0.5, 0);
DELTA["c"]["Selectable"] = false;
DELTA["c"]["Text"] = [[]];
DELTA["c"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
DELTA["c"]["Name"] = [[Input]];

-- StarterGui.Delta.KeySystem.Holder.Input.TextBox.UICorner
DELTA["d"] = Instance.new("UICorner", DELTA["b"]);
DELTA["d"]["CornerRadius"] = UDim.new(0.20000000298023224, 0);

-- StarterGui.Delta.KeySystem.Holder.Buttons
DELTA["e"] = Instance.new("Frame", DELTA["3"]);
DELTA["e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["e"]["BackgroundTransparency"] = 1;
DELTA["e"]["LayoutOrder"] = 2;
DELTA["e"]["Size"] = UDim2.new(1, 0, 0.19585928320884705, 0);
DELTA["e"]["Position"] = UDim2.new(0, 0, 0.39611735939979553, 0);
DELTA["e"]["Name"] = [[Buttons]];

-- StarterGui.Delta.KeySystem.Holder.Buttons.Button1
DELTA["f"] = Instance.new("ImageButton", DELTA["e"]);
DELTA["f"]["Active"] = false;
DELTA["f"]["BorderSizePixel"] = 0;
DELTA["f"]["BackgroundColor3"] = Color3.fromRGB(60, 137, 196);
DELTA["f"]["Selectable"] = false;
DELTA["f"]["Size"] = UDim2.new(0.9975729584693909, 0, 0.43042951822280884, 0);
DELTA["f"]["Name"] = [[Button1]];
DELTA["f"]["BackgroundTransparency"] = 0.8799999952316284;

-- StarterGui.Delta.KeySystem.Holder.Buttons.Button1.UICorner
DELTA["10"] = Instance.new("UICorner", DELTA["f"]);
DELTA["10"]["CornerRadius"] = UDim.new(0.20000000298023224, 0);

-- StarterGui.Delta.KeySystem.Holder.Buttons.Button1.UIStroke
DELTA["11"] = Instance.new("UIStroke", DELTA["f"]);
DELTA["11"]["Color"] = Color3.fromRGB(60, 137, 196);
DELTA["11"]["Thickness"] = 2;

-- StarterGui.Delta.KeySystem.Holder.Buttons.Button1.Input
DELTA["12"] = Instance.new("TextLabel", DELTA["f"]);
DELTA["12"]["TextWrapped"] = true;
DELTA["12"]["BorderSizePixel"] = 0;
DELTA["12"]["TextScaled"] = true;
DELTA["12"]["BackgroundColor3"] = Color3.fromRGB(31, 37, 47);
DELTA["12"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
DELTA["12"]["TextSize"] = 14;
DELTA["12"]["TextColor3"] = Color3.fromRGB(140, 206, 255);
DELTA["12"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
DELTA["12"]["Size"] = UDim2.new(0.8865329027175903, 0, 0.5, 0);
DELTA["12"]["Text"] = [[Continue]];
DELTA["12"]["Name"] = [[Input]];
DELTA["12"]["BackgroundTransparency"] = 1;
DELTA["12"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- StarterGui.Delta.KeySystem.Holder.Buttons.Button2
DELTA["13"] = Instance.new("ImageButton", DELTA["e"]);
DELTA["13"]["Active"] = false;
DELTA["13"]["BorderSizePixel"] = 0;
DELTA["13"]["BackgroundColor3"] = Color3.fromRGB(31, 37, 47);
DELTA["13"]["Selectable"] = false;
DELTA["13"]["AnchorPoint"] = Vector2.new(0, 1);
DELTA["13"]["Size"] = UDim2.new(0.9975729584693909, 0, 0.4304293990135193, 0);
DELTA["13"]["Name"] = [[Button2]];
DELTA["13"]["Position"] = UDim2.new(0, 0, 0.9999996423721313, 0);

-- StarterGui.Delta.KeySystem.Holder.Buttons.Button2.UICorner
DELTA["14"] = Instance.new("UICorner", DELTA["13"]);
DELTA["14"]["CornerRadius"] = UDim.new(0.20000000298023224, 0);

-- StarterGui.Delta.KeySystem.Holder.Buttons.Button2.UIStroke
DELTA["15"] = Instance.new("UIStroke", DELTA["13"]);
DELTA["15"]["Color"] = Color3.fromRGB(31, 37, 47);
DELTA["15"]["Thickness"] = 2;

-- StarterGui.Delta.KeySystem.Holder.Buttons.Button2.Input
DELTA["16"] = Instance.new("TextLabel", DELTA["13"]);
DELTA["16"]["TextWrapped"] = true;
DELTA["16"]["BorderSizePixel"] = 0;
DELTA["16"]["TextScaled"] = true;
DELTA["16"]["BackgroundColor3"] = Color3.fromRGB(31, 37, 47);
DELTA["16"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
DELTA["16"]["TextSize"] = 14;
DELTA["16"]["TextColor3"] = Color3.fromRGB(162, 191, 212);
DELTA["16"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
DELTA["16"]["Size"] = UDim2.new(0.8865329027175903, 0, 0.5, 0);
DELTA["16"]["Text"] = [[Receive Key]];
DELTA["16"]["Name"] = [[Input]];
DELTA["16"]["BackgroundTransparency"] = 1;
DELTA["16"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- StarterGui.Delta.KeySystem.Holder.Message
DELTA["17"] = Instance.new("ImageLabel", DELTA["3"]);
DELTA["17"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["17"]["Image"] = [[rbxassetid://13363093418]];
DELTA["17"]["LayoutOrder"] = 3;
DELTA["17"]["Size"] = UDim2.new(1, 0, 0.13, 0);
DELTA["17"]["Name"] = [[Message]];
DELTA["17"]["BackgroundTransparency"] = 1;
DELTA["17"]["Position"] = UDim2.new(0, 0, 0.6288594007492065, 0);

-- StarterGui.Delta.KeySystem.Holder.Message.Paragraph
DELTA["18"] = Instance.new("TextLabel", DELTA["17"]);
DELTA["18"]["TextWrapped"] = true;
DELTA["18"]["TextScaled"] = true;
DELTA["18"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["18"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
DELTA["18"]["TextSize"] = 14;
DELTA["18"]["TextColor3"] = Color3.fromRGB(115, 127, 152);
DELTA["18"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
DELTA["18"]["Size"] = UDim2.new(0.6844813227653503, 0, 0.4, 0);
DELTA["18"]["Text"] = [[PORCO NERO LENNY]];
DELTA["18"]["Name"] = [[Paragraph]];
DELTA["18"]["BackgroundTransparency"] = 1;
DELTA["18"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- StarterGui.Delta.KeySystem.Holder.Button2
DELTA["19"] = Instance.new("ImageButton", DELTA["3"]);
DELTA["19"]["Active"] = false;
DELTA["19"]["BorderSizePixel"] = 0;
DELTA["19"]["BackgroundColor3"] = Color3.fromRGB(31, 37, 47);
DELTA["19"]["Selectable"] = false;
DELTA["19"]["LayoutOrder"] = 4;
DELTA["19"]["AnchorPoint"] = Vector2.new(0, 1);
DELTA["19"]["Size"] = UDim2.new(0.9975730180740356, 0, 0.08399911224842072, 0);
DELTA["19"]["Name"] = [[Button2]];
DELTA["19"]["Position"] = UDim2.new(0, 0, 0.9326172471046448, 0);

-- StarterGui.Delta.KeySystem.Holder.Button2.UICorner
DELTA["1a"] = Instance.new("UICorner", DELTA["19"]);
DELTA["1a"]["CornerRadius"] = UDim.new(0.20000000298023224, 0);

-- StarterGui.Delta.KeySystem.Holder.Button2.Input
DELTA["1b"] = Instance.new("TextButton", DELTA["19"]);
DELTA["1b"]["TextWrapped"] = true;
DELTA["1b"]["Active"] = false;
DELTA["1b"]["BorderSizePixel"] = 0;
DELTA["1b"]["AutoButtonColor"] = false;
DELTA["1b"]["TextScaled"] = true;
DELTA["1b"]["BackgroundColor3"] = Color3.fromRGB(31, 37, 47);
DELTA["1b"]["TextSize"] = 14;
DELTA["1b"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
DELTA["1b"]["TextColor3"] = Color3.fromRGB(162, 191, 212);
DELTA["1b"]["Selectable"] = false;
DELTA["1b"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
DELTA["1b"]["Size"] = UDim2.new(0.8865329027175903, 0, 0.5, 0);
DELTA["1b"]["Name"] = [[Input]];
DELTA["1b"]["Text"] = [[Discord]];
DELTA["1b"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
DELTA["1b"]["BackgroundTransparency"] = 1;

-- StarterGui.Delta.KeySystem.Holder.Button2.UIStroke
DELTA["1c"] = Instance.new("UIStroke", DELTA["19"]);
DELTA["1c"]["Color"] = Color3.fromRGB(31, 37, 47);
DELTA["1c"]["Thickness"] = 2;

-- StarterGui.Delta.KeySystem.UIPadding
DELTA["1d"] = Instance.new("UIPadding", DELTA["2"]);
DELTA["1d"]["PaddingTop"] = UDim.new(0.05000000074505806, 0);
DELTA["1d"]["PaddingRight"] = UDim.new(0.15000000596046448, 0);
DELTA["1d"]["PaddingLeft"] = UDim.new(0.15000000596046448, 0);

-- StarterGui.Delta.KeySystem.ImageButton
DELTA["1e"] = Instance.new("ImageButton", DELTA["2"]);
DELTA["1e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["1e"]["AnchorPoint"] = Vector2.new(1, 0);
DELTA["1e"]["Image"] = [[rbxassetid://13363121645]];
DELTA["1e"]["Size"] = UDim2.new(0.07999999821186066, 0, 0.07999999821186066, 0);
DELTA["1e"]["Position"] = UDim2.new(1, 0, 0.02012072503566742, 0);
DELTA["1e"]["BackgroundTransparency"] = 1;

-- StarterGui.Delta.KeySystem.ImageButton.UIAspectRatioConstraint
DELTA["1f"] = Instance.new("UIAspectRatioConstraint", DELTA["1e"]);


-- StarterGui.Delta.KeySystem.Marker
DELTA["20"] = Instance.new("StringValue", DELTA["2"]);
DELTA["20"]["Value"] = [[Menu]];
DELTA["20"]["Name"] = [[Marker]];

-- StarterGui.Delta.KeySystem.LocalScript
DELTA["21"] = Instance.new("LocalScript", DELTA["2"]);


-- StarterGui.Delta.Sidebar
DELTA["22"] = Instance.new("Frame", DELTA["1"]);
DELTA["22"]["BorderSizePixel"] = 0;
DELTA["22"]["BackgroundColor3"] = Color3.fromRGB(24, 25, 33);
DELTA["22"]["AnchorPoint"] = Vector2.new(1, 0.5);
DELTA["22"]["Size"] = UDim2.new(0.07823482155799866, 0, 1.17552649974823, 0);
DELTA["22"]["Position"] = UDim2.new(0.9997662901878357, 0, 0.4742202162742615, 0);
DELTA["22"]["Visible"] = false;
DELTA["22"]["Name"] = [[Sidebar]];

-- StarterGui.Delta.Sidebar.UIListLayout
DELTA["23"] = Instance.new("UIListLayout", DELTA["22"]);
DELTA["23"]["VerticalAlignment"] = Enum.VerticalAlignment.Center;
DELTA["23"]["HorizontalAlignment"] = Enum.HorizontalAlignment.Center;
DELTA["23"]["Padding"] = UDim.new(0.03999999910593033, 0);
DELTA["23"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

-- StarterGui.Delta.Sidebar.Home
DELTA["24"] = Instance.new("ImageButton", DELTA["22"]);
DELTA["24"]["AutoButtonColor"] = false;
DELTA["24"]["BackgroundColor3"] = Color3.fromRGB(41, 45, 58);
DELTA["24"]["LayoutOrder"] = 1;
DELTA["24"]["Image"] = [[rbxassetid://0]];
DELTA["24"]["Size"] = UDim2.new(0.5135505795478821, 0, 0.08553311228752136, 0);
DELTA["24"]["Name"] = [[Home]];
DELTA["24"]["Position"] = UDim2.new(0.274707168340683, 0, 0.29129067063331604, 0);

-- StarterGui.Delta.Sidebar.Home.UIAspectRatioConstraint
DELTA["25"] = Instance.new("UIAspectRatioConstraint", DELTA["24"]);


-- StarterGui.Delta.Sidebar.Home.UICorner
DELTA["26"] = Instance.new("UICorner", DELTA["24"]);
DELTA["26"]["CornerRadius"] = UDim.new(0.4000000059604645, 0);

-- StarterGui.Delta.Sidebar.Home.ImageLabel
DELTA["27"] = Instance.new("ImageLabel", DELTA["24"]);
DELTA["27"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["27"]["ImageColor3"] = Color3.fromRGB(138, 145, 164);
DELTA["27"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
DELTA["27"]["Image"] = [[rbxassetid://13462268450]];
DELTA["27"]["Size"] = UDim2.new(0.4556732177734375, 0, 0.4556732177734375, 0);
DELTA["27"]["BackgroundTransparency"] = 1;
DELTA["27"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- StarterGui.Delta.Sidebar.Scripthub
DELTA["28"] = Instance.new("ImageButton", DELTA["22"]);
DELTA["28"]["AutoButtonColor"] = false;
DELTA["28"]["BackgroundColor3"] = Color3.fromRGB(41, 45, 58);
DELTA["28"]["LayoutOrder"] = 3;
DELTA["28"]["Image"] = [[rbxassetid://0]];
DELTA["28"]["Size"] = UDim2.new(0.5135507583618164, 0, 0.08553311228752136, 0);
DELTA["28"]["Name"] = [[Scripthub]];
DELTA["28"]["Position"] = UDim2.new(0.274707168340683, 0, 0.5514350533485413, 0);

-- StarterGui.Delta.Sidebar.Scripthub.UIAspectRatioConstraint
DELTA["29"] = Instance.new("UIAspectRatioConstraint", DELTA["28"]);


-- StarterGui.Delta.Sidebar.Scripthub.UICorner
DELTA["2a"] = Instance.new("UICorner", DELTA["28"]);
DELTA["2a"]["CornerRadius"] = UDim.new(0.4000000059604645, 0);

-- StarterGui.Delta.Sidebar.Scripthub.ImageLabel
DELTA["2b"] = Instance.new("ImageLabel", DELTA["28"]);
DELTA["2b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["2b"]["ImageColor3"] = Color3.fromRGB(138, 145, 164);
DELTA["2b"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
DELTA["2b"]["Image"] = [[rbxassetid://13462270380]];
DELTA["2b"]["Size"] = UDim2.new(0.40817680954933167, 0, 0.3085578680038452, 0);
DELTA["2b"]["BackgroundTransparency"] = 1;
DELTA["2b"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- StarterGui.Delta.Sidebar.Settings
DELTA["2c"] = Instance.new("ImageButton", DELTA["22"]);
DELTA["2c"]["AutoButtonColor"] = false;
DELTA["2c"]["BackgroundColor3"] = Color3.fromRGB(41, 45, 58);
DELTA["2c"]["LayoutOrder"] = 4;
DELTA["2c"]["Image"] = [[rbxassetid://0]];
DELTA["2c"]["Size"] = UDim2.new(0.5135504603385925, 0, 0.08553305268287659, 0);
DELTA["2c"]["Name"] = [[Settings]];
DELTA["2c"]["Position"] = UDim2.new(0.274707168340683, 0, 0.6815073490142822, 0);

-- StarterGui.Delta.Sidebar.Settings.UICorner
DELTA["2d"] = Instance.new("UICorner", DELTA["2c"]);
DELTA["2d"]["CornerRadius"] = UDim.new(0.4000000059604645, 0);

-- StarterGui.Delta.Sidebar.Settings.UIAspectRatioConstraint
DELTA["2e"] = Instance.new("UIAspectRatioConstraint", DELTA["2c"]);


-- StarterGui.Delta.Sidebar.Settings.ImageLabel
DELTA["2f"] = Instance.new("ImageLabel", DELTA["2c"]);
DELTA["2f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["2f"]["ImageColor3"] = Color3.fromRGB(138, 145, 164);
DELTA["2f"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
DELTA["2f"]["Image"] = [[rbxassetid://13462271348]];
DELTA["2f"]["Size"] = UDim2.new(0.4556732177734375, 0, 0.4556732177734375, 0);
DELTA["2f"]["BackgroundTransparency"] = 1;
DELTA["2f"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- StarterGui.Delta.Sidebar.Executor
DELTA["30"] = Instance.new("ImageButton", DELTA["22"]);
DELTA["30"]["AutoButtonColor"] = false;
DELTA["30"]["BackgroundColor3"] = Color3.fromRGB(41, 45, 58);
DELTA["30"]["LayoutOrder"] = 2;
DELTA["30"]["Image"] = [[rbxassetid://0]];
DELTA["30"]["Size"] = UDim2.new(0.5135505795478821, 0, 0.08553306758403778, 0);
DELTA["30"]["Name"] = [[Executor]];
DELTA["30"]["Position"] = UDim2.new(0.274707168340683, 0, 0.42136284708976746, 0);

-- StarterGui.Delta.Sidebar.Executor.UIAspectRatioConstraint
DELTA["31"] = Instance.new("UIAspectRatioConstraint", DELTA["30"]);


-- StarterGui.Delta.Sidebar.Executor.UICorner
DELTA["32"] = Instance.new("UICorner", DELTA["30"]);
DELTA["32"]["CornerRadius"] = UDim.new(0.4000000059604645, 0);

-- StarterGui.Delta.Sidebar.Executor.ImageLabel
DELTA["33"] = Instance.new("ImageLabel", DELTA["30"]);
DELTA["33"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["33"]["ImageColor3"] = Color3.fromRGB(138, 145, 164);
DELTA["33"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
DELTA["33"]["Image"] = [[rbxassetid://13462269327]];
DELTA["33"]["Size"] = UDim2.new(0.4556732177734375, 0, 0.4556732177734375, 0);
DELTA["33"]["BackgroundTransparency"] = 1;
DELTA["33"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- StarterGui.Delta.Sidebar.Console
DELTA["34"] = Instance.new("ImageButton", DELTA["22"]);
DELTA["34"]["AutoButtonColor"] = false;
DELTA["34"]["BackgroundColor3"] = Color3.fromRGB(41, 45, 58);
DELTA["34"]["LayoutOrder"] = 4;
DELTA["34"]["Size"] = UDim2.new(0.5135504603385925, 0, 0.08553305268287659, 0);
DELTA["34"]["Name"] = [[Console]];
DELTA["34"]["Position"] = UDim2.new(0.274707168340683, 0, 0.6815073490142822, 0);

-- StarterGui.Delta.Sidebar.Console.UICorner
DELTA["35"] = Instance.new("UICorner", DELTA["34"]);
DELTA["35"]["CornerRadius"] = UDim.new(0.4000000059604645, 0);

-- StarterGui.Delta.Sidebar.Console.UIAspectRatioConstraint
DELTA["36"] = Instance.new("UIAspectRatioConstraint", DELTA["34"]);


-- StarterGui.Delta.Sidebar.Console.ImageLabel
DELTA["37"] = Instance.new("ImageLabel", DELTA["34"]);
DELTA["37"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["37"]["ImageColor3"] = Color3.fromRGB(137, 139, 172);
DELTA["37"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
DELTA["37"]["Image"] = [[rbxassetid://13569242972]];
DELTA["37"]["Size"] = UDim2.new(0.4556732177734375, 0, 0.4556732177734375, 0);
DELTA["37"]["BackgroundTransparency"] = 1;
DELTA["37"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);



-- StarterGui.Delta.Sidebar.ToggleUI
DELTA["34tf"] = Instance.new("ImageButton", DELTA["22"]);
DELTA["34tf"]["AutoButtonColor"] = false;
DELTA["34tf"]["BackgroundColor3"] = Color3.fromRGB(41, 45, 58);
DELTA["34tf"]["LayoutOrder"] = 4;
DELTA["34tf"]["Size"] = UDim2.new(0.5135504603385925, 0, 0.08553305268287659, 0);
DELTA["34tf"]["Name"] = [[ToggleUI]];
DELTA["34tf"]["Position"] = UDim2.new(0.274707168340683, 0, 0.6815073490142822, 0);

-- StarterGui.Delta.Sidebar.ToggleUI.UICorner
DELTA["35tf"] = Instance.new("UICorner", DELTA["34tf"]);
DELTA["35tf"]["CornerRadius"] = UDim.new(0.4000000059604645, 0);

-- StarterGui.Delta.Sidebar.ToggleUI.UIAspectRatioConstraint
DELTA["36tf"] = Instance.new("UIAspectRatioConstraint", DELTA["34tf"]);


-- StarterGui.Delta.Sidebar.ToggleUI.ImageLabel
DELTA["37tf"] = Instance.new("ImageLabel", DELTA["34tf"]);
DELTA["37tf"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["37tf"]["ImageColor3"] = Color3.fromRGB(255,255,255);
DELTA["37tf"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
DELTA["37tf"]["Image"] = [[http://www.roblox.com/asset?id=13711943220]];
DELTA["37tf"]["Size"] = UDim2.new(0.4556732177734375, 0, 0.4556732177734375, 0);
DELTA["37tf"]["BackgroundTransparency"] = 1;
DELTA["37tf"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);



-- StarterGui.Delta.Sidebar.ActiveColor
DELTA["38"] = Instance.new("Color3Value", DELTA["22"]);
DELTA["38"]["Value"] = Color3.fromRGB(34, 160, 255);
DELTA["38"]["Name"] = [[ActiveColor]];

-- StarterGui.Delta.Sidebar.SidebarHandler
DELTA["39"] = Instance.new("LocalScript", DELTA["22"]);
DELTA["39"]["Name"] = [[SidebarHandler]];

-- StarterGui.Delta.Sidebar.InactiveColor
DELTA["3a"] = Instance.new("Color3Value", DELTA["22"]);
DELTA["3a"]["Value"] = Color3.fromRGB(41, 45, 58);
DELTA["3a"]["Name"] = [[InactiveColor]];

-- StarterGui.Delta.Scripthub
DELTA["3b"] = Instance.new("Frame", DELTA["1"]);
DELTA["3b"]["ZIndex"] = 100;
DELTA["3b"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
DELTA["3b"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
DELTA["3b"]["BackgroundTransparency"] = 1;
DELTA["3b"]["Size"] = UDim2.new(0.8483448028564453, 0, 0.8924814462661743, 0);
DELTA["3b"]["Position"] = UDim2.new(0.47624671459198, 0, 0.5082324147224426, 0);
DELTA["3b"]["Visible"] = false;
DELTA["3b"]["Name"] = [[Scripthub]];

-- StarterGui.Delta.Scripthub.Searchbar
DELTA["3c"] = Instance.new("Frame", DELTA["3b"]);
DELTA["3c"]["ZIndex"] = 2;
DELTA["3c"]["BackgroundColor3"] = Color3.fromRGB(38, 41, 50);
DELTA["3c"]["Size"] = UDim2.new(1, 0, 0.12585513293743134, 0);
DELTA["3c"]["Name"] = [[Searchbar]];

-- StarterGui.Delta.Scripthub.Searchbar.UICorner
DELTA["3d"] = Instance.new("UICorner", DELTA["3c"]);
DELTA["3d"]["CornerRadius"] = UDim.new(0.20000000298023224, 0);

-- StarterGui.Delta.Scripthub.Searchbar.ImageLabel
DELTA["3e"] = Instance.new("ImageLabel", DELTA["3c"]);
DELTA["3e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["3e"]["AnchorPoint"] = Vector2.new(0, 0.5);
DELTA["3e"]["Image"] = [[rbxassetid://13365156882]];
DELTA["3e"]["Size"] = UDim2.new(0.025552265346050262, 0, 0.40771156549453735, 0);
DELTA["3e"]["BackgroundTransparency"] = 1;
DELTA["3e"]["Position"] = UDim2.new(0.01834862306714058, 0, 0.5, 0);

-- StarterGui.Delta.Scripthub.Searchbar.ImageLabel.UIAspectRatioConstraint
DELTA["3f"] = Instance.new("UIAspectRatioConstraint", DELTA["3e"]);


-- StarterGui.Delta.Scripthub.Searchbar.Input
DELTA["40"] = Instance.new("TextBox", DELTA["3c"]);
DELTA["40"]["Active"] = true;
DELTA["40"]["TextSize"] = 14;
DELTA["40"]["TextXAlignment"] = Enum.TextXAlignment.Left;
DELTA["40"]["TextWrapped"] = true;
DELTA["40"]["TextScaled"] = true;
DELTA["40"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["40"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["40"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
DELTA["40"]["AnchorPoint"] = Vector2.new(0, 0.5);
DELTA["40"]["BackgroundTransparency"] = 1;
DELTA["40"]["PlaceholderText"] = [[Search on scriptblox.com...]];
DELTA["40"]["Size"] = UDim2.new(0.8766564130783081, 0, 0.35361653566360474, 0);
DELTA["40"]["Selectable"] = false;
DELTA["40"]["Text"] = [[]];
DELTA["40"]["Position"] = UDim2.new(0.061162080615758896, 0, 0.49999991059303284, 0);
DELTA["40"]["Name"] = [[Input]];

-- StarterGui.Delta.Scripthub.Holder
DELTA["41"] = Instance.new("ScrollingFrame", DELTA["3b"]);
DELTA["41"]["CanvasSize"] = UDim2.new(0, 0, 3, 0);
DELTA["41"]["ScrollBarImageTransparency"] = 1;
DELTA["41"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["41"]["VerticalScrollBarInset"] = Enum.ScrollBarInset.Always;
DELTA["41"]["AnchorPoint"] = Vector2.new(0.5, 1);
DELTA["41"]["BackgroundTransparency"] = 1;
DELTA["41"]["Size"] = UDim2.new(1, 0, 0.8350700736045837, 0);
DELTA["41"]["Selectable"] = false;
DELTA["41"]["ScrollBarThickness"] = 0;
DELTA["41"]["Position"] = UDim2.new(0.5, 0, 1, 0);
DELTA["41"]["Name"] = [[Holder]];

-- StarterGui.Delta.Scripthub.Holder.UIGridLayout
DELTA["42"] = Instance.new("UIGridLayout", DELTA["41"]);
DELTA["42"]["SortOrder"] = Enum.SortOrder.LayoutOrder;
DELTA["42"]["CellSize"] = UDim2.new(0.31299999356269836, 0, 0.10000000149011612, 0);
DELTA["42"]["CellPadding"] = UDim2.new(0.029999999329447746, 0, 0.009999999776482582, 0);

-- StarterGui.Delta.Scripthub.Holder.Reserved
DELTA["43"] = Instance.new("Folder", DELTA["41"]);
DELTA["43"]["Name"] = [[Reserved]];

-- StarterGui.Delta.Scripthub.Holder.Reserved.OldThumbnail
DELTA["44"] = Instance.new("ImageButton", DELTA["43"]);
DELTA["44"]["Active"] = false;
DELTA["44"]["BackgroundColor3"] = Color3.fromRGB(26, 27, 36);
DELTA["44"]["Selectable"] = false;
DELTA["44"]["Image"] = [[rbxassetid://13365407660]];
DELTA["44"]["Size"] = UDim2.new(0.313303679227829, 0, 0.31330370903015137, 0);
DELTA["44"]["Name"] = [[OldThumbnail]];
DELTA["44"]["Visible"] = false;
DELTA["44"]["Position"] = UDim2.new(9.43648092999183e-09, 0, 0, 0);

-- StarterGui.Delta.Scripthub.Holder.Reserved.OldThumbnail.UICorner
DELTA["45"] = Instance.new("UICorner", DELTA["44"]);
DELTA["45"]["CornerRadius"] = UDim.new(0.05000000074505806, 0);

-- StarterGui.Delta.Scripthub.Holder.Reserved.OldThumbnail.Overlay
DELTA["46"] = Instance.new("Frame", DELTA["44"]);
DELTA["46"]["BackgroundColor3"] = Color3.fromRGB(26, 27, 36);
DELTA["46"]["BackgroundTransparency"] = 0.09200000017881393;
DELTA["46"]["Size"] = UDim2.new(1, 0, 1, 0);
DELTA["46"]["Name"] = [[Overlay]];

-- StarterGui.Delta.Scripthub.Holder.Reserved.OldThumbnail.Overlay.UICorner
DELTA["47"] = Instance.new("UICorner", DELTA["46"]);
DELTA["47"]["CornerRadius"] = UDim.new(0.05000000074505806, 0);

-- StarterGui.Delta.Scripthub.Holder.Reserved.OldThumbnail.Overlay.Title
DELTA["48"] = Instance.new("Frame", DELTA["46"]);
DELTA["48"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["48"]["AnchorPoint"] = Vector2.new(0, 0.5);
DELTA["48"]["BackgroundTransparency"] = 1;
DELTA["48"]["Size"] = UDim2.new(0.8982645273208618, 0, 0.5242727994918823, 0);
DELTA["48"]["Position"] = UDim2.new(0.04966278374195099, 0, 0.3592950105667114, 0);
DELTA["48"]["Name"] = [[Title]];

-- StarterGui.Delta.Scripthub.Holder.Reserved.OldThumbnail.Overlay.Title.Title
DELTA["49"] = Instance.new("TextLabel", DELTA["48"]);
DELTA["49"]["TextWrapped"] = true;
DELTA["49"]["TextScaled"] = true;
DELTA["49"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["49"]["TextXAlignment"] = Enum.TextXAlignment.Left;
DELTA["49"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
DELTA["49"]["TextSize"] = 14;
DELTA["49"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["49"]["Size"] = UDim2.new(0.4335988163948059, 0, 0.5, 0);
DELTA["49"]["Text"] = [[Arsenal ðŸ°]];
DELTA["49"]["Name"] = [[Title]];
DELTA["49"]["BackgroundTransparency"] = 1;

-- StarterGui.Delta.Scripthub.Holder.Reserved.OldThumbnail.Overlay.Title.Paragraph
DELTA["4a"] = Instance.new("TextLabel", DELTA["48"]);
DELTA["4a"]["TextWrapped"] = true;
DELTA["4a"]["TextScaled"] = true;
DELTA["4a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["4a"]["TextXAlignment"] = Enum.TextXAlignment.Left;
DELTA["4a"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
DELTA["4a"]["TextTransparency"] = 0.30000001192092896;
DELTA["4a"]["TextSize"] = 14;
DELTA["4a"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["4a"]["AnchorPoint"] = Vector2.new(0, 1);
DELTA["4a"]["Size"] = UDim2.new(0.6313457489013672, 0, 0.5, 0);
DELTA["4a"]["Text"] = [[Aimbot, triggerbot, aim assist, wall-check gui]];
DELTA["4a"]["Name"] = [[Paragraph]];
DELTA["4a"]["BackgroundTransparency"] = 1;
DELTA["4a"]["Position"] = UDim2.new(0, 0, 1.0000001192092896, 0);

-- StarterGui.Delta.Scripthub.Holder.Reserved.OldThumbnail.Overlay.Title.Verified
DELTA["4b"] = Instance.new("Frame", DELTA["48"]);
DELTA["4b"]["BackgroundColor3"] = Color3.fromRGB(86, 173, 239);
DELTA["4b"]["AnchorPoint"] = Vector2.new(1, 0.5);
DELTA["4b"]["Size"] = UDim2.new(0.3242603540420532, 0, 0.3846021890640259, 0);
DELTA["4b"]["Position"] = UDim2.new(0.9999999403953552, 0, 0.2522916793823242, 0);
DELTA["4b"]["Name"] = [[Verified]];

-- StarterGui.Delta.Scripthub.Holder.Reserved.OldThumbnail.Overlay.Title.Verified.UICorner
DELTA["4c"] = Instance.new("UICorner", DELTA["4b"]);
DELTA["4c"]["CornerRadius"] = UDim.new(1, 0);

-- StarterGui.Delta.Scripthub.Holder.Reserved.OldThumbnail.Overlay.Title.Verified.Title
DELTA["4d"] = Instance.new("TextLabel", DELTA["4b"]);
DELTA["4d"]["TextWrapped"] = true;
DELTA["4d"]["TextScaled"] = true;
DELTA["4d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["4d"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
DELTA["4d"]["TextSize"] = 14;
DELTA["4d"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["4d"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
DELTA["4d"]["Size"] = UDim2.new(0.8315319418907166, 0, 0.5, 0);
DELTA["4d"]["Text"] = [[VERIFIED]];
DELTA["4d"]["Name"] = [[Title]];
DELTA["4d"]["BackgroundTransparency"] = 1;
DELTA["4d"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- StarterGui.Delta.Scripthub.Holder.Reserved.OldThumbnail.Overlay.Views
DELTA["4e"] = Instance.new("Frame", DELTA["46"]);
DELTA["4e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["4e"]["AnchorPoint"] = Vector2.new(0, 0.5);
DELTA["4e"]["BackgroundTransparency"] = 1;
DELTA["4e"]["Size"] = UDim2.new(0.8982645869255066, 0, 0.233791321516037, 0);
DELTA["4e"]["Position"] = UDim2.new(0.04966278374195099, 0, 0.7775326371192932, 0);
DELTA["4e"]["Name"] = [[Views]];

-- StarterGui.Delta.Scripthub.Holder.Reserved.OldThumbnail.Overlay.Views.Title
DELTA["4f"] = Instance.new("TextLabel", DELTA["4e"]);
DELTA["4f"]["TextWrapped"] = true;
DELTA["4f"]["TextScaled"] = true;
DELTA["4f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["4f"]["TextXAlignment"] = Enum.TextXAlignment.Left;
DELTA["4f"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
DELTA["4f"]["TextSize"] = 14;
DELTA["4f"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["4f"]["AnchorPoint"] = Vector2.new(1, 0.5);
DELTA["4f"]["Size"] = UDim2.new(1.0098563432693481, 0, 0.473459392786026, 0);
DELTA["4f"]["Text"] = [[10 Views]];
DELTA["4f"]["Name"] = [[Title]];
DELTA["4f"]["BackgroundTransparency"] = 1;
DELTA["4f"]["Position"] = UDim2.new(1.0098564624786377, 0, 0.7708343267440796, 0);

-- StarterGui.Delta.Scripthub.Holder.ScriptBloxHandler
DELTA["50"] = Instance.new("LocalScript", DELTA["41"]);
DELTA["50"]["Name"] = [[ScriptBloxHandler]];

-- StarterGui.Delta.Scripthub.DarkOverlay
DELTA["51"] = Instance.new("Frame", DELTA["3b"]);
DELTA["51"]["ZIndex"] = 99999;
DELTA["51"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
DELTA["51"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
DELTA["51"]["BackgroundTransparency"] = 0.5;
DELTA["51"]["Size"] = UDim2.new(10, 10, 2, 0);
DELTA["51"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
DELTA["51"]["Visible"] = false;
DELTA["51"]["Name"] = [[DarkOverlay]];

-- StarterGui.Delta.Scripthub.Popup
DELTA["52"] = Instance.new("Frame", DELTA["3b"]);
DELTA["52"]["ZIndex"] = 100000;
DELTA["52"]["BackgroundColor3"] = Color3.fromRGB(38, 41, 49);
DELTA["52"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
DELTA["52"]["Size"] = UDim2.new(0.43205055594444275, 0, 1.0513142347335815, 0);
DELTA["52"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
DELTA["52"]["Name"] = [[Popup]]
DELTA["52"].Active = true
DELTA["52"].Visible = false

-- StarterGui.Delta.Scripthub.Popup.Title
DELTA["53"] = Instance.new("Frame", DELTA["52"]);
DELTA["53"]["ZIndex"] = 999999999;
DELTA["53"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["53"]["AnchorPoint"] = Vector2.new(0.5, 0);
DELTA["53"]["BackgroundTransparency"] = 1;
DELTA["53"]["Size"] = UDim2.new(0.8193565607070923, 0, 0.23179079592227936, 0);
DELTA["53"]["Position"] = UDim2.new(0.5, 0, 0.09408924728631973, 0);
DELTA["53"]["Name"] = [[Title]];

-- StarterGui.Delta.Scripthub.Popup.Title.UIListLayout
DELTA["54"] = Instance.new("UIListLayout", DELTA["53"]);
DELTA["54"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

-- StarterGui.Delta.Scripthub.Popup.Title.Title
DELTA["55"] = Instance.new("TextLabel", DELTA["53"]);
DELTA["55"]["TextWrapped"] = true;
DELTA["55"]["ZIndex"] = 999999999;
DELTA["55"]["TextScaled"] = true;
DELTA["55"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["55"]["TextXAlignment"] = Enum.TextXAlignment.Left;
DELTA["55"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
DELTA["55"]["TextSize"] = 14;
DELTA["55"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["55"]["AnchorPoint"] = Vector2.new(0.5, 0);
DELTA["55"]["Size"] = UDim2.new(0.7438986301422119, 0, 0.5, 0);
DELTA["55"]["Text"] = [[Select Your Option]];
DELTA["55"]["Name"] = [[Title]];
DELTA["55"]["BackgroundTransparency"] = 1;
DELTA["55"]["Position"] = UDim2.new(0.37194931507110596, 0, 0, 0);

-- StarterGui.Delta.Scripthub.Popup.Title.Paragraph
DELTA["56"] = Instance.new("TextLabel", DELTA["53"]);
DELTA["56"]["TextWrapped"] = true;
DELTA["56"]["ZIndex"] = 999999999;
DELTA["56"]["TextScaled"] = true;
DELTA["56"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["56"]["TextXAlignment"] = Enum.TextXAlignment.Left;
DELTA["56"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
DELTA["56"]["TextSize"] = 14;
DELTA["56"]["TextColor3"] = Color3.fromRGB(161, 167, 182);
DELTA["56"]["AnchorPoint"] = Vector2.new(0.5, 1);
DELTA["56"]["Size"] = UDim2.new(0.7438986301422119, 0, 0.3536166250705719, 0);
DELTA["56"]["Text"] = [[Choose whether to execute, open in a new tab, etc..]];
DELTA["56"]["Name"] = [[Paragraph]];
DELTA["56"]["BackgroundTransparency"] = 1;
DELTA["56"]["Position"] = UDim2.new(0.37194931507110596, 0, 0.8536167144775391, 0);

-- StarterGui.Delta.Scripthub.Popup.Buttons
DELTA["57"] = Instance.new("Frame", DELTA["52"]);
DELTA["57"]["ZIndex"] = 999999999;
DELTA["57"]["BorderSizePixel"] = 0;
DELTA["57"]["BackgroundColor3"] = Color3.fromRGB(22, 22, 30);
DELTA["57"]["AnchorPoint"] = Vector2.new(0.5, 1);
DELTA["57"]["BackgroundTransparency"] = 1;
DELTA["57"]["Size"] = UDim2.new(0.8189999461174011, 0, 0.5725698471069336, 0);
DELTA["57"]["ClipsDescendants"] = true;
DELTA["57"]["Position"] = UDim2.new(0.5, 0, 0.9148041009902954, 0);
DELTA["57"]["Name"] = [[Buttons]];

-- StarterGui.Delta.Scripthub.Popup.Buttons.UIListLayout
DELTA["58"] = Instance.new("UIListLayout", DELTA["57"]);
DELTA["58"]["VerticalAlignment"] = Enum.VerticalAlignment.Center;
DELTA["58"]["HorizontalAlignment"] = Enum.HorizontalAlignment.Center;
DELTA["58"]["Padding"] = UDim.new(0.05000000074505806, 0);
DELTA["58"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

-- StarterGui.Delta.Scripthub.Popup.Buttons.Button1
DELTA["59"] = Instance.new("ImageButton", DELTA["57"]);
DELTA["59"]["Active"] = false;
DELTA["59"]["ZIndex"] = 999999999;
DELTA["59"]["BackgroundColor3"] = Color3.fromRGB(60, 137, 196);
DELTA["59"]["Selectable"] = false;
DELTA["59"]["Size"] = UDim2.new(0.9621250629425049, 0, 0.16304326057434082, 0);
DELTA["59"]["Name"] = [[Button1]];
DELTA["59"]["Position"] = UDim2.new(0.018937479704618454, 0, 0.17102082073688507, 0);
DELTA["59"]["BackgroundTransparency"] = 0.8899999856948853;

-- StarterGui.Delta.Scripthub.Popup.Buttons.Button1.UICorner
DELTA["5a"] = Instance.new("UICorner", DELTA["59"]);
DELTA["5a"]["CornerRadius"] = UDim.new(0.30000001192092896, 0);

-- StarterGui.Delta.Scripthub.Popup.Buttons.Button1.Title
DELTA["5b"] = Instance.new("TextLabel", DELTA["59"]);
DELTA["5b"]["TextWrapped"] = true;
DELTA["5b"]["ZIndex"] = 999999999;
DELTA["5b"]["TextScaled"] = true;
DELTA["5b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["5b"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
DELTA["5b"]["TextSize"] = 14;
DELTA["5b"]["TextColor3"] = Color3.fromRGB(140, 206, 255);
DELTA["5b"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
DELTA["5b"]["Size"] = UDim2.new(0.8766257762908936, 0, 0.3993089199066162, 0);
DELTA["5b"]["Text"] = [[EXECUTE SELECTED SCRIPT]];
DELTA["5b"]["Name"] = [[Title]];
DELTA["5b"]["BackgroundTransparency"] = 1;
DELTA["5b"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- StarterGui.Delta.Scripthub.Popup.Buttons.Button1.UIStroke
DELTA["5c"] = Instance.new("UIStroke", DELTA["59"]);
DELTA["5c"]["Color"] = Color3.fromRGB(60, 137, 196);
DELTA["5c"]["Thickness"] = 2;

-- StarterGui.Delta.Scripthub.Popup.Buttons.Button2
DELTA["5d"] = Instance.new("ImageButton", DELTA["57"]);
DELTA["5d"]["Active"] = false;
DELTA["5d"]["ZIndex"] = 999999999;
DELTA["5d"]["BackgroundColor3"] = Color3.fromRGB(94, 136, 169);
DELTA["5d"]["Selectable"] = false;
DELTA["5d"]["LayoutOrder"] = 1;
DELTA["5d"]["Size"] = UDim2.new(0.9621250629425049, 0, 0.16304320096969604, 0);
DELTA["5d"]["Name"] = [[Button2]];
DELTA["5d"]["Position"] = UDim2.new(0.018937479704618454, 0, 0.3772318959236145, 0);
DELTA["5d"]["BackgroundTransparency"] = 0.8999999761581421;

-- StarterGui.Delta.Scripthub.Popup.Buttons.Button2.UICorner
DELTA["5e"] = Instance.new("UICorner", DELTA["5d"]);
DELTA["5e"]["CornerRadius"] = UDim.new(0.30000001192092896, 0);

-- StarterGui.Delta.Scripthub.Popup.Buttons.Button2.Title
DELTA["5f"] = Instance.new("TextLabel", DELTA["5d"]);
DELTA["5f"]["TextWrapped"] = true;
DELTA["5f"]["TextScaled"] = true;
DELTA["5f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["5f"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
DELTA["5f"]["TextSize"] = 14;
DELTA["5f"]["TextColor3"] = Color3.fromRGB(185, 211, 230);
DELTA["5f"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
DELTA["5f"]["Size"] = UDim2.new(0.8766260147094727, 0, 0.3993089199066162, 0);
DELTA["5f"]["Text"] = [[OPEN SCRIPT IN EDITOR]];
DELTA["5f"]["Name"] = [[Title]];
DELTA["5f"]["BackgroundTransparency"] = 1;
DELTA["5f"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- StarterGui.Delta.Scripthub.Popup.Buttons.Button2.UIStroke
DELTA["60"] = Instance.new("UIStroke", DELTA["5d"]);
DELTA["60"]["Color"] = Color3.fromRGB(69, 97, 119);
DELTA["60"]["Thickness"] = 2;

-- StarterGui.Delta.Scripthub.Popup.Buttons.Button3
DELTA["61"] = Instance.new("ImageButton", DELTA["57"]);
DELTA["61"]["Active"] = false;
DELTA["61"]["ZIndex"] = 999999999;
DELTA["61"]["BackgroundColor3"] = Color3.fromRGB(94, 136, 169);
DELTA["61"]["Selectable"] = false;
DELTA["61"]["LayoutOrder"] = 2;
DELTA["61"]["Size"] = UDim2.new(0.9621250629425049, 0, 0.1630433201789856, 0);
DELTA["61"]["Name"] = [[Button3]];
DELTA["61"]["Position"] = UDim2.new(0.018937479704618454, 0, 0.5834426283836365, 0);
DELTA["61"]["BackgroundTransparency"] = 0.8999999761581421;

-- StarterGui.Delta.Scripthub.Popup.Buttons.Button3.UICorner
DELTA["62"] = Instance.new("UICorner", DELTA["61"]);
DELTA["62"]["CornerRadius"] = UDim.new(0.30000001192092896, 0);

-- StarterGui.Delta.Scripthub.Popup.Buttons.Button3.Title
DELTA["63"] = Instance.new("TextLabel", DELTA["61"]);
DELTA["63"]["TextWrapped"] = true;
DELTA["63"]["TextScaled"] = true;
DELTA["63"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["63"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
DELTA["63"]["TextSize"] = 14;
DELTA["63"]["TextColor3"] = Color3.fromRGB(185, 211, 230);
DELTA["63"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
DELTA["63"]["Size"] = UDim2.new(0.8766259551048279, 0, 0.3993089497089386, 0);
DELTA["63"]["Text"] = [[SAVE SELECTED SCRIPT]];
DELTA["63"]["Name"] = [[Title]];
DELTA["63"]["BackgroundTransparency"] = 1;
DELTA["63"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- StarterGui.Delta.Scripthub.Popup.Buttons.Button3.UIStroke
DELTA["64"] = Instance.new("UIStroke", DELTA["61"]);
DELTA["64"]["Color"] = Color3.fromRGB(69, 97, 119);
DELTA["64"]["Thickness"] = 2;

-- StarterGui.Delta.Scripthub.Popup.Buttons.Button4
DELTA["65"] = Instance.new("ImageButton", DELTA["57"]);
DELTA["65"]["Active"] = false;
DELTA["65"]["ZIndex"] = 999999999;
DELTA["65"]["BackgroundColor3"] = Color3.fromRGB(94, 136, 169);
DELTA["65"]["Selectable"] = false;
DELTA["65"]["LayoutOrder"] = 3;
DELTA["65"]["Size"] = UDim2.new(0.9621250629425049, 0, 0.16304323077201843, 0);
DELTA["65"]["Name"] = [[Button4]];
DELTA["65"]["Position"] = UDim2.new(0.018937479704618454, 0, 0.7896538376808167, 0);
DELTA["65"]["BackgroundTransparency"] = 0.8999999761581421;

-- StarterGui.Delta.Scripthub.Popup.Buttons.Button4.UICorner
DELTA["66"] = Instance.new("UICorner", DELTA["65"]);
DELTA["66"]["CornerRadius"] = UDim.new(0.30000001192092896, 0);

-- StarterGui.Delta.Scripthub.Popup.Buttons.Button4.Title
DELTA["67"] = Instance.new("TextLabel", DELTA["65"]);
DELTA["67"]["TextWrapped"] = true;
DELTA["67"]["TextScaled"] = true;
DELTA["67"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["67"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
DELTA["67"]["TextSize"] = 14;
DELTA["67"]["TextColor3"] = Color3.fromRGB(185, 211, 230);
DELTA["67"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
DELTA["67"]["Size"] = UDim2.new(0.8766259551048279, 0, 0.3993089497089386, 0);
DELTA["67"]["Text"] = [[COPY TO CLIPBOARD]];
DELTA["67"]["Name"] = [[Title]];
DELTA["67"]["BackgroundTransparency"] = 1;
DELTA["67"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- StarterGui.Delta.Scripthub.Popup.Buttons.Button4.UIStroke
DELTA["68"] = Instance.new("UIStroke", DELTA["65"]);
DELTA["68"]["Color"] = Color3.fromRGB(69, 97, 119);
DELTA["68"]["Thickness"] = 2;

-- StarterGui.Delta.Scripthub.Popup.Buttons.ButtonsHandler
DELTA["69"] = Instance.new("LocalScript", DELTA["57"]);
DELTA["69"]["Name"] = [[ButtonsHandler]];

-- StarterGui.Delta.Scripthub.Popup.UICorner
DELTA["6a"] = Instance.new("UICorner", DELTA["52"]);
DELTA["6a"]["CornerRadius"] = UDim.new(0.05000000074505806, 0);

-- StarterGui.Delta.Scripthub.Popup.ImageButton
DELTA["6b"] = Instance.new("ImageButton", DELTA["52"]);
DELTA["6b"]["ZIndex"] = 999999999;
DELTA["6b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["6b"]["AnchorPoint"] = Vector2.new(1, 0.5);
DELTA["6b"]["Image"] = [[rbxassetid://13363121645]];
DELTA["6b"]["Size"] = UDim2.new(0.04585733264684677, 0, 0.04716602712869644, 0);
DELTA["6b"]["Position"] = UDim2.new(0.8981863260269165, 0, 0.15145258605480194, 0);
DELTA["6b"]["BackgroundTransparency"] = 1;

-- StarterGui.Delta.Scripthub.Popup.ImageButton.UIAspectRatioConstraint
DELTA["6c"] = Instance.new("UIAspectRatioConstraint", DELTA["6b"]);


-- StarterGui.Delta.Scripthub.Marker
DELTA["6d"] = Instance.new("StringValue", DELTA["3b"]);
DELTA["6d"]["Value"] = [[Menu]];
DELTA["6d"]["Name"] = [[Marker]];

-- StarterGui.Delta.Settings
DELTA["6e"] = Instance.new("Frame", DELTA["1"]);
DELTA["6e"]["ZIndex"] = 100;
DELTA["6e"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
DELTA["6e"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
DELTA["6e"]["BackgroundTransparency"] = 1;
DELTA["6e"]["Size"] = UDim2.new(0.8064976334571838, 0, 0.9616625905036926, 0);
DELTA["6e"]["Position"] = UDim2.new(0.47783252596855164, 0, 0.5, 0);
DELTA["6e"]["Visible"] = false;
DELTA["6e"]["Name"] = [[Settings]];

-- StarterGui.Delta.Settings.Searchbar
DELTA["6f"] = Instance.new("Frame", DELTA["6e"]);
DELTA["6f"]["ZIndex"] = 2;
DELTA["6f"]["BackgroundColor3"] = Color3.fromRGB(38, 41, 50);
DELTA["6f"]["AnchorPoint"] = Vector2.new(1, 0);
DELTA["6f"]["Size"] = UDim2.new(0.7300000190734863, 0, 0.12585513293743134, 0);
DELTA["6f"]["Position"] = UDim2.new(1, 0, 0, 0);
DELTA["6f"]["Name"] = [[Searchbar]];

-- StarterGui.Delta.Settings.Searchbar.UICorner
DELTA["70"] = Instance.new("UICorner", DELTA["6f"]);
DELTA["70"]["CornerRadius"] = UDim.new(0.20000000298023224, 0);

-- StarterGui.Delta.Settings.Searchbar.ImageLabel
DELTA["71"] = Instance.new("ImageLabel", DELTA["6f"]);
DELTA["71"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["71"]["AnchorPoint"] = Vector2.new(0, 0.5);
DELTA["71"]["Image"] = [[rbxassetid://13365156882]];
DELTA["71"]["Size"] = UDim2.new(0.025552265346050262, 0, 0.40771156549453735, 0);
DELTA["71"]["BackgroundTransparency"] = 1;
DELTA["71"]["Position"] = UDim2.new(0.01834862306714058, 0, 0.5, 0);

-- StarterGui.Delta.Settings.Searchbar.ImageLabel.UIAspectRatioConstraint
DELTA["72"] = Instance.new("UIAspectRatioConstraint", DELTA["71"]);


-- StarterGui.Delta.Settings.Searchbar.Input
DELTA["73"] = Instance.new("TextBox", DELTA["6f"]);
DELTA["73"]["Active"] = true;
DELTA["73"]["TextSize"] = 14;
DELTA["73"]["TextXAlignment"] = Enum.TextXAlignment.Left;
DELTA["73"]["TextWrapped"] = true;
DELTA["73"]["TextScaled"] = true;
DELTA["73"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["73"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["73"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
DELTA["73"]["AnchorPoint"] = Vector2.new(0, 0.5);
DELTA["73"]["BackgroundTransparency"] = 1;
DELTA["73"]["PlaceholderText"] = [[Search for options]];
DELTA["73"]["Size"] = UDim2.new(0.8766564130783081, 0, 0.35361653566360474, 0);
DELTA["73"]["Selectable"] = false;
DELTA["73"]["Text"] = [[]];
DELTA["73"]["Position"] = UDim2.new(0.061162080615758896, 0, 0.49999991059303284, 0);
DELTA["73"]["Name"] = [[Input]];

-- StarterGui.Delta.Settings.Searchbar.SettingsSearchHandler
DELTA["74"] = Instance.new("LocalScript", DELTA["6f"]);
DELTA["74"]["Name"] = [[SettingsSearchHandler]];

-- StarterGui.Delta.Settings.Sort
DELTA["75"] = Instance.new("Frame", DELTA["6e"]);
DELTA["75"]["ZIndex"] = 2;
DELTA["75"]["BackgroundColor3"] = Color3.fromRGB(24, 25, 33);
DELTA["75"]["Size"] = UDim2.new(0.25, 0, 0.12585513293743134, 0);
DELTA["75"]["Name"] = [[Sort]];

-- StarterGui.Delta.Settings.Sort.UICorner
DELTA["76"] = Instance.new("UICorner", DELTA["75"]);
DELTA["76"]["CornerRadius"] = UDim.new(0.20000000298023224, 0);

-- StarterGui.Delta.Settings.Sort.UIListLayout
DELTA["77"] = Instance.new("UIListLayout", DELTA["75"]);
DELTA["77"]["VerticalAlignment"] = Enum.VerticalAlignment.Center;
DELTA["77"]["FillDirection"] = Enum.FillDirection.Horizontal;
DELTA["77"]["HorizontalAlignment"] = Enum.HorizontalAlignment.Center;
DELTA["77"]["Padding"] = UDim.new(0.029999999329447746, 0);
DELTA["77"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

-- StarterGui.Delta.Settings.Sort.Enabled
DELTA["78"] = Instance.new("TextButton", DELTA["75"]);
DELTA["78"]["TextWrapped"] = true;
DELTA["78"]["TextScaled"] = true;
DELTA["78"]["BackgroundColor3"] = Color3.fromRGB(51, 56, 70);
DELTA["78"]["TextSize"] = 14;
DELTA["78"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
DELTA["78"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["78"]["Size"] = UDim2.new(0.27783116698265076, 0, 0.5168541073799133, 0);
DELTA["78"]["LayoutOrder"] = 1;
DELTA["78"]["Name"] = [[Enabled]];
DELTA["78"]["Text"] = [[Enabled]];
DELTA["78"]["Position"] = UDim2.new(0.02489338628947735, 0, 0.24157275259494781, 0);
DELTA["78"]["BackgroundTransparency"] = 1;

-- StarterGui.Delta.Settings.Sort.Enabled.UICorner
DELTA["79"] = Instance.new("UICorner", DELTA["78"]);
DELTA["79"]["CornerRadius"] = UDim.new(1, 0);

-- StarterGui.Delta.Settings.Sort.Enabled.UIPadding
DELTA["7a"] = Instance.new("UIPadding", DELTA["78"]);
DELTA["7a"]["PaddingTop"] = UDim.new(0.30000001192092896, 0);
DELTA["7a"]["PaddingBottom"] = UDim.new(0.30000001192092896, 0);

-- StarterGui.Delta.Settings.Sort.Disabled
DELTA["7b"] = Instance.new("TextButton", DELTA["75"]);
DELTA["7b"]["TextWrapped"] = true;
DELTA["7b"]["TextScaled"] = true;
DELTA["7b"]["BackgroundColor3"] = Color3.fromRGB(51, 56, 70);
DELTA["7b"]["TextSize"] = 14;
DELTA["7b"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
DELTA["7b"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["7b"]["Size"] = UDim2.new(0.2778310179710388, 0, 0.5168541073799133, 0);
DELTA["7b"]["LayoutOrder"] = 2;
DELTA["7b"]["Name"] = [[Disabled]];
DELTA["7b"]["Text"] = [[Disabled]];
DELTA["7b"]["Position"] = UDim2.new(0.33081313967704773, 0, 0.24157275259494781, 0);
DELTA["7b"]["BackgroundTransparency"] = 1;

-- StarterGui.Delta.Settings.Sort.Disabled.UICorner
DELTA["7c"] = Instance.new("UICorner", DELTA["7b"]);
DELTA["7c"]["CornerRadius"] = UDim.new(1, 0);

-- StarterGui.Delta.Settings.Sort.Disabled.UIPadding
DELTA["7d"] = Instance.new("UIPadding", DELTA["7b"]);
DELTA["7d"]["PaddingTop"] = UDim.new(0.30000001192092896, 0);
DELTA["7d"]["PaddingBottom"] = UDim.new(0.30000001192092896, 0);

-- StarterGui.Delta.Settings.Sort.All
DELTA["7e"] = Instance.new("TextButton", DELTA["75"]);
DELTA["7e"]["TextWrapped"] = true;
DELTA["7e"]["TextScaled"] = true;
DELTA["7e"]["BackgroundColor3"] = Color3.fromRGB(51, 56, 70);
DELTA["7e"]["TextSize"] = 14;
DELTA["7e"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
DELTA["7e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["7e"]["Size"] = UDim2.new(0.2778310179710388, 0, 0.5168541073799133, 0);
DELTA["7e"]["LayoutOrder"] = 3;
DELTA["7e"]["Name"] = [[All]];
DELTA["7e"]["Text"] = [[All]];
DELTA["7e"]["Position"] = UDim2.new(0.6367325186729431, 0, 0.24157275259494781, 0);

-- StarterGui.Delta.Settings.Sort.All.UICorner
DELTA["7f"] = Instance.new("UICorner", DELTA["7e"]);
DELTA["7f"]["CornerRadius"] = UDim.new(1, 0);

-- StarterGui.Delta.Settings.Sort.All.UIPadding
DELTA["80"] = Instance.new("UIPadding", DELTA["7e"]);
DELTA["80"]["PaddingTop"] = UDim.new(0.30000001192092896, 0);
DELTA["80"]["PaddingBottom"] = UDim.new(0.30000001192092896, 0);

-- StarterGui.Delta.Settings.Sort.SettingsFilterHandler
DELTA["81"] = Instance.new("LocalScript", DELTA["75"]);
DELTA["81"]["Name"] = [[SettingsFilterHandler]];

-- StarterGui.Delta.Settings.Holder
DELTA["82"] = Instance.new("ScrollingFrame", DELTA["6e"]);
DELTA["82"]["CanvasSize"] = UDim2.new(0, 0, 4, 0);
DELTA["82"]["ScrollBarImageTransparency"] = 1;
DELTA["82"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["82"]["AnchorPoint"] = Vector2.new(0.5, 1);
DELTA["82"]["BackgroundTransparency"] = 1;
DELTA["82"]["Size"] = UDim2.new(1, 0, 0.8416813015937805, 0);
DELTA["82"]["Selectable"] = false;
DELTA["82"]["ScrollBarThickness"] = 1;
DELTA["82"]["Position"] = UDim2.new(0.5, 0, 1.0000001192092896, 0);
DELTA["82"]["Name"] = [[Holder]];

-- StarterGui.Delta.Settings.Holder.UIListLayout
DELTA["83"] = Instance.new("UIListLayout", DELTA["82"]);
DELTA["83"]["Padding"] = UDim.new(0.004999999888241291, 0);
DELTA["83"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

-- StarterGui.Delta.Settings.Marker
DELTA["84"] = Instance.new("StringValue", DELTA["6e"]);
DELTA["84"]["Value"] = [[Menu]];
DELTA["84"]["Name"] = [[Marker]];

-- StarterGui.Delta.DarkOverlay
DELTA["85"] = Instance.new("Frame", DELTA["1"]);
DELTA["85"]["ZIndex"] = -100;
DELTA["85"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
DELTA["85"]["BackgroundTransparency"] = 0.6600000262260437;
DELTA["85"]["Size"] = UDim2.new(2, 0, 2, 0);
DELTA["85"]["Position"] = UDim2.new(-1, 0, -1, 0);
DELTA["85"]["Name"] = [[DarkOverlay]];

-- StarterGui.Delta.Executor
DELTA["86"] = Instance.new("Frame", DELTA["1"]);
DELTA["86"]["ZIndex"] = 100;
DELTA["86"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
DELTA["86"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
DELTA["86"]["BackgroundTransparency"] = 1;
DELTA["86"]["Size"] = UDim2.new(0.8397729992866516, 0, 0.7730588316917419, 0);
DELTA["86"]["Position"] = UDim2.new(0.4824247360229492, 0, 0.524213433265686, 0);
DELTA["86"]["Visible"] = false;
DELTA["86"]["Name"] = [[Executor]];

-- StarterGui.Delta.Executor.Executor
DELTA["87"] = Instance.new("ImageLabel", DELTA["86"]);
DELTA["87"]["BorderSizePixel"] = 0;
DELTA["87"]["ScaleType"] = Enum.ScaleType.Crop;
DELTA["87"]["BackgroundColor3"] = Color3.fromRGB(36, 0, 0);
DELTA["87"]["AnchorPoint"] = Vector2.new(1, 0.5);
DELTA["87"]["Image"] = [[rbxassetid://13387419794]];
DELTA["87"]["Size"] = UDim2.new(0.6566376686096191, 0, 0.9981886148452759, 0);
DELTA["87"]["ClipsDescendants"] = true;
DELTA["87"]["Name"] = [[Executor]];
DELTA["87"]["Position"] = UDim2.new(1.0000001192092896, 0, 0.5, 0);

-- StarterGui.Delta.Executor.Executor.Overlay
DELTA["88"] = Instance.new("ImageLabel", DELTA["87"]);
DELTA["88"]["BackgroundColor3"] = Color3.fromRGB(26, 27, 36);
DELTA["88"]["Image"] = [[rbxassetid://13387657138]];
DELTA["88"]["Size"] = UDim2.new(1, 0, 1, 0);
DELTA["88"]["Name"] = [[Overlay]];
DELTA["88"]["BackgroundTransparency"] = 0.800000011920929;

-- StarterGui.Delta.Executor.Executor.Overlay.UICorner
DELTA["89"] = Instance.new("UICorner", DELTA["88"]);
DELTA["89"]["CornerRadius"] = UDim.new(0.05000000074505806, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Menu
DELTA["8a"] = Instance.new("ImageButton", DELTA["88"]);
DELTA["8a"]["ZIndex"] = 1000;
DELTA["8a"]["BorderSizePixel"] = 0;
DELTA["8a"]["BackgroundColor3"] = Color3.fromRGB(22, 22, 30);
DELTA["8a"]["AnchorPoint"] = Vector2.new(1, 0);
DELTA["8a"]["Image"] = [[rbxassetid://0]];
DELTA["8a"]["Size"] = UDim2.new(0.06392838805913925, 0, 0.08036314696073532, 0);
DELTA["8a"]["Name"] = [[Menu]];
DELTA["8a"]["Position"] = UDim2.new(0.9912378787994385, 0, 0.026684332638978958, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Menu.ImageButton
DELTA["8b"] = Instance.new("ImageButton", DELTA["8a"]);
DELTA["8b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["8b"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
DELTA["8b"]["Image"] = [[rbxassetid://13387875723]];
DELTA["8b"]["Size"] = UDim2.new(0.0789814367890358, 0, 0.4144761860370636, 0);
DELTA["8b"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
DELTA["8b"]["BackgroundTransparency"] = 1;

-- StarterGui.Delta.Executor.Executor.Overlay.Menu.UICorner
DELTA["8c"] = Instance.new("UICorner", DELTA["8a"]);
DELTA["8c"]["CornerRadius"] = UDim.new(1, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Menu.UIAspectRatioConstraint
DELTA["8d"] = Instance.new("UIAspectRatioConstraint", DELTA["8a"]);


-- StarterGui.Delta.Executor.Executor.Overlay.Menu.Dropdown
DELTA["8e"] = Instance.new("Frame", DELTA["8a"]);
DELTA["8e"]["BackgroundColor3"] = Color3.fromRGB(41, 44, 52);
DELTA["8e"]["Size"] = UDim2.new(4.045529842376709, 0, 2.321711778640747, 0);
DELTA["8e"]["Position"] = UDim2.new(-3.045860767364502, 0, 1.093127965927124, 0);
DELTA["8e"]["Visible"] = false;
DELTA["8e"]["Name"] = [[Dropdown]];

-- StarterGui.Delta.Executor.Executor.Overlay.Menu.Dropdown.UIListLayout
DELTA["8f"] = Instance.new("UIListLayout", DELTA["8e"]);
DELTA["8f"]["VerticalAlignment"] = Enum.VerticalAlignment.Center;
DELTA["8f"]["HorizontalAlignment"] = Enum.HorizontalAlignment.Center;
DELTA["8f"]["Padding"] = UDim.new(0.029999999329447746, 0);
DELTA["8f"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

-- StarterGui.Delta.Executor.Executor.Overlay.Menu.Dropdown.Option1
DELTA["90"] = Instance.new("ImageButton", DELTA["8e"]);
DELTA["90"]["BackgroundColor3"] = Color3.fromRGB(59, 139, 254);
DELTA["90"]["AnchorPoint"] = Vector2.new(1, 0.5);
DELTA["90"]["Image"] = [[rbxassetid://0]];
DELTA["90"]["Size"] = UDim2.new(0.8604854345321655, 0, 0.22047363221645355, 0);
DELTA["90"]["Name"] = [[Option1]];
DELTA["90"]["Position"] = UDim2.new(0.9302427172660828, 0, 0.276297390460968, 0);
DELTA["90"]["BackgroundTransparency"] = 1;

-- StarterGui.Delta.Executor.Executor.Overlay.Menu.Dropdown.Option1.UICorner
DELTA["91"] = Instance.new("UICorner", DELTA["90"]);
DELTA["91"]["CornerRadius"] = UDim.new(0.30000001192092896, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Menu.Dropdown.Option1.Title
DELTA["92"] = Instance.new("TextLabel", DELTA["90"]);
DELTA["92"]["TextWrapped"] = true;
DELTA["92"]["ZIndex"] = 999999999;
DELTA["92"]["TextScaled"] = true;
DELTA["92"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["92"]["TextXAlignment"] = Enum.TextXAlignment.Left;
DELTA["92"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Medium, Enum.FontStyle.Normal);
DELTA["92"]["TextSize"] = 14;
DELTA["92"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["92"]["AnchorPoint"] = Vector2.new(0, 0.5);
DELTA["92"]["Size"] = UDim2.new(0.7953082323074341, 0, 0.8179191946983337, 0);
DELTA["92"]["Text"] = [[Default]];
DELTA["92"]["Name"] = [[Title]];
DELTA["92"]["BackgroundTransparency"] = 1;
DELTA["92"]["Position"] = UDim2.new(0, 0, 0.5, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Menu.Dropdown.Option1.Checked
DELTA["93"] = Instance.new("ImageButton", DELTA["90"]);
DELTA["93"]["BackgroundColor3"] = Color3.fromRGB(59, 139, 254);
DELTA["93"]["AnchorPoint"] = Vector2.new(1, 0.5);
DELTA["93"]["Image"] = [[rbxassetid://13441695981]];
DELTA["93"]["Size"] = UDim2.new(0.0812797099351883, 0, 0.5769613981246948, 0);
DELTA["93"]["Name"] = [[Checked]];
DELTA["93"]["Position"] = UDim2.new(1, 0, 0.5, 0);
DELTA["93"]["BackgroundTransparency"] = 1;

-- StarterGui.Delta.Executor.Executor.Overlay.Menu.Dropdown.Option1.Checked.UIAspectRatioConstraint
DELTA["94"] = Instance.new("UIAspectRatioConstraint", DELTA["93"]);


-- StarterGui.Delta.Executor.Executor.Overlay.Menu.Dropdown.Divider
DELTA["95"] = Instance.new("Frame", DELTA["8e"]);
DELTA["95"]["BackgroundColor3"] = Color3.fromRGB(59, 63, 74);
DELTA["95"]["Size"] = UDim2.new(0.8604854345321655, 0, 0.012410691007971764, 0);
DELTA["95"]["Position"] = UDim2.new(0.06975728273391724, 0, 0.4001886248588562, 0);
DELTA["95"]["Name"] = [[Divider]];

-- StarterGui.Delta.Executor.Executor.Overlay.Menu.Dropdown.Option2
DELTA["96"] = Instance.new("ImageButton", DELTA["8e"]);
DELTA["96"]["BackgroundColor3"] = Color3.fromRGB(59, 139, 254);
DELTA["96"]["AnchorPoint"] = Vector2.new(1, 0.5);
DELTA["96"]["Image"] = [[rbxassetid://0]];
DELTA["96"]["Size"] = UDim2.new(0.8604854345321655, 0, 0.22047372162342072, 0);
DELTA["96"]["Name"] = [[Option2]];
DELTA["96"]["Position"] = UDim2.new(0.9302427172660828, 0, 0.5364913940429688, 0);
DELTA["96"]["BackgroundTransparency"] = 1;

-- StarterGui.Delta.Executor.Executor.Overlay.Menu.Dropdown.Option2.UICorner
DELTA["97"] = Instance.new("UICorner", DELTA["96"]);
DELTA["97"]["CornerRadius"] = UDim.new(0.30000001192092896, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Menu.Dropdown.Option2.Title
DELTA["98"] = Instance.new("TextLabel", DELTA["96"]);
DELTA["98"]["TextWrapped"] = true;
DELTA["98"]["ZIndex"] = 999999999;
DELTA["98"]["TextScaled"] = true;
DELTA["98"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["98"]["TextXAlignment"] = Enum.TextXAlignment.Left;
DELTA["98"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Medium, Enum.FontStyle.Normal);
DELTA["98"]["TextSize"] = 14;
DELTA["98"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["98"]["AnchorPoint"] = Vector2.new(0, 0.5);
DELTA["98"]["Size"] = UDim2.new(0.7953082323074341, 0, 0.8179191946983337, 0);
DELTA["98"]["Text"] = [[Light]];
DELTA["98"]["Name"] = [[Title]];
DELTA["98"]["BackgroundTransparency"] = 1;
DELTA["98"]["Position"] = UDim2.new(0, 0, 0.5, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Menu.Dropdown.Option2.Checked
DELTA["99"] = Instance.new("ImageButton", DELTA["96"]);
DELTA["99"]["BackgroundColor3"] = Color3.fromRGB(59, 139, 254);
DELTA["99"]["AnchorPoint"] = Vector2.new(1, 0.5);
DELTA["99"]["Image"] = [[rbxassetid://13441695981]];
DELTA["99"]["Size"] = UDim2.new(0.0812797099351883, 0, 0.5769613981246948, 0);
DELTA["99"]["Name"] = [[Checked]];
DELTA["99"]["Visible"] = false;
DELTA["99"]["Position"] = UDim2.new(1, 0, 0.5, 0);
DELTA["99"]["BackgroundTransparency"] = 1;

-- StarterGui.Delta.Executor.Executor.Overlay.Menu.Dropdown.Option2.Checked.UIAspectRatioConstraint
DELTA["9a"] = Instance.new("UIAspectRatioConstraint", DELTA["99"]);


-- StarterGui.Delta.Executor.Executor.Overlay.Menu.Dropdown.Divider
DELTA["9b"] = Instance.new("Frame", DELTA["8e"]);
DELTA["9b"]["BackgroundColor3"] = Color3.fromRGB(59, 63, 74);
DELTA["9b"]["Size"] = UDim2.new(0.8604854345321655, 0, 0.012410691007971764, 0);
DELTA["9b"]["Position"] = UDim2.new(0.06975728273391724, 0, 0.6603825688362122, 0);
DELTA["9b"]["Name"] = [[Divider]];

-- StarterGui.Delta.Executor.Executor.Overlay.Menu.Dropdown.Option3
DELTA["9c"] = Instance.new("ImageButton", DELTA["8e"]);
DELTA["9c"]["BackgroundColor3"] = Color3.fromRGB(59, 139, 254);
DELTA["9c"]["AnchorPoint"] = Vector2.new(1, 0.5);
DELTA["9c"]["Image"] = [[rbxassetid://0]];
DELTA["9c"]["Size"] = UDim2.new(0.8604854345321655, 0, 0.2204737514257431, 0);
DELTA["9c"]["Name"] = [[Option3]];
DELTA["9c"]["Position"] = UDim2.new(0.9302427172660828, 0, 0.7966850399971008, 0);
DELTA["9c"]["BackgroundTransparency"] = 1;

-- StarterGui.Delta.Executor.Executor.Overlay.Menu.Dropdown.Option3.UICorner
DELTA["9d"] = Instance.new("UICorner", DELTA["9c"]);
DELTA["9d"]["CornerRadius"] = UDim.new(0.30000001192092896, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Menu.Dropdown.Option3.Title
DELTA["9e"] = Instance.new("TextLabel", DELTA["9c"]);
DELTA["9e"]["TextWrapped"] = true;
DELTA["9e"]["ZIndex"] = 999999999;
DELTA["9e"]["TextScaled"] = true;
DELTA["9e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["9e"]["TextXAlignment"] = Enum.TextXAlignment.Left;
DELTA["9e"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Medium, Enum.FontStyle.Normal);
DELTA["9e"]["TextSize"] = 14;
DELTA["9e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["9e"]["AnchorPoint"] = Vector2.new(0, 0.5);
DELTA["9e"]["Size"] = UDim2.new(0.7953082323074341, 0, 0.8179191946983337, 0);
DELTA["9e"]["Text"] = [[Amoled]];
DELTA["9e"]["Name"] = [[Title]];
DELTA["9e"]["BackgroundTransparency"] = 1;
DELTA["9e"]["Position"] = UDim2.new(0, 0, 0.5, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Menu.Dropdown.Option3.Checked
DELTA["9f"] = Instance.new("ImageButton", DELTA["9c"]);
DELTA["9f"]["BackgroundColor3"] = Color3.fromRGB(59, 139, 254);
DELTA["9f"]["AnchorPoint"] = Vector2.new(1, 0.5);
DELTA["9f"]["Image"] = [[rbxassetid://13441695981]];
DELTA["9f"]["Size"] = UDim2.new(0.0812797099351883, 0, 0.5769613981246948, 0);
DELTA["9f"]["Name"] = [[Checked]];
DELTA["9f"]["Visible"] = false;
DELTA["9f"]["Position"] = UDim2.new(1, 0, 0.5, 0);
DELTA["9f"]["BackgroundTransparency"] = 1;

-- StarterGui.Delta.Executor.Executor.Overlay.Menu.Dropdown.Option3.Checked.UIAspectRatioConstraint
DELTA["a0"] = Instance.new("UIAspectRatioConstraint", DELTA["9f"]);


-- StarterGui.Delta.Executor.Executor.Overlay.Menu.Dropdown.UICorner
DELTA["a1"] = Instance.new("UICorner", DELTA["8e"]);
DELTA["a1"]["CornerRadius"] = UDim.new(0.20000000298023224, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Menu.LocalScript
DELTA["a2"] = Instance.new("LocalScript", DELTA["8a"]);


-- StarterGui.Delta.Executor.Executor.Overlay.Buttons
DELTA["a3"] = Instance.new("Frame", DELTA["88"]);
DELTA["a3"]["ZIndex"] = 200;
DELTA["a3"]["BorderSizePixel"] = 0;
DELTA["a3"]["BackgroundColor3"] = Color3.fromRGB(22, 22, 30);
DELTA["a3"]["AnchorPoint"] = Vector2.new(0.5, 1);
DELTA["a3"]["BackgroundTransparency"] = 1;
DELTA["a3"]["Size"] = UDim2.new(0.96828693151474, 0, 0.17342007160186768, 0);
DELTA["a3"]["ClipsDescendants"] = true;
DELTA["a3"]["Position"] = UDim2.new(0.507856547832489, 0, 0.9821560382843018, 0);
DELTA["a3"]["Name"] = [[Buttons]];

-- StarterGui.Delta.Executor.Executor.Overlay.Buttons.UIListLayout
DELTA["a4"] = Instance.new("UIListLayout", DELTA["a3"]);
DELTA["a4"]["VerticalAlignment"] = Enum.VerticalAlignment.Center;
DELTA["a4"]["FillDirection"] = Enum.FillDirection.Horizontal;
DELTA["a4"]["Padding"] = UDim.new(0.029999999329447746, 0);
DELTA["a4"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

-- StarterGui.Delta.Executor.Executor.Overlay.Buttons.Execute
DELTA["a5"] = Instance.new("ImageButton", DELTA["a3"]);
DELTA["a5"]["Active"] = false;
DELTA["a5"]["ZIndex"] = 300;
DELTA["a5"]["BackgroundColor3"] = Color3.fromRGB(60, 137, 196);
DELTA["a5"]["Selectable"] = false;
DELTA["a5"]["Size"] = UDim2.new(0.2561585009098053, 0, 0.7000001668930054, 0);
DELTA["a5"]["Name"] = [[Execute]];
DELTA["a5"]["Position"] = UDim2.new(0.008000015281140804, 0, 0.20599937438964844, 0);
DELTA["a5"]["BackgroundTransparency"] = 0.8899999856948853;

-- StarterGui.Delta.Executor.Executor.Overlay.Buttons.Execute.UICorner
DELTA["a6"] = Instance.new("UICorner", DELTA["a5"]);
DELTA["a6"]["CornerRadius"] = UDim.new(0.30000001192092896, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Buttons.Execute.Title
DELTA["a7"] = Instance.new("TextLabel", DELTA["a5"]);
DELTA["a7"]["TextWrapped"] = true;
DELTA["a7"]["TextScaled"] = true;
DELTA["a7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["a7"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
DELTA["a7"]["TextSize"] = 14;
DELTA["a7"]["TextColor3"] = Color3.fromRGB(140, 206, 255);
DELTA["a7"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
DELTA["a7"]["Size"] = UDim2.new(0.8766257762908936, 0, 0.3993089199066162, 0);
DELTA["a7"]["Text"] = [[EXECUTE]];
DELTA["a7"]["Name"] = [[Title]];
DELTA["a7"]["BackgroundTransparency"] = 1;
DELTA["a7"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Buttons.Execute.UIStroke
DELTA["a8"] = Instance.new("UIStroke", DELTA["a5"]);
DELTA["a8"]["Color"] = Color3.fromRGB(60, 137, 196);
DELTA["a8"]["Thickness"] = 2;

-- StarterGui.Delta.Executor.Executor.Overlay.Buttons.Clear
DELTA["a9"] = Instance.new("ImageButton", DELTA["a3"]);
DELTA["a9"]["Active"] = false;
DELTA["a9"]["ZIndex"] = 300;
DELTA["a9"]["BackgroundColor3"] = Color3.fromRGB(94, 136, 169);
DELTA["a9"]["Selectable"] = false;
DELTA["a9"]["LayoutOrder"] = 1;
DELTA["a9"]["Size"] = UDim2.new(0.22138313949108124, 0, 0.7000001668930054, 0);
DELTA["a9"]["Name"] = [[Clear]];
DELTA["a9"]["Position"] = UDim2.new(0.27973994612693787, 0, 0.20599937438964844, 0);
DELTA["a9"]["BackgroundTransparency"] = 0.9300000071525574;

-- StarterGui.Delta.Executor.Executor.Overlay.Buttons.Clear.UICorner
DELTA["aa"] = Instance.new("UICorner", DELTA["a9"]);
DELTA["aa"]["CornerRadius"] = UDim.new(0.30000001192092896, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Buttons.Clear.Title
DELTA["ab"] = Instance.new("TextLabel", DELTA["a9"]);
DELTA["ab"]["TextWrapped"] = true;
DELTA["ab"]["TextScaled"] = true;
DELTA["ab"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["ab"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
DELTA["ab"]["TextSize"] = 14;
DELTA["ab"]["TextColor3"] = Color3.fromRGB(185, 211, 230);
DELTA["ab"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
DELTA["ab"]["Size"] = UDim2.new(0.8766260147094727, 0, 0.3993089199066162, 0);
DELTA["ab"]["Text"] = [[CLEAR]];
DELTA["ab"]["Name"] = [[Title]];
DELTA["ab"]["BackgroundTransparency"] = 1;
DELTA["ab"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Buttons.Clear.UIStroke
DELTA["ac"] = Instance.new("UIStroke", DELTA["a9"]);
DELTA["ac"]["Color"] = Color3.fromRGB(69, 97, 119);
DELTA["ac"]["Thickness"] = 2;

-- StarterGui.Delta.Executor.Executor.Overlay.Buttons.ExecuteClipboard
DELTA["ad"] = Instance.new("ImageButton", DELTA["a3"]);
DELTA["ad"]["Active"] = false;
DELTA["ad"]["ZIndex"] = 300;
DELTA["ad"]["BackgroundColor3"] = Color3.fromRGB(94, 136, 169);
DELTA["ad"]["Selectable"] = false;
DELTA["ad"]["LayoutOrder"] = 2;
DELTA["ad"]["Size"] = UDim2.new(0.3552889823913574, 0, 0.699999988079071, 0);
DELTA["ad"]["Name"] = [[ExecuteClipboard]];
DELTA["ad"]["Position"] = UDim2.new(0.5057284832000732, 0, 0.20600003004074097, 0);
DELTA["ad"]["BackgroundTransparency"] = 0.9300000071525574;

-- StarterGui.Delta.Executor.Executor.Overlay.Buttons.ExecuteClipboard.UICorner
DELTA["ae"] = Instance.new("UICorner", DELTA["ad"]);
DELTA["ae"]["CornerRadius"] = UDim.new(0.30000001192092896, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Buttons.ExecuteClipboard.Title
DELTA["af"] = Instance.new("TextLabel", DELTA["ad"]);
DELTA["af"]["TextWrapped"] = true;
DELTA["af"]["TextScaled"] = true;
DELTA["af"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["af"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
DELTA["af"]["TextSize"] = 14;
DELTA["af"]["TextColor3"] = Color3.fromRGB(185, 211, 230);
DELTA["af"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
DELTA["af"]["Size"] = UDim2.new(0.8766259551048279, 0, 0.3993089497089386, 0);
DELTA["af"]["Text"] = [[EXECUTE CLIPBOARD]];
DELTA["af"]["Name"] = [[Title]];
DELTA["af"]["BackgroundTransparency"] = 1;
DELTA["af"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Buttons.ExecuteClipboard.UIStroke
DELTA["b0"] = Instance.new("UIStroke", DELTA["ad"]);
DELTA["b0"]["Color"] = Color3.fromRGB(69, 97, 119);
DELTA["b0"]["Thickness"] = 2;

-- StarterGui.Delta.Executor.Executor.Overlay.Buttons.UIPadding
DELTA["b1"] = Instance.new("UIPadding", DELTA["a3"]);
DELTA["b1"]["PaddingTop"] = UDim.new(0.07999999821186066, 0);
DELTA["b1"]["PaddingRight"] = UDim.new(0.00800000037997961, 0);
DELTA["b1"]["PaddingBottom"] = UDim.new(0.07999999821186066, 0);
DELTA["b1"]["PaddingLeft"] = UDim.new(0.00800000037997961, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Buttons.ButtonHandlers
DELTA["b2"] = Instance.new("LocalScript", DELTA["a3"]);
DELTA["b2"]["Name"] = [[ButtonHandlers]];

-- StarterGui.Delta.Executor.Executor.Overlay.Buttons.Button3
DELTA["b3"] = Instance.new("TextBox", DELTA["a3"]);
DELTA["b3"]["Active"] = true;
DELTA["b3"]["ZIndex"] = 300;
DELTA["b3"]["TextSize"] = 21;
DELTA["b3"]["TextWrapped"] = true;
DELTA["b3"]["BackgroundColor3"] = Color3.fromRGB(94, 136, 169);
DELTA["b3"]["TextColor3"] = Color3.fromRGB(185, 211, 230);
DELTA["b3"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
DELTA["b3"]["LayoutOrder"] = 2;
DELTA["b3"]["BackgroundTransparency"] = 0.9300000071525574;
DELTA["b3"]["Size"] = UDim2.new(0.07424724847078323, 0, 0.699999988079071, 0);
DELTA["b3"]["Selectable"] = false;
DELTA["b3"]["Text"] = [[]];
DELTA["b3"]["Position"] = UDim2.new(0.9160652756690979, 0, 0.20599988102912903, 0);
DELTA["b3"]["Visible"] = false;
DELTA["b3"]["Name"] = [[Button3]];

-- StarterGui.Delta.Executor.Executor.Overlay.Buttons.Button3.UICorner
DELTA["b4"] = Instance.new("UICorner", DELTA["b3"]);
DELTA["b4"]["CornerRadius"] = UDim.new(0.30000001192092896, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Buttons.Button3.UIStroke
DELTA["b5"] = Instance.new("UIStroke", DELTA["b3"]);
DELTA["b5"]["Color"] = Color3.fromRGB(69, 97, 119);
DELTA["b5"]["Thickness"] = 2;
DELTA["b5"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.Delta.Executor.Executor.Overlay.Tabs
DELTA["b6"] = Instance.new("ScrollingFrame", DELTA["88"]);
DELTA["b6"]["ZIndex"] = 200;
DELTA["b6"]["BorderSizePixel"] = 0;
DELTA["b6"]["CanvasSize"] = UDim2.new(2, 0, 0, 0);
DELTA["b6"]["BackgroundColor3"] = Color3.fromRGB(22, 22, 30);
DELTA["b6"]["HorizontalScrollBarInset"] = Enum.ScrollBarInset.Always;
DELTA["b6"]["AutomaticCanvasSize"] = Enum.AutomaticSize.X;
DELTA["b6"]["Size"] = UDim2.new(0.9840000867843628, 0, 0.12545627355575562, 0);
DELTA["b6"]["Selectable"] = false;
DELTA["b6"]["ScrollBarThickness"] = 0;
DELTA["b6"]["Position"] = UDim2.new(0.007965609431266785, 0, 0.016980938613414764, 0);
DELTA["b6"]["Name"] = [[Tabs]];

-- StarterGui.Delta.Executor.Executor.Overlay.Tabs.UIPadding
DELTA["b7"] = Instance.new("UIPadding", DELTA["b6"]);
DELTA["b7"]["PaddingTop"] = UDim.new(0.07999999821186066, 0);
DELTA["b7"]["PaddingRight"] = UDim.new(0.00800000037997961, 0);
DELTA["b7"]["PaddingBottom"] = UDim.new(0.07999999821186066, 0);
DELTA["b7"]["PaddingLeft"] = UDim.new(0.00800000037997961, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Tabs.UIListLayout
DELTA["b8"] = Instance.new("UIListLayout", DELTA["b6"]);
DELTA["b8"]["VerticalAlignment"] = Enum.VerticalAlignment.Center;
DELTA["b8"]["FillDirection"] = Enum.FillDirection.Horizontal;
DELTA["b8"]["Padding"] = UDim.new(0.009999999776482582, 0);
DELTA["b8"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

-- StarterGui.Delta.Executor.Executor.Overlay.Tabs.AddTab
DELTA["b9"] = Instance.new("ImageButton", DELTA["b6"]);
DELTA["b9"]["Active"] = false;
DELTA["b9"]["ZIndex"] = 300;
DELTA["b9"]["BackgroundColor3"] = Color3.fromRGB(34, 41, 50);
DELTA["b9"]["Selectable"] = false;
DELTA["b9"]["LayoutOrder"] = 1000;
DELTA["b9"]["Size"] = UDim2.new(0.0526634119451046, 0, 0.6154626607894897, 0);
DELTA["b9"]["Name"] = [[AddTab]];
DELTA["b9"]["Position"] = UDim2.new(0.26442891359329224, 0, 0.30375349521636963, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Tabs.AddTab.UICorner
DELTA["ba"] = Instance.new("UICorner", DELTA["b9"]);
DELTA["ba"]["CornerRadius"] = UDim.new(0.30000001192092896, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Tabs.AddTab.ImageButton
DELTA["bb"] = Instance.new("ImageButton", DELTA["b9"]);
DELTA["bb"]["Active"] = false;
DELTA["bb"]["Modal"] = true;
DELTA["bb"]["AutoButtonColor"] = false;
DELTA["bb"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["bb"]["AnchorPoint"] = Vector2.new(1, 0.5);
DELTA["bb"]["Image"] = [[rbxassetid://13387627918]];
DELTA["bb"]["Size"] = UDim2.new(0.35981613397598267, 0, 0.3613884449005127, 0);
DELTA["bb"]["Rotation"] = 45;
DELTA["bb"]["Position"] = UDim2.new(0.699999988079071, 0, 0.5, 0);
DELTA["bb"]["BackgroundTransparency"] = 1;

-- StarterGui.Delta.Executor.Executor.Overlay.Tabs.AddTab.ImageButton.UIAspectRatioConstraint
DELTA["bc"] = Instance.new("UIAspectRatioConstraint", DELTA["bb"]);


-- StarterGui.Delta.Executor.Executor.Overlay.Tabs.AddTab.LocalScript
DELTA["bd"] = Instance.new("LocalScript", DELTA["b9"]);


-- StarterGui.Delta.Executor.Executor.Overlay.Tabs.AddTab.UIAspectRatioConstraint
DELTA["be"] = Instance.new("UIAspectRatioConstraint", DELTA["b9"]);
DELTA["be"]["AspectRatio"] = 1.004372477531433;

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved
DELTA["bf"] = Instance.new("Folder", DELTA["88"]);
DELTA["bf"]["Name"] = [[Reserved]];

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.Textbox
DELTA["c0"] = Instance.new("TextBox", DELTA["bf"]);
DELTA["c0"]["LineHeight"] = 1.840000033378601;
DELTA["c0"]["TextSize"] = 21;
DELTA["c0"]["TextXAlignment"] = Enum.TextXAlignment.Left;
DELTA["c0"]["TextWrapped"] = false;
DELTA["c0"]["TextYAlignment"] = Enum.TextYAlignment.Top;
DELTA["c0"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["c0"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["c0"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
DELTA["c0"]["ShowNativeInput"] = false;
DELTA["c0"]["MultiLine"] = true;
DELTA["c0"]["BackgroundTransparency"] = 1;
DELTA["c0"]["Size"] = UDim2.new(0.9882024526596069, 0, 0.9716954827308655, 0);
DELTA["c0"]["Text"] = "";
DELTA["c0"]["PlaceholderText"] = "Thank you for using Delta <3\nDelta is made by Lxnny and #TeamDelta !";
DELTA["c0"]["Position"] = UDim2.new(0.011494521982967854, 0, 0.012946978211402893, 3);
DELTA["c0"]["AutomaticSize"] = Enum.AutomaticSize.XY;
DELTA["c0"]["Visible"] = false;
DELTA["c0"]["Name"] = [[Textbox]];
DELTA["c0"]["ClearTextOnFocus"] = false;

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingSwitchOn
DELTA["c1"] = Instance.new("Frame", DELTA["bf"]);
DELTA["c1"]["BackgroundColor3"] = Color3.fromRGB(31, 51, 80);
DELTA["c1"]["Size"] = UDim2.new(1, 0, 0.03193088620901108, 0);
DELTA["c1"]["Visible"] = false;
DELTA["c1"]["Name"] = [[SettingSwitchOn]];

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingSwitchOn.UICorner
DELTA["c2"] = Instance.new("UICorner", DELTA["c1"]);
DELTA["c2"]["CornerRadius"] = UDim.new(0.20000000298023224, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingSwitchOn.Title
DELTA["c3"] = Instance.new("TextLabel", DELTA["c1"]);
DELTA["c3"]["TextWrapped"] = true;
DELTA["c3"]["TextScaled"] = true;
DELTA["c3"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["c3"]["TextXAlignment"] = Enum.TextXAlignment.Left;
DELTA["c3"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
DELTA["c3"]["TextSize"] = 14;
DELTA["c3"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["c3"]["AnchorPoint"] = Vector2.new(0, 0.5);
DELTA["c3"]["Size"] = UDim2.new(0.18567337095737457, 0, 0.31746408343315125, 0);
DELTA["c3"]["Text"] = [[Auto Execute]];
DELTA["c3"]["Name"] = [[Title]];
DELTA["c3"]["BackgroundTransparency"] = 1;
DELTA["c3"]["Position"] = UDim2.new(0, 0, 0.5, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingSwitchOn.UIPadding
DELTA["c4"] = Instance.new("UIPadding", DELTA["c1"]);
DELTA["c4"]["PaddingRight"] = UDim.new(0.029999999329447746, 0);
DELTA["c4"]["PaddingLeft"] = UDim.new(0.029999999329447746, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingSwitchOn.Desc
DELTA["c5"] = Instance.new("TextLabel", DELTA["c1"]);
DELTA["c5"]["TextWrapped"] = true;
DELTA["c5"]["TextScaled"] = true;
DELTA["c5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["c5"]["TextXAlignment"] = Enum.TextXAlignment.Left;
DELTA["c5"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
DELTA["c5"]["TextSize"] = 14;
DELTA["c5"]["TextColor3"] = Color3.fromRGB(126, 139, 176);
DELTA["c5"]["AnchorPoint"] = Vector2.new(0, 0.5);
DELTA["c5"]["Size"] = UDim2.new(0.6590386629104614, 0, 0.23099972307682037, 0);
DELTA["c5"]["Text"] = [[automatically execute scripts in your autoexec file upon attached.]];
DELTA["c5"]["Name"] = [[Desc]];
DELTA["c5"]["BackgroundTransparency"] = 1;
DELTA["c5"]["Position"] = UDim2.new(0.18517163395881653, 0, 0.5, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingSwitchOn.Switch
DELTA["c6"] = Instance.new("ImageButton", DELTA["c1"]);
DELTA["c6"]["BackgroundColor3"] = Color3.fromRGB(59, 139, 254);
DELTA["c6"]["AnchorPoint"] = Vector2.new(1, 0.5);
DELTA["c6"]["Image"] = [[rbxassetid://0]];
DELTA["c6"]["Size"] = UDim2.new(0.06560052931308746, 0, 0.473985493183136, 0);
DELTA["c6"]["Name"] = [[Switch]];
DELTA["c6"]["Position"] = UDim2.new(1, 0, 0.5, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingSwitchOn.Switch.UICorner
DELTA["c7"] = Instance.new("UICorner", DELTA["c6"]);
DELTA["c7"]["CornerRadius"] = UDim.new(10, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingSwitchOn.Switch.ImageButton
DELTA["c8"] = Instance.new("ImageLabel", DELTA["c6"]);
DELTA["c8"]["BackgroundColor3"] = Color3.fromRGB(254, 254, 254);
DELTA["c8"]["Selectable"] = true;
DELTA["c8"]["AnchorPoint"] = Vector2.new(1, 0.5);
DELTA["c8"]["Image"] = [[rbxassetid://0]];
DELTA["c8"]["Size"] = UDim2.new(0.34452590346336365, 0, 0.6585104465484619, 0);
DELTA["c8"]["Active"] = true;
DELTA["c8"]["Name"] = [[ImageButton]];
DELTA["c8"]["Position"] = UDim2.new(0.8884302377700806, 0, 0.5, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingSwitchOn.Switch.ImageButton.UICorner
DELTA["c9"] = Instance.new("UICorner", DELTA["c8"]);
DELTA["c9"]["CornerRadius"] = UDim.new(10, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingSwitchOn.Switch.ImageButton.UIAspectRatioConstraint
DELTA["ca"] = Instance.new("UIAspectRatioConstraint", DELTA["c8"]);


-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingSwitchOn.Enabled
DELTA["cb"] = Instance.new("BoolValue", DELTA["c1"]);
DELTA["cb"]["Value"] = true;
DELTA["cb"]["Name"] = [[Enabled]];

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.Button
DELTA["cc"] = Instance.new("Frame", DELTA["bf"]);
DELTA["cc"]["BackgroundColor3"] = Color3.fromRGB(38, 41, 50);
DELTA["cc"]["LayoutOrder"] = 2;
DELTA["cc"]["Size"] = UDim2.new(1, 0, 0.03193088620901108, 0);
DELTA["cc"]["Position"] = UDim2.new(0, 0, 0.079827219247818, 0);
DELTA["cc"]["Visible"] = false;
DELTA["cc"]["Name"] = [[Button]];

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.Button.UICorner
DELTA["cd"] = Instance.new("UICorner", DELTA["cc"]);
DELTA["cd"]["CornerRadius"] = UDim.new(0.20000000298023224, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.Button.Title
DELTA["ce"] = Instance.new("TextLabel", DELTA["cc"]);
DELTA["ce"]["TextWrapped"] = true;
DELTA["ce"]["TextScaled"] = true;
DELTA["ce"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["ce"]["TextXAlignment"] = Enum.TextXAlignment.Left;
DELTA["ce"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
DELTA["ce"]["TextSize"] = 14;
DELTA["ce"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["ce"]["AnchorPoint"] = Vector2.new(0, 0.5);
DELTA["ce"]["Size"] = UDim2.new(0.18567337095737457, 0, 0.31746408343315125, 0);
DELTA["ce"]["Text"] = [[Kill ROBLOX]];
DELTA["ce"]["Name"] = [[Title]];
DELTA["ce"]["BackgroundTransparency"] = 1;
DELTA["ce"]["Position"] = UDim2.new(0, 0, 0.5, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.Button.UIPadding
DELTA["cf"] = Instance.new("UIPadding", DELTA["cc"]);
DELTA["cf"]["PaddingRight"] = UDim.new(0.029999999329447746, 0);
DELTA["cf"]["PaddingLeft"] = UDim.new(0.029999999329447746, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.Button.Desc
DELTA["d0"] = Instance.new("TextLabel", DELTA["cc"]);
DELTA["d0"]["TextWrapped"] = true;
DELTA["d0"]["TextScaled"] = true;
DELTA["d0"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["d0"]["TextXAlignment"] = Enum.TextXAlignment.Left;
DELTA["d0"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
DELTA["d0"]["TextSize"] = 14;
DELTA["d0"]["TextColor3"] = Color3.fromRGB(103, 109, 126);
DELTA["d0"]["AnchorPoint"] = Vector2.new(0, 0.5);
DELTA["d0"]["Size"] = UDim2.new(0.6590386629104614, 0, 0.23099972307682037, 0);
DELTA["d0"]["Text"] = [[self explanitory function right here]];
DELTA["d0"]["Name"] = [[Desc]];
DELTA["d0"]["BackgroundTransparency"] = 1;
DELTA["d0"]["Position"] = UDim2.new(0.18517163395881653, 0, 0.5, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.Button.Button
DELTA["d1"] = Instance.new("ImageButton", DELTA["cc"]);
DELTA["d1"]["BackgroundColor3"] = Color3.fromRGB(59, 139, 254);
DELTA["d1"]["AnchorPoint"] = Vector2.new(1, 0.5);
DELTA["d1"]["Image"] = [[rbxassetid://0]];
DELTA["d1"]["Size"] = UDim2.new(0.12388666719198227, 0, 0.473985493183136, 0);
DELTA["d1"]["Name"] = [[Button]];
DELTA["d1"]["Position"] = UDim2.new(0.9995027780532837, 0, 0.5000000596046448, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.Button.Button.UICorner
DELTA["d2"] = Instance.new("UICorner", DELTA["d1"]);
DELTA["d2"]["CornerRadius"] = UDim.new(0.30000001192092896, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.Button.Button.Title
DELTA["d3"] = Instance.new("TextLabel", DELTA["d1"]);
DELTA["d3"]["TextWrapped"] = true;
DELTA["d3"]["ZIndex"] = 999999999;
DELTA["d3"]["TextScaled"] = true;
DELTA["d3"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["d3"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
DELTA["d3"]["TextSize"] = 14;
DELTA["d3"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["d3"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
DELTA["d3"]["Size"] = UDim2.new(0.7953082323074341, 0, 0.44124072790145874, 0);
DELTA["d3"]["Text"] = [[CLICK HERE]];
DELTA["d3"]["Name"] = [[Title]];
DELTA["d3"]["BackgroundTransparency"] = 1;
DELTA["d3"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingSwitch
DELTA["d4"] = Instance.new("Frame", DELTA["bf"]);
DELTA["d4"]["BackgroundColor3"] = Color3.fromRGB(38, 41, 50);
DELTA["d4"]["LayoutOrder"] = 1;
DELTA["d4"]["Size"] = UDim2.new(1, 0, 0.03193089738488197, 0);
DELTA["d4"]["Position"] = UDim2.new(0, 0, 0.0399135947227478, 0);
DELTA["d4"]["Visible"] = false;
DELTA["d4"]["Name"] = [[SettingSwitch]];

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingSwitch.UICorner
DELTA["d5"] = Instance.new("UICorner", DELTA["d4"]);
DELTA["d5"]["CornerRadius"] = UDim.new(0.20000000298023224, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingSwitch.Title
DELTA["d6"] = Instance.new("TextLabel", DELTA["d4"]);
DELTA["d6"]["TextWrapped"] = true;
DELTA["d6"]["TextScaled"] = true;
DELTA["d6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["d6"]["TextXAlignment"] = Enum.TextXAlignment.Left;
DELTA["d6"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
DELTA["d6"]["TextSize"] = 14;
DELTA["d6"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["d6"]["AnchorPoint"] = Vector2.new(0, 0.5);
DELTA["d6"]["Size"] = UDim2.new(0.18567337095737457, 0, 0.31746408343315125, 0);
DELTA["d6"]["Text"] = [[Auto Execute]];
DELTA["d6"]["Name"] = [[Title]];
DELTA["d6"]["BackgroundTransparency"] = 1;
DELTA["d6"]["Position"] = UDim2.new(0, 0, 0.5, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingSwitch.UIPadding
DELTA["d7"] = Instance.new("UIPadding", DELTA["d4"]);
DELTA["d7"]["PaddingRight"] = UDim.new(0.029999999329447746, 0);
DELTA["d7"]["PaddingLeft"] = UDim.new(0.029999999329447746, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingSwitch.Desc
DELTA["d8"] = Instance.new("TextLabel", DELTA["d4"]);
DELTA["d8"]["TextWrapped"] = true;
DELTA["d8"]["TextScaled"] = true;
DELTA["d8"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["d8"]["TextXAlignment"] = Enum.TextXAlignment.Left;
DELTA["d8"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
DELTA["d8"]["TextSize"] = 14;
DELTA["d8"]["TextColor3"] = Color3.fromRGB(103, 109, 126);
DELTA["d8"]["AnchorPoint"] = Vector2.new(0, 0.5);
DELTA["d8"]["Size"] = UDim2.new(0.6590386629104614, 0, 0.23099972307682037, 0);
DELTA["d8"]["Text"] = [[automatically execute scripts in your autoexec file upon attached.]];
DELTA["d8"]["Name"] = [[Desc]];
DELTA["d8"]["BackgroundTransparency"] = 1;
DELTA["d8"]["Position"] = UDim2.new(0.18517163395881653, 0, 0.5, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingSwitch.Switch
DELTA["d9"] = Instance.new("ImageButton", DELTA["d4"]);
DELTA["d9"]["BackgroundColor3"] = Color3.fromRGB(61, 66, 81);
DELTA["d9"]["AnchorPoint"] = Vector2.new(1, 0.5);
DELTA["d9"]["Image"] = [[rbxassetid://0]];
DELTA["d9"]["Size"] = UDim2.new(0.06560052931308746, 0, 0.473985493183136, 0);
DELTA["d9"]["Name"] = [[Switch]];
DELTA["d9"]["Position"] = UDim2.new(1, 0, 0.5, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingSwitch.Switch.UICorner
DELTA["da"] = Instance.new("UICorner", DELTA["d9"]);
DELTA["da"]["CornerRadius"] = UDim.new(10, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingSwitch.Switch.ImageButton
DELTA["db"] = Instance.new("ImageLabel", DELTA["d9"]);
DELTA["db"]["BackgroundColor3"] = Color3.fromRGB(136, 140, 151);
DELTA["db"]["Selectable"] = true;
DELTA["db"]["AnchorPoint"] = Vector2.new(0, 0.5);
DELTA["db"]["Image"] = [[rbxassetid://0]];
DELTA["db"]["Size"] = UDim2.new(0.34452590346336365, 0, 0.6585104465484619, 0);
DELTA["db"]["Active"] = true;
DELTA["db"]["Name"] = [[ImageButton]];
DELTA["db"]["Position"] = UDim2.new(0.11156979203224182, 0, 0.5, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingSwitch.Switch.ImageButton.UICorner
DELTA["dc"] = Instance.new("UICorner", DELTA["db"]);
DELTA["dc"]["CornerRadius"] = UDim.new(10, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingSwitch.Switch.ImageButton.UIAspectRatioConstraint
DELTA["dd"] = Instance.new("UIAspectRatioConstraint", DELTA["db"]);


-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingSwitch.Enabled
DELTA["de"] = Instance.new("BoolValue", DELTA["d4"]);
DELTA["de"]["Name"] = [[Enabled]];

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingDropdown
DELTA["df"] = Instance.new("Frame", DELTA["bf"]);
DELTA["df"]["BackgroundColor3"] = Color3.fromRGB(38, 41, 50);
DELTA["df"]["LayoutOrder"] = 3;
DELTA["df"]["Size"] = UDim2.new(1, 0, 0.03193089738488197, 0);
DELTA["df"]["Position"] = UDim2.new(0, 0, 0.11974083632230759, 0);
DELTA["df"]["Visible"] = false;
DELTA["df"]["Name"] = [[SettingDropdown]];

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingDropdown.UICorner
DELTA["e0"] = Instance.new("UICorner", DELTA["df"]);
DELTA["e0"]["CornerRadius"] = UDim.new(0.20000000298023224, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingDropdown.Title
DELTA["e1"] = Instance.new("TextLabel", DELTA["df"]);
DELTA["e1"]["TextWrapped"] = true;
DELTA["e1"]["TextScaled"] = true;
DELTA["e1"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["e1"]["TextXAlignment"] = Enum.TextXAlignment.Left;
DELTA["e1"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
DELTA["e1"]["TextSize"] = 14;
DELTA["e1"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["e1"]["AnchorPoint"] = Vector2.new(0, 0.5);
DELTA["e1"]["Size"] = UDim2.new(0.18567337095737457, 0, 0.31746408343315125, 0);
DELTA["e1"]["Text"] = [[Themes]];
DELTA["e1"]["Name"] = [[Title]];
DELTA["e1"]["BackgroundTransparency"] = 1;
DELTA["e1"]["Position"] = UDim2.new(0, 0, 0.5, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingDropdown.UIPadding
DELTA["e2"] = Instance.new("UIPadding", DELTA["df"]);
DELTA["e2"]["PaddingRight"] = UDim.new(0.029999999329447746, 0);
DELTA["e2"]["PaddingLeft"] = UDim.new(0.029999999329447746, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingDropdown.Button
DELTA["e3"] = Instance.new("ImageButton", DELTA["df"]);
DELTA["e3"]["BackgroundColor3"] = Color3.fromRGB(38, 41, 50);
DELTA["e3"]["AnchorPoint"] = Vector2.new(1, 0.5);
DELTA["e3"]["Image"] = [[rbxassetid://0]];
DELTA["e3"]["Size"] = UDim2.new(0.12388666719198227, 0, 0.473985493183136, 0);
DELTA["e3"]["Name"] = [[Button]];
DELTA["e3"]["Position"] = UDim2.new(0.9995027780532837, 0, 0.5000000596046448, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingDropdown.Button.UICorner
DELTA["e4"] = Instance.new("UICorner", DELTA["e3"]);
DELTA["e4"]["CornerRadius"] = UDim.new(0.30000001192092896, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingDropdown.Button.Title
DELTA["e5"] = Instance.new("TextLabel", DELTA["e3"]);
DELTA["e5"]["TextWrapped"] = true;
DELTA["e5"]["ZIndex"] = 999999999;
DELTA["e5"]["TextScaled"] = true;
DELTA["e5"]["BackgroundColor3"] = Color3.fromRGB(38, 41, 50);
DELTA["e5"]["TextXAlignment"] = Enum.TextXAlignment.Left;
DELTA["e5"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
DELTA["e5"]["TextSize"] = 14;
DELTA["e5"]["TextColor3"] = Color3.fromRGB(138, 146, 167);
DELTA["e5"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
DELTA["e5"]["Size"] = UDim2.new(0.5571646094322205, 0, 0.44124072790145874, 0);
DELTA["e5"]["Text"] = [[DEFAULT]];
DELTA["e5"]["Name"] = [[Title]];
DELTA["e5"]["BackgroundTransparency"] = 1;
DELTA["e5"]["Position"] = UDim2.new(0.5609880685806274, 0, 0.5000001192092896, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingDropdown.Button.Button
DELTA["e6"] = Instance.new("ImageButton", DELTA["e3"]);
DELTA["e6"]["BackgroundColor3"] = Color3.fromRGB(59, 139, 254);
DELTA["e6"]["AnchorPoint"] = Vector2.new(1, 0.5);
DELTA["e6"]["Image"] = [[rbxassetid://13441628967]];
DELTA["e6"]["Size"] = UDim2.new(0.07741968333721161, 0, 0.473985493183136, 0);
DELTA["e6"]["Name"] = [[Button]];
DELTA["e6"]["Position"] = UDim2.new(1, 0, 0.5, 0);
DELTA["e6"]["BackgroundTransparency"] = 1;

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingDropdown.Dropdown
DELTA["e7"] = Instance.new("Frame", DELTA["df"]);
DELTA["e7"]["BackgroundColor3"] = Color3.fromRGB(41, 44, 52);
DELTA["e7"]["Size"] = UDim2.new(0.2331225425004959, 0, 1.7701293230056763, 0);
DELTA["e7"]["Position"] = UDim2.new(0.7665446996688843, 0, 1.0931282043457031, 0);
DELTA["e7"]["Visible"] = false;
DELTA["e7"]["ZIndex"] = 9999999999999;
DELTA["e7"]["Name"] = [[Dropdown]];

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingDropdown.Dropdown.UIListLayout
DELTA["e8"] = Instance.new("UIListLayout", DELTA["e7"]);
DELTA["e8"]["VerticalAlignment"] = Enum.VerticalAlignment.Center;
DELTA["e8"]["HorizontalAlignment"] = Enum.HorizontalAlignment.Center;
DELTA["e8"]["Padding"] = UDim.new(0.029999999329447746, 0);
DELTA["e8"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingDropdown.Dropdown.Option2
DELTA["e9"] = Instance.new("ImageButton", DELTA["e7"]);
DELTA["e9"]["BackgroundColor3"] = Color3.fromRGB(59, 139, 254);
DELTA["e9"]["LayoutOrder"] = 1;
DELTA["e9"]["AnchorPoint"] = Vector2.new(1, 0.5);
DELTA["e9"]["Image"] = [[rbxassetid://0]];
DELTA["e9"]["Size"] = UDim2.new(0.8604854345321655, 0, 0.22047372162342072, 0);
DELTA["e9"]["Name"] = [[Option2]];
DELTA["e9"]["Position"] = UDim2.new(0.9302427172660828, 0, 0.5364913940429688, 0);
DELTA["e9"]["BackgroundTransparency"] = 1;

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingDropdown.Dropdown.Option2.UICorner
DELTA["ea"] = Instance.new("UICorner", DELTA["e9"]);
DELTA["ea"]["CornerRadius"] = UDim.new(0.30000001192092896, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingDropdown.Dropdown.Option2.Title
DELTA["eb"] = Instance.new("TextLabel", DELTA["e9"]);
DELTA["eb"]["TextWrapped"] = true;
DELTA["eb"]["ZIndex"] = 999999999;
DELTA["eb"]["TextScaled"] = true;
DELTA["eb"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["eb"]["TextXAlignment"] = Enum.TextXAlignment.Left;
DELTA["eb"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Medium, Enum.FontStyle.Normal);
DELTA["eb"]["TextSize"] = 14;
DELTA["eb"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["eb"]["AnchorPoint"] = Vector2.new(0, 0.5);
DELTA["eb"]["Size"] = UDim2.new(0.7953082323074341, 0, 0.8179191946983337, 0);
DELTA["eb"]["Text"] = [[Light]];
DELTA["eb"]["Name"] = [[Title]];
DELTA["eb"]["BackgroundTransparency"] = 1;
DELTA["eb"]["Position"] = UDim2.new(0, 0, 0.5, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingDropdown.Dropdown.Option2.Checked
DELTA["ec"] = Instance.new("ImageButton", DELTA["e9"]);
DELTA["ec"]["BackgroundColor3"] = Color3.fromRGB(59, 139, 254);
DELTA["ec"]["AnchorPoint"] = Vector2.new(1, 0.5);
DELTA["ec"]["Image"] = [[rbxassetid://13441695981]];
DELTA["ec"]["Size"] = UDim2.new(0.0812797099351883, 0, 0.5769613981246948, 0);
DELTA["ec"]["Name"] = [[Checked]];
DELTA["ec"]["Visible"] = false;
DELTA["ec"]["Position"] = UDim2.new(1, 0, 0.5, 0);
DELTA["ec"]["BackgroundTransparency"] = 1;

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingDropdown.Dropdown.Option2.Checked.UIAspectRatioConstraint
DELTA["ed"] = Instance.new("UIAspectRatioConstraint", DELTA["ec"]);


-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingDropdown.Dropdown.Divider
DELTA["ee"] = Instance.new("Frame", DELTA["e7"]);
DELTA["ee"]["BackgroundColor3"] = Color3.fromRGB(59, 63, 74);
DELTA["ee"]["LayoutOrder"] = 1;
DELTA["ee"]["Size"] = UDim2.new(0.8604854345321655, 0, 0.012410691007971764, 0);
DELTA["ee"]["Position"] = UDim2.new(0.06975728273391724, 0, 0.6603825688362122, 0);
DELTA["ee"]["Name"] = [[Divider]];

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingDropdown.Dropdown.UICorner
DELTA["ef"] = Instance.new("UICorner", DELTA["e7"]);
DELTA["ef"]["CornerRadius"] = UDim.new(0.20000000298023224, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingDropdown.Dropdown.Option1
DELTA["f0"] = Instance.new("ImageButton", DELTA["e7"]);
DELTA["f0"]["BackgroundColor3"] = Color3.fromRGB(59, 139, 254);
DELTA["f0"]["LayoutOrder"] = -1;
DELTA["f0"]["AnchorPoint"] = Vector2.new(1, 0.5);
DELTA["f0"]["Image"] = [[rbxassetid://0]];
DELTA["f0"]["Size"] = UDim2.new(0.8604854345321655, 0, 0.22047363221645355, 0);
DELTA["f0"]["Name"] = [[Option1]];
DELTA["f0"]["Position"] = UDim2.new(0.9302427172660828, 0, 0.276297390460968, 0);
DELTA["f0"]["BackgroundTransparency"] = 1;

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingDropdown.Dropdown.Option1.UICorner
DELTA["f1"] = Instance.new("UICorner", DELTA["f0"]);
DELTA["f1"]["CornerRadius"] = UDim.new(0.30000001192092896, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingDropdown.Dropdown.Option1.Title
DELTA["f2"] = Instance.new("TextLabel", DELTA["f0"]);
DELTA["f2"]["TextWrapped"] = true;
DELTA["f2"]["ZIndex"] = 999999999;
DELTA["f2"]["TextScaled"] = true;
DELTA["f2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["f2"]["TextXAlignment"] = Enum.TextXAlignment.Left;
DELTA["f2"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Medium, Enum.FontStyle.Normal);
DELTA["f2"]["TextSize"] = 14;
DELTA["f2"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["f2"]["AnchorPoint"] = Vector2.new(0, 0.5);
DELTA["f2"]["Size"] = UDim2.new(0.7953082323074341, 0, 0.8179191946983337, 0);
DELTA["f2"]["Text"] = [[Default]];
DELTA["f2"]["Name"] = [[Title]];
DELTA["f2"]["BackgroundTransparency"] = 1;
DELTA["f2"]["Position"] = UDim2.new(0, 0, 0.5, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingDropdown.Dropdown.Option1.Checked
DELTA["f3"] = Instance.new("ImageButton", DELTA["f0"]);
DELTA["f3"]["BackgroundColor3"] = Color3.fromRGB(59, 139, 254);
DELTA["f3"]["AnchorPoint"] = Vector2.new(1, 0.5);
DELTA["f3"]["Image"] = [[rbxassetid://13441695981]];
DELTA["f3"]["Size"] = UDim2.new(0.0812797099351883, 0, 0.5769613981246948, 0);
DELTA["f3"]["Name"] = [[Checked]];
DELTA["f3"]["Position"] = UDim2.new(1, 0, 0.5, 0);
DELTA["f3"]["BackgroundTransparency"] = 1;

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingDropdown.Dropdown.Option1.Checked.UIAspectRatioConstraint
DELTA["f4"] = Instance.new("UIAspectRatioConstraint", DELTA["f3"]);


-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingDropdown.Dropdown.Divider
DELTA["f5"] = Instance.new("Frame", DELTA["e7"]);
DELTA["f5"]["BackgroundColor3"] = Color3.fromRGB(59, 63, 74);
DELTA["f5"]["Size"] = UDim2.new(0.8604854345321655, 0, 0.012410691007971764, 0);
DELTA["f5"]["Position"] = UDim2.new(0.06975728273391724, 0, 0.4001886248588562, 0);
DELTA["f5"]["Name"] = [[Divider]];

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingDropdown.Dropdown.Option3
DELTA["f6"] = Instance.new("ImageButton", DELTA["e7"]);
DELTA["f6"]["BackgroundColor3"] = Color3.fromRGB(59, 139, 254);
DELTA["f6"]["LayoutOrder"] = 3;
DELTA["f6"]["AnchorPoint"] = Vector2.new(1, 0.5);
DELTA["f6"]["Image"] = [[rbxassetid://0]];
DELTA["f6"]["Size"] = UDim2.new(0.8604854345321655, 0, 0.2204737514257431, 0);
DELTA["f6"]["Name"] = [[Option3]];
DELTA["f6"]["Position"] = UDim2.new(0.9302427172660828, 0, 0.7966850399971008, 0);
DELTA["f6"]["BackgroundTransparency"] = 1;

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingDropdown.Dropdown.Option3.UICorner
DELTA["f7"] = Instance.new("UICorner", DELTA["f6"]);
DELTA["f7"]["CornerRadius"] = UDim.new(0.30000001192092896, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingDropdown.Dropdown.Option3.Title
DELTA["f8"] = Instance.new("TextLabel", DELTA["f6"]);
DELTA["f8"]["TextWrapped"] = true;
DELTA["f8"]["ZIndex"] = 999999999;
DELTA["f8"]["TextScaled"] = true;
DELTA["f8"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["f8"]["TextXAlignment"] = Enum.TextXAlignment.Left;
DELTA["f8"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Medium, Enum.FontStyle.Normal);
DELTA["f8"]["TextSize"] = 14;
DELTA["f8"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["f8"]["AnchorPoint"] = Vector2.new(0, 0.5);
DELTA["f8"]["Size"] = UDim2.new(0.7953082323074341, 0, 0.8179191946983337, 0);
DELTA["f8"]["Text"] = [[Amoled]];
DELTA["f8"]["Name"] = [[Title]];
DELTA["f8"]["BackgroundTransparency"] = 1;
DELTA["f8"]["Position"] = UDim2.new(0, 0, 0.5, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingDropdown.Dropdown.Option3.Checked
DELTA["f9"] = Instance.new("ImageButton", DELTA["f6"]);
DELTA["f9"]["BackgroundColor3"] = Color3.fromRGB(59, 139, 254);
DELTA["f9"]["AnchorPoint"] = Vector2.new(1, 0.5);
DELTA["f9"]["Image"] = [[rbxassetid://13441695981]];
DELTA["f9"]["Size"] = UDim2.new(0.0812797099351883, 0, 0.5769613981246948, 0);
DELTA["f9"]["Name"] = [[Checked]];
DELTA["f9"]["Visible"] = false;
DELTA["f9"]["Position"] = UDim2.new(1, 0, 0.5, 0);
DELTA["f9"]["BackgroundTransparency"] = 1;

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingDropdown.Dropdown.Option3.Checked.UIAspectRatioConstraint
DELTA["fa"] = Instance.new("UIAspectRatioConstraint", DELTA["f9"]);


-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingDropdown.Desc
DELTA["fb"] = Instance.new("TextLabel", DELTA["df"]);
DELTA["fb"]["TextWrapped"] = true;
DELTA["fb"]["TextScaled"] = true;
DELTA["fb"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["fb"]["TextXAlignment"] = Enum.TextXAlignment.Left;
DELTA["fb"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
DELTA["fb"]["TextSize"] = 14;
DELTA["fb"]["TextColor3"] = Color3.fromRGB(103, 109, 126);
DELTA["fb"]["AnchorPoint"] = Vector2.new(0, 0.5);
DELTA["fb"]["Size"] = UDim2.new(0.6590386629104614, 0, 0.23099972307682037, 0);
DELTA["fb"]["Text"] = [[select your desireable Delta theme below]];
DELTA["fb"]["Name"] = [[Desc]];
DELTA["fb"]["BackgroundTransparency"] = 1;
DELTA["fb"]["Position"] = UDim2.new(0.18517163395881653, 0, 0.5, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingTextbox
DELTA["fc"] = Instance.new("Frame", DELTA["bf"]);
DELTA["fc"]["BackgroundColor3"] = Color3.fromRGB(38, 41, 50);
DELTA["fc"]["LayoutOrder"] = 2;
DELTA["fc"]["Size"] = UDim2.new(1, 0, 0.03193088620901108, 0);
DELTA["fc"]["Position"] = UDim2.new(0, 0, 0.079827219247818, 0);
DELTA["fc"]["Visible"] = false;
DELTA["fc"]["Name"] = [[SettingTextbox]];

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingTextbox.UICorner
DELTA["fd"] = Instance.new("UICorner", DELTA["fc"]);
DELTA["fd"]["CornerRadius"] = UDim.new(0.20000000298023224, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingTextbox.Title
DELTA["fe"] = Instance.new("TextLabel", DELTA["fc"]);
DELTA["fe"]["TextWrapped"] = true;
DELTA["fe"]["TextScaled"] = true;
DELTA["fe"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["fe"]["TextXAlignment"] = Enum.TextXAlignment.Left;
DELTA["fe"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
DELTA["fe"]["TextSize"] = 14;
DELTA["fe"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["fe"]["AnchorPoint"] = Vector2.new(0, 0.5);
DELTA["fe"]["Size"] = UDim2.new(0.18567337095737457, 0, 0.31746408343315125, 0);
DELTA["fe"]["Text"] = [[Kill ROBLOX]];
DELTA["fe"]["Name"] = [[Title]];
DELTA["fe"]["BackgroundTransparency"] = 1;
DELTA["fe"]["Position"] = UDim2.new(0, 0, 0.5, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingTextbox.UIPadding
DELTA["ff"] = Instance.new("UIPadding", DELTA["fc"]);
DELTA["ff"]["PaddingRight"] = UDim.new(0.029999999329447746, 0);
DELTA["ff"]["PaddingLeft"] = UDim.new(0.029999999329447746, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingTextbox.Desc
DELTA["100"] = Instance.new("TextLabel", DELTA["fc"]);
DELTA["100"]["TextWrapped"] = true;
DELTA["100"]["TextScaled"] = true;
DELTA["100"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["100"]["TextXAlignment"] = Enum.TextXAlignment.Left;
DELTA["100"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
DELTA["100"]["TextSize"] = 14;
DELTA["100"]["TextColor3"] = Color3.fromRGB(103, 109, 126);
DELTA["100"]["AnchorPoint"] = Vector2.new(0, 0.5);
DELTA["100"]["Size"] = UDim2.new(0.6590386629104614, 0, 0.23099972307682037, 0);
DELTA["100"]["Text"] = [[self explanitory function right here]];
DELTA["100"]["Name"] = [[Desc]];
DELTA["100"]["BackgroundTransparency"] = 1;
DELTA["100"]["Position"] = UDim2.new(0.18517163395881653, 0, 0.5, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingTextbox.InputText
DELTA["101"] = Instance.new("TextBox", DELTA["fc"]);
DELTA["101"]["Active"] = true;
DELTA["101"]["BorderSizePixel"] = 0;
DELTA["101"]["TextSize"] = 17;
DELTA["101"]["TextWrapped"] = true;
DELTA["101"]["TextScaled"] = true;
DELTA["101"]["BackgroundColor3"] = Color3.fromRGB(31, 37, 47);
DELTA["101"]["TextColor3"] = Color3.fromRGB(162, 191, 212);
DELTA["101"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
DELTA["101"]["AnchorPoint"] = Vector2.new(0, 1);
DELTA["101"]["PlaceholderText"] = [[Input]];
DELTA["101"]["Size"] = UDim2.new(0.19835805892944336, 0, 0.4205845594406128, 0);
DELTA["101"]["Selectable"] = false;
DELTA["101"]["Text"] = [[]];
DELTA["101"]["Position"] = UDim2.new(0.7891961932182312, 0, 0.7077450752258301, 0);
DELTA["101"]["Name"] = [[InputText]];

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingTextbox.InputText.UICorner
DELTA["102"] = Instance.new("UICorner", DELTA["101"]);
DELTA["102"]["CornerRadius"] = UDim.new(0.20000000298023224, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.SettingTextbox.InputText.UIStroke
DELTA["103"] = Instance.new("UIStroke", DELTA["101"]);
DELTA["103"]["Color"] = Color3.fromRGB(59, 71, 90);
DELTA["103"]["Thickness"] = 2;
DELTA["103"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.TabX
DELTA["104"] = Instance.new("ImageButton", DELTA["bf"]);
DELTA["104"]["Active"] = false;
DELTA["104"]["ZIndex"] = 300;
DELTA["104"]["BackgroundColor3"] = Color3.fromRGB(34, 41, 50);
DELTA["104"]["Selectable"] = false;
DELTA["104"]["LayoutOrder"] = 1;
DELTA["104"]["Size"] = UDim2.new(0.23816877603530884, 0, 0.8693817853927612, 0);
DELTA["104"]["Name"] = [[TabX]];
DELTA["104"]["Visible"] = false;
DELTA["104"]["Position"] = UDim2.new(0.016260094940662384, 0, 0.20600000023841858, 0);
DELTA["104"]["BackgroundTransparency"] = 1;

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.TabX.UICorner
DELTA["105"] = Instance.new("UICorner", DELTA["104"]);
DELTA["105"]["CornerRadius"] = UDim.new(0.30000001192092896, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.TabX.Title
DELTA["106"] = Instance.new("TextLabel", DELTA["104"]);
DELTA["106"]["TextWrapped"] = true;
DELTA["106"]["TextScaled"] = true;
DELTA["106"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["106"]["TextXAlignment"] = Enum.TextXAlignment.Left;
DELTA["106"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
DELTA["106"]["TextTransparency"] = 0.30000001192092896;
DELTA["106"]["TextSize"] = 14;
DELTA["106"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["106"]["AnchorPoint"] = Vector2.new(0, 0.5);
DELTA["106"]["Size"] = UDim2.new(0.6458646059036255, 0, 0.4000000059604645, 0);
DELTA["106"]["Text"] = [[script.lua]];
DELTA["106"]["Name"] = [[Title]];
DELTA["106"]["BackgroundTransparency"] = 1;
DELTA["106"]["Position"] = UDim2.new(0.11627907305955887, 0, 0.5, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.TabX.ImageButton
DELTA["107"] = Instance.new("ImageButton", DELTA["104"]);
DELTA["107"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["107"]["AnchorPoint"] = Vector2.new(1, 0.5);
DELTA["107"]["Image"] = [[rbxassetid://13387627918]];
DELTA["107"]["Size"] = UDim2.new(0.06472493708133698, 0, 0.19327585399150848, 0);
DELTA["107"]["Position"] = UDim2.new(0.9190940260887146, 0, 0.49999985098838806, 0);
DELTA["107"]["BackgroundTransparency"] = 1;

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.TabX.ImageButton.UIAspectRatioConstraint
DELTA["108"] = Instance.new("UIAspectRatioConstraint", DELTA["107"]);


-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.Script
DELTA["109"] = Instance.new("ImageLabel", DELTA["bf"]);
DELTA["109"]["BackgroundColor3"] = Color3.fromRGB(38, 41, 50);
DELTA["109"]["LayoutOrder"] = 1;
DELTA["109"]["Size"] = UDim2.new(0.997948408126831, 0, 0.0462365560233593, 0);
DELTA["109"]["Position"] = UDim2.new(0, 0, 1.0919346493665216e-07, 0);
DELTA["109"]["Name"] = [[Script]];
DELTA["109"].Active = true;
DELTA["109"].Visible = false

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.Script.UICorner
DELTA["10a"] = Instance.new("UICorner", DELTA["109"]);
DELTA["10a"]["CornerRadius"] = UDim.new(0.20000000298023224, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.Script.Title
DELTA["10b"] = Instance.new("TextLabel", DELTA["109"]);
DELTA["10b"]["TextWrapped"] = true;
DELTA["10b"]["TextScaled"] = true;
DELTA["10b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["10b"]["TextXAlignment"] = Enum.TextXAlignment.Left;
DELTA["10b"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
DELTA["10b"]["TextSize"] = 14;
DELTA["10b"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["10b"]["AnchorPoint"] = Vector2.new(0, 0.5);
DELTA["10b"]["Size"] = UDim2.new(0.15939868986606598, 0, 0.31746405363082886, 0);
DELTA["10b"]["Text"] = [[Enter Your Script...]];
DELTA["10b"]["Name"] = [[Title]];
DELTA["10b"]["BackgroundTransparency"] = 1;
DELTA["10b"]["Position"] = UDim2.new(-0.01293666660785675, 0, 0.5000000596046448, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.Script.UIPadding
DELTA["10c"] = Instance.new("UIPadding", DELTA["109"]);
DELTA["10c"]["PaddingRight"] = UDim.new(0.029999999329447746, 0);
DELTA["10c"]["PaddingLeft"] = UDim.new(0.029999999329447746, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.Script.Button
DELTA["10d"] = Instance.new("ImageButton", DELTA["109"]);
DELTA["10d"]["BackgroundColor3"] = Color3.fromRGB(59, 64, 79);
DELTA["10d"]["AnchorPoint"] = Vector2.new(1, 0.5);
DELTA["10d"]["Image"] = [[rbxassetid://0]];
DELTA["10d"]["Size"] = UDim2.new(0.09953451156616211, 0, 0.473985493183136, 0);
DELTA["10d"]["Name"] = [[Button]];
DELTA["10d"]["Position"] = UDim2.new(1.0157949924468994, 0, 0.5000000596046448, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.Script.Button.UICorner
DELTA["10e"] = Instance.new("UICorner", DELTA["10d"]);
DELTA["10e"]["CornerRadius"] = UDim.new(0.30000001192092896, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.Script.Button.Title
DELTA["10f"] = Instance.new("TextLabel", DELTA["10d"]);
DELTA["10f"]["TextWrapped"] = true;
DELTA["10f"]["ZIndex"] = 999999999;
DELTA["10f"]["TextScaled"] = true;
DELTA["10f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["10f"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
DELTA["10f"]["TextSize"] = 14;
DELTA["10f"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["10f"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
DELTA["10f"]["Size"] = UDim2.new(0.7953082323074341, 0, 0.44124072790145874, 0);
DELTA["10f"]["Text"] = [[EXECUTE]];
DELTA["10f"]["Name"] = [[Title]];
DELTA["10f"]["BackgroundTransparency"] = 1;
DELTA["10f"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);




-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.Script.Button1
DELTA["10da"] = Instance.new("ImageButton", DELTA["109"]);
DELTA["10da"]["BackgroundColor3"] = Color3.fromRGB(59, 64, 79);
DELTA["10da"]["AnchorPoint"] = Vector2.new(1, 0.5);
DELTA["10da"]["Image"] = [[rbxassetid://0]];
DELTA["10da"]["Size"] = UDim2.new(0.09953451156616211, 0, 0.473985493183136, 0);
DELTA["10da"]["Name"] = [[Button1]];
DELTA["10da"]["Position"] = UDim2.new(0.9, 0, 0.5000000596046448, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.Script.Button1.UICorner
DELTA["10ea"] = Instance.new("UICorner", DELTA["10da"]);
DELTA["10ea"]["CornerRadius"] = UDim.new(0.30000001192092896, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.Script.Button1.Title
DELTA["10fa"] = Instance.new("TextLabel", DELTA["10da"]);
DELTA["10fa"]["TextWrapped"] = true;
DELTA["10fa"]["ZIndex"] = 999999999;
DELTA["10fa"]["TextScaled"] = true;
DELTA["10fa"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["10fa"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
DELTA["10fa"]["TextSize"] = 14;
DELTA["10fa"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["10fa"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
DELTA["10fa"]["Size"] = UDim2.new(0.7953082323074341, 0, 0.44124072790145874, 0);
DELTA["10fa"]["Text"] = [[DELETE]];
DELTA["10fa"]["Name"] = [[Title]];
DELTA["10fa"]["BackgroundTransparency"] = 1;
DELTA["10fa"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);


-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.Script.Frame
DELTA["110"] = Instance.new("Frame", DELTA["109"]);
DELTA["110"]["BackgroundColor3"] = Color3.fromRGB(86, 173, 239);
DELTA["110"]["AnchorPoint"] = Vector2.new(0, 0.5);
DELTA["110"]["Size"] = UDim2.new(0.08429200947284698, 0, 0.3846021890640259, 0);
DELTA["110"]["Position"] = UDim2.new(0.14588697254657745, 0, 0.49755123257637024, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.Script.Frame.UICorner
DELTA["111"] = Instance.new("UICorner", DELTA["110"]);
DELTA["111"]["CornerRadius"] = UDim.new(1, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Reserved.Script.Frame.Title
DELTA["112"] = Instance.new("TextLabel", DELTA["110"]);
DELTA["112"]["TextWrapped"] = true;
DELTA["112"]["TextScaled"] = true;
DELTA["112"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["112"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
DELTA["112"]["TextSize"] = 14;
DELTA["112"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["112"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
DELTA["112"]["Size"] = UDim2.new(0.8315319418907166, 0, 0.5, 0);
DELTA["112"]["Text"] = [[UTILITY]];
DELTA["112"]["Name"] = [[Title]];
DELTA["112"]["BackgroundTransparency"] = 1;
DELTA["112"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- StarterGui.Delta.Executor.Executor.Overlay.Code
DELTA["113"] = Instance.new("ScrollingFrame", DELTA["88"]);
DELTA["113"]["ZIndex"] = 200;
DELTA["113"]["BorderSizePixel"] = 0;
DELTA["113"]["CanvasSize"] = UDim2.new(0, 0, 0, 0);
DELTA["113"]["TopImage"] = [[rbxasset://textures/ui/Scroll/scroll-middle.png]];
DELTA["113"]["BackgroundColor3"] = Color3.fromRGB(22, 22, 30);
DELTA["113"]["HorizontalScrollBarInset"] = Enum.ScrollBarInset.Always;
DELTA["113"]["AnchorPoint"] = Vector2.new(0.5, 1);
DELTA["113"]["AutomaticCanvasSize"] = Enum.AutomaticSize.XY;
DELTA["113"]["BackgroundTransparency"] = 1;
DELTA["113"]["Size"] = UDim2.new(0.9764046669006348, 0, 0.6893500685691833, 0);
DELTA["113"]["Selectable"] = false;
DELTA["113"].ElasticBehavior = Enum.ElasticBehavior.Never
DELTA["113"]["ScrollBarThickness"] = 15;
DELTA["113"]["Position"] = UDim2.new(0.5117977261543274, 0, 0.8393499851226807, 0);
DELTA["113"]["Name"] = [[Code]];
DELTA["113"]["BottomImage"] = [[rbxasset://textures/ui/Scroll/scroll-middle.png]];

-- StarterGui.Delta.Executor.Executor.Overlay.Frame
DELTA["114"] = Instance.new("Frame", DELTA["88"]);
DELTA["114"]["ZIndex"] = 201;
DELTA["114"]["BorderSizePixel"] = 0;
DELTA["114"]["BackgroundColor3"] = Color3.fromRGB(34, 41, 50);
DELTA["114"]["Size"] = UDim2.new(1.0011208057403564, 0, 0.006693750154227018, 0);
DELTA["114"]["Position"] = UDim2.new(5.143397530105176e-08, 0, 0.14056874811649323, 0);

-- StarterGui.Delta.Executor.Executor.UICorner
DELTA["115"] = Instance.new("UICorner", DELTA["87"]);
DELTA["115"]["CornerRadius"] = UDim.new(0.05000000074505806, 0);

-- StarterGui.Delta.Executor.Sidemenu
DELTA["116"] = Instance.new("ImageLabel", DELTA["86"]);
DELTA["116"]["BorderSizePixel"] = 0;
DELTA["116"]["ScaleType"] = Enum.ScaleType.Crop;
DELTA["116"]["BackgroundColor3"] = Color3.fromRGB(36, 0, 0);
DELTA["116"]["AnchorPoint"] = Vector2.new(0, 0.5);
DELTA["116"]["Image"] = [[rbxassetid://0]];
DELTA["116"]["Size"] = UDim2.new(0.3273969292640686, 0, 0.9993020296096802, 0);
DELTA["116"]["ClipsDescendants"] = true;
DELTA["116"]["Name"] = [[Sidemenu]];
DELTA["116"]["BackgroundTransparency"] = 1;
DELTA["116"]["Position"] = UDim2.new(-0.004258748609572649, 0, 0.5005565881729126, 0);

-- StarterGui.Delta.Executor.Sidemenu.Script
DELTA["117"] = Instance.new("ImageLabel", DELTA["116"]);
DELTA["117"]["BackgroundColor3"] = Color3.fromRGB(26, 27, 36);
DELTA["117"]["Image"] = [[rbxassetid://0]];
DELTA["117"]["Size"] = UDim2.new(1.0000001192092896, 0, 0.4340279698371887, 0);
DELTA["117"]["ClipsDescendants"] = true;
DELTA["117"]["Name"] = [[Script]];
DELTA["117"]["Position"] = UDim2.new(-1.131473865711996e-07, 0, 0.09011479467153549, 0);

-- StarterGui.Delta.Executor.Sidemenu.Script.UICorner
DELTA["118"] = Instance.new("UICorner", DELTA["117"]);
DELTA["118"]["CornerRadius"] = UDim.new(0.05000000074505806, 0);

-- StarterGui.Delta.Executor.Sidemenu.Script.Overlay
DELTA["119"] = Instance.new("Frame", DELTA["117"]);
DELTA["119"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["119"]["BackgroundTransparency"] = 1;
DELTA["119"]["Size"] = UDim2.new(1, 0, 1, 0);
DELTA["119"]["Name"] = [[Overlay]];

-- StarterGui.Delta.Executor.Sidemenu.Script.Overlay.Holder
DELTA["11a"] = Instance.new("Frame", DELTA["119"]);
DELTA["11a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["11a"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
DELTA["11a"]["BackgroundTransparency"] = 1;
DELTA["11a"]["Size"] = UDim2.new(0.8012143969535828, 0, 0.7959624528884888, 0);
DELTA["11a"]["Position"] = UDim2.new(0.5, 0, 0.49274569749832153, 0);
DELTA["11a"]["Name"] = [[Holder]];

-- StarterGui.Delta.Executor.Sidemenu.Script.Overlay.Holder.Title
DELTA["11b"] = Instance.new("Frame", DELTA["11a"]);
DELTA["11b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["11b"]["BackgroundTransparency"] = 1;
DELTA["11b"]["Size"] = UDim2.new(1.0907094478607178, 0, 0.3451063930988312, 0);
DELTA["11b"]["Position"] = UDim2.new(-0.045354731380939484, 0, 0.041554853320121765, 0);
DELTA["11b"]["Name"] = [[Title]];

-- StarterGui.Delta.Executor.Sidemenu.Script.Overlay.Holder.Title.Title
DELTA["11c"] = Instance.new("TextLabel", DELTA["11b"]);
DELTA["11c"]["TextWrapped"] = true;
DELTA["11c"]["TextScaled"] = true;
DELTA["11c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["11c"]["TextXAlignment"] = Enum.TextXAlignment.Left;
DELTA["11c"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
DELTA["11c"]["TextSize"] = 14;
DELTA["11c"]["TextColor3"] = Color3.fromRGB(190, 206, 232);
DELTA["11c"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
DELTA["11c"]["Size"] = UDim2.new(0.9879999756813049, 0, 0.4830000102519989, 0);
DELTA["11c"]["Text"] = [[Check out this script!]];
DELTA["11c"]["Name"] = [[Title]];
DELTA["11c"]["BackgroundTransparency"] = 1;
DELTA["11c"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- StarterGui.Delta.Executor.Sidemenu.Script.Overlay.Holder.Showcase
DELTA["11d"] = Instance.new("TextButton", DELTA["11a"]);
DELTA["11d"]["BackgroundColor3"] = Color3.fromRGB(32, 35, 46);
DELTA["11d"]["Selectable"] = false;
DELTA["11d"]["Size"] = UDim2.new(1.0907094478607178, 0, 0.48145753145217896, 0);
DELTA["11d"]["Name"] = [[Showcase]];
DELTA["11d"]["Text"] = [[]];
DELTA["11d"]["Position"] = UDim2.new(-0.0453546978533268, 0, 0.41410815715789795, 0);
DELTA["11d"]["BackgroundTransparency"] = 0.4000000059604645;

-- StarterGui.Delta.Executor.Sidemenu.Script.Overlay.Holder.Showcase.UICorner
DELTA["11e"] = Instance.new("UICorner", DELTA["11d"]);
DELTA["11e"]["CornerRadius"] = UDim.new(0.05000000074505806, 0);

-- StarterGui.Delta.Executor.Sidemenu.Script.Overlay.Holder.Showcase.UIListLayout
DELTA["11f"] = Instance.new("UIListLayout", DELTA["11d"]);
DELTA["11f"]["VerticalAlignment"] = Enum.VerticalAlignment.Center;
DELTA["11f"]["HorizontalAlignment"] = Enum.HorizontalAlignment.Center;
DELTA["11f"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

-- StarterGui.Delta.Executor.Sidemenu.Script.Overlay.Holder.Showcase.Title
DELTA["120"] = Instance.new("TextLabel", DELTA["11d"]);
DELTA["120"]["TextWrapped"] = true;
DELTA["120"]["TextScaled"] = true;
DELTA["120"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["120"]["TextXAlignment"] = Enum.TextXAlignment.Left;
DELTA["120"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
DELTA["120"]["TextSize"] = 14;
DELTA["120"]["TextColor3"] = Color3.fromRGB(190, 206, 232);
DELTA["120"]["AnchorPoint"] = Vector2.new(0.5, 0);
DELTA["120"]["Size"] = UDim2.new(0.9109266400337219, 0, 0.2100510597229004, 0);
DELTA["120"]["Active"] = true;
DELTA["120"]["Text"] = [[INFINITE YIELD]];
DELTA["120"]["Name"] = [[Title]];
DELTA["120"]["Active"] = false;
DELTA["120"]["BackgroundTransparency"] = 1;
DELTA["120"]["Position"] = UDim2.new(0.5, 0, 0.24653124809265137, 0);

-- StarterGui.Delta.Executor.Sidemenu.Script.Overlay.Holder.Showcase.Description
DELTA["121"] = Instance.new("TextLabel", DELTA["11d"]);
DELTA["121"]["TextWrapped"] = true;
DELTA["121"]["TextScaled"] = true;
DELTA["121"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["121"]["TextXAlignment"] = Enum.TextXAlignment.Left;
DELTA["121"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Medium, Enum.FontStyle.Normal);
DELTA["121"]["TextSize"] = 14;
DELTA["121"]["TextColor3"] = Color3.fromRGB(157, 162, 199);
DELTA["121"]["AnchorPoint"] = Vector2.new(0.5, 1);
DELTA["121"]["Size"] = UDim2.new(0.9109266400337219, 0, 0.46432507038116455, 0);
DELTA["121"]["Active"] = true;
DELTA["121"]["Text"] = [[an admin script dedicated to provide the necessities of exploiting]];
DELTA["121"]["Active"] = false;
DELTA["121"]["Name"] = [[Description]];
DELTA["121"]["BackgroundTransparency"] = 1;
DELTA["121"]["Position"] = UDim2.new(0.5, 0, 0.9209074378013611, 0);

-- StarterGui.Delta.Executor.Sidemenu.Script.ScriptSuggestionHandler
DELTA["122"] = Instance.new("LocalScript", DELTA["117"]);
DELTA["122"]["Name"] = [[ScriptSuggestionHandler]];

-- StarterGui.Delta.Executor.Sidemenu.Network
DELTA["123"] = Instance.new("ImageLabel", DELTA["116"]);
DELTA["123"]["ZIndex"] = 99999;
DELTA["123"]["BackgroundColor3"] = Color3.fromRGB(26, 27, 36);
DELTA["123"]["Image"] = [[rbxassetid://0]];
DELTA["123"]["Size"] = UDim2.new(1.0000001192092896, 0, 0.3936704099178314, 0);
DELTA["123"]["ClipsDescendants"] = true;
DELTA["123"]["Name"] = [[Network]];
DELTA["123"]["Position"] = UDim2.new(-1.3669654208570137e-07, 0, 0.6052098870277405, 0);

-- StarterGui.Delta.Executor.Sidemenu.Network.UICorner
DELTA["124"] = Instance.new("UICorner", DELTA["123"]);
DELTA["124"]["CornerRadius"] = UDim.new(0.05000000074505806, 0);

-- StarterGui.Delta.Executor.Sidemenu.Network.Overlay
DELTA["125"] = Instance.new("Frame", DELTA["123"]);
DELTA["125"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["125"]["BackgroundTransparency"] = 1;
DELTA["125"]["Size"] = UDim2.new(1, 0, 1, 0);
DELTA["125"]["Name"] = [[Overlay]];

-- StarterGui.Delta.Executor.Sidemenu.Network.Overlay.Holder
DELTA["126"] = Instance.new("Frame", DELTA["125"]);
DELTA["126"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["126"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
DELTA["126"]["BackgroundTransparency"] = 1;
DELTA["126"]["Size"] = UDim2.new(0.8999999761581421, 0, 0.8310460448265076, 0);
DELTA["126"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
DELTA["126"]["Name"] = [[Holder]];

-- StarterGui.Delta.Executor.Sidemenu.Network.Overlay.Holder.UIListLayout
DELTA["127"] = Instance.new("UIListLayout", DELTA["126"]);
DELTA["127"]["VerticalAlignment"] = Enum.VerticalAlignment.Center;
DELTA["127"]["HorizontalAlignment"] = Enum.HorizontalAlignment.Center;
DELTA["127"]["Padding"] = UDim.new(0.15000000596046448, 0);
DELTA["127"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

-- StarterGui.Delta.Executor.Sidemenu.Network.Overlay.Holder.Frame
DELTA["128"] = Instance.new("Frame", DELTA["126"]);
DELTA["128"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["128"]["BackgroundTransparency"] = 1;
DELTA["128"]["Size"] = UDim2.new(1, 0, 0.40413346886634827, 0);
DELTA["128"]["Position"] = UDim2.new(0, 0, 0.027302570641040802, 0);

-- StarterGui.Delta.Executor.Sidemenu.Network.Overlay.Holder.Frame.Description
DELTA["129"] = Instance.new("TextLabel", DELTA["128"]);
DELTA["129"]["TextWrapped"] = true;
DELTA["129"]["TextScaled"] = true;
DELTA["129"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["129"]["TextXAlignment"] = Enum.TextXAlignment.Left;
DELTA["129"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Medium, Enum.FontStyle.Normal);
DELTA["129"]["TextSize"] = 14;
DELTA["129"]["TextColor3"] = Color3.fromRGB(157, 162, 199);
DELTA["129"]["AnchorPoint"] = Vector2.new(0.5, 1);
DELTA["129"]["Size"] = UDim2.new(0.9877889156341553, 0, 0.33333709836006165, 0);
DELTA["129"]["Text"] = [[Client status information]];
DELTA["129"]["Name"] = [[Description]];
DELTA["129"]["BackgroundTransparency"] = 1;
DELTA["129"]["Position"] = UDim2.new(0.5, 0, 0.9999999403953552, 0);

-- StarterGui.Delta.Executor.Sidemenu.Network.Overlay.Holder.Frame.Title
DELTA["12a"] = Instance.new("TextLabel", DELTA["128"]);
DELTA["12a"]["TextWrapped"] = true;
DELTA["12a"]["TextScaled"] = true;
DELTA["12a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["12a"]["TextXAlignment"] = Enum.TextXAlignment.Left;
DELTA["12a"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
DELTA["12a"]["TextSize"] = 14;
DELTA["12a"]["TextColor3"] = Color3.fromRGB(190, 206, 232);
DELTA["12a"]["AnchorPoint"] = Vector2.new(0.5, 0);
DELTA["12a"]["Size"] = UDim2.new(0.9877890348434448, 0, 0.482876718044281, 0);
DELTA["12a"]["Text"] = [[Network]];
DELTA["12a"]["Name"] = [[Title]];
DELTA["12a"]["BackgroundTransparency"] = 1;
DELTA["12a"]["Position"] = UDim2.new(0.5, 0, 0, 0);

-- StarterGui.Delta.Executor.Sidemenu.Network.Overlay.Holder.Information
DELTA["12b"] = Instance.new("Frame", DELTA["126"]);
DELTA["12b"]["BackgroundColor3"] = Color3.fromRGB(32, 35, 46);
DELTA["12b"]["BackgroundTransparency"] = 0.4000000059604645;
DELTA["12b"]["Size"] = UDim2.new(1, 0, 0.3164331018924713, 0);
DELTA["12b"]["Position"] = UDim2.new(0, 0, 0.6628726124763489, 0);
DELTA["12b"]["Name"] = [[Information]];

-- StarterGui.Delta.Executor.Sidemenu.Network.Overlay.Holder.Information.UICorner
DELTA["12c"] = Instance.new("UICorner", DELTA["12b"]);
DELTA["12c"]["CornerRadius"] = UDim.new(1, 0);

-- StarterGui.Delta.Executor.Sidemenu.Network.Overlay.Holder.Information.UIListLayout
DELTA["12d"] = Instance.new("UIListLayout", DELTA["12b"]);
DELTA["12d"]["VerticalAlignment"] = Enum.VerticalAlignment.Center;
DELTA["12d"]["FillDirection"] = Enum.FillDirection.Horizontal;
DELTA["12d"]["HorizontalAlignment"] = Enum.HorizontalAlignment.Center;
DELTA["12d"]["Padding"] = UDim.new(0.029999999329447746, 0);
DELTA["12d"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

-- StarterGui.Delta.Executor.Sidemenu.Network.Overlay.Holder.Information.Memory
DELTA["12e"] = Instance.new("TextLabel", DELTA["12b"]);
DELTA["12e"]["TextWrapped"] = true;
DELTA["12e"]["RichText"] = true;
DELTA["12e"]["TextScaled"] = true;
DELTA["12e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["12e"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
DELTA["12e"]["TextSize"] = 14;
DELTA["12e"]["TextColor3"] = Color3.fromRGB(157, 162, 199);
DELTA["12e"]["AnchorPoint"] = Vector2.new(0.5, 1);
DELTA["12e"]["Size"] = UDim2.new(0.28310254216194153, 0, 0.2934793531894684, 0);
DELTA["12e"]["Text"] = [[<font color="#4FA4F2">68</font> MB]];
DELTA["12e"]["Name"] = [[Memory]];
DELTA["12e"]["BackgroundTransparency"] = 1;
DELTA["12e"]["Position"] = UDim2.new(0.05447632819414139, 0, 0.6467397809028625, 0);

-- StarterGui.Delta.Executor.Sidemenu.Network.Overlay.Holder.Information.Ping
DELTA["12f"] = Instance.new("TextLabel", DELTA["12b"]);
DELTA["12f"]["TextWrapped"] = true;
DELTA["12f"]["RichText"] = true;
DELTA["12f"]["TextScaled"] = true;
DELTA["12f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["12f"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
DELTA["12f"]["TextSize"] = 14;
DELTA["12f"]["TextColor3"] = Color3.fromRGB(157, 162, 199);
DELTA["12f"]["AnchorPoint"] = Vector2.new(0.5, 1);
DELTA["12f"]["LayoutOrder"] = 2;
DELTA["12f"]["Size"] = UDim2.new(0.3066037893295288, 0, 0.2934792935848236, 0);
DELTA["12f"]["Text"] = [[<font color="#4FA4F2">68</font> MS Ping]];
DELTA["12f"]["Name"] = [[Ping]];
DELTA["12f"]["BackgroundTransparency"] = 1;
DELTA["12f"]["Position"] = UDim2.new(0.2835494577884674, 0, 0.646739661693573, 0);

-- StarterGui.Delta.Executor.Sidemenu.Network.Overlay.Holder.Information.Players
DELTA["130"] = Instance.new("TextLabel", DELTA["12b"]);
DELTA["130"]["TextWrapped"] = true;
DELTA["130"]["RichText"] = true;
DELTA["130"]["TextScaled"] = true;
DELTA["130"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["130"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
DELTA["130"]["TextSize"] = 14;
DELTA["130"]["TextColor3"] = Color3.fromRGB(157, 162, 199);
DELTA["130"]["AnchorPoint"] = Vector2.new(0.5, 1);
DELTA["130"]["LayoutOrder"] = 3;
DELTA["130"]["Size"] = UDim2.new(0.3066039979457855, 0, 0.2934792935848236, 0);
DELTA["130"]["Text"] = [[<font color="#4FA4F2">11</font> players]];
DELTA["130"]["Name"] = [[Players]];
DELTA["130"]["BackgroundTransparency"] = 1;
DELTA["130"]["Position"] = UDim2.new(0.6138899326324463, 0, 0.646739661693573, 0);

-- StarterGui.Delta.Executor.Sidemenu.Network.NetworkStatsHandler
DELTA["131"] = Instance.new("LocalScript", DELTA["123"]);
DELTA["131"]["Name"] = [[NetworkStatsHandler]];

-- StarterGui.Delta.Executor.Sidemenu.UIListLayout
DELTA["132"] = Instance.new("UIListLayout", DELTA["116"]);
DELTA["132"]["VerticalAlignment"] = Enum.VerticalAlignment.Center;
DELTA["132"]["HorizontalAlignment"] = Enum.HorizontalAlignment.Right;
DELTA["132"]["Padding"] = UDim.new(0.05000000074505806, 0);
DELTA["132"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

-- StarterGui.Delta.Executor.Marker
DELTA["133"] = Instance.new("StringValue", DELTA["86"]);
DELTA["133"]["Value"] = [[Menu]];
DELTA["133"]["Name"] = [[Marker]];

-- StarterGui.Delta.Home
DELTA["134"] = Instance.new("Frame", DELTA["1"]);
DELTA["134"]["ZIndex"] = 100;
DELTA["134"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
DELTA["134"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
DELTA["134"]["BackgroundTransparency"] = 1;
DELTA["134"]["Size"] = UDim2.new(0.8483448028564453, 0, 0.8924814462661743, 0);
DELTA["134"]["Position"] = UDim2.new(0.47624671459198, 0, 0.5082324147224426, 0);
DELTA["134"]["Visible"] = false;
DELTA["134"]["Name"] = [[Home]];

-- StarterGui.Delta.Home.Searchbar
DELTA["135"] = Instance.new("Frame", DELTA["134"]);
DELTA["135"]["ZIndex"] = 2;
DELTA["135"]["BackgroundColor3"] = Color3.fromRGB(38, 41, 50);
DELTA["135"]["Size"] = UDim2.new(1, 0, 0.12585513293743134, 0);
DELTA["135"]["Name"] = [[Searchbar]];

-- StarterGui.Delta.Home.Searchbar.UICorner
DELTA["136"] = Instance.new("UICorner", DELTA["135"]);
DELTA["136"]["CornerRadius"] = UDim.new(0.20000000298023224, 0);

-- StarterGui.Delta.Home.Searchbar.ImageLabel
DELTA["137"] = Instance.new("ImageLabel", DELTA["135"]);
DELTA["137"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["137"]["AnchorPoint"] = Vector2.new(0, 0.5);
DELTA["137"]["Image"] = [[rbxassetid://13365156882]];
DELTA["137"]["Size"] = UDim2.new(0.025552265346050262, 0, 0.40771156549453735, 0);
DELTA["137"]["BackgroundTransparency"] = 1;
DELTA["137"]["Position"] = UDim2.new(0.01834862306714058, 0, 0.5, 0);

-- StarterGui.Delta.Home.Searchbar.ImageLabel.UIAspectRatioConstraint
DELTA["138"] = Instance.new("UIAspectRatioConstraint", DELTA["137"]);


-- StarterGui.Delta.Home.Searchbar.Input
DELTA["139"] = Instance.new("TextBox", DELTA["135"]);
DELTA["139"]["Active"] = true;
DELTA["139"]["TextSize"] = 14;
DELTA["139"]["TextXAlignment"] = Enum.TextXAlignment.Left;
DELTA["139"]["TextWrapped"] = true;
DELTA["139"]["TextScaled"] = true;
DELTA["139"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["139"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["139"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
DELTA["139"]["AnchorPoint"] = Vector2.new(0, 0.5);
DELTA["139"]["BackgroundTransparency"] = 1;
DELTA["139"]["PlaceholderText"] = [[Search for scripts...]];
DELTA["139"]["Size"] = UDim2.new(0.8766564130783081, 0, 0.35361653566360474, 0);
DELTA["139"]["Selectable"] = false;
DELTA["139"]["Text"] = [[]];
DELTA["139"]["Position"] = UDim2.new(0.061162080615758896, 0, 0.49999991059303284, 0);
DELTA["139"]["Name"] = [[Input]];

-- StarterGui.Delta.Home.Searchbar.Button
DELTA["13a"] = Instance.new("ImageButton", DELTA["135"]);
DELTA["13a"]["ZIndex"] = 999999999;
DELTA["13a"]["BackgroundColor3"] = Color3.fromRGB(59, 139, 254);
DELTA["13a"]["AnchorPoint"] = Vector2.new(1, 0.5);
DELTA["13a"]["Image"] = [[rbxassetid://0]];
DELTA["13a"]["Size"] = UDim2.new(0.08857108652591705, 0, 0.572917103767395, 0);
DELTA["13a"]["Name"] = [[Button]];
DELTA["13a"]["Position"] = UDim2.new(0.982576847076416, 0, 0.4999999701976776, 0);

-- StarterGui.Delta.Home.Searchbar.Button.UICorner
DELTA["13b"] = Instance.new("UICorner", DELTA["13a"]);
DELTA["13b"]["CornerRadius"] = UDim.new(0.15000000596046448, 0);

-- StarterGui.Delta.Home.Searchbar.Button.Title
DELTA["13c"] = Instance.new("TextLabel", DELTA["13a"]);
DELTA["13c"]["TextWrapped"] = true;
DELTA["13c"]["ZIndex"] = 999999999;
DELTA["13c"]["TextScaled"] = true;
DELTA["13c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["13c"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
DELTA["13c"]["TextSize"] = 14;
DELTA["13c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["13c"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
DELTA["13c"]["Size"] = UDim2.new(0.7953082323074341, 0, 0.44124072790145874, 0);
DELTA["13c"]["Text"] = [[UPLOAD]];
DELTA["13c"]["Name"] = [[Title]];
DELTA["13c"]["BackgroundTransparency"] = 1;
DELTA["13c"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- StarterGui.Delta.Home.Holder
DELTA["13d"] = Instance.new("ScrollingFrame", DELTA["134"]);
DELTA["13d"]["CanvasSize"] = UDim2.new(0, 0, 3, 0);
DELTA["13d"]["ScrollBarImageTransparency"] = 1;
DELTA["13d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["13d"]["VerticalScrollBarInset"] = Enum.ScrollBarInset.Always;
DELTA["13d"]["AnchorPoint"] = Vector2.new(0.5, 1);
DELTA["13d"]["BackgroundTransparency"] = 1;
DELTA["13d"]["Size"] = UDim2.new(1, 0, 0.8350700736045837, 0);
DELTA["13d"]["Selectable"] = false;
DELTA["13d"]["ScrollBarThickness"] = 0;
DELTA["13d"]["Position"] = UDim2.new(0.5, 0, 1, 0);
DELTA["13d"]["Name"] = [[Holder]];

-- StarterGui.Delta.Home.Holder.UIListLayout
DELTA["13e"] = Instance.new("UIListLayout", DELTA["13d"]);
DELTA["13e"]["Padding"] = UDim.new(0.004999999888241291, 0);
DELTA["13e"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

-- StarterGui.Delta.Home.Holder.Script
DELTA["13f"] = Instance.new("Frame", DELTA["13d"]);
DELTA["13f"]["BackgroundColor3"] = Color3.fromRGB(38, 41, 50);
DELTA["13f"]["LayoutOrder"] = 1;
DELTA["13f"]["Size"] = UDim2.new(0.997948408126831, 0, 0.0462365560233593, 0);
DELTA["13f"]["Position"] = UDim2.new(0, 0, 1.0919346493665216e-07, 0);
DELTA["13f"]["Name"] = [[Script]];

-- StarterGui.Delta.Home.Holder.Script.UICorner
DELTA["140"] = Instance.new("UICorner", DELTA["13f"]);
DELTA["140"]["CornerRadius"] = UDim.new(0.20000000298023224, 0);

-- StarterGui.Delta.Home.Holder.Script.Title
DELTA["141"] = Instance.new("TextLabel", DELTA["13f"]);
DELTA["141"]["TextWrapped"] = true;
DELTA["141"]["TextScaled"] = true;
DELTA["141"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["141"]["TextXAlignment"] = Enum.TextXAlignment.Left;
DELTA["141"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
DELTA["141"]["TextSize"] = 14;
DELTA["141"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["141"]["AnchorPoint"] = Vector2.new(0, 0.5);
DELTA["141"]["Size"] = UDim2.new(0.15939868986606598, 0, 0.31746405363082886, 0);
DELTA["141"]["Text"] = [[Enter Your Title...]];
DELTA["141"]["Name"] = [[Title]];
DELTA["141"]["BackgroundTransparency"] = 1;
DELTA["141"]["Position"] = UDim2.new(-0.01293666660785675, 0, 0.5000000596046448, 0);

-- StarterGui.Delta.Home.Holder.Script.UIPadding
DELTA["142"] = Instance.new("UIPadding", DELTA["13f"]);
DELTA["142"]["PaddingRight"] = UDim.new(0.029999999329447746, 0);
DELTA["142"]["PaddingLeft"] = UDim.new(0.029999999329447746, 0);

-- StarterGui.Delta.Home.Holder.Script.Button
DELTA["143"] = Instance.new("ImageButton", DELTA["13f"]);
DELTA["143"]["BackgroundColor3"] = Color3.fromRGB(59, 64, 79);
DELTA["143"]["AnchorPoint"] = Vector2.new(1, 0.5);
DELTA["143"]["Image"] = [[rbxassetid://0]];
DELTA["143"]["Size"] = UDim2.new(0.09953451156616211, 0, 0.473985493183136, 0);
DELTA["143"]["Name"] = [[Button]];
DELTA["143"]["Position"] = UDim2.new(1.0157949924468994, 0, 0.5000000596046448, 0);

-- StarterGui.Delta.Home.Holder.Script.Button.UICorner
DELTA["144"] = Instance.new("UICorner", DELTA["143"]);
DELTA["144"]["CornerRadius"] = UDim.new(0.30000001192092896, 0);

-- StarterGui.Delta.Home.Holder.Script.Button.Title
DELTA["145"] = Instance.new("TextLabel", DELTA["143"]);
DELTA["145"]["TextWrapped"] = true;
DELTA["145"]["ZIndex"] = 999999999;
DELTA["145"]["TextScaled"] = true;
DELTA["145"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["145"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
DELTA["145"]["TextSize"] = 14;
DELTA["145"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["145"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
DELTA["145"]["Size"] = UDim2.new(0.7953082323074341, 0, 0.44124072790145874, 0);
DELTA["145"]["Text"] = [[OPTIONS]];
DELTA["145"]["Name"] = [[Title]];
DELTA["145"]["BackgroundTransparency"] = 1;
DELTA["145"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- StarterGui.Delta.Home.Holder.Script.Frame
DELTA["146"] = Instance.new("Frame", DELTA["13f"]);
DELTA["146"]["BackgroundColor3"] = Color3.fromRGB(86, 173, 239);
DELTA["146"]["AnchorPoint"] = Vector2.new(0, 0.5);
DELTA["146"]["Size"] = UDim2.new(0.08429200947284698, 0, 0.3846021890640259, 0);
DELTA["146"]["Position"] = UDim2.new(0.14588697254657745, 0, 0.49755123257637024, 0);

-- StarterGui.Delta.Home.Holder.Script.Frame.UICorner
DELTA["147"] = Instance.new("UICorner", DELTA["146"]);
DELTA["147"]["CornerRadius"] = UDim.new(1, 0);

-- StarterGui.Delta.Home.Holder.Script.Frame.Title
DELTA["148"] = Instance.new("TextLabel", DELTA["146"]);
DELTA["148"]["TextWrapped"] = true;
DELTA["148"]["TextScaled"] = true;
DELTA["148"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["148"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
DELTA["148"]["TextSize"] = 14;
DELTA["148"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["148"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
DELTA["148"]["Size"] = UDim2.new(0.8315319418907166, 0, 0.5, 0);
DELTA["148"]["Text"] = [[UTILITY]];
DELTA["148"]["Name"] = [[Title]];
DELTA["148"]["BackgroundTransparency"] = 1;
DELTA["148"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- StarterGui.Delta.Home.DarkOverlay
DELTA["149"] = Instance.new("Frame", DELTA["134"]);
DELTA["149"]["ZIndex"] = 99999;
DELTA["149"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
DELTA["149"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
DELTA["149"]["BackgroundTransparency"] = 0.5;
DELTA["149"]["Size"] = UDim2.new(10, 10, 2, 0);
DELTA["149"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
DELTA["149"]["Name"] = [[DarkOverlay]];

-- StarterGui.Delta.Home.Popup
DELTA["14a"] = Instance.new("Frame", DELTA["134"]);
DELTA["14a"]["ZIndex"] = 100000;
DELTA["14a"]["BackgroundColor3"] = Color3.fromRGB(38, 41, 49);
DELTA["14a"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
DELTA["14a"]["Size"] = UDim2.new(0.4596325159072876, 0, 0.9168577194213867, 0);
DELTA["14a"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
DELTA["14a"]["Name"] = [[Popup]];
DELTA["14a"].Active = true;

-- StarterGui.Delta.Home.Popup.Title
DELTA["14b"] = Instance.new("Frame", DELTA["14a"]);
DELTA["14b"]["ZIndex"] = 999999999;
DELTA["14b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["14b"]["AnchorPoint"] = Vector2.new(0.5, 0);
DELTA["14b"]["BackgroundTransparency"] = 1;
DELTA["14b"]["Size"] = UDim2.new(0.8193565607070923, 0, 0.23179079592227936, 0);
DELTA["14b"]["Position"] = UDim2.new(0.5, 0, 0.09408924728631973, 0);
DELTA["14b"]["Name"] = [[Title1]];

-- StarterGui.Delta.Home.Popup.Title.UIListLayout
DELTA["14c"] = Instance.new("UIListLayout", DELTA["14b"]);
DELTA["14c"]["VerticalAlignment"] = Enum.VerticalAlignment.Center;
DELTA["14c"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

-- StarterGui.Delta.Home.Popup.Title.Title
DELTA["14d"] = Instance.new("TextLabel", DELTA["14b"]);
DELTA["14d"]["TextWrapped"] = true;
DELTA["14d"]["ZIndex"] = 999999999;
DELTA["14d"]["TextScaled"] = true;
DELTA["14d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["14d"]["TextXAlignment"] = Enum.TextXAlignment.Left;
DELTA["14d"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
DELTA["14d"]["TextSize"] = 14;
DELTA["14d"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["14d"]["AnchorPoint"] = Vector2.new(0.5, 0);
DELTA["14d"]["Size"] = UDim2.new(0.7438986301422119, 0, 0.2367609590291977, 0);
DELTA["14d"]["Text"] = [[Enter Details]];
DELTA["14d"]["Name"] = [[Title]];
DELTA["14d"]["BackgroundTransparency"] = 1;
DELTA["14d"]["Position"] = UDim2.new(0.37194931507110596, 0, 0.1145174577832222, 0);

-- StarterGui.Delta.Home.Popup.Title.Paragraph
DELTA["14e"] = Instance.new("TextLabel", DELTA["14b"]);
DELTA["14e"]["TextWrapped"] = true;
DELTA["14e"]["ZIndex"] = 999999999;
DELTA["14e"]["TextScaled"] = true;
DELTA["14e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["14e"]["TextXAlignment"] = Enum.TextXAlignment.Left;
DELTA["14e"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
DELTA["14e"]["TextSize"] = 14;
DELTA["14e"]["TextColor3"] = Color3.fromRGB(161, 167, 182);
DELTA["14e"]["AnchorPoint"] = Vector2.new(0.5, 1);
DELTA["14e"]["Size"] = UDim2.new(0.7438986897468567, 0, 0.5482637882232666, 0);
DELTA["14e"]["Text"] = [[Complete the necessary parameters to upload your client script]];
DELTA["14e"]["Name"] = [[Paragraph]];
DELTA["14e"]["BackgroundTransparency"] = 1;
DELTA["14e"]["Position"] = UDim2.new(0.37194934487342834, 0, 1.0482637882232666, 0);

-- StarterGui.Delta.Home.Popup.UICorner
DELTA["14f"] = Instance.new("UICorner", DELTA["14a"]);
DELTA["14f"]["CornerRadius"] = UDim.new(0.05000000074505806, 0);

-- StarterGui.Delta.Home.Popup.Close
DELTA["150"] = Instance.new("ImageButton", DELTA["14a"]);
DELTA["150"]["ZIndex"] = 999999999;
DELTA["150"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["150"]["AnchorPoint"] = Vector2.new(1, 0.5);
DELTA["150"]["Image"] = [[rbxassetid://13363121645]];
DELTA["150"]["Size"] = UDim2.new(0.04585733264684677, 0, 0.04716602712869644, 0);
DELTA["150"]["Name"] = [[Close]];
DELTA["150"]["Position"] = UDim2.new(0.8981863260269165, 0, 0.15145258605480194, 0);
DELTA["150"]["BackgroundTransparency"] = 1;

-- StarterGui.Delta.Home.Popup.Close.UIAspectRatioConstraint
DELTA["151"] = Instance.new("UIAspectRatioConstraint", DELTA["150"]);


-- StarterGui.Delta.Home.Popup.Title
DELTA["152"] = Instance.new("Frame", DELTA["14a"]);
DELTA["152"]["ZIndex"] = 999999999;
DELTA["152"]["BackgroundColor3"] = Color3.fromRGB(45, 50, 62);
DELTA["152"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
DELTA["152"]["Size"] = UDim2.new(0.8156777620315552, 0, 0.14276885986328125, 0);
DELTA["152"]["Position"] = UDim2.new(0.4967409074306488, 0, 0.4563864767551422, 0);
DELTA["152"]["Name"] = [[Title]];

-- StarterGui.Delta.Home.Popup.Title.UICorner
DELTA["153"] = Instance.new("UICorner", DELTA["152"]);
DELTA["153"]["CornerRadius"] = UDim.new(0.20000000298023224, 0);

-- StarterGui.Delta.Home.Popup.Title.UIStroke
DELTA["154"] = Instance.new("UIStroke", DELTA["152"]);
DELTA["154"]["Color"] = Color3.fromRGB(81, 92, 121);

-- StarterGui.Delta.Home.Popup.Title.TextLabel
DELTA["155"] = Instance.new("TextLabel", DELTA["152"]);
DELTA["155"]["TextWrapped"] = true;
DELTA["155"]["ZIndex"] = 999999999;
DELTA["155"]["TextScaled"] = true;
DELTA["155"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["155"]["TextXAlignment"] = Enum.TextXAlignment.Left;
DELTA["155"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
DELTA["155"]["TextSize"] = 14;
DELTA["155"]["TextColor3"] = Color3.fromRGB(129, 143, 164);
DELTA["155"]["Size"] = UDim2.new(0.9756902456283569, 0, 0.29466089606285095, 0);
DELTA["155"]["Text"] = [[Title]];
DELTA["155"]["BackgroundTransparency"] = 1;
DELTA["155"]["Position"] = UDim2.new(0.02430974505841732, 0, 0.09480518102645874, 0);

-- StarterGui.Delta.Home.Popup.Title.TextLabel
DELTA["156"] = Instance.new("TextBox", DELTA["152"]);
DELTA["156"]["Active"] = true;
DELTA["156"]["ZIndex"] = 999999999;
DELTA["156"]["TextSize"] = 14;
DELTA["156"]["TextXAlignment"] = Enum.TextXAlignment.Left;
DELTA["156"]["TextWrapped"] = true;
DELTA["156"]["TextScaled"] = true;
DELTA["156"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["156"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
DELTA["156"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
DELTA["156"]["BackgroundTransparency"] = 1;
DELTA["156"]["Size"] = UDim2.new(0.9756902456283569, 0, 0.3262626826763153, 0);
DELTA["156"]["Selectable"] = false;
DELTA["156"]["Text"] = [[Enter Your Title...]];
DELTA["156"]["Position"] = UDim2.new(0.02430974505841732, 0, 0.4845598340034485, 0);
DELTA["156"]["Name"] = [[TextBox]];

-- StarterGui.Delta.Home.Popup.Source
DELTA["157"] = Instance.new("Frame", DELTA["14a"]);
DELTA["157"]["ZIndex"] = 999999999;
DELTA["157"]["BackgroundColor3"] = Color3.fromRGB(45, 50, 62);
DELTA["157"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
DELTA["157"]["Size"] = UDim2.new(0.8156777620315552, 0, 0.14276885986328125, 0);
DELTA["157"]["Position"] = UDim2.new(0.4967409074306488, 0, 0.6323444843292236, 0);
DELTA["157"]["Name"] = [[Source]];

-- StarterGui.Delta.Home.Popup.Source.UICorner
DELTA["158"] = Instance.new("UICorner", DELTA["157"]);
DELTA["158"]["CornerRadius"] = UDim.new(0.20000000298023224, 0);

-- StarterGui.Delta.Home.Popup.Source.UIStroke
DELTA["159"] = Instance.new("UIStroke", DELTA["157"]);
DELTA["159"]["Color"] = Color3.fromRGB(81, 92, 121);

-- StarterGui.Delta.Home.Popup.Source
end

tab3.newButton("FrostWare", "Executor script", function()

local plrs = game.Players.LocalPlayer
local ScreenGui = Instance.new("ScreenGui")
local Main = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local Side = Instance.new("Frame")
local UICorner_2 = Instance.new("UICorner")
local Executor = Instance.new("ImageButton")
local home = Instance.new("ImageButton")
local Settings = Instance.new("ImageButton")
local Credits = Instance.new("ImageButton")
local Top = Instance.new("Frame")
local UICorner_3 = Instance.new("UICorner")
local TextLabel = Instance.new("TextLabel")
local ImageLabel = Instance.new("ImageLabel")
local TextButton = Instance.new("TextButton")
local Home = Instance.new("Frame")
local UICorner_4 = Instance.new("UICorner")
local user = Instance.new("Frame")
local User = Instance.new("ImageLabel")
local UserText = Instance.new("TextLabel")
local UICorner_5 = Instance.new("UICorner")
local Frame = Instance.new("Frame")
local UICorner_6 = Instance.new("UICorner")
local Frame1 = Instance.new("Frame")
local TextLabel_2 = Instance.new("TextLabel")
local Frame2 = Instance.new("Frame")
local TextLabel_3 = Instance.new("TextLabel")
local TextLabel_4 = Instance.new("TextLabel")
local TextLabel_5 = Instance.new("TextLabel")
local TextLabel_6 = Instance.new("TextLabel")
local TextLabel_7 = Instance.new("TextLabel")
local Settings_2 = Instance.new("Frame")
local UICorner_7 = Instance.new("UICorner")
local TextLabel_8 = Instance.new("TextLabel")
local Executor_2 = Instance.new("Frame")
local UICorner_8 = Instance.new("UICorner")
local Code = Instance.new("TextBox")
local Clear = Instance.new("TextButton")
local UICorner_9 = Instance.new("UICorner")
local Execute = Instance.new("TextButton")
local UICorner_10 = Instance.new("UICorner")
local UICorner_11 = Instance.new("UICorner")
local Paste = Instance.new("TextButton")
local UICorner_12 = Instance.new("UICorner")
local Credits_2 = Instance.new("Frame")
local UICorner_13 = Instance.new("UICorner")
local TextLabel_9 = Instance.new("TextLabel")
local ImageLabel_2 = Instance.new("ImageLabel")
local ImageLabel_3 = Instance.new("ImageLabel")
local TextLabel_10 = Instance.new("TextLabel")
local UICorner_14 = Instance.new("UICorner")
local TextLabel_11 = Instance.new("TextLabel")
local UICorner_15 = Instance.new("UICorner")
local TextLabel_12 = Instance.new("TextLabel")
local TextLabel_13 = Instance.new("TextLabel")
local UICorner_16 = Instance.new("UICorner")
local TextLabel_14 = Instance.new("TextLabel")
local UICorner_17 = Instance.new("UICorner")
local OpenButton = Instance.new("ImageButton")
local UICorner_18 = Instance.new("UICorner")

--Properties:
ScreenGui.Parent = game.CoreGui
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Main.Name = "Main"
Main.Parent = ScreenGui
Main.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Main.BackgroundTransparency = 0.300
Main.BorderColor3 = Color3.fromRGB(0, 0, 0)
Main.BorderSizePixel = 0
Main.Position = UDim2.new(0.109130904, 0, 0.142254889, 0)
Main.Size = UDim2.new(0, 492, 0, 295)

UICorner.Parent = Main

Side.Name = "Side"
Side.Parent = Main
Side.BackgroundColor3 = Color3.fromRGB(0, 39, 116)
Side.BackgroundTransparency = 0.400
Side.BorderColor3 = Color3.fromRGB(0, 0, 0)
Side.BorderSizePixel = 0
Side.Position = UDim2.new(0.00773930736, 0, 0.172789693, 0)
Side.Size = UDim2.new(0, 39, 0, 236)

UICorner_2.Parent = Side

Executor.Name = "Executor"
Executor.Parent = Side
Executor.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Executor.BackgroundTransparency = 1.000
Executor.BorderColor3 = Color3.fromRGB(0, 0, 0)
Executor.BorderSizePixel = 0
Executor.Position = UDim2.new(0.144999996, 0, 0.173999995, 0)
Executor.Size = UDim2.new(0, 28, 0, 28)
Executor.Image = "rbxassetid://110565107095653"

home.Name = "home"
home.Parent = Side
home.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
home.BackgroundTransparency = 1.000
home.BorderColor3 = Color3.fromRGB(0, 0, 0)
home.BorderSizePixel = 0
home.Position = UDim2.new(0.121417709, 0, 0.0263929199, 0)
home.Size = UDim2.new(0, 28, 0, 28)
home.Image = "rbxassetid://119897226376123"

Settings.Name = "Settings"
Settings.Parent = Side
Settings.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Settings.BackgroundTransparency = 1.000
Settings.BorderColor3 = Color3.fromRGB(0, 0, 0)
Settings.BorderSizePixel = 0
Settings.Position = UDim2.new(0.121417709, 0, 0.294906735, 0)
Settings.Size = UDim2.new(0, 28, 0, 28)
Settings.Image = "http://www.roblox.com/asset/?id=17257771808"

Credits.Name = "Credits"
Credits.Parent = Side
Credits.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Credits.BackgroundTransparency = 1.000
Credits.BorderColor3 = Color3.fromRGB(0, 0, 0)
Credits.BorderSizePixel = 0
Credits.Position = UDim2.new(0.120999999, 0, 0.439999998, 0)
Credits.Size = UDim2.new(0, 28, 0, 28)
Credits.Image = "rbxassetid://138073973227244"

Top.Name = "Top"
Top.Parent = Main
Top.BackgroundColor3 = Color3.fromRGB(0, 39, 116)
Top.BackgroundTransparency = 0.400
Top.BorderColor3 = Color3.fromRGB(0, 0, 0)
Top.BorderSizePixel = 0
Top.Position = UDim2.new(0.00773930736, 0, 0.0287845936, 0)
Top.Size = UDim2.new(0, 479, 0, 34)

UICorner_3.Parent = Top

TextLabel.Parent = Top
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.BorderSizePixel = 0
TextLabel.Position = UDim2.new(0.0726315826, 0, 0.0294117648, 0)
TextLabel.Size = UDim2.new(0, 228, 0, 32)
TextLabel.Font = Enum.Font.FredokaOne
TextLabel.Text = "Frostware • Executor"
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextSize = 24.000
TextLabel.TextWrapped = true

ImageLabel.Parent = Top
ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel.BackgroundTransparency = 1.000
ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel.BorderSizePixel = 0
ImageLabel.Position = UDim2.new(-0.0123159131, 0, -0.227451101, 0)
ImageLabel.Size = UDim2.new(0, 50, 0, 50)
ImageLabel.Image = "rbxassetid://104305620466966"

TextButton.Parent = Top
TextButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton.BackgroundTransparency = 1.000
TextButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton.BorderSizePixel = 0
TextButton.Position = UDim2.new(0.922804058, 0, -0.264705896, 0)
TextButton.Size = UDim2.new(0, 46, 0, 50)
TextButton.Font = Enum.Font.SourceSans
TextButton.Text = "X"
TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton.TextSize = 26.000

Home.Name = "Home"
Home.Parent = Main
Home.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Home.BackgroundTransparency = 0.600
Home.BorderColor3 = Color3.fromRGB(0, 0, 0)
Home.BorderSizePixel = 0
Home.Position = UDim2.new(0.103170753, 0, 0.171977416, 0)
Home.Size = UDim2.new(0, 433, 0, 237)

UICorner_4.Parent = Home

user.Name = "user"
user.Parent = Home
user.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
user.BackgroundTransparency = 0.600
user.BorderColor3 = Color3.fromRGB(0, 0, 0)
user.BorderSizePixel = 0
user.Position = UDim2.new(-0.000198469977, 0, -0.00264949235, 0)
user.Size = UDim2.new(0, 220, 0, 75)
user.ZIndex = 2

User.Name = "User"
User.Parent = user
User.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
User.BackgroundTransparency = 1.000
User.BorderColor3 = Color3.fromRGB(0, 0, 0)
User.BorderSizePixel = 0
User.Position = UDim2.new(0.0581817627, 0, 0.094617106, 0)
User.Size = UDim2.new(0, 47, 0, 59)
User.ZIndex = 2
User.Image = "rbxassetid://18747017080"

UserText.Name = "UserText"
UserText.Parent = User
UserText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
UserText.BackgroundTransparency = 1.000
UserText.BorderColor3 = Color3.fromRGB(0, 0, 0)
UserText.BorderSizePixel = 0
UserText.Position = UDim2.new(1.11682653, 0, 0.213267952, 0)
UserText.Size = UDim2.new(0, 155, 0, 35)
UserText.ZIndex = 324234234
UserText.Font = Enum.Font.Gotham
UserText.Text = "Welcome, "
UserText.TextColor3 = Color3.fromRGB(255, 255, 255)
UserText.TextSize = 20.000
UserText.TextWrapped = true

UICorner_5.Parent = User

Frame.Parent = user
Frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Frame.BackgroundTransparency = 0.400
Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(0.0140000004, 0, 0.0500000007, 0)
Frame.Size = UDim2.new(0, 67, 0, 67)

UICorner_6.CornerRadius = UDim.new(1, 0)
UICorner_6.Parent = Frame

Frame1.Name = "Frame1"
Frame1.Parent = Home
Frame1.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
Frame1.BackgroundTransparency = 0.600
Frame1.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame1.BorderSizePixel = 0
Frame1.Position = UDim2.new(-0.000198469977, 0, 0.313806206, 0)
Frame1.Size = UDim2.new(0, 220, 0, 162)
Frame1.ZIndex = 2

TextLabel_2.Parent = Frame1
TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.BackgroundTransparency = 1.000
TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_2.BorderSizePixel = 0
TextLabel_2.Position = UDim2.new(-0.0367908813, 0, 0.790123463, 0)
TextLabel_2.Size = UDim2.new(0, 100, 0, 50)
TextLabel_2.Font = Enum.Font.FredokaOne
TextLabel_2.Text = "Version: 1.0.0"
TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.TextSize = 14.000

Frame2.Name = "Frame2"
Frame2.Parent = Home
Frame2.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
Frame2.BackgroundTransparency = 0.600
Frame2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame2.BorderSizePixel = 0
Frame2.Position = UDim2.new(0.509348094, 0, -0.00264949235, 0)
Frame2.Size = UDim2.new(0, 212, 0, 236)
Frame2.ZIndex = 2

TextLabel_3.Parent = Frame2
TextLabel_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_3.BackgroundTransparency = 1.000
TextLabel_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_3.BorderSizePixel = 0
TextLabel_3.Position = UDim2.new(-0.0610000007, 0, -0.0649999976, 0)
TextLabel_3.Size = UDim2.new(0, 116, 0, 50)
TextLabel_3.Font = Enum.Font.FredokaOne
TextLabel_3.Text = "Features:"
TextLabel_3.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_3.TextSize = 20.000

TextLabel_4.Parent = Frame2
TextLabel_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_4.BackgroundTransparency = 1.000
TextLabel_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_4.BorderSizePixel = 0
TextLabel_4.Position = UDim2.new(0.0199999548, 0, 0.132000029, 0)
TextLabel_4.Size = UDim2.new(0, 208, 0, 28)
TextLabel_4.Font = Enum.Font.FredokaOne
TextLabel_4.Text = "- Executor with 99% UNC"
TextLabel_4.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_4.TextSize = 20.000
TextLabel_4.TextXAlignment = Enum.TextXAlignment.Left
TextLabel_4.TextYAlignment = Enum.TextYAlignment.Top

TextLabel_5.Parent = Frame2
TextLabel_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_5.BackgroundTransparency = 1.000
TextLabel_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_5.BorderSizePixel = 0
TextLabel_5.Position = UDim2.new(0.0199999548, 0, 0.280305117, 0)
TextLabel_5.Size = UDim2.new(0, 208, 0, 28)
TextLabel_5.Font = Enum.Font.FredokaOne
TextLabel_5.Text = "- User friendly interface fresh"
TextLabel_5.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_5.TextSize = 20.000
TextLabel_5.TextXAlignment = Enum.TextXAlignment.Left
TextLabel_5.TextYAlignment = Enum.TextYAlignment.Top

TextLabel_6.Parent = Frame2
TextLabel_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_6.BackgroundTransparency = 1.000
TextLabel_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_6.BorderSizePixel = 0
TextLabel_6.Position = UDim2.new(0.0199999548, 0, 0.437084794, 0)
TextLabel_6.Size = UDim2.new(0, 208, 0, 28)
TextLabel_6.Font = Enum.Font.FredokaOne
TextLabel_6.Text = "- Bypassed by UniverseX"
TextLabel_6.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_6.TextSize = 20.000
TextLabel_6.TextXAlignment = Enum.TextXAlignment.Left
TextLabel_6.TextYAlignment = Enum.TextYAlignment.Top

TextLabel_7.Parent = Frame2
TextLabel_7.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_7.BackgroundTransparency = 1.000
TextLabel_7.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_7.BorderSizePixel = 0
TextLabel_7.Position = UDim2.new(0.0199999548, 0, 0.598101735, 0)
TextLabel_7.Size = UDim2.new(0, 208, 0, 28)
TextLabel_7.Font = Enum.Font.FredokaOne
TextLabel_7.Text = "- Smooth UI"
TextLabel_7.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_7.TextSize = 20.000
TextLabel_7.TextXAlignment = Enum.TextXAlignment.Left
TextLabel_7.TextYAlignment = Enum.TextYAlignment.Top

Settings_2.Name = "Settings"
Settings_2.Parent = Main
Settings_2.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Settings_2.BackgroundTransparency = 0.600
Settings_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Settings_2.BorderSizePixel = 0
Settings_2.Position = UDim2.new(0.101707332, 0, 0.171977207, 0)
Settings_2.Size = UDim2.new(0, 433, 0, 236)
Settings_2.Visible = false

UICorner_7.Parent = Settings_2

TextLabel_8.Parent = Settings_2
TextLabel_8.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_8.BackgroundTransparency = 1.000
TextLabel_8.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_8.BorderSizePixel = 0
TextLabel_8.Position = UDim2.new(0.0640756339, 0, 0.3434937, 0)
TextLabel_8.Size = UDim2.new(0, 377, 0, 62)
TextLabel_8.Font = Enum.Font.FredokaOne
TextLabel_8.Text = "Settings coming soon.."
TextLabel_8.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_8.TextSize = 32.000
TextLabel_8.TextWrapped = true

Executor_2.Name = "Executor"
Executor_2.Parent = Main
Executor_2.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Executor_2.BackgroundTransparency = 0.600
Executor_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Executor_2.BorderSizePixel = 0
Executor_2.Position = UDim2.new(0.101626016, 0, 0.179661021, 0)
Executor_2.Size = UDim2.new(0, 433, 0, 233)
Executor_2.Visible = false

UICorner_8.Parent = Executor_2

Code.Name = "Code"
Code.Parent = Executor_2
Code.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Code.BorderColor3 = Color3.fromRGB(0, 0, 0)
Code.BorderSizePixel = 0
Code.Position = UDim2.new(0.014309573, 0, 0.0276296716, 0)
Code.Size = UDim2.new(0, 419, 0, 183)
Code.Font = Enum.Font.SourceSans
Code.PlaceholderColor3 = Color3.fromRGB(88, 88, 88)
Code.PlaceholderText = "Print(\"Put the script here\")"
Code.Text = ""
Code.TextColor3 = Color3.fromRGB(255, 255, 255)
Code.TextSize = 14.000
Code.TextWrapped = true
Code.TextXAlignment = Enum.TextXAlignment.Left
Code.TextYAlignment = Enum.TextYAlignment.Top

Clear.Name = "Clear"
Clear.Parent = Code
Clear.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Clear.BorderColor3 = Color3.fromRGB(0, 0, 0)
Clear.BorderSizePixel = 0
Clear.Position = UDim2.new(-0.000808023906, 0, 1.02905297, 0)
Clear.Size = UDim2.new(0, 106, 0, 34)
Clear.Font = Enum.Font.SourceSans
Clear.Text = "Clear"
Clear.TextColor3 = Color3.fromRGB(255, 255, 255)
Clear.TextSize = 17.000

UICorner_9.Parent = Clear

Execute.Name = "Execute"
Execute.Parent = Code
Execute.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Execute.BorderColor3 = Color3.fromRGB(0, 0, 0)
Execute.BorderSizePixel = 0
Execute.Position = UDim2.new(0.74625659, 0, 1.02507329, 0)
Execute.Size = UDim2.new(0, 106, 0, 34)
Execute.Font = Enum.Font.SourceSans
Execute.Text = "Execute"
Execute.TextColor3 = Color3.fromRGB(255, 255, 255)
Execute.TextSize = 17.000

UICorner_10.Parent = Execute

UICorner_11.Parent = Code

Paste.Name = "Paste"
Paste.Parent = Code
Paste.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Paste.BorderColor3 = Color3.fromRGB(0, 0, 0)
Paste.BorderSizePixel = 0
Paste.Position = UDim2.new(0.476221502, 0, 1.02507329, 0)
Paste.Size = UDim2.new(0, 106, 0, 34)
Paste.Font = Enum.Font.SourceSans
Paste.Text = "Paste"
Paste.TextColor3 = Color3.fromRGB(255, 255, 255)
Paste.TextSize = 17.000

UICorner_12.Parent = Paste

Credits_2.Name = "Credits"
Credits_2.Parent = Main
Credits_2.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Credits_2.BackgroundTransparency = 0.600
Credits_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Credits_2.BorderSizePixel = 0
Credits_2.Position = UDim2.new(0.101138234, 0, 0.171977416, 0)
Credits_2.Size = UDim2.new(0, 433, 0, 237)
Credits_2.Visible = false

UICorner_13.Parent = Credits_2

TextLabel_9.Parent = Credits_2
TextLabel_9.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_9.BackgroundTransparency = 1.000
TextLabel_9.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_9.BorderSizePixel = 0
TextLabel_9.Position = UDim2.new(-0.0282523707, 0, -0.0421940945, 0)
TextLabel_9.Size = UDim2.new(0, 150, 0, 50)
TextLabel_9.Font = Enum.Font.FredokaOne
TextLabel_9.Text = "Developers:"
TextLabel_9.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_9.TextSize = 23.000

ImageLabel_2.Parent = Credits_2
ImageLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel_2.BorderSizePixel = 0
ImageLabel_2.Position = UDim2.new(0.0209753737, 0, 0.18140395, 0)
ImageLabel_2.Size = UDim2.new(0, 50, 0, 50)
ImageLabel_2.Image = "rbxassetid://18460454647"

ImageLabel_3.Parent = Credits_2
ImageLabel_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel_3.BorderSizePixel = 0
ImageLabel_3.Position = UDim2.new(0.0209753737, 0, 0.438787907, 0)
ImageLabel_3.Size = UDim2.new(0, 50, 0, 50)

TextLabel_10.Parent = Credits_2
TextLabel_10.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_10.BackgroundTransparency = 1.000
TextLabel_10.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_10.BorderSizePixel = 0
TextLabel_10.Position = UDim2.new(0.0851695538, 0, 0.475216389, 0)
TextLabel_10.Size = UDim2.new(0, 421, 0, 32)
TextLabel_10.ZIndex = 2
TextLabel_10.Font = Enum.Font.SourceSansBold
TextLabel_10.Text = "Designed,Scripted by Diet Coke"
TextLabel_10.TextColor3 = Color3.fromRGB(3, 7, 255)
TextLabel_10.TextSize = 29.000
TextLabel_10.TextWrapped = true

UICorner_14.Parent = TextLabel_10

TextLabel_11.Parent = Credits_2
TextLabel_11.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_11.BackgroundTransparency = 1.000
TextLabel_11.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_11.BorderSizePixel = 0
TextLabel_11.Position = UDim2.new(0.0205044299, 0, 0.217832416, 0)
TextLabel_11.Size = UDim2.new(0, 421, 0, 32)
TextLabel_11.Font = Enum.Font.SourceSansBold
TextLabel_11.Text = "Remakes by Aries"
TextLabel_11.TextColor3 = Color3.fromRGB(0, 255, 255)
TextLabel_11.TextSize = 29.000
TextLabel_11.TextWrapped = true

UICorner_15.Parent = TextLabel_11

TextLabel_12.Parent = Credits_2
TextLabel_12.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_12.BackgroundTransparency = 1.000
TextLabel_12.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_12.BorderSizePixel = 0
TextLabel_12.Position = UDim2.new(0.31639722, 0, 0.434599161, 0)
TextLabel_12.Size = UDim2.new(0, 200, 0, 50)
TextLabel_12.Font = Enum.Font.SourceSansBold
TextLabel_12.Text = "W-Dev"
TextLabel_12.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_12.TextSize = 71.000
TextLabel_12.TextTransparency = 0.990

TextLabel_13.Parent = Credits_2
TextLabel_13.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_13.BackgroundTransparency = 1.000
TextLabel_13.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_13.BorderSizePixel = 0
TextLabel_13.Position = UDim2.new(0.0851695538, 0, 0.475216389, 0)
TextLabel_13.Size = UDim2.new(0, 421, 0, 32)
TextLabel_13.ZIndex = 2
TextLabel_13.Font = Enum.Font.SourceSansBold
TextLabel_13.Text = "Designed by Zolo"
TextLabel_13.TextColor3 = Color3.fromRGB(3, 7, 255)
TextLabel_13.TextSize = 29.000
TextLabel_13.TextWrapped = true

UICorner_16.Parent = TextLabel_13

TextLabel_14.Parent = Credits_2
TextLabel_14.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_14.BackgroundTransparency = 1.000
TextLabel_14.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_14.BorderSizePixel = 0
TextLabel_14.Position = UDim2.new(-0.0580175109, 0, 0.643992722, 0)
TextLabel_14.Size = UDim2.new(0, 421, 0, 32)
TextLabel_14.ZIndex = 2
TextLabel_14.Font = Enum.Font.SourceSansBold
TextLabel_14.Text = "Main Dev: Xirius"
TextLabel_14.TextColor3 = Color3.fromRGB(3, 7, 255)
TextLabel_14.TextSize = 29.000
TextLabel_14.TextWrapped = true

UICorner_17.Parent = TextLabel_14

OpenButton.Name = "Open Button"
OpenButton.Parent = ScreenGui
OpenButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
OpenButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
OpenButton.BorderSizePixel = 0
OpenButton.Position = UDim2.new(0.472801805, 0, 0.0164237954, 0)
OpenButton.Size = UDim2.new(0, 70, 0, 71)
OpenButton.Visible = false
OpenButton.Image = "rbxassetid://104305620466966"

UICorner_18.CornerRadius = UDim.new(1, 0)
UICorner_18.Parent = OpenButton

-- Scripts:

local function NVXVLM_fake_script() -- Executor.LocalScript 
	local script = Instance.new('LocalScript', Executor)

	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.Credits.Visible = false
		script.Parent.Parent.Parent.Executor.Visible = true
		script.Parent.Parent.Parent.Home.Visible = false
		script.Parent.Parent.Parent.Settings.Visible = false
	end)
end
coroutine.wrap(NVXVLM_fake_script)()
local function ZRKA_fake_script() -- home.LocalScript 
	local script = Instance.new('LocalScript', home)

	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.Credits.Visible = false
		script.Parent.Parent.Parent.Executor.Visible = false
		script.Parent.Parent.Parent.Home.Visible = true
		script.Parent.Parent.Parent.Settings.Visible = false
	end)
end
coroutine.wrap(ZRKA_fake_script)()
local function JRWL_fake_script() -- Settings.LocalScript 
	local script = Instance.new('LocalScript', Settings)

	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.Credits.Visible = false
		script.Parent.Parent.Parent.Executor.Visible = false
		script.Parent.Parent.Parent.Home.Visible = false
		script.Parent.Parent.Parent.Settings.Visible = true
	end)
end
coroutine.wrap(JRWL_fake_script)()
local function MXDI_fake_script() -- Credits.LocalScript 
	local script = Instance.new('LocalScript', Credits)

	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.Credits.Visible = true
		script.Parent.Parent.Parent.Executor.Visible = false
		script.Parent.Parent.Parent.Home.Visible = false
		script.Parent.Parent.Parent.Settings.Visible = false
	end)
end
coroutine.wrap(MXDI_fake_script)()
local function QPFP_fake_script() -- TextButton.LocalScript 
	local script = Instance.new('LocalScript', TextButton)

	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.Parent.Main.Visible = false
	    script.Parent.Parent.Parent.Parent["Open Button"].Visible = true
	end)
	
end
coroutine.wrap(QPFP_fake_script)()
local function PEWWH_fake_script() -- Top.Draggable 
	local script = Instance.new('LocalScript', Top)

	local UserInputService = game:GetService("UserInputService")
	
	
	local MainFrame = script.Parent.Parent.Parent.Main
	local TopBar = MainFrame:WaitForChild("Top")
	
	local Camera = workspace:WaitForChild("Camera")
	
	local DragMousePosition
	local FramePosition
	
	
	local Draggable = false
	
	TopBar.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			Draggable = true
			DragMousePosition = Vector2.new(input.Position.X, input.Position.Y)
			FramePosition= Vector2.new(MainFrame.Position.X.Scale, MainFrame.Position.Y.Scale)
		end
	end)
	
	TopBar.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			Draggable = false
		end
	end)
	
	UserInputService.InputChanged:Connect(function(input)
		if Draggable == true then
			local NewPosition = FramePosition + ( (Vector2.new(input.Position.X, input.Position.Y) - DragMousePosition) / Camera.ViewportSize)
			MainFrame.Position = UDim2.new(NewPosition.X, 0, NewPosition.Y, 0)
		end
	end)
end
coroutine.wrap(PEWWH_fake_script)()

local function SUKHB_fake_script() -- Main.LocalScript 
	local script = Instance.new('LocalScript', Main)

	task.wait(2)
	warn("Sorry about all them errors that is to do with frost ware gui :) Stay frosty my sexy")
end
coroutine.wrap(SUKHB_fake_script)()
local function PHFF_fake_script() -- Clear.LocalScript 
	local script = Instance.new('LocalScript', Clear)

	local TextBox = script.Parent.Parent
	local ClearButton = script.Parent
	ClearButton.MouseButton1Click:Connect(function()
		TextBox.Text = ""
	end)
	
end
coroutine.wrap(PHFF_fake_script)()
local function PMROOSA_fake_script() -- Execute.LocalScript 
	local script = Instance.new('LocalScript', Execute)

	local TextBox = script.Parent.Parent
	
	local ExecuteButton = script.Parent
	ExecuteButton.MouseButton1Click:Connect(function()
		local luaCode = TextBox.Text
		local success, err = pcall(function()
			loadstring(luaCode)()
		end)
	
		if not success then
			warn("The script is either pathced or does not work and for that reason your code could'nt run, if issue stays even after using more scripts,contact developers, Error Code: 1" .. err)
		end
	end)
	
end
coroutine.wrap(PMROOSA_fake_script)()

local function UITBIOF_fake_script() -- OpenButton.LocalScript 
	local script = Instance.new('LocalScript', OpenButton)

	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Main.Visible = true
	    script.Parent.Parent["Open Button"].Visible = false
	end)
end
coroutine.wrap(UITBIOF_fake_script)()
local function XXTZ_fake_script() -- OpenButton.Drag 
	local script = Instance.new('LocalScript', OpenButton)

	local UserInputService = game:GetService("UserInputService")
	
	
	local MainFrame = script.Parent
	local TopBar = script.Parent
	
	local Camera = workspace:WaitForChild("Camera")
	
	local DragMousePosition
	local FramePosition
	
	
	local Draggable = false
	
	TopBar.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			Draggable = true
			DragMousePosition = Vector2.new(input.Position.X, input.Position.Y)
			FramePosition= Vector2.new(MainFrame.Position.X.Scale, MainFrame.Position.Y.Scale)
		end
	end)
	
	TopBar.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			Draggable = false
		end
	end)
	
	UserInputService.InputChanged:Connect(function(input)
		if Draggable == true then
			local NewPosition = FramePosition + ( (Vector2.new(input.Position.X, input.Position.Y) - DragMousePosition) / Camera.ViewportSize)
			MainFrame.Position = UDim2.new(NewPosition.X, 0, NewPosition.Y, 0)
		end
	end)
end
coroutine.wrap(XXTZ_fake_script)()
local function BJOYQ_fake_script() -- ScreenGui.LocalScript 
	local script = Instance.new('LocalScript', ScreenGui)

	
end
coroutine.wrap(BJOYQ_fake_script)()

local function NKFJBJX_fake_script() -- Paste.LocalScript 
    local script = Instance.new('LocalScript', Paste)

  --  TextBox.Text = getclipboard()
end

Paste.MouseButton1Click:Connect(function()
	Code.Text = getclipboard()
end)
end) 
tab3.newButton("Alysse", "Executor script", function()
--loadstring(game:HttpGet("https://raw.githubusercontent.com/NathTheDev/AlysseAndroid/main/AlysseUI.lua"))()

function identifyexecutor()
   return "Alysse Android"
end

local AlysseAndroid = Instance.new("ScreenGui")
local main = Instance.new("Frame")
local sidebar = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local UIStroke = Instance.new("UIStroke")
local UIListLayout = Instance.new("UIListLayout")
local UIPadding = Instance.new("UIPadding")
local home = Instance.new("ImageButton")
local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")
local player = Instance.new("ImageButton")
local UIAspectRatioConstraint_2 = Instance.new("UIAspectRatioConstraint")
local executor = Instance.new("ImageButton")
local UIAspectRatioConstraint_3 = Instance.new("UIAspectRatioConstraint")
local visuals = Instance.new("ImageButton")
local UIAspectRatioConstraint_4 = Instance.new("UIAspectRatioConstraint")
local cloud = Instance.new("ImageButton")
local UIAspectRatioConstraint_5 = Instance.new("UIAspectRatioConstraint")
local settings = Instance.new("ImageButton")
local UIAspectRatioConstraint_6 = Instance.new("UIAspectRatioConstraint")
local UICorner_2 = Instance.new("UICorner")
local tabs = Instance.new("Folder")
local home_2 = Instance.new("Frame")
local UICorner_3 = Instance.new("UICorner")
local UIListLayout_2 = Instance.new("UIListLayout")
local UIPadding_2 = Instance.new("UIPadding")
local firstsec = Instance.new("Frame")
local UICorner_4 = Instance.new("UICorner")
local greet = Instance.new("TextLabel")
local UIStroke_2 = Instance.new("UIStroke")
local profile = Instance.new("ImageLabel")
local UIAspectRatioConstraint_7 = Instance.new("UIAspectRatioConstraint")
local UICorner_5 = Instance.new("UICorner")
local secondsec = Instance.new("Frame")
local UICorner_6 = Instance.new("UICorner")
local UIStroke_3 = Instance.new("UIStroke")
local gamethumb = Instance.new("ImageLabel")
local UIAspectRatioConstraint_8 = Instance.new("UIAspectRatioConstraint")
local UICorner_7 = Instance.new("UICorner")
local UIStroke_4 = Instance.new("UIStroke")
local rightside = Instance.new("Frame")
local UICorner_8 = Instance.new("UICorner")
local UIStroke_5 = Instance.new("UIStroke")
local UIListLayout_3 = Instance.new("UIListLayout")
local gamename = Instance.new("TextLabel")
local UIStroke_6 = Instance.new("UIStroke")
local maxplayers = Instance.new("TextLabel")
local UIStroke_7 = Instance.new("UIStroke")
local UIPadding_3 = Instance.new("UIPadding")
local created = Instance.new("TextLabel")
local UIStroke_8 = Instance.new("UIStroke")
local updated = Instance.new("TextLabel")
local UIStroke_9 = Instance.new("UIStroke")
local exec = Instance.new("Frame")
local UICorner_9 = Instance.new("UICorner")
local sect = Instance.new("ScrollingFrame")
local UICorner_10 = Instance.new("UICorner")
local UIStroke_10 = Instance.new("UIStroke")
local execbox = Instance.new("TextBox")
local UICorner_11 = Instance.new("UICorner")
local execute = Instance.new("TextButton")
local UIStroke_11 = Instance.new("UIStroke")
local UICorner_12 = Instance.new("UICorner")
local copy = Instance.new("TextButton")
local UIStroke_12 = Instance.new("UIStroke")
local UICorner_13 = Instance.new("UICorner")
local clear = Instance.new("TextButton")
local UIStroke_13 = Instance.new("UIStroke")
local UICorner_14 = Instance.new("UICorner")
local paste = Instance.new("TextButton")
local UIStroke_14 = Instance.new("UIStroke")
local UICorner_15 = Instance.new("UICorner")
local executeclipboard = Instance.new("TextButton")
local UIStroke_15 = Instance.new("UIStroke")
local UICorner_16 = Instance.new("UICorner")
local visuals_2 = Instance.new("Frame")
local UICorner_17 = Instance.new("UICorner")
local UIListLayout_4 = Instance.new("UIListLayout")
local UIPadding_4 = Instance.new("UIPadding")
local enableesp = Instance.new("Frame")
local UIStroke_16 = Instance.new("UIStroke")
local UICorner_18 = Instance.new("UICorner")
local enable = Instance.new("TextButton")
local UICorner_19 = Instance.new("UICorner")
local UIAspectRatioConstraint_9 = Instance.new("UIAspectRatioConstraint")
local text = Instance.new("TextLabel")
local UICorner_20 = Instance.new("UICorner")
local tracers = Instance.new("Frame")
local UIStroke_17 = Instance.new("UIStroke")
local UICorner_21 = Instance.new("UICorner")
local enable_2 = Instance.new("TextButton")
local UICorner_22 = Instance.new("UICorner")
local UIAspectRatioConstraint_10 = Instance.new("UIAspectRatioConstraint")
local text_2 = Instance.new("TextLabel")
local UICorner_23 = Instance.new("UICorner")
local headdot = Instance.new("Frame")
local UIStroke_18 = Instance.new("UIStroke")
local UICorner_24 = Instance.new("UICorner")
local enable_3 = Instance.new("TextButton")
local UICorner_25 = Instance.new("UICorner")
local UIAspectRatioConstraint_11 = Instance.new("UIAspectRatioConstraint")
local text_3 = Instance.new("TextLabel")
local UICorner_26 = Instance.new("UICorner")
local settings_2 = Instance.new("Frame")
local UICorner_27 = Instance.new("UICorner")
local comingsoon = Instance.new("TextLabel")
local cloud_2 = Instance.new("Frame")
local UICorner_28 = Instance.new("UICorner")
local section = Instance.new("ScrollingFrame")
local UICorner_29 = Instance.new("UICorner")
local UIStroke_19 = Instance.new("UIStroke")
local UIGridLayout = Instance.new("UIGridLayout")
local UIPadding_5 = Instance.new("UIPadding")
local scriptexample = Instance.new("Frame")
local UIStroke_20 = Instance.new("UIStroke")
local UICorner_30 = Instance.new("UICorner")
local scriptname = Instance.new("TextLabel")
local UIStroke_21 = Instance.new("UIStroke")
local copy_2 = Instance.new("TextButton")
local UIStroke_22 = Instance.new("UIStroke")
local UICorner_31 = Instance.new("UICorner")
local execute_2 = Instance.new("TextButton")
local UIStroke_23 = Instance.new("UIStroke")
local UICorner_32 = Instance.new("UICorner")
local scriptimg = Instance.new("ImageLabel")
local searchbox = Instance.new("TextBox")
local UIStroke_24 = Instance.new("UIStroke")
local UICorner_33 = Instance.new("UICorner")
local search = Instance.new("ImageButton")
local UIAspectRatioConstraint_12 = Instance.new("UIAspectRatioConstraint")
local UIStroke_25 = Instance.new("UIStroke")
local UICorner_34 = Instance.new("UICorner")
local player_2 = Instance.new("Frame")
local UICorner_35 = Instance.new("UICorner")
local UIListLayout_5 = Instance.new("UIListLayout")
local UIPadding_6 = Instance.new("UIPadding")
local firstsec_2 = Instance.new("Frame")
local UICorner_36 = Instance.new("UICorner")
local UIStroke_26 = Instance.new("UIStroke")
local walkspeed = Instance.new("TextBox")
local UICorner_37 = Instance.new("UICorner")
local UIStroke_27 = Instance.new("UIStroke")
local UIListLayout_6 = Instance.new("UIListLayout")
local UIPadding_7 = Instance.new("UIPadding")
local jumppower = Instance.new("TextBox")
local UICorner_38 = Instance.new("UICorner")
local UIStroke_28 = Instance.new("UIStroke")
local secondsec_2 = Instance.new("Frame")
local UICorner_39 = Instance.new("UICorner")
local UIStroke_29 = Instance.new("UIStroke")
local UIListLayout_7 = Instance.new("UIListLayout")
local UIPadding_8 = Instance.new("UIPadding")
local autojump = Instance.new("Frame")
local UIStroke_30 = Instance.new("UIStroke")
local UICorner_40 = Instance.new("UICorner")
local enable_4 = Instance.new("TextButton")
local UICorner_41 = Instance.new("UICorner")
local UIAspectRatioConstraint_13 = Instance.new("UIAspectRatioConstraint")
local text_4 = Instance.new("TextLabel")
local UICorner_42 = Instance.new("UICorner")
local autojump_2 = Instance.new("Frame")
local UIStroke_31 = Instance.new("UIStroke")
local UICorner_43 = Instance.new("UICorner")
local enable_5 = Instance.new("TextButton")
local UICorner_44 = Instance.new("UICorner")
local UIAspectRatioConstraint_14 = Instance.new("UIAspectRatioConstraint")
local text_5 = Instance.new("TextLabel")
local UICorner_45 = Instance.new("UICorner")
local autojump_3 = Instance.new("Frame")
local UIStroke_32 = Instance.new("UIStroke")
local UICorner_46 = Instance.new("UICorner")
local enable_6 = Instance.new("TextButton")
local UICorner_47 = Instance.new("UICorner")
local UIAspectRatioConstraint_15 = Instance.new("UIAspectRatioConstraint")
local text_6 = Instance.new("TextLabel")
local UICorner_48 = Instance.new("UICorner")
local updatetext = Instance.new("TextLabel")
local close = Instance.new("ImageButton")
local UIAspectRatioConstraint_16 = Instance.new("UIAspectRatioConstraint")
local open = Instance.new("ImageButton")
local UIStroke_33 = Instance.new("UIStroke")
local UICorner_49 = Instance.new("UICorner")
local UIAspectRatioConstraint_17 = Instance.new("UIAspectRatioConstraint")

--Properties:

AlysseAndroid.Name = "AlysseAndroid"
AlysseAndroid.Parent = (game:GetService("CoreGui") or gethui())
AlysseAndroid.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

main.Name = "main"
main.Parent = AlysseAndroid
main.AnchorPoint = Vector2.new(0.5, 0.5)
main.BackgroundColor3 = Color3.fromRGB(27, 27, 27)
main.BorderColor3 = Color3.fromRGB(0, 0, 0)
main.BorderSizePixel = 0
main.Position = UDim2.new(0.499551564, 0, 0.515306115, 0)
main.Size = UDim2.new(0, 519, 0, 311)
main.Visible = false

sidebar.Name = "sidebar"
sidebar.Parent = main
sidebar.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
sidebar.BorderColor3 = Color3.fromRGB(0, 0, 0)
sidebar.BorderSizePixel = 0
sidebar.Position = UDim2.new(0, 0, 4.90636296e-08, 0)
sidebar.Size = UDim2.new(0, 55, 0, 311)

UICorner.CornerRadius = UDim.new(0, 4)
UICorner.Parent = sidebar

UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke.Color = Color3.fromRGB(143, 143, 143)
UIStroke.Thickness = 0.800
UIStroke.Transparency = 0.800
UIStroke.Parent = sidebar

UIListLayout.Parent = sidebar
UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Padding = UDim.new(0, 10)

UIPadding.Parent = sidebar
UIPadding.PaddingBottom = UDim.new(0, 10)
UIPadding.PaddingLeft = UDim.new(0, 1)
UIPadding.PaddingRight = UDim.new(0, 3)
UIPadding.PaddingTop = UDim.new(0, 10)

home.Name = "home"
home.Parent = sidebar
home.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
home.BackgroundTransparency = 1.000
home.BorderColor3 = Color3.fromRGB(0, 0, 0)
home.BorderSizePixel = 0
home.Position = UDim2.new(0.218181819, 0, 0.0385852084, 0)
home.Size = UDim2.new(0, 30, 0, 30)
home.Image = "rbxassetid://12967526257"
home.ImageColor3 = Color3.fromRGB(143, 143, 143)

UIAspectRatioConstraint.Parent = home

player.Name = "player"
player.Parent = sidebar
player.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
player.BackgroundTransparency = 1.000
player.BorderColor3 = Color3.fromRGB(0, 0, 0)
player.BorderSizePixel = 0
player.Position = UDim2.new(0.218181819, 0, 0.0385852084, 0)
player.Size = UDim2.new(0, 30, 0, 30)
player.Image = "rbxassetid://12974429433"
player.ImageColor3 = Color3.fromRGB(143, 143, 143)

UIAspectRatioConstraint_2.Parent = player

executor.Name = "executor"
executor.Parent = sidebar
executor.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
executor.BackgroundTransparency = 1.000
executor.BorderColor3 = Color3.fromRGB(0, 0, 0)
executor.BorderSizePixel = 0
executor.Position = UDim2.new(0.218181819, 0, 0.0385852084, 0)
executor.Size = UDim2.new(0, 30, 0, 30)
executor.Image = "rbxassetid://11419714821"
executor.ImageColor3 = Color3.fromRGB(143, 143, 143)

UIAspectRatioConstraint_3.Parent = executor

visuals.Name = "visuals"
visuals.Parent = sidebar
visuals.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
visuals.BackgroundTransparency = 1.000
visuals.BorderColor3 = Color3.fromRGB(0, 0, 0)
visuals.BorderSizePixel = 0
visuals.Position = UDim2.new(0.218181819, 0, 0.0385852084, 0)
visuals.Size = UDim2.new(0, 30, 0, 30)
visuals.Visible = false
visuals.Image = "rbxassetid://11963367322"
visuals.ImageColor3 = Color3.fromRGB(143, 143, 143)

UIAspectRatioConstraint_4.Parent = visuals

cloud.Name = "cloud"
cloud.Parent = sidebar
cloud.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
cloud.BackgroundTransparency = 1.000
cloud.BorderColor3 = Color3.fromRGB(0, 0, 0)
cloud.BorderSizePixel = 0
cloud.Position = UDim2.new(0.218181819, 0, 0.0385852084, 0)
cloud.Size = UDim2.new(0, 30, 0, 30)
cloud.Image = "rbxassetid://12975590427"
cloud.ImageColor3 = Color3.fromRGB(143, 143, 143)

UIAspectRatioConstraint_5.Parent = cloud

settings.Name = "settings"
settings.Parent = sidebar
settings.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
settings.BackgroundTransparency = 1.000
settings.BorderColor3 = Color3.fromRGB(0, 0, 0)
settings.BorderSizePixel = 0
settings.Position = UDim2.new(0.218181819, 0, 0.0385852084, 0)
settings.Size = UDim2.new(0, 30, 0, 30)
settings.Image = "rbxassetid://11293977610"
settings.ImageColor3 = Color3.fromRGB(143, 143, 143)

UIAspectRatioConstraint_6.Parent = settings

UICorner_2.CornerRadius = UDim.new(0, 4)
UICorner_2.Parent = main

tabs.Name = "tabs"
tabs.Parent = main

home_2.Name = "home"
home_2.Parent = tabs
home_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
home_2.BackgroundTransparency = 1.000
home_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
home_2.BorderSizePixel = 0
home_2.Position = UDim2.new(0.105973028, 0, 4.90636296e-08, 0)
home_2.Size = UDim2.new(0, 464, 0, 311)

UICorner_3.CornerRadius = UDim.new(0, 4)
UICorner_3.Parent = home_2

UIListLayout_2.Parent = home_2
UIListLayout_2.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_2.Padding = UDim.new(0, 10)

UIPadding_2.Parent = home_2
UIPadding_2.PaddingTop = UDim.new(0, 10)

firstsec.Name = "firstsec"
firstsec.Parent = home_2
firstsec.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
firstsec.BorderColor3 = Color3.fromRGB(0, 0, 0)
firstsec.BorderSizePixel = 0
firstsec.Position = UDim2.new(0.0172413792, 0, 0, 0)
firstsec.Size = UDim2.new(0, 448, 0, 87)

UICorner_4.CornerRadius = UDim.new(0, 4)
UICorner_4.Parent = firstsec

greet.Name = "greet"
greet.Parent = firstsec
greet.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
greet.BackgroundTransparency = 1.000
greet.BorderColor3 = Color3.fromRGB(0, 0, 0)
greet.BorderSizePixel = 0
greet.Position = UDim2.new(0.22301729, 0, 0.284686744, 0)
greet.Size = UDim2.new(0, 342, 0, 37)
greet.Font = Enum.Font.Gotham
greet.Text = "Greetings, Name"
greet.TextColor3 = Color3.fromRGB(145, 145, 145)
greet.TextSize = 18.000
greet.TextWrapped = true
greet.TextXAlignment = Enum.TextXAlignment.Left

UIStroke_2.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke_2.Color = Color3.fromRGB(143, 143, 143)
UIStroke_2.Thickness = 0.800
UIStroke_2.Transparency = 0.800
UIStroke_2.Parent = firstsec

profile.Name = "profile"
profile.Parent = firstsec
profile.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
profile.BackgroundTransparency = 1.000
profile.BorderColor3 = Color3.fromRGB(0, 0, 0)
profile.BorderSizePixel = 0
profile.Position = UDim2.new(0.0454223491, 0, 0.107577272, 0)
profile.Size = UDim2.new(0, 89, 0, 65)
profile.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"

UIAspectRatioConstraint_7.Parent = profile

UICorner_5.CornerRadius = UDim.new(0, 100)
UICorner_5.Parent = profile

secondsec.Name = "secondsec"
secondsec.Parent = home_2
secondsec.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
secondsec.BorderColor3 = Color3.fromRGB(0, 0, 0)
secondsec.BorderSizePixel = 0
secondsec.Position = UDim2.new(0.00215517241, 0, 0.322259128, 0)
secondsec.Size = UDim2.new(0, 448, 0, 196)

UICorner_6.CornerRadius = UDim.new(0, 4)
UICorner_6.Parent = secondsec

UIStroke_3.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke_3.Color = Color3.fromRGB(143, 143, 143)
UIStroke_3.Thickness = 0.800
UIStroke_3.Transparency = 0.800
UIStroke_3.Parent = secondsec

gamethumb.Name = "gamethumb"
gamethumb.Parent = secondsec
gamethumb.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
gamethumb.BackgroundTransparency = 1.000
gamethumb.BorderColor3 = Color3.fromRGB(0, 0, 0)
gamethumb.BorderSizePixel = 0
gamethumb.Position = UDim2.new(0.0431902744, 0, 0.0663265288, 0)
gamethumb.Size = UDim2.new(0, 174, 0, 173)
gamethumb.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"

UIAspectRatioConstraint_8.Parent = gamethumb

UICorner_7.CornerRadius = UDim.new(0, 4)
UICorner_7.Parent = gamethumb

UIStroke_4.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke_4.Color = Color3.fromRGB(143, 143, 143)
UIStroke_4.Thickness = 0.800
UIStroke_4.Transparency = 0.800
UIStroke_4.Parent = gamethumb

rightside.Name = "rightside"
rightside.Parent = secondsec
rightside.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
rightside.BackgroundTransparency = 1.000
rightside.BorderColor3 = Color3.fromRGB(0, 0, 0)
rightside.BorderSizePixel = 0
rightside.Position = UDim2.new(0.448660702, 0, 0.0663265288, 0)
rightside.Size = UDim2.new(0, 240, 0, 173)

UICorner_8.CornerRadius = UDim.new(0, 4)
UICorner_8.Parent = rightside

UIStroke_5.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke_5.Color = Color3.fromRGB(143, 143, 143)
UIStroke_5.Thickness = 0.800
UIStroke_5.Transparency = 0.800
UIStroke_5.Parent = rightside

UIListLayout_3.Parent = rightside
UIListLayout_3.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_3.Padding = UDim.new(0, 8)

gamename.Name = "gamename"
gamename.Parent = rightside
gamename.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
gamename.BackgroundTransparency = 1.000
gamename.BorderColor3 = Color3.fromRGB(0, 0, 0)
gamename.BorderSizePixel = 0
gamename.Position = UDim2.new(0.450695843, 0, 0.0652989, 0)
gamename.Size = UDim2.new(0, 240, 0, 37)
gamename.Font = Enum.Font.Gotham
gamename.Text = "Game Name"
gamename.TextColor3 = Color3.fromRGB(145, 145, 145)
gamename.TextSize = 16.000
gamename.TextWrapped = true

UIStroke_6.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke_6.Color = Color3.fromRGB(143, 143, 143)
UIStroke_6.Thickness = 0.800
UIStroke_6.Transparency = 0.800
UIStroke_6.Parent = gamename

maxplayers.Name = "maxplayers"
maxplayers.Parent = rightside
maxplayers.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
maxplayers.BackgroundTransparency = 1.000
maxplayers.BorderColor3 = Color3.fromRGB(0, 0, 0)
maxplayers.BorderSizePixel = 0
maxplayers.Position = UDim2.new(0.12926729, 0, 0.595911145, 0)
maxplayers.Size = UDim2.new(0, 240, 0, 37)
maxplayers.Font = Enum.Font.Gotham
maxplayers.Text = "0 / 0"
maxplayers.TextColor3 = Color3.fromRGB(145, 145, 145)
maxplayers.TextSize = 16.000
maxplayers.TextWrapped = true

UIStroke_7.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke_7.Color = Color3.fromRGB(143, 143, 143)
UIStroke_7.Thickness = 0.800
UIStroke_7.Transparency = 0.800
UIStroke_7.Parent = maxplayers

UIPadding_3.Parent = rightside
UIPadding_3.PaddingBottom = UDim.new(0, 5)

created.Name = "created"
created.Parent = rightside
created.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
created.BackgroundTransparency = 1.000
created.BorderColor3 = Color3.fromRGB(0, 0, 0)
created.BorderSizePixel = 0
created.Position = UDim2.new(0.12926729, 0, 0.595911145, 0)
created.Size = UDim2.new(0, 240, 0, 37)
created.Font = Enum.Font.Gotham
created.Text = "Created:"
created.TextColor3 = Color3.fromRGB(145, 145, 145)
created.TextSize = 16.000
created.TextWrapped = true

UIStroke_8.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke_8.Color = Color3.fromRGB(143, 143, 143)
UIStroke_8.Thickness = 0.800
UIStroke_8.Transparency = 0.800
UIStroke_8.Parent = created

updated.Name = "updated"
updated.Parent = rightside
updated.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
updated.BackgroundTransparency = 1.000
updated.BorderColor3 = Color3.fromRGB(0, 0, 0)
updated.BorderSizePixel = 0
updated.Position = UDim2.new(0.12926729, 0, 0.595911145, 0)
updated.Size = UDim2.new(0, 240, 0, 37)
updated.Font = Enum.Font.Gotham
updated.Text = "Updated:"
updated.TextColor3 = Color3.fromRGB(145, 145, 145)
updated.TextSize = 16.000
updated.TextWrapped = true

UIStroke_9.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke_9.Color = Color3.fromRGB(143, 143, 143)
UIStroke_9.Thickness = 0.800
UIStroke_9.Transparency = 0.800
UIStroke_9.Parent = updated

exec.Name = "exec"
exec.Parent = tabs
exec.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
exec.BackgroundTransparency = 1.000
exec.BorderColor3 = Color3.fromRGB(0, 0, 0)
exec.BorderSizePixel = 0
exec.Position = UDim2.new(0.105973028, 0, 4.90636296e-08, 0)
exec.Size = UDim2.new(0, 464, 0, 311)
exec.Visible = false

UICorner_9.CornerRadius = UDim.new(0, 4)
UICorner_9.Parent = exec

sect.Name = "sect"
sect.Parent = exec
sect.Active = true
sect.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
sect.BackgroundTransparency = 1.000
sect.BorderColor3 = Color3.fromRGB(0, 0, 0)
sect.BorderSizePixel = 0
sect.Position = UDim2.new(0.019396551, 0, 0.0321543664, 0)
sect.Size = UDim2.new(0, 448, 0, 249)
sect.ZIndex = 2
sect.CanvasSize = UDim2.new(0, 0, 0, 0)
sect.ScrollBarThickness = 5

UICorner_10.CornerRadius = UDim.new(0, 4)
UICorner_10.Parent = sect

UIStroke_10.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke_10.Color = Color3.fromRGB(143, 143, 143)
UIStroke_10.Thickness = 0.800
UIStroke_10.Transparency = 0.800
UIStroke_10.Parent = sect

execbox.Name = "execbox"
execbox.Parent = sect
execbox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
execbox.BackgroundTransparency = 1.000
execbox.BorderColor3 = Color3.fromRGB(0, 0, 0)
execbox.BorderSizePixel = 0
execbox.Position = UDim2.new(0.0178571437, 0, 0, 0)
execbox.Size = UDim2.new(0, 434, 0, 307)
execbox.ClearTextOnFocus = false
execbox.Font = Enum.Font.Gotham
execbox.MultiLine = true
execbox.PlaceholderColor3 = Color3.fromRGB(178, 178, 178)
execbox.PlaceholderText = "-- Welcome to Alysse!"
execbox.Text = ""
execbox.TextColor3 = Color3.fromRGB(145, 145, 145)
execbox.TextSize = 14.000
execbox.TextWrapped = true
execbox.TextXAlignment = Enum.TextXAlignment.Left
execbox.TextYAlignment = Enum.TextYAlignment.Top

UICorner_11.CornerRadius = UDim.new(0, 4)
UICorner_11.Parent = execbox

execute.Name = "execute"
execute.Parent = exec
execute.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
execute.BorderColor3 = Color3.fromRGB(0, 0, 0)
execute.BorderSizePixel = 0
execute.Position = UDim2.new(0.0294797178, 0, 0.859954357, 0)
execute.Size = UDim2.new(0, 74, 0, 36)
execute.AutoButtonColor = false
execute.Font = Enum.Font.Gotham
execute.Text = "Execute"
execute.TextColor3 = Color3.fromRGB(145, 145, 145)
execute.TextSize = 14.000

UIStroke_11.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke_11.Color = Color3.fromRGB(143, 143, 143)
UIStroke_11.Thickness = 0.800
UIStroke_11.Transparency = 0.800
UIStroke_11.Parent = execute

UICorner_12.CornerRadius = UDim.new(0, 4)
UICorner_12.Parent = execute

copy.Name = "copy"
copy.Parent = exec
copy.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
copy.BorderColor3 = Color3.fromRGB(0, 0, 0)
copy.BorderSizePixel = 0
copy.Position = UDim2.new(0.206203848, 0, 0.859954357, 0)
copy.Size = UDim2.new(0, 74, 0, 36)
copy.AutoButtonColor = false
copy.Font = Enum.Font.Gotham
copy.Text = "Copy"
copy.TextColor3 = Color3.fromRGB(145, 145, 145)
copy.TextSize = 14.000

UIStroke_12.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke_12.Color = Color3.fromRGB(143, 143, 143)
UIStroke_12.Thickness = 0.800
UIStroke_12.Transparency = 0.800
UIStroke_12.Parent = copy

UICorner_13.CornerRadius = UDim.new(0, 4)
UICorner_13.Parent = copy

clear.Name = "clear"
clear.Parent = exec
clear.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
clear.BorderColor3 = Color3.fromRGB(0, 0, 0)
clear.BorderSizePixel = 0
clear.Position = UDim2.new(0.380772829, 0, 0.859954357, 0)
clear.Size = UDim2.new(0, 74, 0, 36)
clear.AutoButtonColor = false
clear.Font = Enum.Font.Gotham
clear.Text = "Clear"
clear.TextColor3 = Color3.fromRGB(145, 145, 145)
clear.TextSize = 14.000

UIStroke_13.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke_13.Color = Color3.fromRGB(143, 143, 143)
UIStroke_13.Thickness = 0.800
UIStroke_13.Transparency = 0.800
UIStroke_13.Parent = clear

UICorner_14.CornerRadius = UDim.new(0, 4)
UICorner_14.Parent = clear

paste.Name = "paste"
paste.Parent = exec
paste.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
paste.BorderColor3 = Color3.fromRGB(0, 0, 0)
paste.BorderSizePixel = 0
paste.Position = UDim2.new(0.55534178, 0, 0.859954357, 0)
paste.Size = UDim2.new(0, 74, 0, 36)
paste.AutoButtonColor = false
paste.Font = Enum.Font.Gotham
paste.Text = "Paste"
paste.TextColor3 = Color3.fromRGB(145, 145, 145)
paste.TextSize = 14.000

UIStroke_14.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke_14.Color = Color3.fromRGB(143, 143, 143)
UIStroke_14.Thickness = 0.800
UIStroke_14.Transparency = 0.800
UIStroke_14.Parent = paste

UICorner_15.CornerRadius = UDim.new(0, 4)
UICorner_15.Parent = paste

executeclipboard.Name = "executeclipboard"
executeclipboard.Parent = exec
executeclipboard.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
executeclipboard.BorderColor3 = Color3.fromRGB(0, 0, 0)
executeclipboard.BorderSizePixel = 0
executeclipboard.Position = UDim2.new(0.729910731, 0, 0.859954357, 0)
executeclipboard.Size = UDim2.new(0, 119, 0, 36)
executeclipboard.AutoButtonColor = false
executeclipboard.Font = Enum.Font.Gotham
executeclipboard.Text = "Execute CB"
executeclipboard.TextColor3 = Color3.fromRGB(145, 145, 145)
executeclipboard.TextSize = 14.000

UIStroke_15.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke_15.Color = Color3.fromRGB(143, 143, 143)
UIStroke_15.Thickness = 0.800
UIStroke_15.Transparency = 0.800
UIStroke_15.Parent = executeclipboard

UICorner_16.CornerRadius = UDim.new(0, 4)
UICorner_16.Parent = executeclipboard

visuals_2.Name = "visuals"
visuals_2.Parent = tabs
visuals_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
visuals_2.BackgroundTransparency = 1.000
visuals_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
visuals_2.BorderSizePixel = 0
visuals_2.Position = UDim2.new(0.105973028, 0, 4.90636296e-08, 0)
visuals_2.Size = UDim2.new(0, 464, 0, 311)
visuals_2.Visible = false

UICorner_17.CornerRadius = UDim.new(0, 4)
UICorner_17.Parent = visuals_2

UIListLayout_4.Parent = visuals_2
UIListLayout_4.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_4.Padding = UDim.new(0, 5)

UIPadding_4.Parent = visuals_2
UIPadding_4.PaddingLeft = UDim.new(0, 10)
UIPadding_4.PaddingTop = UDim.new(0, 10)

enableesp.Name = "enableesp"
enableesp.Parent = visuals_2
enableesp.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
enableesp.BorderColor3 = Color3.fromRGB(0, 0, 0)
enableesp.BorderSizePixel = 0
enableesp.Size = UDim2.new(0, 445, 0, 40)

UIStroke_16.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke_16.Color = Color3.fromRGB(143, 143, 143)
UIStroke_16.Thickness = 0.800
UIStroke_16.Transparency = 0.800
UIStroke_16.Parent = enableesp

UICorner_18.CornerRadius = UDim.new(0, 4)
UICorner_18.Parent = enableesp

enable.Name = "enable"
enable.Parent = enableesp
enable.BackgroundColor3 = Color3.fromRGB(203, 0, 0)
enable.BorderColor3 = Color3.fromRGB(0, 0, 0)
enable.BorderSizePixel = 0
enable.Position = UDim2.new(0.909816921, 0, 0.0897544846, 0)
enable.Size = UDim2.new(0, 32, 0, 54)
enable.AutoButtonColor = false
enable.Font = Enum.Font.Gotham
enable.Text = ""
enable.TextColor3 = Color3.fromRGB(145, 145, 145)
enable.TextSize = 14.000

UICorner_19.CornerRadius = UDim.new(0, 5)
UICorner_19.Parent = enable

UIAspectRatioConstraint_9.Parent = enable

text.Name = "text"
text.Parent = enableesp
text.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
text.BackgroundTransparency = 1.000
text.BorderColor3 = Color3.fromRGB(0, 0, 0)
text.BorderSizePixel = 0
text.Position = UDim2.new(0.0169076975, 0, 0.217339903, 0)
text.Size = UDim2.new(0, 96, 0, 21)
text.Font = Enum.Font.Gotham
text.Text = "Enable ESP"
text.TextColor3 = Color3.fromRGB(145, 145, 145)
text.TextSize = 16.000
text.TextWrapped = true

UICorner_20.CornerRadius = UDim.new(0, 4)
UICorner_20.Parent = text

tracers.Name = "tracers"
tracers.Parent = visuals_2
tracers.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
tracers.BorderColor3 = Color3.fromRGB(0, 0, 0)
tracers.BorderSizePixel = 0
tracers.Size = UDim2.new(0, 445, 0, 40)

UIStroke_17.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke_17.Color = Color3.fromRGB(143, 143, 143)
UIStroke_17.Thickness = 0.800
UIStroke_17.Transparency = 0.800
UIStroke_17.Parent = tracers

UICorner_21.CornerRadius = UDim.new(0, 4)
UICorner_21.Parent = tracers

enable_2.Name = "enable"
enable_2.Parent = tracers
enable_2.BackgroundColor3 = Color3.fromRGB(203, 0, 0)
enable_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
enable_2.BorderSizePixel = 0
enable_2.Position = UDim2.new(0.909816921, 0, 0.0897544846, 0)
enable_2.Size = UDim2.new(0, 32, 0, 54)
enable_2.AutoButtonColor = false
enable_2.Font = Enum.Font.Gotham
enable_2.Text = ""
enable_2.TextColor3 = Color3.fromRGB(145, 145, 145)
enable_2.TextSize = 14.000

UICorner_22.CornerRadius = UDim.new(0, 5)
UICorner_22.Parent = enable_2

UIAspectRatioConstraint_10.Parent = enable_2

text_2.Name = "text"
text_2.Parent = tracers
text_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
text_2.BackgroundTransparency = 1.000
text_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
text_2.BorderSizePixel = 0
text_2.Position = UDim2.new(0.0169076975, 0, 0.217340082, 0)
text_2.Size = UDim2.new(0, 62, 0, 21)
text_2.Font = Enum.Font.Gotham
text_2.Text = "Tracers"
text_2.TextColor3 = Color3.fromRGB(145, 145, 145)
text_2.TextSize = 16.000
text_2.TextWrapped = true

UICorner_23.CornerRadius = UDim.new(0, 4)
UICorner_23.Parent = text_2

headdot.Name = "headdot"
headdot.Parent = visuals_2
headdot.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
headdot.BorderColor3 = Color3.fromRGB(0, 0, 0)
headdot.BorderSizePixel = 0
headdot.Size = UDim2.new(0, 445, 0, 40)

UIStroke_18.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke_18.Color = Color3.fromRGB(143, 143, 143)
UIStroke_18.Thickness = 0.800
UIStroke_18.Transparency = 0.800
UIStroke_18.Parent = headdot

UICorner_24.CornerRadius = UDim.new(0, 4)
UICorner_24.Parent = headdot

enable_3.Name = "enable"
enable_3.Parent = headdot
enable_3.BackgroundColor3 = Color3.fromRGB(203, 0, 0)
enable_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
enable_3.BorderSizePixel = 0
enable_3.Position = UDim2.new(0.909816921, 0, 0.0897544846, 0)
enable_3.Size = UDim2.new(0, 32, 0, 54)
enable_3.AutoButtonColor = false
enable_3.Font = Enum.Font.Gotham
enable_3.Text = ""
enable_3.TextColor3 = Color3.fromRGB(145, 145, 145)
enable_3.TextSize = 14.000

UICorner_25.CornerRadius = UDim.new(0, 5)
UICorner_25.Parent = enable_3

UIAspectRatioConstraint_11.Parent = enable_3

text_3.Name = "text"
text_3.Parent = headdot
text_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
text_3.BackgroundTransparency = 1.000
text_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
text_3.BorderSizePixel = 0
text_3.Position = UDim2.new(0.0169076975, 0, 0.217340082, 0)
text_3.Size = UDim2.new(0, 79, 0, 21)
text_3.Font = Enum.Font.Gotham
text_3.Text = "Head Dot"
text_3.TextColor3 = Color3.fromRGB(145, 145, 145)
text_3.TextSize = 16.000
text_3.TextWrapped = true

UICorner_26.CornerRadius = UDim.new(0, 4)
UICorner_26.Parent = text_3

settings_2.Name = "settings"
settings_2.Parent = tabs
settings_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
settings_2.BackgroundTransparency = 1.000
settings_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
settings_2.BorderSizePixel = 0
settings_2.Position = UDim2.new(0.105973028, 0, 4.90636296e-08, 0)
settings_2.Size = UDim2.new(0, 464, 0, 311)
settings_2.Visible = false

UICorner_27.CornerRadius = UDim.new(0, 4)
UICorner_27.Parent = settings_2

comingsoon.Name = "comingsoon"
comingsoon.Parent = settings_2
comingsoon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
comingsoon.BackgroundTransparency = 1.000
comingsoon.BorderColor3 = Color3.fromRGB(0, 0, 0)
comingsoon.BorderSizePixel = 0
comingsoon.Position = UDim2.new(0.0258620698, 0, 0.0200083442, 0)
comingsoon.Size = UDim2.new(0, 320, 0, 37)
comingsoon.Font = Enum.Font.Gotham
comingsoon.Text = "Options in this page are coming soon."
comingsoon.TextColor3 = Color3.fromRGB(145, 145, 145)
comingsoon.TextSize = 18.000
comingsoon.TextWrapped = true
comingsoon.TextXAlignment = Enum.TextXAlignment.Left

cloud_2.Name = "cloud"
cloud_2.Parent = tabs
cloud_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
cloud_2.BackgroundTransparency = 1.000
cloud_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
cloud_2.BorderSizePixel = 0
cloud_2.Position = UDim2.new(0.105973028, 0, 4.90636296e-08, 0)
cloud_2.Size = UDim2.new(0, 464, 0, 311)
cloud_2.Visible = false

UICorner_28.CornerRadius = UDim.new(0, 4)
UICorner_28.Parent = cloud_2

section.Name = "section"
section.Parent = cloud_2
section.Active = true
section.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
section.BorderColor3 = Color3.fromRGB(0, 0, 0)
section.BorderSizePixel = 0
section.Position = UDim2.new(0.0172413792, 0, 0.199356914, 0)
section.Size = UDim2.new(0, 441, 0, 235)
section.CanvasSize = UDim2.new(0, 0, 1, 0)
section.ScrollBarThickness = 5

UICorner_29.CornerRadius = UDim.new(0, 4)
UICorner_29.Parent = section

UIStroke_19.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke_19.Color = Color3.fromRGB(143, 143, 143)
UIStroke_19.Thickness = 0.800
UIStroke_19.Transparency = 0.800
UIStroke_19.Parent = section

UIGridLayout.Parent = section
UIGridLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout.CellSize = UDim2.new(0, 215, 0, 170)
UIGridLayout.FillDirectionMaxCells = 3

UIPadding_5.Parent = section
UIPadding_5.PaddingLeft = UDim.new(0, 5)
UIPadding_5.PaddingTop = UDim.new(0, 5)

scriptexample.Name = "scriptexample"
scriptexample.Parent = section
scriptexample.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
scriptexample.BorderColor3 = Color3.fromRGB(0, 0, 0)
scriptexample.BorderSizePixel = 0
scriptexample.Position = UDim2.new(0.294724762, 0, 0, 0)
scriptexample.Size = UDim2.new(0, 209, 0, 155)
scriptexample.Visible = false

UIStroke_20.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke_20.Color = Color3.fromRGB(143, 143, 143)
UIStroke_20.Thickness = 0.800
UIStroke_20.Transparency = 0.800
UIStroke_20.Parent = scriptexample

UICorner_30.CornerRadius = UDim.new(0, 4)
UICorner_30.Parent = scriptexample

scriptname.Name = "scriptname"
scriptname.Parent = scriptexample
scriptname.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
scriptname.BackgroundTransparency = 1.000
scriptname.BorderColor3 = Color3.fromRGB(0, 0, 0)
scriptname.BorderSizePixel = 0
scriptname.Size = UDim2.new(0, 215, 0, 35)
scriptname.Font = Enum.Font.Gotham
scriptname.Text = "Script"
scriptname.TextColor3 = Color3.fromRGB(145, 145, 145)
scriptname.TextSize = 14.000
scriptname.TextWrapped = true

UIStroke_21.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke_21.Color = Color3.fromRGB(143, 143, 143)
UIStroke_21.Thickness = 0.800
UIStroke_21.Transparency = 0.800
UIStroke_21.Parent = scriptname

copy_2.Name = "copy"
copy_2.Parent = scriptexample
copy_2.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
copy_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
copy_2.BorderSizePixel = 0
copy_2.Position = UDim2.new(0.61837101, 0, 0.799857616, 0)
copy_2.Size = UDim2.new(0, 74, 0, 24)
copy_2.AutoButtonColor = false
copy_2.Font = Enum.Font.Gotham
copy_2.Text = "Copy"
copy_2.TextColor3 = Color3.fromRGB(145, 145, 145)
copy_2.TextSize = 14.000

UIStroke_22.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke_22.Color = Color3.fromRGB(143, 143, 143)
UIStroke_22.Thickness = 0.800
UIStroke_22.Transparency = 0.800
UIStroke_22.Parent = copy_2

UICorner_31.CornerRadius = UDim.new(0, 4)
UICorner_31.Parent = copy_2

execute_2.Name = "execute"
execute_2.Parent = scriptexample
execute_2.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
execute_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
execute_2.BorderSizePixel = 0
execute_2.Position = UDim2.new(0.0399165675, 0, 0.79411763, 0)
execute_2.Size = UDim2.new(0, 74, 0, 24)
execute_2.AutoButtonColor = false
execute_2.Font = Enum.Font.Gotham
execute_2.Text = "Execute"
execute_2.TextColor3 = Color3.fromRGB(145, 145, 145)
execute_2.TextSize = 14.000

UIStroke_23.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke_23.Color = Color3.fromRGB(143, 143, 143)
UIStroke_23.Thickness = 0.800
UIStroke_23.Transparency = 0.800
UIStroke_23.Parent = execute_2

UICorner_32.CornerRadius = UDim.new(0, 4)
UICorner_32.Parent = execute_2

scriptimg.Name = "scriptimg"
scriptimg.Parent = scriptexample
scriptimg.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
scriptimg.BackgroundTransparency = 1.000
scriptimg.BorderColor3 = Color3.fromRGB(0, 0, 0)
scriptimg.BorderSizePixel = 0
scriptimg.Position = UDim2.new(0.0724745616, 0, 0.256356984, 0)
scriptimg.Size = UDim2.new(0, 182, 0, 86)
scriptimg.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"
scriptimg.ScaleType = Enum.ScaleType.Fit

searchbox.Name = "searchbox"
searchbox.Parent = cloud_2
searchbox.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
searchbox.BorderColor3 = Color3.fromRGB(0, 0, 0)
searchbox.BorderSizePixel = 0
searchbox.Position = UDim2.new(0.0172413792, 0, 0.0546623804, 0)
searchbox.Size = UDim2.new(0, 440, 0, 33)
searchbox.Font = Enum.Font.Gotham
searchbox.PlaceholderColor3 = Color3.fromRGB(145, 145, 145)
searchbox.PlaceholderText = "Powered By ScriptBlox"
searchbox.Text = ""
searchbox.TextColor3 = Color3.fromRGB(145, 145, 145)
searchbox.TextSize = 14.000

UIStroke_24.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke_24.Color = Color3.fromRGB(143, 143, 143)
UIStroke_24.Thickness = 0.800
UIStroke_24.Transparency = 0.800
UIStroke_24.Parent = searchbox

UICorner_33.CornerRadius = UDim.new(0, 4)
UICorner_33.Parent = searchbox

search.Name = "search"
search.Parent = cloud_2
search.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
search.BackgroundTransparency = 1.000
search.BorderColor3 = Color3.fromRGB(0, 0, 0)
search.BorderSizePixel = 0
search.Position = UDim2.new(0.862578273, 0, 0.0353697762, 0)
search.Size = UDim2.new(0, 46, 0, 36)
search.Visible = false
search.Image = "rbxassetid://11293977875"
search.ImageColor3 = Color3.fromRGB(143, 143, 143)

UIAspectRatioConstraint_12.Parent = search

UIStroke_25.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke_25.Color = Color3.fromRGB(143, 143, 143)
UIStroke_25.Thickness = 0.800
UIStroke_25.Transparency = 0.800
UIStroke_25.Parent = search

UICorner_34.CornerRadius = UDim.new(0, 4)
UICorner_34.Parent = search

player_2.Name = "player"
player_2.Parent = tabs
player_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
player_2.BackgroundTransparency = 1.000
player_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
player_2.BorderSizePixel = 0
player_2.Position = UDim2.new(0.105973028, 0, 4.90636296e-08, 0)
player_2.Size = UDim2.new(0, 464, 0, 311)
player_2.Visible = false

UICorner_35.CornerRadius = UDim.new(0, 4)
UICorner_35.Parent = player_2

UIListLayout_5.Parent = player_2
UIListLayout_5.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout_5.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_5.Padding = UDim.new(0, 10)

UIPadding_6.Parent = player_2
UIPadding_6.PaddingTop = UDim.new(0, 10)

firstsec_2.Name = "firstsec"
firstsec_2.Parent = player_2
firstsec_2.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
firstsec_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
firstsec_2.BorderSizePixel = 0
firstsec_2.Position = UDim2.new(0.0172413792, 0, -5.06936502e-08, 0)
firstsec_2.Size = UDim2.new(0, 448, 0, 87)

UICorner_36.CornerRadius = UDim.new(0, 4)
UICorner_36.Parent = firstsec_2

UIStroke_26.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke_26.Color = Color3.fromRGB(143, 143, 143)
UIStroke_26.Thickness = 0.800
UIStroke_26.Transparency = 0.800
UIStroke_26.Parent = firstsec_2

walkspeed.Name = "walkspeed"
walkspeed.Parent = firstsec_2
walkspeed.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
walkspeed.BorderColor3 = Color3.fromRGB(0, 0, 0)
walkspeed.BorderSizePixel = 0
walkspeed.Position = UDim2.new(0.0336360931, 0, 0.141523659, 0)
walkspeed.Size = UDim2.new(0, 416, 0, 26)
walkspeed.ClearTextOnFocus = false
walkspeed.Font = Enum.Font.Gotham
walkspeed.MultiLine = true
walkspeed.PlaceholderColor3 = Color3.fromRGB(178, 178, 178)
walkspeed.PlaceholderText = "WalkSpeed (Default: xx)"
walkspeed.Text = ""
walkspeed.TextColor3 = Color3.fromRGB(145, 145, 145)
walkspeed.TextSize = 14.000

UICorner_37.CornerRadius = UDim.new(0, 4)
UICorner_37.Parent = walkspeed

UIStroke_27.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke_27.Color = Color3.fromRGB(145, 145, 145)
UIStroke_27.Thickness = 0.800
UIStroke_27.Transparency = 0.800
UIStroke_27.Parent = walkspeed

UIListLayout_6.Parent = firstsec_2
UIListLayout_6.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout_6.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_6.Padding = UDim.new(0, 10)

UIPadding_7.Parent = firstsec_2
UIPadding_7.PaddingTop = UDim.new(0, 10)

jumppower.Name = "jumppower"
jumppower.Parent = firstsec_2
jumppower.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
jumppower.BorderColor3 = Color3.fromRGB(0, 0, 0)
jumppower.BorderSizePixel = 0
jumppower.Position = UDim2.new(0.0336360931, 0, 0.141523659, 0)
jumppower.Size = UDim2.new(0, 416, 0, 26)
jumppower.ClearTextOnFocus = false
jumppower.Font = Enum.Font.Gotham
jumppower.MultiLine = true
jumppower.PlaceholderColor3 = Color3.fromRGB(178, 178, 178)
jumppower.PlaceholderText = "JumpPower (Default: xx)"
jumppower.Text = ""
jumppower.TextColor3 = Color3.fromRGB(145, 145, 145)
jumppower.TextSize = 14.000

UICorner_38.CornerRadius = UDim.new(0, 4)
UICorner_38.Parent = jumppower

UIStroke_28.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke_28.Color = Color3.fromRGB(145, 145, 145)
UIStroke_28.Thickness = 0.800
UIStroke_28.Transparency = 0.800
UIStroke_28.Parent = jumppower

secondsec_2.Name = "secondsec"
secondsec_2.Parent = player_2
secondsec_2.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
secondsec_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
secondsec_2.BorderSizePixel = 0
secondsec_2.Position = UDim2.new(0.0172413792, 0, 0.322259128, 0)
secondsec_2.Size = UDim2.new(0, 448, 0, 147)
secondsec_2.Visible = false

UICorner_39.CornerRadius = UDim.new(0, 4)
UICorner_39.Parent = secondsec_2

UIStroke_29.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke_29.Color = Color3.fromRGB(143, 143, 143)
UIStroke_29.Thickness = 0.800
UIStroke_29.Transparency = 0.800
UIStroke_29.Parent = secondsec_2

UIListLayout_7.Parent = secondsec_2
UIListLayout_7.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout_7.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_7.Padding = UDim.new(0, 10)

UIPadding_8.Parent = secondsec_2
UIPadding_8.PaddingTop = UDim.new(0, 10)

autojump.Name = "autojump"
autojump.Parent = secondsec_2
autojump.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
autojump.BorderColor3 = Color3.fromRGB(0, 0, 0)
autojump.BorderSizePixel = 0
autojump.Position = UDim2.new(0.0334821418, 0, 0.038961038, 0)
autojump.Size = UDim2.new(0, 418, 0, 36)

UIStroke_30.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke_30.Color = Color3.fromRGB(143, 143, 143)
UIStroke_30.Thickness = 0.800
UIStroke_30.Transparency = 0.800
UIStroke_30.Parent = autojump

UICorner_40.CornerRadius = UDim.new(0, 4)
UICorner_40.Parent = autojump

enable_4.Name = "enable"
enable_4.Parent = autojump
enable_4.BackgroundColor3 = Color3.fromRGB(203, 0, 0)
enable_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
enable_4.BorderSizePixel = 0
enable_4.Position = UDim2.new(0.926563323, 0, 0.0897530466, 0)
enable_4.Size = UDim2.new(0, 29, 0, 32)
enable_4.AutoButtonColor = false
enable_4.Font = Enum.Font.Gotham
enable_4.Text = ""
enable_4.TextColor3 = Color3.fromRGB(145, 145, 145)
enable_4.TextSize = 14.000

UICorner_41.CornerRadius = UDim.new(0, 5)
UICorner_41.Parent = enable_4

UIAspectRatioConstraint_13.Parent = enable_4

text_4.Name = "text"
text_4.Parent = autojump
text_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
text_4.BackgroundTransparency = 1.000
text_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
text_4.BorderSizePixel = 0
text_4.Position = UDim2.new(0.0169076975, 0, 0.217339903, 0)
text_4.Size = UDim2.new(0, 96, 0, 21)
text_4.Font = Enum.Font.Gotham
text_4.Text = "Auto Jump"
text_4.TextColor3 = Color3.fromRGB(145, 145, 145)
text_4.TextSize = 16.000
text_4.TextWrapped = true

UICorner_42.CornerRadius = UDim.new(0, 4)
UICorner_42.Parent = text_4

autojump_2.Name = "autojump"
autojump_2.Parent = secondsec_2
autojump_2.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
autojump_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
autojump_2.BorderSizePixel = 0
autojump_2.Position = UDim2.new(0.0334821418, 0, 0.038961038, 0)
autojump_2.Size = UDim2.new(0, 418, 0, 36)

UIStroke_31.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke_31.Color = Color3.fromRGB(143, 143, 143)
UIStroke_31.Thickness = 0.800
UIStroke_31.Transparency = 0.800
UIStroke_31.Parent = autojump_2

UICorner_43.CornerRadius = UDim.new(0, 4)
UICorner_43.Parent = autojump_2

enable_5.Name = "enable"
enable_5.Parent = autojump_2
enable_5.BackgroundColor3 = Color3.fromRGB(203, 0, 0)
enable_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
enable_5.BorderSizePixel = 0
enable_5.Position = UDim2.new(0.926563323, 0, 0.0897530466, 0)
enable_5.Size = UDim2.new(0, 29, 0, 32)
enable_5.AutoButtonColor = false
enable_5.Font = Enum.Font.Gotham
enable_5.Text = ""
enable_5.TextColor3 = Color3.fromRGB(145, 145, 145)
enable_5.TextSize = 14.000

UICorner_44.CornerRadius = UDim.new(0, 5)
UICorner_44.Parent = enable_5

UIAspectRatioConstraint_14.Parent = enable_5

text_5.Name = "text"
text_5.Parent = autojump_2
text_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
text_5.BackgroundTransparency = 1.000
text_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
text_5.BorderSizePixel = 0
text_5.Position = UDim2.new(0.0169076975, 0, 0.217339903, 0)
text_5.Size = UDim2.new(0, 96, 0, 21)
text_5.Font = Enum.Font.Gotham
text_5.Text = "Auto Jump"
text_5.TextColor3 = Color3.fromRGB(145, 145, 145)
text_5.TextSize = 16.000
text_5.TextWrapped = true

UICorner_45.CornerRadius = UDim.new(0, 4)
UICorner_45.Parent = text_5

autojump_3.Name = "autojump"
autojump_3.Parent = secondsec_2
autojump_3.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
autojump_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
autojump_3.BorderSizePixel = 0
autojump_3.Position = UDim2.new(0.0334821418, 0, 0.038961038, 0)
autojump_3.Size = UDim2.new(0, 418, 0, 36)

UIStroke_32.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke_32.Color = Color3.fromRGB(143, 143, 143)
UIStroke_32.Thickness = 0.800
UIStroke_32.Transparency = 0.800
UIStroke_32.Parent = autojump_3

UICorner_46.CornerRadius = UDim.new(0, 4)
UICorner_46.Parent = autojump_3

enable_6.Name = "enable"
enable_6.Parent = autojump_3
enable_6.BackgroundColor3 = Color3.fromRGB(203, 0, 0)
enable_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
enable_6.BorderSizePixel = 0
enable_6.Position = UDim2.new(0.926563323, 0, 0.0897530466, 0)
enable_6.Size = UDim2.new(0, 29, 0, 32)
enable_6.AutoButtonColor = false
enable_6.Font = Enum.Font.Gotham
enable_6.Text = ""
enable_6.TextColor3 = Color3.fromRGB(145, 145, 145)
enable_6.TextSize = 14.000

UICorner_47.CornerRadius = UDim.new(0, 5)
UICorner_47.Parent = enable_6

UIAspectRatioConstraint_15.Parent = enable_6

text_6.Name = "text"
text_6.Parent = autojump_3
text_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
text_6.BackgroundTransparency = 1.000
text_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
text_6.BorderSizePixel = 0
text_6.Position = UDim2.new(0.0169076975, 0, 0.217339903, 0)
text_6.Size = UDim2.new(0, 96, 0, 21)
text_6.Font = Enum.Font.Gotham
text_6.Text = "Auto Jump"
text_6.TextColor3 = Color3.fromRGB(145, 145, 145)
text_6.TextSize = 16.000
text_6.TextWrapped = true

UICorner_48.CornerRadius = UDim.new(0, 4)
UICorner_48.Parent = text_6

updatetext.Name = "updatetext"
updatetext.Parent = player_2
updatetext.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
updatetext.BackgroundTransparency = 1.000
updatetext.BorderColor3 = Color3.fromRGB(0, 0, 0)
updatetext.BorderSizePixel = 0
updatetext.Position = UDim2.new(0.131465524, 0, 0.322259128, 0)
updatetext.Size = UDim2.new(0, 442, 0, 37)
updatetext.Font = Enum.Font.Gotham
updatetext.Text = "More features / options will be added in another update. Stay tuned!"
updatetext.TextColor3 = Color3.fromRGB(145, 145, 145)
updatetext.TextSize = 18.000
updatetext.TextWrapped = true
updatetext.TextXAlignment = Enum.TextXAlignment.Left

close.Name = "close"
close.Parent = main
close.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
close.BackgroundTransparency = 1.000
close.BorderColor3 = Color3.fromRGB(0, 0, 0)
close.BorderSizePixel = 0
close.Position = UDim2.new(0.023394987, 0, 0.855848908, 0)
close.Size = UDim2.new(0, 30, 0, 30)
close.Image = "rbxassetid://11293981586"
close.ImageColor3 = Color3.fromRGB(143, 143, 143)

UIAspectRatioConstraint_16.Parent = close

open.Name = "open"
open.Parent = AlysseAndroid
open.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
open.BorderColor3 = Color3.fromRGB(0, 0, 0)
open.BorderSizePixel = 0
open.Position = UDim2.new(0.0715561211, 0, 0.43751955, 0)
open.Size = UDim2.new(0, 51, 0, 38)
open.Image = "rbxassetid://16682044534"

UIStroke_33.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke_33.Color = Color3.fromRGB(145, 145, 145)
UIStroke_33.Parent = open

UICorner_49.CornerRadius = UDim.new(0, 100)
UICorner_49.Parent = open

UIAspectRatioConstraint_17.Parent = open

-- Scripts:

local function WVUHU_fake_script() -- main.LocalScript 
	local script = Instance.new('LocalScript', main)

	print("Welcome, "..game.Players.LocalPlayer.Name.. " to Alysse!")
	
	local mainframe = script.Parent
	local sidebar = mainframe.sidebar
	local tabsfolder = mainframe.tabs
	local screengui = script.Parent.Parent
	local homebutton = sidebar.home
	local cloudsearchbutton = sidebar.cloud
	local settingsbutton = sidebar.settings
	local lplr = game:GetService("Players").LocalPlayer
	local plrs = game:GetService("Players")
	local plrname = lplr.Name
	local sidebaruistroke = sidebar.UIStroke
	local hometab = tabsfolder.home
	local TweenService = game:GetService("TweenService")
	local RunService = game:GetService("RunService")
	local info = TweenInfo.new(0.35, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut)
	local hometab = tabsfolder.home
	local executortab = tabsfolder.exec
	local visualstab = tabsfolder.visuals
	local cloudtab = tabsfolder.cloud
	local settingstab = tabsfolder.settings
	local homebutton = sidebar.home
	local executorbutton = sidebar.executor
	local visualsbutton = sidebar.visuals
	local cloudbutton = sidebar.cloud
	local settingsbutton = sidebar.settings
	local homewelcometext = hometab.firstsec.greet
	local RunService = game:GetService("RunService")
	local usid = lplr.UserId
	local thumbt = Enum.ThumbnailType.HeadShot
	local thumbs = Enum.ThumbnailSize.Size420x420
	local content  = plrs:GetUserThumbnailAsync(usid, thumbt, thumbs)
	local profileimg = hometab.firstsec.profile
	local placeid = game.PlaceId
	local gameimg = hometab.secondsec.gamethumb
	local gamenamelabel = hometab.secondsec.rightside.gamename
	local gname = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name
	local ginfo = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId)
	local createdlabel = hometab.secondsec.rightside.created
	local updatedlabel = hometab.secondsec.rightside.updated
	local maxplayerslabel = hometab.secondsec.rightside.maxplayers
	local getcorrectcreationdate = string.sub(ginfo.Created, 1, 10)
	local getcorrectupdateddate = string.sub(ginfo.Updated, 1, 10) 
	local execbox = executortab.sect.execbox
	local scrollexecframe = executortab.sect
	local executeexecbutton = executortab.execute
	local copyexecbutton = executortab.copy
	local clearexecbutton = executortab.clear
	local pasteexecbutton = executortab.paste
	local executeclipboard = executortab.executeclipboard
	local scriptexample = cloudtab.section.scriptexample
	local scriptexampleexecute = scriptexample.execute
	local scriptexamplecopy = scriptexample.copy
	local close = mainframe.close
	local openalysse = screengui.open
	local searchboxcloud = cloudtab.searchbox
	local searchbutton = cloudtab.search
	local walkspeedtextbox = tabsfolder.player.firstsec.walkspeed
	local jumppowertextbox = tabsfolder.player.firstsec.jumppower
	
	mainframe.Active = true
    mainframe.Draggable = true
	-- // Functions \\ --
	
	function click(b, cf)
		if b and (b:IsA("TextButton") or b:IsA("ImageButton")) and type(cf) == "function" then
			b.MouseButton1Click:Connect(cf)
		else
			warn("real")
		end
	end
	
	function hover(b, cf)
		if b and (b:IsA("TextButton") or b:IsA("ImageButton")) and type(cf) == "function" then
			b.MouseEnter:Connect(cf)
		else
			warn("real")
		end
	end
	
	function unhover(b, cf)
		if b and (b:IsA("TextButton") or b:IsA("ImageButton")) and type(cf) == "function" then
			b.MouseLeave:Connect(cf)
		else
			warn("real")
		end
	end
	
	function chsize(obj, sz)
		if obj and sz and typeof(sz) == "UDim2" then
			local info = TweenInfo.new(0.30, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut)
				TweenService:Create(obj, info, {Size = sz}):Play()
		else
			warn("real")
		end
	end
	
	function stabtest(show)
		for _, v in pairs(tabsfolder:GetChildren()) do
			if v:IsA("Frame") then
				if v ~= show then
					v.Visible = false
					print("hiding:", v.Name)
				else
					v.Visible = true
				end
			end
		end
	end
	
	function stab(show)
		for _, v in pairs(tabsfolder:GetChildren()) do
			if v:IsA("Frame") then
				if v ~= show then
					v.Visible = false
				else
					v.Visible = true
				end
			end
		end
	end
	
	-- // Functions \\ --
	
	--------------------
	-- // Tabs + Buttons \\ --
	
	click(openalysse, function()
		openalysse.Visible = false
		mainframe.Visible = true
		openalysse.Draggable = true
	end)
	 
	click(homebutton, function()
		stab(hometab)
	end)
	
	hover(homebutton, function()
		TweenService:Create(homebutton, info, {ImageColor3 = Color3.fromRGB(255, 255, 255)}):Play()
	end)
	
	unhover(homebutton, function()
		TweenService:Create(homebutton, info, {ImageColor3 = Color3.fromRGB(143, 143, 143)}):Play()
	end)
	
	click(executorbutton, function()
		stab(executortab)
	end)
	
	hover(executorbutton, function()
		TweenService:Create(executorbutton, info, {ImageColor3 = Color3.fromRGB(255, 255, 255)}):Play()
	end)
	
	unhover(executorbutton, function()
		TweenService:Create(executorbutton, info, {ImageColor3 = Color3.fromRGB(143, 143, 143)}):Play()
	end)
	
	click(visualsbutton, function()
		stab(visualstab)
	end)
	
	hover(visualsbutton, function()
		TweenService:Create(visualsbutton, info, {ImageColor3 = Color3.fromRGB(255, 255, 255)}):Play()
	end)
	
	unhover(visualsbutton, function()
		TweenService:Create(visualsbutton, info, {ImageColor3 = Color3.fromRGB(143, 143, 143)}):Play()
	end)
	
	click(cloudbutton, function()
		stab(cloudtab)
	end)
	
	hover(cloudbutton, function()
		TweenService:Create(cloudbutton, info, {ImageColor3 = Color3.fromRGB(255, 255, 255)}):Play()
	end)
	
	unhover(cloudbutton, function()
		TweenService:Create(cloudbutton, info, {ImageColor3 = Color3.fromRGB(143, 143, 143)}):Play()
	end)
	
	click(settingsbutton, function()
		stab(settingstab)
	end)
	
	hover(settingsbutton, function()
		TweenService:Create(settingsbutton, info, {ImageColor3 = Color3.fromRGB(255, 255, 255)}):Play()
	end)
	
	unhover(settingsbutton, function()
		TweenService:Create(settingsbutton, info, {ImageColor3 = Color3.fromRGB(143, 143, 143)}):Play()
	end)
	
	click(executeexecbutton, function()
		loadstring(execbox.Text)()
	end)
	
	click(clearexecbutton, function()
		execbox.Text = ""
	end)
	
	click(copyexecbutton, function()
		setclipboard(execbox.Text)
	end)
	
	click(pasteexecbutton, function()
	execbox.Text = getclipboard()
	end)
	
	click(executeclipboard, function()
		loadstring(getclipboard())()
	end)
	
	hover(close, function()
		TweenService:Create(close, info, {ImageColor3 = Color3.fromRGB(131, 0, 0)}):Play()
	end)
	
	unhover(close, function()
		TweenService:Create(close, info, {ImageColor3 = Color3.fromRGB(143, 143, 143)}):Play()
	end)
	
	click(close, function()
		mainframe.Visible = false
		openalysse.Visible = true
	end)
	
	local searchedquery = searchboxcloud.Text
	local searched = false
	
	local issearching = false
	
	searchboxcloud.FocusLost:Connect(function()
		if issearching then
			game.StarterGui:SetCore("SendNotification", {
				Title = "Alysse-Remake",
				Text = "A search is currently in progress! Please wait",
				Duration = 1,
			})
			return
		end
	
		issearching = true
		TweenService:Create(searchbutton, info, {ImageTransparency = 1}):Play()
		wait(0.05)
		searchbutton.Image = "rbxassetid://11419715891"
		wait(0.05)
		TweenService:Create(searchbutton, info, {ImageTransparency = 0}):Play()
	
		for _, existingscript in pairs(cloudtab.section.scriptexample.Parent:GetChildren()) do
			if existingscript:IsA("Frame") and existingscript.Name == "scriptlol" then
				existingscript:Destroy()
				local canvassizelol = cloudtab.section.CanvasSize
				local sectiontf = cloudtab.section
				sectiontf.CanvasSize = UDim2.new(0, 0, 0, 0)
			end
		end
	
		for _, scriptthing in pairs(cloudtab.section:GetChildren()) do
			if scriptthing:IsA("Frame") and scriptthing.Name:match("scriptexample") then
				local currentpage = 1
				local httpservice = game:GetService("HttpService")
				local searchedquery = searchboxcloud.Text
				repeat
					local gameresp = request({
						Url = "https://scriptblox.com/api/script/search?q=" ..httpservice:UrlEncode(searchedquery).. "&max=100&mode=free&page=" ..currentpage,
						Method = "GET"
					})
	
					local decodedgames = httpservice:JSONDecode(gameresp.Body)
					local gamedata = decodedgames.result.scripts
	
					if next(gamedata) == nil then
						print("Alysse has found no results.")
					else
						for i, v in pairs(gamedata) do
							local canvassizelol = cloudtab.section.CanvasSize
							local sectiontf = cloudtab.section
							sectiontf.CanvasSize = UDim2.new(canvassizelol.X.Scale, canvassizelol.X.Offset, canvassizelol.Y.Scale + 0.5, canvassizelol.Y.Offset)
							local title = v.title or "nothing"
							local scriptload = v.script or "nothing"
	
							local real = scriptexample:Clone()
							real.Name = "scriptlol"
							real.Parent = cloudtab.section.scriptexample.Parent
							real.Visible = true
	
							real.scriptname.Text = title
							real.execute.MouseButton1Click:Connect(function()
								loadstring(scriptload)()
								real.Text = "Executed"
								wait(0.5)
								real.Text = "Execute"
							end)
	
							real.copy.MouseButton1Click:Connect(function()
								real.copy.Text = "Copied"
								wait(0.5)
								real.copy.Text = "Copy"
								setclipboard(scriptload)
							end)
						end
					end
	
					currentpage = currentpage + 1
				until currentpage > decodedgames.result.totalPages
			end
		end
	
		issearching = false
		TweenService:Create(searchbutton, info, {ImageTransparency = 1}):Play()
		wait(0.2)
		searchbutton.Image = "rbxassetid://11293977875"
		wait(0.2)
		TweenService:Create(searchbutton, info, {ImageTransparency = 0}):Play()
		game.StarterGui:SetCore("SendNotification", {
			Title = "Alysse-Remake",
			Text = "Search is complete.",
			Duration = 3,
		})
	end)
	
	
	local c = 0
	
	coroutine.wrap(function()
	while wait(0.01) do
	
		for _, f in pairs(tabsfolder.cloud.section:GetChildren()) do
			if f:IsA("Frame") and f.Name:match("scriptexample") and not f:FindFirstChild("scriptappliedlol") then
				c = c + 1
				local s = c > 1 and (" (" .. c .. ")") or ""
	
				for _, b in pairs(f:GetChildren()) do
					if b:IsA("TextButton") then
						local n = b.Name:lower()
						local color = n == "execute" and Color3.fromRGB(55, 55, 55) or (n == "copy" and Color3.fromRGB(75, 75, 75))
	
						b.MouseEnter:Connect(function()
							TweenService:Create(b, info, {BackgroundColor3 = color}):Play()
						end)
	
						b.MouseLeave:Connect(function()
							TweenService:Create(b, info, {BackgroundColor3 = Color3.fromRGB(35, 35, 35)}):Play()
						end)
					end
				end
	
				local marker = Instance.new("BoolValue")
				marker.Name = "scriptappliedlol"
				marker.Parent = f
			end
		end
	end
	end)
	
	
	-- // Tabs + Buttons \\ --
	
	-- // Label Stuff \\ - - / First Section
	
	RunService.Heartbeat:Connect(function()
		local hour = tonumber(os.date("%H"))
	
		local greeting = ""
		if hour >= 5 and hour < 12 then
			greeting = "Good morning, " .. plrname .. "!"
		elseif hour >= 12 and hour < 17 then
			greeting = "Good afternoon, " .. plrname .. "!"
		elseif hour >= 17 and hour < 21 then
			greeting = "Good evening, " .. plrname .. "!"
		else
			greeting = "Good night, " .. plrname .. "!"
		end
	
		homewelcometext.Text = greeting
	end)
	
	profileimg.Image = content
	gamenamelabel.Text = gname
	
	-- Home Second Section --
	gameimg.Image = "rbxthumb://type=GameThumbnail&id="..placeid.."&w=256&h=144"
	createdlabel.Text = "Created: "..getcorrectcreationdate
	updatedlabel.Text = "Updated: "..getcorrectupdateddate
	local maxplayerslabel = hometab.secondsec.rightside.maxplayers
	game:GetService("RunService").Stepped:Connect(function(deltaTime)
		local cplrs = #plrs:GetPlayers()
		local maxplrs = plrs.MaxPlayers
		local maxplayerslabel = hometab.secondsec.rightside.maxplayers
		maxplayerslabel.Text = cplrs .. " / " .. maxplrs
		wait(1)
	end)
	
	execbox:GetPropertyChangedSignal("TextFits"):Connect(function()
		if not execbox.TextFits then
			wait(0.01)
			local canvassizelol = scrollexecframe.CanvasSize
			scrollexecframe.CanvasSize = UDim2.new(canvassizelol.X.Scale, canvassizelol.X.Offset, canvassizelol.Y.Scale + 0.5, canvassizelol.Y.Offset)
			execbox.Size = UDim2.new(execbox.Size.X.Scale, execbox.Size.X.Offset, execbox.Size.Y.Scale, execbox.Size.Y.Offset + 5)
		end
	end)
	
	execbox:GetPropertyChangedSignal("Text"):Connect(function()
		if execbox.Text == "" then
			scrollexecframe.CanvasSize = UDim2.new(0, 0, 0, 0)
		end
	end)
        

	walkspeedtextbox.PlaceholderText = "WalkSpeed (Default: "..plrs.LocalPlayer.Character.Humanoid.WalkSpeed.. ")"
	jumppowertextbox.PlaceholderText = "JumpPower (Default: "..plrs.LocalPlayer.Character.Humanoid.JumpPower.. ")"
	
	walkspeedtextbox.FocusLost:Connect(function()
		plrs.LocalPlayer.Character.Humanoid.WalkSpeed = tonumber(walkspeedtextbox.Text)
		walkspeedtextbox.Text = ""
	end)
	
	jumppowertextbox.FocusLost:Connect(function()
		plrs.LocalPlayer.Character.Humanoid.JumpPower = tonumber(jumppowertextbox.Text)
		jumppowertextbox.Text = ""
	end)
	
	click(sidebar.player, function()
		stab(tabsfolder.player)
	end)
end
coroutine.wrap(WVUHU_fake_script)()
end) 
tab3.newButton("Flooded", "Executor script", function()
     -- Gui to Lua
-- Version: 3.2

-- Instances:

local Flooded = Instance.new("ScreenGui")
local MainFrame = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local BAR = Instance.new("Frame")
local UICorner_2 = Instance.new("UICorner")
local Home = Instance.new("ImageButton")
local ScriptHub = Instance.new("ImageButton")
local Console = Instance.new("ImageButton")
local Executer = Instance.new("Frame")
local ScriptInput = Instance.new("TextBox")
local TextButton = Instance.new("TextButton")
local UICorner_3 = Instance.new("UICorner")
local TextButton_2 = Instance.new("TextButton")
local UICorner_4 = Instance.new("UICorner")
local TextButton_3 = Instance.new("TextButton")
local UICorner_5 = Instance.new("UICorner")
local ScriptHubFrame = Instance.new("Frame")
local Console_2 = Instance.new("Frame")
local ScrollingFrame = Instance.new("ScrollingFrame")
local title = Instance.new("TextLabel")
local UICorner_6 = Instance.new("UICorner")
local topbar = Instance.new("Frame")
local UICorner_7 = Instance.new("UICorner")
local TextLabel = Instance.new("TextLabel")
local Settings = Instance.new("ImageButton")
local UICorner_8 = Instance.new("UICorner")
local TextButton_4 = Instance.new("TextButton")
local UICorner_9 = Instance.new("UICorner")
local Seetings = Instance.new("Frame")
local Speed = Instance.new("TextLabel")
local speedCon = Instance.new("TextBox")
local UICorner_10 = Instance.new("UICorner")
local speedset = Instance.new("TextButton")
local UICorner_11 = Instance.new("UICorner")
local JumpCon = Instance.new("TextBox")
local UICorner_12 = Instance.new("UICorner")
local Jump = Instance.new("TextLabel")
local JumpSet = Instance.new("TextButton")
local UICorner_13 = Instance.new("UICorner")
local TextButton_5 = Instance.new("TextButton")
local UICorner_14 = Instance.new("UICorner")
local TextButton_6 = Instance.new("TextButton")
local UICorner_15 = Instance.new("UICorner")
local ImageButton = Instance.new("ImageButton")
local UICorner_16 = Instance.new("UICorner")
local TextButton_7 = Instance.new("TextButton")
local Search = Instance.new("ImageButton")
local SearchFrame = Instance.new("Frame")

--Properties:

Flooded.ResetOnSpawn = false

Flooded.Name = "Flooded"
Flooded.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
Flooded.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
Flooded.ResetOnSpawn = false
Flooded.Parent = gethui()

MainFrame.Name = "MainFrame"
MainFrame.Parent = Flooded
MainFrame.BackgroundColor3 = Color3.fromRGB(64, 148, 161)
MainFrame.BorderColor3 = Color3.fromRGB(255, 255, 255)
MainFrame.Position = UDim2.new(0.15633297, -44, 0.0564282313, -27)
MainFrame.Size = UDim2.new(0.818025708, 0, 1, 0)

UICorner.CornerRadius = UDim.new(0, 23)
UICorner.Parent = MainFrame

BAR.Name = "BAR"
BAR.Parent = MainFrame
BAR.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
BAR.Position = UDim2.new(0.0367774256, 0, 0.162784129, 0)
BAR.Size = UDim2.new(0, 79, 0, 193)

UICorner_2.CornerRadius = UDim.new(0, 10)
UICorner_2.Parent = BAR

Home.Name = "Home"
Home.Parent = BAR
Home.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Home.Position = UDim2.new(0.189873412, 0, 0.0714285746, 0)
Home.Size = UDim2.new(0.607594907, 0, 0.194444448, 0)
Home.Image = "rbxassetid://11263246584"

ScriptHub.Name = "ScriptHub"
ScriptHub.Parent = BAR
ScriptHub.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ScriptHub.Position = UDim2.new(0.189873368, 0, 0.376984119, 0)
ScriptHub.Size = UDim2.new(0.607594907, 0, 0.214285716, 0)
ScriptHub.Image = "rbxassetid://11570626761"

Console.Name = "Console"
Console.Parent = BAR
Console.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Console.Position = UDim2.new(0.189873368, 0, 0.674376965, 0)
Console.Size = UDim2.new(0.607594907, 0, 0.214285716, 0)
Console.Image = "rbxassetid://7128117167"
Console.ImageColor3 = Color3.fromRGB(0, 0, 0)

Executer.Name = "Executer"
Executer.Parent = MainFrame
Executer.BackgroundColor3 = Color3.fromRGB(64, 148, 161)
Executer.BorderColor3 = Color3.fromRGB(64, 148, 161)
Executer.Position = UDim2.new(0.215481207, 0, 0.138157919, 0)
Executer.Visible = true
Executer.Size = UDim2.new(0.723849356, 0, 0.809210539, 0)

ScriptInput.Name = "ScriptInput"
ScriptInput.Parent = Executer
ScriptInput.BackgroundColor3 = Color3.fromRGB(24, 50, 99)
ScriptInput.BorderColor3 = Color3.fromRGB(255, 255, 255)
ScriptInput.Position = UDim2.new(0.0578034669, 0, 0.0569105372, 0)
ScriptInput.Size = UDim2.new(0.910404623, 0, 0.66260165, 0)
ScriptInput.Font = Enum.Font.SourceSans
ScriptInput.Text = "--Fixed By Nath.#4468"
ScriptInput.TextColor3 = Color3.fromRGB(255, 255, 255)
ScriptInput.TextSize = 16.000
ScriptInput.TextWrapped = true
ScriptInput.ClearTextOnFocus = false
ScriptInput.TextXAlignment = Enum.TextXAlignment.Left
ScriptInput.TextYAlignment = Enum.TextYAlignment.Top

TextButton.Parent = Executer
TextButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton.Position = UDim2.new(0.0578034669, 0, 0.796747983, 0)
TextButton.Size = UDim2.new(0.28323698, 0, 0.166666672, 0)
TextButton.Font = Enum.Font.SourceSans
TextButton.Text = "Execute Text"
TextButton.TextColor3 = Color3.fromRGB(0, 0, 0)
TextButton.TextSize = 14.000

local function ExecuteScript(script)
    local f, err = loadstring(script)
    if f then
    f()
        game.StarterGui:SetCore("SendNotification", {
            Title = "Flooded Android",
            Text = "Script Executed",
            Duration = 3
        })
    else
        print("Script execution error:", err)
        game.StarterGui:SetCore("SendNotification", {
            Title = "Flooded Android",
            Text = "Script Error",
            Duration = 3
        })
    end
end
 
-- Connect the execute button to the script execution function
TextButton.MouseButton1Click:Connect(function()
    local script = ScriptInput.Text
    ExecuteScript(script)
end)

UICorner_3.CornerRadius = UDim.new(0, 13)
UICorner_3.Parent = TextButton

TextButton_2.Parent = Executer
TextButton_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton_2.Position = UDim2.new(0.369942188, 0, 0.796747983, 0)
TextButton_2.Size = UDim2.new(0.28323698, 0, 0.166666672, 0)
TextButton_2.Font = Enum.Font.SourceSans
TextButton_2.Text = "Clear"
TextButton_2.TextColor3 = Color3.fromRGB(0, 0, 0)
TextButton_2.TextSize = 14.000

TextButton_2.MouseButton1Click:Connect(function()
    ScriptInput.Text = ""
end)

UICorner_4.CornerRadius = UDim.new(0, 13)
UICorner_4.Parent = TextButton_2

TextButton_3.Parent = Executer
TextButton_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton_3.Position = UDim2.new(0.684971094, 0, 0.796747983, 0)
TextButton_3.Size = UDim2.new(0.28323698, 0, 0.166666672, 0)
TextButton_3.Font = Enum.Font.SourceSans
TextButton_3.Text = "Execute ClipBoard"
TextButton_3.TextColor3 = Color3.fromRGB(0, 0, 0)
TextButton_3.TextSize = 14.000

TextButton_3.MouseButton1Click:Connect(function()
loadstring(getclipboard())()
game.StarterGui:SetCore("SendNotification", {
        Title = "Flooded Android";
        Text = "Script Executed From Clipboard";
        Duration = 3;
    })
end)

UICorner_5.CornerRadius = UDim.new(0, 13)
UICorner_5.Parent = TextButton_3

ScriptHubFrame.Name = "ScriptHubFrame"
ScriptHubFrame.Parent = MainFrame
ScriptHubFrame.BackgroundColor3 = Color3.fromRGB(64, 148, 161)
ScriptHubFrame.BorderColor3 = Color3.fromRGB(64, 148, 161)
ScriptHubFrame.Position = UDim2.new(0.223849416, 0, 0.15789476, 0)
ScriptHubFrame.Visible = false
ScriptHubFrame.Size = UDim2.new(0.723849356, 0, 0.809210539, 0)

-- Create the scrolling frame for the script list
local scriptList = Instance.new("ScrollingFrame")
scriptList.Name = "ScriptList"
scriptList.Position = UDim2.new(0, 10, 0, 10)
scriptList.Size = UDim2.new(1, -20, 1.2, -80)
scriptList.BackgroundTransparency = 0.8
scriptList.BackgroundColor3 = Color3.new(0, 0, 0)
scriptList.CanvasSize = UDim2.new(0, 0, 0, 0)
scriptList.ScrollBarThickness = 10
scriptList.Parent = ScriptHubFrame

-- Create the script input textbox
local scriptInput = Instance.new("TextBox")
scriptInput.Name = "ScriptInput"
scriptInput.Size = UDim2.new(0.699999988, -10, 0, 30)
scriptInput.Position = UDim2.new(0, 10, 1.20000005, -40)
scriptInput.AnchorPoint = Vector2.new(0, 1)
scriptInput.BackgroundColor3 = Color3.new(255, 255, 255)
scriptInput.TextColor3 = Color3.new(0, 0, 0)
scriptInput.Font = Enum.Font.SourceSans
scriptInput.TextSize = 16
scriptInput.TextWrapped = true
scriptInput.Text = ""
scriptInput.PlaceholderText = "Enter script code..."
scriptInput.ClearTextOnFocus = false
scriptInput.Parent = ScriptHubFrame

-- Create the add script button
local addButton = Instance.new("TextButton")
addButton.Name = "AddButton"
addButton.Size = UDim2.new(0, 100, 0, 30)
addButton.Position = UDim2.new(1, 10, 1.03, 0)
addButton.AnchorPoint = Vector2.new(1, 1)
addButton.BackgroundColor3 = Color3.new(255, 255, 255)
addButton.TextColor3 = Color3.new(0, 0, 0)
addButton.Font = Enum.Font.SourceSansBold
addButton.TextSize = 16
addButton.Text = "Add Script"
addButton.Parent = ScriptHubFrame

-- Function to add a script to the script hub
local function addScript(title, scriptCode)
    local scriptFrame = Instance.new("Frame")
    scriptFrame.Name = "ScriptFrame"
    scriptFrame.Size = UDim2.new(1, -20, 0, 60)
    scriptFrame.Position = UDim2.new(0, 10, 0, #scriptList:GetChildren() * 70)
    scriptFrame.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
    scriptFrame.Parent = scriptList

    local scriptButton = Instance.new("TextButton")
    scriptButton.Name = "ScriptButton"
    scriptButton.Size = UDim2.new(1, 0, 1, 0)
    scriptButton.BackgroundTransparency = 1
    scriptButton.BackgroundColor3 = Color3.new(255, 255, 255)
    scriptButton.Text = title
    scriptButton.Font = Enum.Font.SourceSans
    scriptButton.TextSize = 50
    scriptButton.TextColor3 = Color3.new(0, 0, 0)
    scriptButton.TextWrapped = true
    scriptButton.Parent = scriptFrame

    scriptButton.MouseButton1Click:Connect(function()
        -- Execute the scriptCode when the button is clicked
        local success, err = pcall(function()
            loadstring(scriptCode)()
        end)
        
        if not success then
            warn("Error executing script:", err)
        end
    end)

    local deleteButton = Instance.new("TextButton")
    deleteButton.Name = "DeleteButton"
    deleteButton.Size = UDim2.new(0, 80, 0, 50)
    deleteButton.Position = UDim2.new(1, 0, 0.5, 0)
    deleteButton.AnchorPoint = Vector2.new(1, 0.5)
    deleteButton.BackgroundColor3 = Color3.new(0.8, 0, 0)
    deleteButton.TextColor3 = Color3.new(1, 1, 1)
    deleteButton.Font = Enum.Font.SourceSansBold
    deleteButton.TextSize = 16
    deleteButton.Text = "X"
    deleteButton.Parent = scriptButton

    deleteButton.MouseButton1Click:Connect(function()
        -- Remove the script from the script hub
        scriptFrame:Destroy()
    end)

    scriptList.CanvasSize = UDim2.new(0, 0, 0, #scriptList:GetChildren() * 70)
end

addButton.MouseButton1Click:Connect(function()
    local scriptTitle = "Untitled"
    local scriptCode = scriptInput.Text

    if scriptCode ~= "" then
        local titlePrompt = Instance.new("TextBox")
        titlePrompt.Name = "TitlePrompt"
        titlePrompt.Size = UDim2.new(0, 200, 0, 30)
        titlePrompt.Position = UDim2.new(0.5, -100, 0.5, -15)
        titlePrompt.AnchorPoint = Vector2.new(0.5, 0.5)
        titlePrompt.BackgroundColor3 = Color3.new(0.5, 0.5, 0.5)
        titlePrompt.TextColor3 = Color3.new(1, 1, 1)
        titlePrompt.Font = Enum.Font.SourceSans
        titlePrompt.TextSize = 16
        titlePrompt.PlaceholderText = "Title"
        titlePrompt.Text = ""
        titlePrompt.Parent = ScriptHubFrame

        local function handlePromptSubmit()
            scriptTitle = titlePrompt.Text
            titlePrompt:Destroy()

            addScript(scriptTitle, scriptCode)
        end

        titlePrompt.FocusLost:Connect(handlePromptSubmit)
    end
end)

Console_2.Name = "Console"
Console_2.Parent = MainFrame
Console_2.BackgroundColor3 = Color3.fromRGB(64, 148, 161)
Console_2.BorderColor3 = Color3.fromRGB(64, 148, 161)
Console_2.Position = UDim2.new(0.224282146, 0, 0.183154821, 0)
Console_2.Visible = false
Console_2.Size = UDim2.new(0.723849356, 0, 0.809210539, 0)

-- Create the ScrollingFrame
local ScrollingFrame = Instance.new("ScrollingFrame")
ScrollingFrame.Name = "ScrollingFrame"
ScrollingFrame.Parent = Console_2
ScrollingFrame.Active = true
ScrollingFrame.BackgroundColor3 = Color3.fromRGB(64, 148, 161)
ScrollingFrame.Position = UDim2.new(0.0766660869, 0, 0.0338661745, 0)
ScrollingFrame.Size = UDim2.new(0, 352, 0, 205)
ScrollingFrame.VerticalScrollBarPosition = Enum.VerticalScrollBarPosition.Left
ScrollingFrame.HorizontalScrollBarInset = Enum.ScrollBarInset.Always
ScrollingFrame.ScrollBarThickness = 10

-- Create the inner Frame for content and scrolling
local Frame = Instance.new("Frame")
Frame.BackgroundTransparency = 1
Frame.Size = UDim2.new(1, -10, 1, 0) -- Subtract 10 pixels for the width of the scroll bar
Frame.Position = UDim2.new(0, 0, 0, 0)
Frame.Parent = ScrollingFrame

-- Create a UIListLayout to handle scrolling and layout of the text labels
local UIListLayout = Instance.new("UIListLayout")
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Parent = Frame

-- Function to add new lines of text to the ScrollingFrame
local function AddTextLine(text)
    local TextLabel = Instance.new("TextLabel")
    TextLabel.Size = UDim2.new(1, 0, 0, 20)
    TextLabel.BackgroundTransparency = 1
    TextLabel.Text = text
    TextLabel.TextWrapped = true
    TextLabel.TextXAlignment = Enum.TextXAlignment.Left
    TextLabel.TextYAlignment = Enum.TextYAlignment.Top
    TextLabel.TextSize = 14
    TextLabel.TextColor3 = Color3.new(0, 0, 0) -- Set text color to black
    TextLabel.Parent = Frame

    -- Update the ScrollingFrame's CanvasSize
    ScrollingFrame.CanvasSize = UDim2.new(0, UIListLayout.AbsoluteContentSize.X, 0, UIListLayout.AbsoluteContentSize.Y)
end

-- Redirect console output to the ScrollingFrame
local function ConsoleOutput(message, messageType)
    if messageType == Enum.MessageType.MessageOutput then
        local time = os.date("%H:%M:%S") -- Get the current time
        AddTextLine("[" .. time .. "] " .. message) -- Add time prefix to the message
    end
end

game:GetService("LogService").MessageOut:Connect(ConsoleOutput)



title.Name = "title"
title.Parent = MainFrame
title.BackgroundColor3 = Color3.fromRGB(64, 148, 161)
title.BorderColor3 = Color3.fromRGB(64, 148, 161)
title.Position = UDim2.new(0.0145368073, 0, 0.0427631587, 0)
title.Size = UDim2.new(0.301255226, 0, 0.0756578967, 0)
title.Font = Enum.Font.SourceSans
title.Text = "Flooded V"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.TextSize = 40.000
title.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)

UICorner_6.CornerRadius = UDim.new(0, 23)
UICorner_6.Parent = title

topbar.Name = "top bar"
topbar.Parent = MainFrame
topbar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
topbar.Position = UDim2.new(0.324267775, 0, 0.032894738, 0)
topbar.Size = UDim2.new(0.64853555, 0, 0.125, 0)

UICorner_7.CornerRadius = UDim.new(0, 23)
UICorner_7.Parent = topbar

TextLabel.Parent = topbar
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BorderColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.Position = UDim2.new(0.0419354253, 0, 0.131578937, 0)
TextLabel.Size = UDim2.new(0, 94, 0, 22)
TextLabel.Font = Enum.Font.SourceSans
TextLabel.Text = "Version: BetaV2"
TextLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.TextSize = 14.000

Settings.Name = "Settings"
Settings.Parent = topbar
Settings.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Settings.Position = UDim2.new(0.699999988, 0, 0.0789473802, 0)
Settings.Size = UDim2.new(0.106451616, 0, 0.815789461, 0)
Settings.Image = "rbxassetid://7059346373"
Settings.ImageColor3 = Color3.fromRGB(0, 0, 0)

UICorner_8.CornerRadius = UDim.new(0, 100)
UICorner_8.Parent = Settings

TextButton_4.Parent = topbar
TextButton_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton_4.Position = UDim2.new(0.870967746, 0, 0.0789473653, 0)
TextButton_4.Size = UDim2.new(0.0903225839, 0, 0.736842096, 0)
TextButton_4.Font = Enum.Font.SourceSans
TextButton_4.Text = "X"
TextButton_4.TextColor3 = Color3.fromRGB(0, 0, 0)
TextButton_4.TextSize = 50.000

UICorner_9.CornerRadius = UDim.new(0, 100)
UICorner_9.Parent = TextButton_4

Seetings.Name = "Seetings"
Seetings.Parent = MainFrame
Seetings.BackgroundColor3 = Color3.fromRGB(64, 148, 161)
Seetings.BorderColor3 = Color3.fromRGB(64, 148, 161)
Seetings.Position = UDim2.new(0.191640079, 0, 0.161003232, 0)
Seetings.Visible = false
Seetings.Size = UDim2.new(0.791705072, 0, 0.809210539, 0)

Speed.Name = "Speed"
Speed.Parent = Seetings
Speed.BackgroundColor3 = Color3.fromRGB(64, 148, 161)
Speed.BorderColor3 = Color3.fromRGB(64, 148, 161)
Speed.Position = UDim2.new(0.0107135521, 0, 0, 0)
Speed.Size = UDim2.new(0, 200, 0, 50)
Speed.Font = Enum.Font.SourceSans
Speed.Text = "Speed"
Speed.TextColor3 = Color3.fromRGB(255, 255, 255)
Speed.TextSize = 50.000
Speed.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
Speed.TextXAlignment = Enum.TextXAlignment.Left

speedCon.Name = "speedCon"
speedCon.Parent = Seetings
speedCon.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
speedCon.Position = UDim2.new(0.275087982, 0, 0.0397053882, 0)
speedCon.Size = UDim2.new(0, 52, 0, 36)
speedCon.Font = Enum.Font.SourceSans
speedCon.Text = ""
speedCon.TextColor3 = Color3.fromRGB(255, 255, 255)
speedCon.TextSize = 14.000
speedCon.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)

UICorner_10.CornerRadius = UDim.new(0, 100)
UICorner_10.Parent = speedCon

speedset.Name = "speed set"
speedset.Parent = Seetings
speedset.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
speedset.Position = UDim2.new(0.415685654, 0, 0.030407235, 0)
speedset.Size = UDim2.new(0, 49, 0, 35)
speedset.Font = Enum.Font.SourceSans
speedset.Text = "Set"
speedset.TextColor3 = Color3.fromRGB(0, 0, 0)
speedset.TextSize = 14.000

UICorner_11.CornerRadius = UDim.new(0, 100)
UICorner_11.Parent = speedset

JumpCon.Name = "JumpCon"
JumpCon.Parent = Seetings
JumpCon.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
JumpCon.Position = UDim2.new(0.276182711, 0, 0.294774115, 0)
JumpCon.Size = UDim2.new(0, 52, 0, 36)
JumpCon.Font = Enum.Font.SourceSans
JumpCon.Text = ""
JumpCon.TextColor3 = Color3.fromRGB(255, 255, 255)
JumpCon.TextSize = 14.000
JumpCon.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)

UICorner_12.CornerRadius = UDim.new(0, 100)
UICorner_12.Parent = JumpCon

Jump.Name = "Jump"
Jump.Parent = Seetings
Jump.BackgroundColor3 = Color3.fromRGB(64, 148, 161)
Jump.BorderColor3 = Color3.fromRGB(64, 148, 161)
Jump.Position = UDim2.new(0.0107134581, 0, 0.25677219, 0)
Jump.Size = UDim2.new(0, 110, 0, 50)
Jump.Font = Enum.Font.SourceSans
Jump.Text = "Jump"
Jump.TextColor3 = Color3.fromRGB(255, 255, 255)
Jump.TextSize = 50.000
Jump.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
Jump.TextXAlignment = Enum.TextXAlignment.Left

JumpSet.Name = "JumpSet"
JumpSet.Parent = Seetings
JumpSet.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
JumpSet.Position = UDim2.new(0.415685654, 0, 0.30069375, 0)
JumpSet.Size = UDim2.new(0, 49, 0, 35)
JumpSet.Font = Enum.Font.SourceSans
JumpSet.Text = "Set"
JumpSet.TextColor3 = Color3.fromRGB(0, 0, 0)
JumpSet.TextSize = 14.000

UICorner_13.CornerRadius = UDim.new(0, 100)
UICorner_13.Parent = JumpSet

TextButton_5.Parent = Seetings
TextButton_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton_5.Position = UDim2.new(0.0621385984, 0, 0.493272841, 0)
TextButton_5.Size = UDim2.new(0, 377, 0, 50)
TextButton_5.Font = Enum.Font.SourceSans
TextButton_5.Text = "Credits"
TextButton_5.TextColor3 = Color3.fromRGB(0, 0, 0)
TextButton_5.TextSize = 14.000

UICorner_14.CornerRadius = UDim.new(0, 100)
UICorner_14.Parent = TextButton_5

TextButton_6.Parent = Seetings
TextButton_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton_6.Position = UDim2.new(0.0621385984, 0, 0.753894389, 0)
TextButton_6.Size = UDim2.new(0, 377, 0, 50)
TextButton_6.Font = Enum.Font.SourceSans
TextButton_6.Text = "Discord"
TextButton_6.TextColor3 = Color3.fromRGB(0, 0, 0)
TextButton_6.TextSize = 14.000

UICorner_15.CornerRadius = UDim.new(0, 100)
UICorner_15.Parent = TextButton_6

ImageButton.Parent = Flooded
ImageButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageButton.Position = UDim2.new(0.0156995207, 0, 0.186494187, 0)
ImageButton.Size = UDim2.new(0, 31, 0, 30)
ImageButton.Draggable = true
ImageButton.Visible = false
ImageButton.Image = "rbxassetid://13653511742"

UICorner_16.Parent = ImageButton

Search.Name = "Search"
Search.Parent = topbar
Search.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Search.Position = UDim2.new(0.5, 0, 0.0789473802, 0)
Search.Size = UDim2.new(0.106451616, 0, 0.815789461, 0)
Search.Image = "rbxassetid://13710126939"
Search.ImageColor3 = Color3.fromRGB(0, 0, 0)
Search.BorderSizePixel = 0

SearchFrame.Name = "SearchFrame"
SearchFrame.Parent = MainFrame
SearchFrame.BackgroundColor3 = Color3.fromRGB(64, 148, 161)
SearchFrame.BorderColor3 = Color3.fromRGB(64, 148, 161)
SearchFrame.Position = UDim2.new(0.191640079, 0, 0.161003232, 0)
SearchFrame.Visible = false
SearchFrame.Size = UDim2.new(0.791705072, 0, 0.809210539, 0)

-- Scripts:

local function MOCFHH_fake_script() -- MainFrame.LocalScript 
	local script = Instance.new('LocalScript', MainFrame)

	script.Parent.Draggable = true
	script.Parent.Active = true
end
coroutine.wrap(MOCFHH_fake_script)()
local function IXMRP_fake_script() -- ImageButton.LocalScript 
	local script = Instance.new('LocalScript', ImageButton)

	local function QOSUZQO_fake_script() -- Flooded.LocalScript 
		local script = Instance.new('LocalScript', MainFrame)
	
		script.Parent.Draggable = true
		script.Parent.Active = true
	end
	coroutine.wrap(QOSUZQO_fake_script)()
end
coroutine.wrap(IXMRP_fake_script)()

local function HomeClick()
	Console_2.Visible = false
	ScriptHubFrame.Visible = false
	Executer.Visible = true
	Seetings.Visible = false
	SearchFrame.Visible = false
end

local function ScriptHubClick()
	Console_2.Visible = false
	ScriptHubFrame.Visible = true
	Executer.Visible = false
	Seetings.Visible = false
	SearchFrame.Visible = false
end

local function ConsoleClick()
	Console_2.Visible = true
	ScriptHubFrame.Visible = false
	Executer.Visible = false
	Seetings.Visible = false
	SearchFrame.Visible = false
end

local function SettingsClick()
	Console_2.Visible = false
	ScriptHubFrame.Visible = false
	Executer.Visible = false
	Seetings.Visible = true
	SearchFrame.Visible = false
end

local function TextButton_4Click()
	ImageButton.Visible = true
	MainFrame.Visible = false
end

local function ImageButtonClick()
	ImageButton.Visible = false
	MainFrame.Visible = true
end

-- Update the speed setting
local function UpdateSpeed()
    local speed = tonumber(speedCon.Text)
    if speed then
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = speed
    end
end

speedCon.FocusLost:Connect(UpdateSpeed)
speedCon:GetPropertyChangedSignal("Text"):Connect(UpdateSpeed)

TextButton_5.MouseButton1Click:Connect(function()
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Credits:",
        Text = "Cm And SuperSonic, Powerd", -- Replace with your desired text
        Duration = 5,
    })
    
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Fixed:",
        Text = "fixed by Nath.#4468", -- Replace with your desired text
        Duration = 5,
    })
end)

TextButton_6.MouseButton1Click:Connect(function()
    setclipboard("https://discord.gg/GtbFH")
    print("Mouse button 1 clicked on TextButton_6")
end)

-- Animate the beta text with a typing animation (repeated)
local function AnimateBetaText()
    local text = "Version: Beta V2" -- The text to type
    local delayBetweenChars = 0.1 -- Adjust the delay between typing each character (in seconds)
    local delayBetweenRepeats = 1 -- Adjust the delay between each repeat (in seconds)

    while true do
        -- Hide the text initially
        TextLabel.TextTransparency = 1

        -- Type the characters one by one
        for i = 1, #text do
            TextLabel.Text = string.sub(text, 1, i) -- Set the text up to the current character
            TextLabel.TextTransparency = 0 -- Show the character
            wait(delayBetweenChars) -- Pause between typing each character
        end

        -- Pause before the next repeat
        wait(delayBetweenRepeats)

        -- Clear the text
        TextLabel.Text = ""
    end
end

spawn(AnimateBetaText)

JumpSet.MouseButton1Click:Connect(function()
    local jumpHeight = tonumber(JumpCon.Text)
    if jumpHeight then
        local character = game.Players.LocalPlayer.Character
        if character and character:FindFirstChild("Humanoid") then
            character.Humanoid.JumpPower = jumpHeight
        end
    else
        -- Handle invalid input here if desired
    end
end)

TextButton_3.MouseButton1Click:Connect(function()
    local script = ScriptInput.Text
   
    if script == "" then
        script = game:GetService("ClipboardService"):GetContents()
    end
    

    if script ~= "" then
        ExecuteScript(script)
        game.StarterGui:SetCore("SendNotification", {
            Title = "Script";
            Text = "Script Executed";
            Duration = 3;
        })
    else
        print("No script to execute.")
    end
end)

Search.MouseButton1Click:Connect(function()
    Console_2.Visible = false
	ScriptHubFrame.Visible = false
	Executer.Visible = false
	Seetings.Visible = false
	SearchFrame.Visible = true
end)
    
Home.MouseButton1Click:Connect(HomeClick)
ScriptHub.MouseButton1Click:Connect(ScriptHubClick)
Console.MouseButton1Click:Connect(ConsoleClick)
Settings.MouseButton1Click:Connect(SettingsClick)
TextButton_4.MouseButton1Click:Connect(TextButton_4Click)
ImageButton.MouseButton1Click:Connect(ImageButtonClick)
TextButton_2Button.MouseButton1Click:Connect(TextButton_2Click)
speedset.MouseButton1Click:Connect(setSpeed)
end)
tab3.newButton("Delta 1.0", "Executor script", function()
    

--[=[
 d888b  db    db d888888b      .d888b.      db      db    db  .d8b.  
88' Y8b 88    88   `88'        VP  `8D      88      88    88 d8' `8b 
88      88    88    88            odD'      88      88    88 88ooo88 
88  ooo 88    88    88          .88'        88      88    88 88~~~88 
88. ~8~ 88b  d88   .88.        j88.         88booo. 88b  d88 88   88 
 Y888P  ~Y8888P' Y888888P      888888D      Y88888P ~Y8888P' YP   YP  CONVERTER
]=]
makefolder("d_android_script_dir")

if _G.is_deltaandroid_loaded then
    print("already running")
    return
end

_G.is_deltaandroid_loaded = true

-- Instances: 310 | Scripts: 28 | Modules: 24
local G2L = {};

-- StarterGui.DeltaGui
G2L["1"] = Instance.new("ScreenGui", gethui());
G2L["1"]["Name"] = [[DeltaGui]];
G2L["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;

-- StarterGui.DeltaGui.KeySystem
G2L["2"] = Instance.new("Folder", G2L["1"]);
G2L["2"]["Name"] = [[KeySystem]];

-- StarterGui.DeltaGui.KeySystem.MainKeyFrame
G2L["3"] = Instance.new("Frame", G2L["2"]);
G2L["3"]["BackgroundColor3"] = Color3.fromRGB(20, 20, 23);
G2L["3"]["Size"] = UDim2.new(0.76389479637146, 0, 0.4519544541835785, 0);
G2L["3"]["Position"] = UDim2.new(0.11660274863243103, 0, 0.275360107421875, 0);
G2L["3"]["Visible"] = false;
G2L["3"]["Name"] = [[MainKeyFrame]];

-- StarterGui.DeltaGui.KeySystem.MainKeyFrame.SideFrame
G2L["4"] = Instance.new("Frame", G2L["3"]);
G2L["4"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4"]["BackgroundTransparency"] = 1;
G2L["4"]["Size"] = UDim2.new(0.11645293235778809, 0, 1.0000001192092896, 0);
G2L["4"]["Name"] = [[SideFrame]];

-- StarterGui.DeltaGui.KeySystem.MainKeyFrame.SideFrame.Logo
G2L["5"] = Instance.new("ImageLabel", G2L["4"]);
G2L["5"]["BackgroundColor3"] = Color3.fromRGB(143, 130, 255);
G2L["5"]["Image"] = [[rbxassetid://12730597972]];
G2L["5"]["Size"] = UDim2.new(1.0185703039169312, 0, 0.3629874587059021, 0);
G2L["5"]["Name"] = [[Logo]];
G2L["5"]["BackgroundTransparency"] = 1;
G2L["5"]["Position"] = UDim2.new(-0.018570121377706528, 0, 0.06093369424343109, 0);

-- StarterGui.DeltaGui.KeySystem.MainKeyFrame.SideFrame.Logo.UIAspectRatioConstraint
G2L["6"] = Instance.new("UIAspectRatioConstraint", G2L["5"]);
G2L["6"]["AspectRatio"] = 0.9946909546852112;

-- StarterGui.DeltaGui.KeySystem.MainKeyFrame.SideFrame.Frame
G2L["7"] = Instance.new("Frame", G2L["4"]);
G2L["7"]["BackgroundColor3"] = Color3.fromRGB(72, 72, 72);
G2L["7"]["Size"] = UDim2.new(0, 0, 0.9890000224113464, 0);
G2L["7"]["BorderColor3"] = Color3.fromRGB(72, 72, 72);
G2L["7"]["Position"] = UDim2.new(1, 0, 0.004999999888241291, 0);

-- StarterGui.DeltaGui.KeySystem.MainKeyFrame.SideFrame.Frame.UICorner
G2L["8"] = Instance.new("UICorner", G2L["7"]);
G2L["8"]["CornerRadius"] = UDim.new(0.09000000357627869, 0);

-- StarterGui.DeltaGui.KeySystem.MainKeyFrame.SideTextbox
G2L["9"] = Instance.new("Frame", G2L["3"]);
G2L["9"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["9"]["BackgroundTransparency"] = 0.33329999446868896;
G2L["9"]["Size"] = UDim2.new(0.8421385884284973, 0, 0.5559701919555664, 0);
G2L["9"]["BorderColor3"] = Color3.fromRGB(16, 16, 16);
G2L["9"]["Position"] = UDim2.new(0.13729187846183777, 0, 0.11194030940532684, 0);
G2L["9"]["Name"] = [[SideTextbox]];

-- StarterGui.DeltaGui.KeySystem.MainKeyFrame.SideTextbox.MainTextBox
G2L["a"] = Instance.new("TextBox", G2L["9"]);
G2L["a"]["TextSize"] = 13;
G2L["a"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["a"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["a"]["BackgroundColor3"] = Color3.fromRGB(16, 16, 16);
G2L["a"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["a"]["BackgroundTransparency"] = 1;
G2L["a"]["PlaceholderText"] = [[Enter Your Key Here]];
G2L["a"]["Size"] = UDim2.new(0.9665210843086243, 0, 0.8322147727012634, 0);
G2L["a"]["BorderColor3"] = Color3.fromRGB(16, 16, 16);
G2L["a"]["Text"] = [[]];
G2L["a"]["Position"] = UDim2.new(0.020378457382321358, 0, 0.08053690940141678, 0);
G2L["a"]["Name"] = [[MainTextBox]];
G2L["a"]["ClearTextOnFocus"] = false;

-- StarterGui.DeltaGui.KeySystem.MainKeyFrame.SideTextbox.MainTextBox.UICorner
G2L["b"] = Instance.new("UICorner", G2L["a"]);
G2L["b"]["CornerRadius"] = UDim.new(0.09000000357627869, 0);

-- StarterGui.DeltaGui.KeySystem.MainKeyFrame.SideTextbox.UICorner
G2L["c"] = Instance.new("UICorner", G2L["9"]);
G2L["c"]["CornerRadius"] = UDim.new(0.09000000357627869, 0);

-- StarterGui.DeltaGui.KeySystem.MainKeyFrame.UICorner
G2L["d"] = Instance.new("UICorner", G2L["3"]);
G2L["d"]["CornerRadius"] = UDim.new(0.09000000357627869, 0);

-- StarterGui.DeltaGui.KeySystem.MainKeyFrame.UIAspectRatioConstraint
G2L["e"] = Instance.new("UIAspectRatioConstraint", G2L["3"]);
G2L["e"]["AspectRatio"] = 3.0439562797546387;

-- StarterGui.DeltaGui.KeySystem.MainKeyFrame.Continue
G2L["f"] = Instance.new("Frame", G2L["3"]);
G2L["f"]["BackgroundColor3"] = Color3.fromRGB(137, 126, 251);
G2L["f"]["Size"] = UDim2.new(0.19932664930820465, 0, 0.1760299652814865, 0);
G2L["f"]["Position"] = UDim2.new(0.13534526526927948, 0, 0.7490636706352234, 0);
G2L["f"]["Name"] = [[Continue]];

-- StarterGui.DeltaGui.KeySystem.MainKeyFrame.Continue.TextButton
G2L["10"] = Instance.new("TextButton", G2L["f"]);
G2L["10"]["TextWrapped"] = true;
G2L["10"]["TextScaled"] = true;
G2L["10"]["BackgroundColor3"] = Color3.fromRGB(137, 126, 251);
G2L["10"]["TextSize"] = 14;
G2L["10"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["10"]["TextColor3"] = Color3.fromRGB(252, 252, 252);
G2L["10"]["Size"] = UDim2.new(0.8136826753616333, 0, 1, 0);
G2L["10"]["Text"] = [[Continue]];
G2L["10"]["Position"] = UDim2.new(-0.004637444857507944, 0, 0, 0);

-- StarterGui.DeltaGui.KeySystem.MainKeyFrame.Continue.TextButton.UICorner
G2L["11"] = Instance.new("UICorner", G2L["10"]);
G2L["11"]["CornerRadius"] = UDim.new(0.4300000071525574, 0);

-- StarterGui.DeltaGui.KeySystem.MainKeyFrame.Continue.TextButton.LocalScript
G2L["12"] = Instance.new("LocalScript", G2L["10"]);


-- StarterGui.DeltaGui.KeySystem.MainKeyFrame.Continue.TextButton.UITextSizeConstraint
G2L["13"] = Instance.new("UITextSizeConstraint", G2L["10"]);
G2L["13"]["MaxTextSize"] = 14;

-- StarterGui.DeltaGui.KeySystem.MainKeyFrame.Continue.UICorner
G2L["14"] = Instance.new("UICorner", G2L["f"]);
G2L["14"]["CornerRadius"] = UDim.new(0.4300000071525574, 0);

-- StarterGui.DeltaGui.KeySystem.MainKeyFrame.Continue.ImageLabel
G2L["15"] = Instance.new("ImageLabel", G2L["f"]);
G2L["15"]["BackgroundColor3"] = Color3.fromRGB(143, 130, 255);
G2L["15"]["Image"] = [[rbxassetid://12730588268]];
G2L["15"]["Size"] = UDim2.new(0.1541670262813568, 0, 0.5313842296600342, 0);
G2L["15"]["BackgroundTransparency"] = 1;
G2L["15"]["Position"] = UDim2.new(0.6577792763710022, 0, 0.2479792982339859, 0);

-- StarterGui.DeltaGui.KeySystem.MainKeyFrame.GetKey
G2L["16"] = Instance.new("Frame", G2L["3"]);
G2L["16"]["BackgroundColor3"] = Color3.fromRGB(137, 126, 251);
G2L["16"]["Size"] = UDim2.new(0.19932664930820465, 0, 0.1760299652814865, 0);
G2L["16"]["Position"] = UDim2.new(0.34697607159614563, 0, 0.7490636706352234, 0);
G2L["16"]["Name"] = [[GetKey]];

-- StarterGui.DeltaGui.KeySystem.MainKeyFrame.GetKey.TextButton
G2L["17"] = Instance.new("TextButton", G2L["16"]);
G2L["17"]["TextWrapped"] = true;
G2L["17"]["TextScaled"] = true;
G2L["17"]["BackgroundColor3"] = Color3.fromRGB(143, 130, 255);
G2L["17"]["TextSize"] = 14;
G2L["17"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["17"]["TextColor3"] = Color3.fromRGB(252, 252, 252);
G2L["17"]["Size"] = UDim2.new(0.8136826753616333, 0, 1, 0);
G2L["17"]["Text"] = [[Get Key]];
G2L["17"]["Position"] = UDim2.new(-0.004637444857507944, 0, 0, 0);

-- StarterGui.DeltaGui.KeySystem.MainKeyFrame.GetKey.TextButton.UICorner
G2L["18"] = Instance.new("UICorner", G2L["17"]);
G2L["18"]["CornerRadius"] = UDim.new(0.4300000071525574, 0);

-- StarterGui.DeltaGui.KeySystem.MainKeyFrame.GetKey.TextButton.LocalScript
G2L["19"] = Instance.new("LocalScript", G2L["17"]);


-- StarterGui.DeltaGui.KeySystem.MainKeyFrame.GetKey.TextButton.UITextSizeConstraint
G2L["1a"] = Instance.new("UITextSizeConstraint", G2L["17"]);
G2L["1a"]["MaxTextSize"] = 14;

-- StarterGui.DeltaGui.KeySystem.MainKeyFrame.GetKey.UICorner
G2L["1b"] = Instance.new("UICorner", G2L["16"]);
G2L["1b"]["CornerRadius"] = UDim.new(0.4300000071525574, 0);

-- StarterGui.DeltaGui.KeySystem.MainKeyFrame.GetKey.ImageLabel
G2L["1c"] = Instance.new("ImageLabel", G2L["16"]);
G2L["1c"]["BackgroundColor3"] = Color3.fromRGB(137, 126, 251);
G2L["1c"]["Image"] = [[rbxassetid://12730592157]];
G2L["1c"]["Size"] = UDim2.new(0.14388921856880188, 0, 0.4959585964679718, 0);
G2L["1c"]["BackgroundTransparency"] = 1;
G2L["1c"]["Position"] = UDim2.new(0.6577792763710022, 0, 0.2479792982339859, 0);

-- StarterGui.DeltaGui.KeySystem.MainKeyFrame.JoinServer
G2L["1d"] = Instance.new("Frame", G2L["3"]);
G2L["1d"]["BackgroundColor3"] = Color3.fromRGB(137, 126, 251);
G2L["1d"]["Size"] = UDim2.new(0.23844483494758606, 0, 0.1760299652814865, 0);
G2L["1d"]["Position"] = UDim2.new(0.5598372220993042, 0, 0.7490636706352234, 0);
G2L["1d"]["Name"] = [[JoinServer]];

-- StarterGui.DeltaGui.KeySystem.MainKeyFrame.JoinServer.TextButton
G2L["1e"] = Instance.new("TextButton", G2L["1d"]);
G2L["1e"]["TextWrapped"] = true;
G2L["1e"]["TextScaled"] = true;
G2L["1e"]["BackgroundColor3"] = Color3.fromRGB(137, 126, 251);
G2L["1e"]["TextSize"] = 14;
G2L["1e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1e"]["TextColor3"] = Color3.fromRGB(252, 252, 252);
G2L["1e"]["Size"] = UDim2.new(0.8136826753616333, 0, 1, 0);
G2L["1e"]["Text"] = [[Join Discord]];
G2L["1e"]["Position"] = UDim2.new(-0.004637444857507944, 0, 0, 0);

-- StarterGui.DeltaGui.KeySystem.MainKeyFrame.JoinServer.TextButton.UICorner
G2L["1f"] = Instance.new("UICorner", G2L["1e"]);
G2L["1f"]["CornerRadius"] = UDim.new(0.4300000071525574, 0);

-- StarterGui.DeltaGui.KeySystem.MainKeyFrame.JoinServer.TextButton.LocalScript
G2L["20"] = Instance.new("LocalScript", G2L["1e"]);


-- StarterGui.DeltaGui.KeySystem.MainKeyFrame.JoinServer.TextButton.UITextSizeConstraint
G2L["21"] = Instance.new("UITextSizeConstraint", G2L["1e"]);
G2L["21"]["MaxTextSize"] = 14;

-- StarterGui.DeltaGui.KeySystem.MainKeyFrame.JoinServer.UICorner
G2L["22"] = Instance.new("UICorner", G2L["1d"]);
G2L["22"]["CornerRadius"] = UDim.new(0.4300000071525574, 0);

-- StarterGui.DeltaGui.KeySystem.MainKeyFrame.JoinServer.ImageLabel
G2L["23"] = Instance.new("ImageLabel", G2L["1d"]);
G2L["23"]["BackgroundColor3"] = Color3.fromRGB(143, 130, 255);
G2L["23"]["Image"] = [[rbxassetid://12730595164]];
G2L["23"]["Size"] = UDim2.new(0.11047418415546417, 0, 0.4959585964679718, 0);
G2L["23"]["BackgroundTransparency"] = 1;
G2L["23"]["Position"] = UDim2.new(0.6944091320037842, 0, 0.2479792982339859, 0);

-- StarterGui.DeltaGui.MainUi
G2L["24"] = Instance.new("Folder", G2L["1"]);
G2L["24"]["Name"] = [[MainUi]];

-- StarterGui.DeltaGui.MainUi.MainFrame
G2L["25"] = Instance.new("Frame", G2L["24"]);
G2L["25"]["Active"] = true;
G2L["25"]["BackgroundColor3"] = Color3.fromRGB(20, 20, 23);
G2L["25"]["Size"] = UDim2.new(0.6537454724311829, 0, 0.9718542695045471, 0);
G2L["25"]["Position"] = UDim2.new(0.17294080555438995, 0, 0.013245033100247383, 0);
G2L["25"]["Visible"] = true;
G2L["25"]["Name"] = [[MainFrame]];

-- StarterGui.DeltaGui.MainUi.MainFrame.SideFrame
G2L["26"] = Instance.new("Frame", G2L["25"]);
G2L["26"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["26"]["BackgroundTransparency"] = 1;
G2L["26"]["Size"] = UDim2.new(0.11645293235778809, 0, 1.0000001192092896, 0);
G2L["26"]["Name"] = [[SideFrame]];

-- StarterGui.DeltaGui.MainUi.MainFrame.SideFrame.Logo
G2L["27"] = Instance.new("ImageLabel", G2L["26"]);
G2L["27"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["27"]["Image"] = [[rbxassetid://12730597972]];
G2L["27"]["Size"] = UDim2.new(1.0080041885375977, 0, 0.1372550129890442, 0);
G2L["27"]["Name"] = [[Logo]];
G2L["27"]["BackgroundTransparency"] = 1;
G2L["27"]["Position"] = UDim2.new(0.013000000268220901, 0, 0.022535257041454315, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.SideFrame.Logo.UIAspectRatioConstraint
G2L["28"] = Instance.new("UIAspectRatioConstraint", G2L["27"]);


-- StarterGui.DeltaGui.MainUi.MainFrame.SideFrame.Frame
G2L["29"] = Instance.new("Frame", G2L["26"]);
G2L["29"]["BackgroundColor3"] = Color3.fromRGB(72, 72, 72);
G2L["29"]["Size"] = UDim2.new(0, 0, 0.9890000224113464, 0);
G2L["29"]["BorderColor3"] = Color3.fromRGB(72, 72, 72);
G2L["29"]["Position"] = UDim2.new(1, 0, 0.004999999888241291, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.SideFrame.Frame.UICorner
G2L["2a"] = Instance.new("UICorner", G2L["29"]);
G2L["2a"]["CornerRadius"] = UDim.new(0.09000000357627869, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.SideFrame.Buttons
G2L["2b"] = Instance.new("Folder", G2L["26"]);
G2L["2b"]["Name"] = [[Buttons]];

-- StarterGui.DeltaGui.MainUi.MainFrame.SideFrame.Buttons.Home
G2L["2c"] = Instance.new("ImageButton", G2L["2b"]);
G2L["2c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2c"]["Image"] = [[rbxassetid://12731028861]];
G2L["2c"]["Size"] = UDim2.new(0.5177212357521057, 0, 0.08347529172897339, 0);
G2L["2c"]["Name"] = [[Home]];
G2L["2c"]["Position"] = UDim2.new(0.2218806892633438, 0, 0.29020607471466064, 0);
G2L["2c"]["BackgroundTransparency"] = 1;

-- StarterGui.DeltaGui.MainUi.MainFrame.SideFrame.Buttons.Home.UIAspectRatioConstraint
G2L["2d"] = Instance.new("UIAspectRatioConstraint", G2L["2c"]);


-- StarterGui.DeltaGui.MainUi.MainFrame.SideFrame.Buttons.Home.OffImage
G2L["2e"] = Instance.new("StringValue", G2L["2c"]);
G2L["2e"]["Value"] = [[rbxassetid://12731028861]];
G2L["2e"]["Name"] = [[OffImage]];

-- StarterGui.DeltaGui.MainUi.MainFrame.SideFrame.Buttons.Home.OnImage
G2L["2f"] = Instance.new("StringValue", G2L["2c"]);
G2L["2f"]["Value"] = [[rbxassetid://12731052548]];
G2L["2f"]["Name"] = [[OnImage]];

-- StarterGui.DeltaGui.MainUi.MainFrame.SideFrame.Buttons.Home.LocalScript
G2L["30"] = Instance.new("LocalScript", G2L["2c"]);


-- StarterGui.DeltaGui.MainUi.MainFrame.SideFrame.Buttons.MakeScript
G2L["31"] = Instance.new("ImageButton", G2L["2b"]);
G2L["31"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["31"]["Image"] = [[rbxassetid://12730930487]];
G2L["31"]["Size"] = UDim2.new(0.5177212357521057, 0, 0.08347529172897339, 0);
G2L["31"]["Name"] = [[MakeScript]];
G2L["31"]["Position"] = UDim2.new(0.2424367517232895, 0, 0.186909481883049, 0);
G2L["31"]["BackgroundTransparency"] = 1;

-- StarterGui.DeltaGui.MainUi.MainFrame.SideFrame.Buttons.MakeScript.UIAspectRatioConstraint
G2L["32"] = Instance.new("UIAspectRatioConstraint", G2L["31"]);


-- StarterGui.DeltaGui.MainUi.MainFrame.SideFrame.Buttons.MakeScript.OffImage
G2L["33"] = Instance.new("StringValue", G2L["31"]);
G2L["33"]["Value"] = [[rbxassetid://12730888709]];
G2L["33"]["Name"] = [[OffImage]];

-- StarterGui.DeltaGui.MainUi.MainFrame.SideFrame.Buttons.MakeScript.OnImage
G2L["34"] = Instance.new("StringValue", G2L["31"]);
G2L["34"]["Value"] = [[rbxassetid://12730930487]];
G2L["34"]["Name"] = [[OnImage]];

-- StarterGui.DeltaGui.MainUi.MainFrame.SideFrame.Buttons.MakeScript.LocalScript
G2L["35"] = Instance.new("LocalScript", G2L["31"]);


-- StarterGui.DeltaGui.MainUi.MainFrame.SideFrame.Buttons.Minimize
G2L["36"] = Instance.new("ImageButton", G2L["2b"]);
G2L["36"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["36"]["Image"] = [[rbxassetid://12731990314]];
G2L["36"]["Size"] = UDim2.new(0.5177212357521057, 0, 0.08347529172897339, 0);
G2L["36"]["Name"] = [[Minimize]];
G2L["36"]["Position"] = UDim2.new(0.2218806892633438, 0, 0.8980652093887329, 0);
G2L["36"]["BackgroundTransparency"] = 1;

-- StarterGui.DeltaGui.MainUi.MainFrame.SideFrame.Buttons.Minimize.UIAspectRatioConstraint
G2L["37"] = Instance.new("UIAspectRatioConstraint", G2L["36"]);


-- StarterGui.DeltaGui.MainUi.MainFrame.SideFrame.Buttons.Minimize.OffImage
G2L["38"] = Instance.new("StringValue", G2L["36"]);
G2L["38"]["Value"] = [[rbxassetid://12731990314]];
G2L["38"]["Name"] = [[OffImage]];

-- StarterGui.DeltaGui.MainUi.MainFrame.SideFrame.Buttons.Minimize.OnImage
G2L["39"] = Instance.new("StringValue", G2L["36"]);
G2L["39"]["Value"] = [[rbxassetid://12731990314]];
G2L["39"]["Name"] = [[OnImage]];

-- StarterGui.DeltaGui.MainUi.MainFrame.SideFrame.Buttons.Minimize.LocalScript
G2L["3a"] = Instance.new("LocalScript", G2L["36"]);


-- StarterGui.DeltaGui.MainUi.MainFrame.SideFrame.Buttons.Settings
G2L["3b"] = Instance.new("ImageButton", G2L["2b"]);
G2L["3b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3b"]["Image"] = [[rbxassetid://12731105925]];
G2L["3b"]["Size"] = UDim2.new(0.5177212357521057, 0, 0.08347529172897339, 0);
G2L["3b"]["Name"] = [[Settings]];
G2L["3b"]["Position"] = UDim2.new(0.2424367517232895, 0, 0.5168625116348267, 0);
G2L["3b"]["BackgroundTransparency"] = 1;

-- StarterGui.DeltaGui.MainUi.MainFrame.SideFrame.Buttons.Settings.UIAspectRatioConstraint
G2L["3c"] = Instance.new("UIAspectRatioConstraint", G2L["3b"]);


-- StarterGui.DeltaGui.MainUi.MainFrame.SideFrame.Buttons.Settings.OffImage
G2L["3d"] = Instance.new("StringValue", G2L["3b"]);
G2L["3d"]["Value"] = [[rbxassetid://12731105925]];
G2L["3d"]["Name"] = [[OffImage]];

-- StarterGui.DeltaGui.MainUi.MainFrame.SideFrame.Buttons.Settings.OnImage
G2L["3e"] = Instance.new("StringValue", G2L["3b"]);
G2L["3e"]["Value"] = [[rbxassetid://12731109653]];
G2L["3e"]["Name"] = [[OnImage]];

-- StarterGui.DeltaGui.MainUi.MainFrame.SideFrame.Buttons.Settings.LocalScript
G2L["3f"] = Instance.new("LocalScript", G2L["3b"]);


-- StarterGui.DeltaGui.MainUi.MainFrame.SideFrame.Buttons.Scripts
G2L["40"] = Instance.new("ImageButton", G2L["2b"]);
G2L["40"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["40"]["Image"] = [[rbxassetid://12731084214]];
G2L["40"]["Size"] = UDim2.new(0.5177212357521057, 0, 0.08347529172897339, 0);
G2L["40"]["Name"] = [[Scripts]];
G2L["40"]["Position"] = UDim2.new(0.2218806892633438, 0, 0.40612998604774475, 0);
G2L["40"]["BackgroundTransparency"] = 1;

-- StarterGui.DeltaGui.MainUi.MainFrame.SideFrame.Buttons.Scripts.UIAspectRatioConstraint
G2L["41"] = Instance.new("UIAspectRatioConstraint", G2L["40"]);


-- StarterGui.DeltaGui.MainUi.MainFrame.SideFrame.Buttons.Scripts.OffImage
G2L["42"] = Instance.new("StringValue", G2L["40"]);
G2L["42"]["Value"] = [[rbxassetid://12731084214]];
G2L["42"]["Name"] = [[OffImage]];

-- StarterGui.DeltaGui.MainUi.MainFrame.SideFrame.Buttons.Scripts.OnImage
G2L["43"] = Instance.new("StringValue", G2L["40"]);
G2L["43"]["Value"] = [[rbxassetid://12731089712]];
G2L["43"]["Name"] = [[OnImage]];

-- StarterGui.DeltaGui.MainUi.MainFrame.SideFrame.Buttons.Scripts.LocalScript
G2L["44"] = Instance.new("LocalScript", G2L["40"]);


-- StarterGui.DeltaGui.MainUi.MainFrame.UICorner
G2L["45"] = Instance.new("UICorner", G2L["25"]);
G2L["45"]["CornerRadius"] = UDim.new(0.03999999910593033, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs
G2L["46"] = Instance.new("Folder", G2L["25"]);
G2L["46"]["Name"] = [[Tabs]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript
G2L["47"] = Instance.new("Frame", G2L["46"]);
G2L["47"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["47"]["BackgroundTransparency"] = 1;
G2L["47"]["Size"] = UDim2.new(0.8833174705505371, 0, 0.9945666193962097, 0);
G2L["47"]["Position"] = UDim2.new(0.11490308493375778, 0, 0.002866186201572418, 0);
G2L["47"]["Name"] = [[MakeScript]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.TitleScript
G2L["48"] = Instance.new("Frame", G2L["47"]);
G2L["48"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["48"]["BackgroundTransparency"] = 0.33329999446868896;
G2L["48"]["Size"] = UDim2.new(0.9585282802581787, 0, 0.0768190324306488, 0);
G2L["48"]["BorderColor3"] = Color3.fromRGB(15, 15, 17);
G2L["48"]["Position"] = UDim2.new(0.0236122515052557, 0, 0.019721297547221184, 0);
G2L["48"]["Visible"] = false;
G2L["48"]["Name"] = [[TitleScript]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.TitleScript.MainTextBox
G2L["49"] = Instance.new("TextBox", G2L["48"]);
G2L["49"]["PlaceholderColor3"] = Color3.fromRGB(240, 240, 240);
G2L["49"]["TextSize"] = 13;
G2L["49"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["49"]["BackgroundColor3"] = Color3.fromRGB(16, 16, 16);
G2L["49"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["49"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["49"]["BackgroundTransparency"] = 0.800000011920929;
G2L["49"]["PlaceholderText"] = [[Enter Your Title...]];
G2L["49"]["Size"] = UDim2.new(0.9665210843086243, 0, 0.8322147727012634, 0);
G2L["49"]["BorderColor3"] = Color3.fromRGB(15, 15, 17);
G2L["49"]["Text"] = [[]];
G2L["49"]["Position"] = UDim2.new(0.016102850437164307, 0, 0.05467604845762253, 0);
G2L["49"]["Name"] = [[MainTextBox]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.TitleScript.MainTextBox.UICorner
G2L["4a"] = Instance.new("UICorner", G2L["49"]);
G2L["4a"]["CornerRadius"] = UDim.new(0.38999998569488525, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.TitleScript.UICorner
G2L["4b"] = Instance.new("UICorner", G2L["48"]);
G2L["4b"]["CornerRadius"] = UDim.new(0.38999998569488525, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox
G2L["4c"] = Instance.new("Frame", G2L["47"]);
G2L["4c"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4c"]["BackgroundTransparency"] = 0.33329999446868896;
G2L["4c"]["Size"] = UDim2.new(0.9585282802581787, 0, 0.8543484807014465, 0);
G2L["4c"]["BorderColor3"] = Color3.fromRGB(15, 15, 17);
G2L["4c"]["Position"] = UDim2.new(0.023612210527062416, 0, 0.1205858588218689, 0);
G2L["4c"]["Visible"] = false;
G2L["4c"]["Name"] = [[ScriptTextbox]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.UICorner
G2L["4d"] = Instance.new("UICorner", G2L["4c"]);
G2L["4d"]["CornerRadius"] = UDim.new(0.03999999910593033, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.GoBack
G2L["4e"] = Instance.new("Frame", G2L["4c"]);
G2L["4e"]["BackgroundColor3"] = Color3.fromRGB(137, 126, 251);
G2L["4e"]["Size"] = UDim2.new(0.19932666420936584, 0, 0.0753278136253357, 0);
G2L["4e"]["Position"] = UDim2.new(0.7811665534973145, 0, 0.8959466814994812, 0);
G2L["4e"]["Name"] = [[GoBack]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.GoBack.TextButton
G2L["4f"] = Instance.new("TextButton", G2L["4e"]);
G2L["4f"]["TextWrapped"] = true;
G2L["4f"]["BackgroundColor3"] = Color3.fromRGB(143, 130, 255);
G2L["4f"]["TextSize"] = 12;
G2L["4f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["4f"]["TextColor3"] = Color3.fromRGB(252, 252, 252);
G2L["4f"]["Size"] = UDim2.new(0.8136826753616333, 0, 1, 0);
G2L["4f"]["Text"] = [[Go Back]];
G2L["4f"]["Position"] = UDim2.new(-0.004637444857507944, 0, 0, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.GoBack.TextButton.UICorner
G2L["50"] = Instance.new("UICorner", G2L["4f"]);
G2L["50"]["CornerRadius"] = UDim.new(0.4300000071525574, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.GoBack.TextButton.LocalScript
G2L["51"] = Instance.new("LocalScript", G2L["4f"]);


-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.GoBack.UICorner
G2L["52"] = Instance.new("UICorner", G2L["4e"]);
G2L["52"]["CornerRadius"] = UDim.new(0.4300000071525574, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.GoBack.ImageLabel
G2L["53"] = Instance.new("ImageLabel", G2L["4e"]);
G2L["53"]["BackgroundColor3"] = Color3.fromRGB(137, 126, 251);
G2L["53"]["Image"] = [[rbxassetid://12731271008]];
G2L["53"]["Size"] = UDim2.new(0.1843939572572708, 0, 0.5821346640586853, 0);
G2L["53"]["BackgroundTransparency"] = 1;
G2L["53"]["Position"] = UDim2.new(0.6950233578681946, 0, 0.17911836504936218, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.GoBack.ImageLabel.UIAspectRatioConstraint
G2L["54"] = Instance.new("UIAspectRatioConstraint", G2L["53"]);
G2L["54"]["AspectRatio"] = 1.0000001192092896;

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.AddScript
G2L["55"] = Instance.new("Frame", G2L["4c"]);
G2L["55"]["BackgroundColor3"] = Color3.fromRGB(137, 126, 251);
G2L["55"]["Size"] = UDim2.new(0.25788477063179016, 0, 0.0753278136253357, 0);
G2L["55"]["Position"] = UDim2.new(0.48794427514076233, 0, 0.8959466814994812, 0);
G2L["55"]["Name"] = [[AddScript]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.AddScript.TextButton
G2L["56"] = Instance.new("TextButton", G2L["55"]);
G2L["56"]["TextWrapped"] = true;
G2L["56"]["BackgroundColor3"] = Color3.fromRGB(143, 130, 255);
G2L["56"]["TextSize"] = 12;
G2L["56"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["56"]["TextColor3"] = Color3.fromRGB(252, 252, 252);
G2L["56"]["Size"] = UDim2.new(0.8136826753616333, 0, 1, 0);
G2L["56"]["Text"] = [[Add Script]];
G2L["56"]["Position"] = UDim2.new(-0.004637444857507944, 0, 0, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.AddScript.TextButton.UICorner
G2L["57"] = Instance.new("UICorner", G2L["56"]);
G2L["57"]["CornerRadius"] = UDim.new(0.4300000071525574, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.AddScript.TextButton.LocalScript
G2L["58"] = Instance.new("LocalScript", G2L["56"]);


-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.AddScript.UICorner
G2L["59"] = Instance.new("UICorner", G2L["55"]);
G2L["59"]["CornerRadius"] = UDim.new(0.4300000071525574, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.AddScript.ImageLabel
G2L["5a"] = Instance.new("ImageLabel", G2L["55"]);
G2L["5a"]["BackgroundColor3"] = Color3.fromRGB(137, 126, 251);
G2L["5a"]["Image"] = [[rbxassetid://12731182145]];
G2L["5a"]["Size"] = UDim2.new(0.16445015370845795, 0, 0.6716938018798828, 0);
G2L["5a"]["BackgroundTransparency"] = 1;
G2L["5a"]["Position"] = UDim2.new(0.7126173377037048, 0, 0.17911836504936218, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.AddScript.ImageLabel.UIAspectRatioConstraint
G2L["5b"] = Instance.new("UIAspectRatioConstraint", G2L["5a"]);
G2L["5b"]["AspectRatio"] = 1.0000001192092896;

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.MainTextBox
G2L["5c"] = Instance.new("TextBox", G2L["4c"]);
G2L["5c"]["PlaceholderColor3"] = Color3.fromRGB(236, 236, 236);
G2L["5c"]["TextSize"] = 13;
G2L["5c"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["5c"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["5c"]["BackgroundColor3"] = Color3.fromRGB(16, 16, 16);
G2L["5c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["5c"]["MultiLine"] = true;
G2L["5c"]["BackgroundTransparency"] = 0.800000011920929;
G2L["5c"]["PlaceholderText"] = [[Enter Your Script...]];
G2L["5c"]["Size"] = UDim2.new(0.9474265575408936, 0, 0.834107518196106, 0);
G2L["5c"]["BorderColor3"] = Color3.fromRGB(15, 15, 17);
G2L["5c"]["Text"] = [[]];
G2L["5c"]["Position"] = UDim2.new(0.03306656330823898, 0, 0.031063992530107498, 0);
G2L["5c"]["Visible"] = false;
G2L["5c"]["Name"] = [[MainTextBox]];
G2L["5c"]["ClearTextOnFocus"] = false;

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.MainTextBox.UICorner
G2L["5d"] = Instance.new("UICorner", G2L["5c"]);
G2L["5d"]["CornerRadius"] = UDim.new(0.38999998569488525, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.TextboxBar
G2L["5e"] = Instance.new("Frame", G2L["4c"]);
G2L["5e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5e"]["BackgroundTransparency"] = 1;
G2L["5e"]["Size"] = UDim2.new(0.953382134437561, 0, 0.8380939960479736, 0);
G2L["5e"]["Position"] = UDim2.new(0.025999952107667923, 0, 0.02475839853286743, 0);
G2L["5e"]["Name"] = [[TextboxBar]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.TextboxBar.LocalScript
G2L["5f"] = Instance.new("LocalScript", G2L["5e"]);


-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor
G2L["60"] = Instance.new("ModuleScript", G2L["5f"]);
G2L["60"]["Name"] = [[ScriptEditor]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.Syntax
G2L["61"] = Instance.new("ModuleScript", G2L["60"]);
G2L["61"]["Name"] = [[Syntax]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.Theme
G2L["62"] = Instance.new("ModuleScript", G2L["60"]);
G2L["62"]["Name"] = [[Theme]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.GetLines
G2L["63"] = Instance.new("ModuleScript", G2L["60"]);
G2L["63"]["Name"] = [[GetLines]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.FakeEditor
G2L["64"] = Instance.new("ModuleScript", G2L["60"]);
G2L["64"]["Name"] = [[FakeEditor]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.GetLine
G2L["65"] = Instance.new("ModuleScript", G2L["60"]);
G2L["65"]["Name"] = [[GetLine]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.TweenLibrary
G2L["66"] = Instance.new("ModuleScript", G2L["60"]);
G2L["66"]["Name"] = [[TweenLibrary]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.GetWord
G2L["67"] = Instance.new("ModuleScript", G2L["60"]);
G2L["67"]["Name"] = [[GetWord]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.Lexer
G2L["68"] = Instance.new("ModuleScript", G2L["60"]);
G2L["68"]["Name"] = [[Lexer]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.Suggestions
G2L["69"] = Instance.new("ModuleScript", G2L["60"]);
G2L["69"]["Name"] = [[Suggestions]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.Words
G2L["6a"] = Instance.new("ModuleScript", G2L["60"]);
G2L["6a"]["Name"] = [[Words]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.TextFixer
G2L["6b"] = Instance.new("ModuleScript", G2L["60"]);
G2L["6b"]["Name"] = [[TextFixer]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.Editor
G2L["6c"] = Instance.new("ImageLabel", G2L["60"]);
G2L["6c"]["BorderSizePixel"] = 0;
G2L["6c"]["BackgroundColor3"] = Color3.fromRGB(35, 41, 35);
G2L["6c"]["BackgroundTransparency"] = 1;
G2L["6c"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["6c"]["BorderColor3"] = Color3.fromRGB(28, 43, 54);
G2L["6c"]["Name"] = [[Editor]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll
G2L["6d"] = Instance.new("ScrollingFrame", G2L["6c"]);
G2L["6d"]["Active"] = true;
G2L["6d"]["CanvasSize"] = UDim2.new(0, 0, 0, 0);
G2L["6d"]["ElasticBehavior"] = Enum.ElasticBehavior.Always;
G2L["6d"]["TopImage"] = [[rbxasset://textures/ui/Scroll/scroll-middle.png]];
G2L["6d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6d"]["AutomaticCanvasSize"] = Enum.AutomaticSize.XY;
G2L["6d"]["BackgroundTransparency"] = 0.9990000128746033;
G2L["6d"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["6d"]["ScrollBarImageColor3"] = Color3.fromRGB(64, 64, 64);
G2L["6d"]["BorderColor3"] = Color3.fromRGB(53, 53, 53);
G2L["6d"]["Name"] = [[Scroll]];
G2L["6d"]["BottomImage"] = [[rbxasset://textures/ui/Scroll/scroll-middle.png]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Source
G2L["6e"] = Instance.new("TextBox", G2L["6d"]);
G2L["6e"]["TextSize"] = 17;
G2L["6e"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["6e"]["TextStrokeColor3"] = Color3.fromRGB(41, 41, 41);
G2L["6e"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["6e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6e"]["TextColor3"] = Color3.fromRGB(239, 239, 239);
G2L["6e"]["FontFace"] = Font.new([[rbxasset://fonts/families/Inconsolata.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["6e"]["MultiLine"] = true;
G2L["6e"]["BackgroundTransparency"] = 0.9990000128746033;
G2L["6e"]["Size"] = UDim2.new(1, -44, 1, -5);
G2L["6e"]["Text"] = [[]];
G2L["6e"]["Position"] = UDim2.new(0, 44, 0, 5);
G2L["6e"]["AutomaticSize"] = Enum.AutomaticSize.XY;
G2L["6e"]["Name"] = [[Source]];
G2L["6e"]["ClearTextOnFocus"] = false;

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Source.LineHighlight
G2L["6f"] = Instance.new("Frame", G2L["6e"]);
G2L["6f"]["BorderSizePixel"] = 0;
G2L["6f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6f"]["AnchorPoint"] = Vector2.new(0, 0.5);
G2L["6f"]["BackgroundTransparency"] = 0.9399999976158142;
G2L["6f"]["Size"] = UDim2.new(1, 0, 0, 17);
G2L["6f"]["Position"] = UDim2.new(0, -10, 0, 9);
G2L["6f"]["Name"] = [[LineHighlight]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Source.Hidden
G2L["70"] = Instance.new("TextLabel", G2L["6e"]);
G2L["70"]["BorderSizePixel"] = 0;
G2L["70"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["70"]["BackgroundColor3"] = Color3.fromRGB(27, 32, 27);
G2L["70"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["70"]["FontFace"] = Font.new([[rbxasset://fonts/families/Inconsolata.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["70"]["TextSize"] = 22;
G2L["70"]["TextColor3"] = Color3.fromRGB(249, 66, 164);
G2L["70"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["70"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["70"]["Text"] = [[*script hidden*]];
G2L["70"]["Name"] = [[Hidden]];
G2L["70"]["Visible"] = false;

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Source.Suggestion
G2L["71"] = Instance.new("TextButton", G2L["6e"]);
G2L["71"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["71"]["BackgroundColor3"] = Color3.fromRGB(40, 40, 40);
G2L["71"]["TextSize"] = 17;
G2L["71"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["71"]["TextColor3"] = Color3.fromRGB(244, 244, 244);
G2L["71"]["Visible"] = false;
G2L["71"]["Size"] = UDim2.new(0, 130, 0, 26);
G2L["71"]["Name"] = [[Suggestion]];
G2L["71"]["BorderColor3"] = Color3.fromRGB(60, 60, 60);
G2L["71"]["Text"] = [[keyword]];
G2L["71"]["AutomaticSize"] = Enum.AutomaticSize.X;
G2L["71"]["Position"] = UDim2.new(0, 0, -110, 0);
G2L["71"]["BackgroundTransparency"] = 1;

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Source.Suggestion.TextPadding
G2L["72"] = Instance.new("UIPadding", G2L["71"]);
G2L["72"]["Name"] = [[TextPadding]];
G2L["72"]["PaddingLeft"] = UDim.new(0, 30);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Source.Suggestion.Icon
G2L["73"] = Instance.new("ImageLabel", G2L["71"]);
G2L["73"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["73"]["Image"] = [[rbxassetid://413365069]];
G2L["73"]["Size"] = UDim2.new(0, 26, 0, 26);
G2L["73"]["Name"] = [[Icon]];
G2L["73"]["BackgroundTransparency"] = 1;
G2L["73"]["Position"] = UDim2.new(0, -30, 0, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Source.Suggestion.Icon.UIAspectRatioConstraint
G2L["74"] = Instance.new("UIAspectRatioConstraint", G2L["73"]);


-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left
G2L["75"] = Instance.new("Frame", G2L["6d"]);
G2L["75"]["BorderSizePixel"] = 0;
G2L["75"]["BackgroundColor3"] = Color3.fromRGB(45, 45, 45);
G2L["75"]["BackgroundTransparency"] = 1;
G2L["75"]["Size"] = UDim2.new(0, 27, 1, 0);
G2L["75"]["AutomaticSize"] = Enum.AutomaticSize.Y;
G2L["75"]["Name"] = [[Left]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left.Right
G2L["76"] = Instance.new("Frame", G2L["75"]);
G2L["76"]["BorderSizePixel"] = 0;
G2L["76"]["BackgroundColor3"] = Color3.fromRGB(49, 49, 49);
G2L["76"]["BackgroundTransparency"] = 1;
G2L["76"]["Size"] = UDim2.new(0, 8, 1, 0);
G2L["76"]["Position"] = UDim2.new(1, 0, 0, 0);
G2L["76"]["AutomaticSize"] = Enum.AutomaticSize.Y;
G2L["76"]["Name"] = [[Right]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left.Right.BottomFade
G2L["77"] = Instance.new("UIGradient", G2L["76"]);
G2L["77"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(0.931, 0),NumberSequenceKeypoint.new(1.000, 1)};
G2L["77"]["Name"] = [[BottomFade]];
G2L["77"]["Rotation"] = 90;

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left.Lines
G2L["78"] = Instance.new("TextLabel", G2L["75"]);
G2L["78"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["78"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["78"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["78"]["FontFace"] = Font.new([[rbxasset://fonts/families/Inconsolata.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["78"]["TextSize"] = 17;
G2L["78"]["TextColor3"] = Color3.fromRGB(242, 242, 242);
G2L["78"]["AutomaticSize"] = Enum.AutomaticSize.X;
G2L["78"]["Size"] = UDim2.new(1, -5, 1, -7);
G2L["78"]["Text"] = [[1]];
G2L["78"]["Name"] = [[Lines]];
G2L["78"]["BackgroundTransparency"] = 0.9990000128746033;
G2L["78"]["Position"] = UDim2.new(0, 5, 0, 7);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left.Lines.BottomFade
G2L["79"] = Instance.new("UIGradient", G2L["78"]);
G2L["79"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(0.931, 0),NumberSequenceKeypoint.new(1.000, 1)};
G2L["79"]["Name"] = [[BottomFade]];
G2L["79"]["Rotation"] = 90;

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left.AdaptSize
G2L["7a"] = Instance.new("LocalScript", G2L["75"]);
G2L["7a"]["Name"] = [[AdaptSize]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left.BottomFade
G2L["7b"] = Instance.new("UIGradient", G2L["75"]);
G2L["7b"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(0.931, 0),NumberSequenceKeypoint.new(1.000, 1)};
G2L["7b"]["Name"] = [[BottomFade]];
G2L["7b"]["Rotation"] = 90;

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.Scripts
G2L["7c"] = Instance.new("ScrollingFrame", G2L["47"]);
G2L["7c"]["Active"] = true;
G2L["7c"]["CanvasSize"] = UDim2.new(0, 0, 10, 0);
G2L["7c"]["BackgroundColor3"] = Color3.fromRGB(20, 20, 23);
G2L["7c"]["BackgroundTransparency"] = 1;
G2L["7c"]["Size"] = UDim2.new(0.9701896905899048, 0, 0.8328530192375183, 0);
G2L["7c"]["ScrollBarImageColor3"] = Color3.fromRGB(20, 20, 23);
G2L["7c"]["BorderColor3"] = Color3.fromRGB(20, 20, 23);
G2L["7c"]["Position"] = UDim2.new(0.02981029823422432, 0, 0.13256484270095825, 0);
G2L["7c"]["Name"] = [[Scripts]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.Scripts.ScriptFrame
G2L["7d"] = Instance.new("Frame", G2L["7c"]);
G2L["7d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7d"]["BackgroundTransparency"] = 1;
G2L["7d"]["Size"] = UDim2.new(0.9900000095367432, 0, 1, 0);
G2L["7d"]["Position"] = UDim2.new(0, 0, 0.011527378112077713, 0);
G2L["7d"]["Name"] = [[ScriptFrame]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.Scripts.ScriptFrame.UIListLayout
G2L["7e"] = Instance.new("UIListLayout", G2L["7d"]);
G2L["7e"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.Scripts.Folder
G2L["7f"] = Instance.new("Folder", G2L["7c"]);


-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.Scripts.LIST
G2L["80"] = Instance.new("Frame", G2L["7c"]);
G2L["80"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["80"]["BackgroundTransparency"] = 1;
G2L["80"]["Size"] = UDim2.new(0.9800000190734863, 0, 0.03500000014901161, 0);
G2L["80"]["Position"] = UDim2.new(-4.305284306838075e-08, 0, 5.496681776406831e-09, 0);
G2L["80"]["Visible"] = false;
G2L["80"]["Name"] = [[LIST]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.Scripts.LIST.TitleScript
G2L["81"] = Instance.new("Frame", G2L["80"]);
G2L["81"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["81"]["BackgroundTransparency"] = 0.33329999446868896;
G2L["81"]["Size"] = UDim2.new(0.542340874671936, 0, 0.7513126134872437, 0);
G2L["81"]["BorderColor3"] = Color3.fromRGB(15, 15, 17);
G2L["81"]["Position"] = UDim2.new(-0.002550613135099411, 0, 0.110756054520607, 0);
G2L["81"]["Name"] = [[TitleScript]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.Scripts.LIST.TitleScript.UICorner
G2L["82"] = Instance.new("UICorner", G2L["81"]);
G2L["82"]["CornerRadius"] = UDim.new(0.38999998569488525, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.Scripts.LIST.TitleScript.TextLabel
G2L["83"] = Instance.new("TextLabel", G2L["81"]);
G2L["83"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["83"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["83"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["83"]["TextSize"] = 13;
G2L["83"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["83"]["Size"] = UDim2.new(0.9670000076293945, 0, 0.8320000171661377, 0);
G2L["83"]["Text"] = [[Hoho Hub Script for BF]];
G2L["83"]["BackgroundTransparency"] = 1;
G2L["83"]["Position"] = UDim2.new(0.01600000075995922, 0, 0.054999999701976776, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.Scripts.LIST.TitleScript.TextLabel.UICorner
G2L["84"] = Instance.new("UICorner", G2L["83"]);
G2L["84"]["CornerRadius"] = UDim.new(0.38999998569488525, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.Scripts.LIST.Execute
G2L["85"] = Instance.new("Frame", G2L["80"]);
G2L["85"]["BackgroundColor3"] = Color3.fromRGB(137, 126, 251);
G2L["85"]["Size"] = UDim2.new(0.20491595566272736, 0, 0.7415456175804138, 0);
G2L["85"]["Position"] = UDim2.new(0.5597181916236877, 0, 0.1205231249332428, 0);
G2L["85"]["Name"] = [[Execute]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.Scripts.LIST.Execute.TextButton
G2L["86"] = Instance.new("TextButton", G2L["85"]);
G2L["86"]["TextWrapped"] = true;
G2L["86"]["BackgroundColor3"] = Color3.fromRGB(143, 130, 255);
G2L["86"]["TextSize"] = 12;
G2L["86"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["86"]["TextColor3"] = Color3.fromRGB(252, 252, 252);
G2L["86"]["Size"] = UDim2.new(0.8136826753616333, 0, 1, 0);
G2L["86"]["Text"] = [[Execute]];
G2L["86"]["Position"] = UDim2.new(-0.004637444857507944, 0, 0, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.Scripts.LIST.Execute.TextButton.UICorner
G2L["87"] = Instance.new("UICorner", G2L["86"]);
G2L["87"]["CornerRadius"] = UDim.new(0.4300000071525574, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.Scripts.LIST.Execute.UICorner
G2L["88"] = Instance.new("UICorner", G2L["85"]);
G2L["88"]["CornerRadius"] = UDim.new(0.4300000071525574, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.Scripts.LIST.Execute.ImageLabel
G2L["89"] = Instance.new("ImageLabel", G2L["85"]);
G2L["89"]["BackgroundColor3"] = Color3.fromRGB(137, 126, 251);
G2L["89"]["Image"] = [[rbxassetid://12730588268]];
G2L["89"]["Size"] = UDim2.new(0.20393863320350647, 0, 0.7066323161125183, 0);
G2L["89"]["BackgroundTransparency"] = 1;
G2L["89"]["Position"] = UDim2.new(0.7205832004547119, 0, 0.14132645726203918, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.Scripts.LIST.Delete
G2L["8a"] = Instance.new("Frame", G2L["80"]);
G2L["8a"]["BackgroundColor3"] = Color3.fromRGB(137, 126, 251);
G2L["8a"]["Size"] = UDim2.new(0.20491595566272736, 0, 0.7415456175804138, 0);
G2L["8a"]["Position"] = UDim2.new(0.7835553884506226, 0, 0.1205231249332428, 0);
G2L["8a"]["Name"] = [[Delete]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.Scripts.LIST.Delete.TextButton
G2L["8b"] = Instance.new("TextButton", G2L["8a"]);
G2L["8b"]["TextWrapped"] = true;
G2L["8b"]["BackgroundColor3"] = Color3.fromRGB(143, 130, 255);
G2L["8b"]["TextSize"] = 12;
G2L["8b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["8b"]["TextColor3"] = Color3.fromRGB(252, 252, 252);
G2L["8b"]["Size"] = UDim2.new(0.8136826753616333, 0, 1, 0);
G2L["8b"]["Text"] = [[Delete]];
G2L["8b"]["Position"] = UDim2.new(-0.004637444857507944, 0, 0, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.Scripts.LIST.Delete.TextButton.UICorner
G2L["8c"] = Instance.new("UICorner", G2L["8b"]);
G2L["8c"]["CornerRadius"] = UDim.new(0.4300000071525574, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.Scripts.LIST.Delete.UICorner
G2L["8d"] = Instance.new("UICorner", G2L["8a"]);
G2L["8d"]["CornerRadius"] = UDim.new(0.4300000071525574, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.Scripts.LIST.Delete.ImageLabel
G2L["8e"] = Instance.new("ImageLabel", G2L["8a"]);
G2L["8e"]["BackgroundColor3"] = Color3.fromRGB(137, 126, 251);
G2L["8e"]["Image"] = [[rbxassetid://12731675545]];
G2L["8e"]["Size"] = UDim2.new(0.20393863320350647, 0, 0.7066323161125183, 0);
G2L["8e"]["BackgroundTransparency"] = 1;
G2L["8e"]["Position"] = UDim2.new(0.640999972820282, 0, 0.14100000262260437, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.Scripts.LIST.UIAspectRatioConstraint
G2L["8f"] = Instance.new("UIAspectRatioConstraint", G2L["80"]);
G2L["8f"]["AspectRatio"] = 14.29936695098877;

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.AddScript1
G2L["90"] = Instance.new("Frame", G2L["47"]);
G2L["90"]["BackgroundColor3"] = Color3.fromRGB(137, 126, 251);
G2L["90"]["Size"] = UDim2.new(0.19932666420936584, 0, 0.06368814408779144, 0);
G2L["90"]["Position"] = UDim2.new(0.7670302391052246, 0, 0.017075123265385628, 0);
G2L["90"]["Name"] = [[AddScript1]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.AddScript1.TextButton
G2L["91"] = Instance.new("TextButton", G2L["90"]);
G2L["91"]["TextWrapped"] = true;
G2L["91"]["BackgroundColor3"] = Color3.fromRGB(143, 130, 255);
G2L["91"]["TextSize"] = 12;
G2L["91"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["91"]["TextColor3"] = Color3.fromRGB(252, 252, 252);
G2L["91"]["Size"] = UDim2.new(0.8136826753616333, 0, 1, 0);
G2L["91"]["Text"] = [[Add Script]];
G2L["91"]["Position"] = UDim2.new(-0.004637444857507944, 0, 0, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.AddScript1.TextButton.UICorner
G2L["92"] = Instance.new("UICorner", G2L["91"]);
G2L["92"]["CornerRadius"] = UDim.new(0.4300000071525574, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.AddScript1.TextButton.LocalScript
G2L["93"] = Instance.new("LocalScript", G2L["91"]);


-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.AddScript1.UICorner
G2L["94"] = Instance.new("UICorner", G2L["90"]);
G2L["94"]["CornerRadius"] = UDim.new(0.4300000071525574, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.AddScript1.ImageLabel
G2L["95"] = Instance.new("ImageLabel", G2L["90"]);
G2L["95"]["BackgroundColor3"] = Color3.fromRGB(137, 126, 251);
G2L["95"]["Image"] = [[rbxassetid://12731182145]];
G2L["95"]["Size"] = UDim2.new(0.20393863320350647, 0, 0.7066323161125183, 0);
G2L["95"]["BackgroundTransparency"] = 1;
G2L["95"]["Position"] = UDim2.new(0.7205832004547119, 0, 0.14132645726203918, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home
G2L["96"] = Instance.new("Frame", G2L["46"]);
G2L["96"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["96"]["BackgroundTransparency"] = 1;
G2L["96"]["Size"] = UDim2.new(0.8833174705505371, 0, 0.9945666193962097, 0);
G2L["96"]["Position"] = UDim2.new(0.11490308493375778, 0, 0.002866186201572418, 0);
G2L["96"]["Visible"] = false;
G2L["96"]["Name"] = [[Home]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox
G2L["97"] = Instance.new("Frame", G2L["96"]);
G2L["97"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["97"]["BackgroundTransparency"] = 0.33329999446868896;
G2L["97"]["Size"] = UDim2.new(0.9585282802581787, 0, 0.9365506768226624, 0);
G2L["97"]["BorderColor3"] = Color3.fromRGB(15, 15, 17);
G2L["97"]["Position"] = UDim2.new(0.023612210527062416, 0, 0.0383836105465889, 0);
G2L["97"]["Name"] = [[ScriptTextbox]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.UICorner
G2L["98"] = Instance.new("UICorner", G2L["97"]);
G2L["98"]["CornerRadius"] = UDim.new(0.03999999910593033, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.Execute
G2L["99"] = Instance.new("Frame", G2L["97"]);
G2L["99"]["BackgroundColor3"] = Color3.fromRGB(137, 126, 251);
G2L["99"]["Size"] = UDim2.new(0.2710147798061371, 0, 0.0753278136253357, 0);
G2L["99"]["Position"] = UDim2.new(0.032752323895692825, 0, 0.8925735354423523, 0);
G2L["99"]["Name"] = [[Execute]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.Execute.TextButton
G2L["9a"] = Instance.new("TextButton", G2L["99"]);
G2L["9a"]["TextWrapped"] = true;
G2L["9a"]["BackgroundColor3"] = Color3.fromRGB(143, 130, 255);
G2L["9a"]["TextSize"] = 12;
G2L["9a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["9a"]["TextColor3"] = Color3.fromRGB(252, 252, 252);
G2L["9a"]["Size"] = UDim2.new(0.8136826753616333, 0, 1, 0);
G2L["9a"]["Text"] = [[Execute Text]];
G2L["9a"]["Position"] = UDim2.new(-0.004637444857507944, 0, 0, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.Execute.TextButton.UICorner
G2L["9b"] = Instance.new("UICorner", G2L["9a"]);
G2L["9b"]["CornerRadius"] = UDim.new(0.4300000071525574, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.Execute.TextButton.LocalScript
G2L["9c"] = Instance.new("LocalScript", G2L["9a"]);


-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.Execute.UICorner
G2L["9d"] = Instance.new("UICorner", G2L["99"]);
G2L["9d"]["CornerRadius"] = UDim.new(0.4300000071525574, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.Execute.ImageLabel
G2L["9e"] = Instance.new("ImageLabel", G2L["99"]);
G2L["9e"]["BackgroundColor3"] = Color3.fromRGB(137, 126, 251);
G2L["9e"]["Image"] = [[rbxassetid://12731759847]];
G2L["9e"]["Size"] = UDim2.new(0.14605075120925903, 0, 0.6269142031669617, 0);
G2L["9e"]["BackgroundTransparency"] = 1;
G2L["9e"]["Position"] = UDim2.new(0.7229999899864197, 0, 0.17900000512599945, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.Execute.ImageLabel.UIAspectRatioConstraint
G2L["9f"] = Instance.new("UIAspectRatioConstraint", G2L["9e"]);
G2L["9f"]["AspectRatio"] = 1.0000001192092896;

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.Clear
G2L["a0"] = Instance.new("Frame", G2L["97"]);
G2L["a0"]["BackgroundColor3"] = Color3.fromRGB(137, 126, 251);
G2L["a0"]["Size"] = UDim2.new(0.19932666420936584, 0, 0.0753278136253357, 0);
G2L["a0"]["Position"] = UDim2.new(0.32880187034606934, 0, 0.8925735354423523, 0);
G2L["a0"]["Name"] = [[Clear]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.Clear.TextButton
G2L["a1"] = Instance.new("TextButton", G2L["a0"]);
G2L["a1"]["TextWrapped"] = true;
G2L["a1"]["BackgroundColor3"] = Color3.fromRGB(143, 130, 255);
G2L["a1"]["TextSize"] = 12;
G2L["a1"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["a1"]["TextColor3"] = Color3.fromRGB(252, 252, 252);
G2L["a1"]["Size"] = UDim2.new(0.8136826753616333, 0, 1, 0);
G2L["a1"]["Text"] = [[Clear]];
G2L["a1"]["Position"] = UDim2.new(-0.004637444857507944, 0, 0, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.Clear.TextButton.UICorner
G2L["a2"] = Instance.new("UICorner", G2L["a1"]);
G2L["a2"]["CornerRadius"] = UDim.new(0.4300000071525574, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.Clear.TextButton.LocalScript
G2L["a3"] = Instance.new("LocalScript", G2L["a1"]);


-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.Clear.UICorner
G2L["a4"] = Instance.new("UICorner", G2L["a0"]);
G2L["a4"]["CornerRadius"] = UDim.new(0.4300000071525574, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.Clear.ImageLabel
G2L["a5"] = Instance.new("ImageLabel", G2L["a0"]);
G2L["a5"]["BackgroundColor3"] = Color3.fromRGB(137, 126, 251);
G2L["a5"]["Image"] = [[rbxassetid://12731778060]];
G2L["a5"]["Size"] = UDim2.new(0.1843939572572708, 0, 0.5821346640586853, 0);
G2L["a5"]["BackgroundTransparency"] = 1;
G2L["a5"]["Position"] = UDim2.new(0.6240000128746033, 0, 0.21400000154972076, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.Clear.ImageLabel.UIAspectRatioConstraint
G2L["a6"] = Instance.new("UIAspectRatioConstraint", G2L["a5"]);
G2L["a6"]["AspectRatio"] = 1.0000001192092896;

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.ExecuteClipboard
G2L["a7"] = Instance.new("Frame", G2L["97"]);
G2L["a7"]["BackgroundColor3"] = Color3.fromRGB(137, 126, 251);
G2L["a7"]["Size"] = UDim2.new(0.3159777522087097, 0, 0.0753278136253357, 0);
G2L["a7"]["Position"] = UDim2.new(0.5501444339752197, 0, 0.8892003893852234, 0);
G2L["a7"]["Name"] = [[ExecuteClipboard]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.ExecuteClipboard.TextButton
G2L["a8"] = Instance.new("TextButton", G2L["a7"]);
G2L["a8"]["TextWrapped"] = true;
G2L["a8"]["BackgroundColor3"] = Color3.fromRGB(143, 130, 255);
G2L["a8"]["TextSize"] = 12;
G2L["a8"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["a8"]["TextColor3"] = Color3.fromRGB(252, 252, 252);
G2L["a8"]["Size"] = UDim2.new(0.8136826753616333, 0, 1, 0);
G2L["a8"]["Text"] = [[Execute Clipboard]];
G2L["a8"]["Position"] = UDim2.new(-0.004637444857507944, 0, 0, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.ExecuteClipboard.TextButton.UICorner
G2L["a9"] = Instance.new("UICorner", G2L["a8"]);
G2L["a9"]["CornerRadius"] = UDim.new(0.4300000071525574, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.ExecuteClipboard.TextButton.LocalScript
G2L["aa"] = Instance.new("LocalScript", G2L["a8"]);


-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.ExecuteClipboard.UICorner
G2L["ab"] = Instance.new("UICorner", G2L["a7"]);
G2L["ab"]["CornerRadius"] = UDim.new(0.4300000071525574, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.ExecuteClipboard.ImageLabel
G2L["ac"] = Instance.new("ImageLabel", G2L["a7"]);
G2L["ac"]["BackgroundColor3"] = Color3.fromRGB(137, 126, 251);
G2L["ac"]["Image"] = [[rbxassetid://12731907784]];
G2L["ac"]["Size"] = UDim2.new(0.11632032692432404, 0, 0.5821346640586853, 0);
G2L["ac"]["BackgroundTransparency"] = 1;
G2L["ac"]["Position"] = UDim2.new(0.7695035934448242, 0, 0.17911836504936218, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.ExecuteClipboard.ImageLabel.UIAspectRatioConstraint
G2L["ad"] = Instance.new("UIAspectRatioConstraint", G2L["ac"]);
G2L["ad"]["AspectRatio"] = 1.0000001192092896;

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.TextboxBar
G2L["ae"] = Instance.new("Frame", G2L["97"]);
G2L["ae"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["ae"]["BackgroundTransparency"] = 1;
G2L["ae"]["Size"] = UDim2.new(0.953382134437561, 0, 0.8380939960479736, 0);
G2L["ae"]["Position"] = UDim2.new(0.025999952107667923, 0, 0.02475839853286743, 0);
G2L["ae"]["Name"] = [[TextboxBar]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.TextboxBar.LocalScript
G2L["af"] = Instance.new("LocalScript", G2L["ae"]);


-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor
G2L["b0"] = Instance.new("ModuleScript", G2L["af"]);
G2L["b0"]["Name"] = [[ScriptEditor]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.Syntax
G2L["b1"] = Instance.new("ModuleScript", G2L["b0"]);
G2L["b1"]["Name"] = [[Syntax]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.Theme
G2L["b2"] = Instance.new("ModuleScript", G2L["b0"]);
G2L["b2"]["Name"] = [[Theme]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.GetLines
G2L["b3"] = Instance.new("ModuleScript", G2L["b0"]);
G2L["b3"]["Name"] = [[GetLines]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.FakeEditor
G2L["b4"] = Instance.new("ModuleScript", G2L["b0"]);
G2L["b4"]["Name"] = [[FakeEditor]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.GetLine
G2L["b5"] = Instance.new("ModuleScript", G2L["b0"]);
G2L["b5"]["Name"] = [[GetLine]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.TweenLibrary
G2L["b6"] = Instance.new("ModuleScript", G2L["b0"]);
G2L["b6"]["Name"] = [[TweenLibrary]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.GetWord
G2L["b7"] = Instance.new("ModuleScript", G2L["b0"]);
G2L["b7"]["Name"] = [[GetWord]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.Lexer
G2L["b8"] = Instance.new("ModuleScript", G2L["b0"]);
G2L["b8"]["Name"] = [[Lexer]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.Suggestions
G2L["b9"] = Instance.new("ModuleScript", G2L["b0"]);
G2L["b9"]["Name"] = [[Suggestions]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.Words
G2L["ba"] = Instance.new("ModuleScript", G2L["b0"]);
G2L["ba"]["Name"] = [[Words]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.TextFixer
G2L["bb"] = Instance.new("ModuleScript", G2L["b0"]);
G2L["bb"]["Name"] = [[TextFixer]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.Editor
G2L["bc"] = Instance.new("ImageLabel", G2L["b0"]);
G2L["bc"]["BorderSizePixel"] = 0;
G2L["bc"]["BackgroundColor3"] = Color3.fromRGB(35, 41, 35);
G2L["bc"]["BackgroundTransparency"] = 1;
G2L["bc"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["bc"]["BorderColor3"] = Color3.fromRGB(28, 43, 54);
G2L["bc"]["Name"] = [[Editor]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll
G2L["bd"] = Instance.new("ScrollingFrame", G2L["bc"]);
G2L["bd"]["Active"] = true;
G2L["bd"]["CanvasSize"] = UDim2.new(0, 0, 0, 0);
G2L["bd"]["ElasticBehavior"] = Enum.ElasticBehavior.Always;
G2L["bd"]["TopImage"] = [[rbxasset://textures/ui/Scroll/scroll-middle.png]];
G2L["bd"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["bd"]["AutomaticCanvasSize"] = Enum.AutomaticSize.XY;
G2L["bd"]["BackgroundTransparency"] = 0.9990000128746033;
G2L["bd"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["bd"]["ScrollBarImageColor3"] = Color3.fromRGB(64, 64, 64);
G2L["bd"]["BorderColor3"] = Color3.fromRGB(53, 53, 53);
G2L["bd"]["Name"] = [[Scroll]];
G2L["bd"]["BottomImage"] = [[rbxasset://textures/ui/Scroll/scroll-middle.png]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Source
G2L["be"] = Instance.new("TextBox", G2L["bd"]);
G2L["be"]["TextSize"] = 17;
G2L["be"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["be"]["TextStrokeColor3"] = Color3.fromRGB(41, 41, 41);
G2L["be"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["be"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["be"]["TextColor3"] = Color3.fromRGB(239, 239, 239);
G2L["be"]["FontFace"] = Font.new([[rbxasset://fonts/families/Inconsolata.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["be"]["MultiLine"] = true;
G2L["be"]["BackgroundTransparency"] = 0.9990000128746033;
G2L["be"]["Size"] = UDim2.new(1, -44, 1, -5);
G2L["be"]["Text"] = [[]];
G2L["be"]["Position"] = UDim2.new(0, 44, 0, 5);
G2L["be"]["AutomaticSize"] = Enum.AutomaticSize.XY;
G2L["be"]["Name"] = [[Source]];
G2L["be"]["ClearTextOnFocus"] = false;

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Source.LineHighlight
G2L["bf"] = Instance.new("Frame", G2L["be"]);
G2L["bf"]["BorderSizePixel"] = 0;
G2L["bf"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["bf"]["AnchorPoint"] = Vector2.new(0, 0.5);
G2L["bf"]["BackgroundTransparency"] = 0.9399999976158142;
G2L["bf"]["Size"] = UDim2.new(1, 0, 0, 17);
G2L["bf"]["Position"] = UDim2.new(0, -10, 0, 9);
G2L["bf"]["Name"] = [[LineHighlight]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Source.Hidden
G2L["c0"] = Instance.new("TextLabel", G2L["be"]);
G2L["c0"]["BorderSizePixel"] = 0;
G2L["c0"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["c0"]["BackgroundColor3"] = Color3.fromRGB(27, 32, 27);
G2L["c0"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["c0"]["FontFace"] = Font.new([[rbxasset://fonts/families/Inconsolata.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["c0"]["TextSize"] = 22;
G2L["c0"]["TextColor3"] = Color3.fromRGB(249, 66, 164);
G2L["c0"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["c0"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c0"]["Text"] = [[*script hidden*]];
G2L["c0"]["Name"] = [[Hidden]];
G2L["c0"]["Visible"] = false;

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Source.Suggestion
G2L["c1"] = Instance.new("TextButton", G2L["be"]);
G2L["c1"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["c1"]["BackgroundColor3"] = Color3.fromRGB(40, 40, 40);
G2L["c1"]["TextSize"] = 17;
G2L["c1"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["c1"]["TextColor3"] = Color3.fromRGB(244, 244, 244);
G2L["c1"]["Visible"] = false;
G2L["c1"]["Size"] = UDim2.new(0, 130, 0, 26);
G2L["c1"]["Name"] = [[Suggestion]];
G2L["c1"]["BorderColor3"] = Color3.fromRGB(60, 60, 60);
G2L["c1"]["Text"] = [[keyword]];
G2L["c1"]["AutomaticSize"] = Enum.AutomaticSize.X;
G2L["c1"]["BackgroundTransparency"] = 1;

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Source.Suggestion.TextPadding
G2L["c2"] = Instance.new("UIPadding", G2L["c1"]);
G2L["c2"]["Name"] = [[TextPadding]];
G2L["c2"]["PaddingLeft"] = UDim.new(0, 30);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Source.Suggestion.Icon
G2L["c3"] = Instance.new("ImageLabel", G2L["c1"]);
G2L["c3"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c3"]["Image"] = [[rbxassetid://413365069]];
G2L["c3"]["Size"] = UDim2.new(0, 26, 0, 26);
G2L["c3"]["Name"] = [[Icon]];
G2L["c3"]["BackgroundTransparency"] = 1;
G2L["c3"]["Position"] = UDim2.new(0, -30, 0, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Source.Suggestion.Icon.UIAspectRatioConstraint
G2L["c4"] = Instance.new("UIAspectRatioConstraint", G2L["c3"]);


-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left
G2L["c5"] = Instance.new("Frame", G2L["bd"]);
G2L["c5"]["BorderSizePixel"] = 0;
G2L["c5"]["BackgroundColor3"] = Color3.fromRGB(45, 45, 45);
G2L["c5"]["BackgroundTransparency"] = 1;
G2L["c5"]["Size"] = UDim2.new(0, 27, 1, 0);
G2L["c5"]["AutomaticSize"] = Enum.AutomaticSize.Y;
G2L["c5"]["Name"] = [[Left]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left.Right
G2L["c6"] = Instance.new("Frame", G2L["c5"]);
G2L["c6"]["BorderSizePixel"] = 0;
G2L["c6"]["BackgroundColor3"] = Color3.fromRGB(49, 49, 49);
G2L["c6"]["BackgroundTransparency"] = 1;
G2L["c6"]["Size"] = UDim2.new(0, 8, 1, 0);
G2L["c6"]["Position"] = UDim2.new(1, 0, 0, 0);
G2L["c6"]["AutomaticSize"] = Enum.AutomaticSize.Y;
G2L["c6"]["Name"] = [[Right]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left.Right.BottomFade
G2L["c7"] = Instance.new("UIGradient", G2L["c6"]);
G2L["c7"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(0.931, 0),NumberSequenceKeypoint.new(1.000, 1)};
G2L["c7"]["Name"] = [[BottomFade]];
G2L["c7"]["Rotation"] = 90;

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left.Lines
G2L["c8"] = Instance.new("TextLabel", G2L["c5"]);
G2L["c8"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["c8"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c8"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["c8"]["FontFace"] = Font.new([[rbxasset://fonts/families/Inconsolata.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["c8"]["TextSize"] = 17;
G2L["c8"]["TextColor3"] = Color3.fromRGB(242, 242, 242);
G2L["c8"]["AutomaticSize"] = Enum.AutomaticSize.X;
G2L["c8"]["Size"] = UDim2.new(1, -5, 1, -7);
G2L["c8"]["Text"] = [[1]];
G2L["c8"]["Name"] = [[Lines]];
G2L["c8"]["BackgroundTransparency"] = 0.9990000128746033;
G2L["c8"]["Position"] = UDim2.new(0, 5, 0, 7);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left.Lines.BottomFade
G2L["c9"] = Instance.new("UIGradient", G2L["c8"]);
G2L["c9"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(0.931, 0),NumberSequenceKeypoint.new(1.000, 1)};
G2L["c9"]["Name"] = [[BottomFade]];
G2L["c9"]["Rotation"] = 90;

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left.AdaptSize
G2L["ca"] = Instance.new("LocalScript", G2L["c5"]);
G2L["ca"]["Name"] = [[AdaptSize]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left.BottomFade
G2L["cb"] = Instance.new("UIGradient", G2L["c5"]);
G2L["cb"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(0.931, 0),NumberSequenceKeypoint.new(1.000, 1)};
G2L["cb"]["Name"] = [[BottomFade]];
G2L["cb"]["Rotation"] = 90;

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts
G2L["cc"] = Instance.new("Frame", G2L["46"]);
G2L["cc"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["cc"]["BackgroundTransparency"] = 1;
G2L["cc"]["Size"] = UDim2.new(0.8833174705505371, 0, 0.9945666193962097, 0);
G2L["cc"]["Position"] = UDim2.new(0.11490308493375778, 0, 0.002866186201572418, 0);
G2L["cc"]["Visible"] = false;
G2L["cc"]["Name"] = [[Scripts]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.TitleScript
G2L["cd"] = Instance.new("Frame", G2L["cc"]);
G2L["cd"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["cd"]["BackgroundTransparency"] = 0.33329999446868896;
G2L["cd"]["Size"] = UDim2.new(0.7389585375785828, 0, 0.0768190324306488, 0);
G2L["cd"]["BorderColor3"] = Color3.fromRGB(15, 15, 17);
G2L["cd"]["Position"] = UDim2.new(0.02895212545990944, 0, 0.04599999263882637, 0);
G2L["cd"]["Name"] = [[TitleScript]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.TitleScript.MainTextBox
G2L["ce"] = Instance.new("TextBox", G2L["cd"]);
G2L["ce"]["PlaceholderColor3"] = Color3.fromRGB(240, 240, 240);
G2L["ce"]["TextSize"] = 13;
G2L["ce"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["ce"]["BackgroundColor3"] = Color3.fromRGB(16, 16, 16);
G2L["ce"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["ce"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["ce"]["BackgroundTransparency"] = 0.800000011920929;
G2L["ce"]["PlaceholderText"] = [[Enter your search...]];
G2L["ce"]["Size"] = UDim2.new(0.9665210843086243, 0, 0.8322147727012634, 0);
G2L["ce"]["BorderColor3"] = Color3.fromRGB(15, 15, 17);
G2L["ce"]["Text"] = [[]];
G2L["ce"]["Position"] = UDim2.new(0.016102850437164307, 0, 0.054676055908203125, 0);
G2L["ce"]["Name"] = [[MainTextBox]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.TitleScript.MainTextBox.UICorner
G2L["cf"] = Instance.new("UICorner", G2L["ce"]);
G2L["cf"]["CornerRadius"] = UDim.new(0.38999998569488525, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.TitleScript.UICorner
G2L["d0"] = Instance.new("UICorner", G2L["cd"]);
G2L["d0"]["CornerRadius"] = UDim.new(0.38999998569488525, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Scripts
G2L["d1"] = Instance.new("ScrollingFrame", G2L["cc"]);
G2L["d1"]["Active"] = true;
G2L["d1"]["CanvasSize"] = UDim2.new(0, 0, 10, 0);
G2L["d1"]["BackgroundColor3"] = Color3.fromRGB(20, 20, 23);
G2L["d1"]["BackgroundTransparency"] = 1;
G2L["d1"]["Size"] = UDim2.new(0.9701896905899048, 0, 0.8328530192375183, 0);
G2L["d1"]["ScrollBarImageColor3"] = Color3.fromRGB(196, 196, 196);
G2L["d1"]["BorderColor3"] = Color3.fromRGB(20, 20, 23);
G2L["d1"]["ScrollBarThickness"] = 4;
G2L["d1"]["Position"] = UDim2.new(0.02981029823422432, 0, 0.13256484270095825, 0);
G2L["d1"]["Name"] = [[Scripts]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Scripts.ScriptFrame
G2L["d2"] = Instance.new("Frame", G2L["d1"]);
G2L["d2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["d2"]["BackgroundTransparency"] = 1;
G2L["d2"]["Size"] = UDim2.new(0.9900000095367432, 0, 1, 0);
G2L["d2"]["Position"] = UDim2.new(0, 0, 0.011527378112077713, 0);
G2L["d2"]["Name"] = [[ScriptFrame]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Scripts.ScriptFrame.UIListLayout
G2L["d3"] = Instance.new("UIListLayout", G2L["d2"]);
G2L["d3"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Scripts.Folder
G2L["d4"] = Instance.new("Folder", G2L["d1"]);


-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Scripts.Folder.LIST
G2L["d5"] = Instance.new("Frame", G2L["d4"]);
G2L["d5"]["BackgroundColor3"] = Color3.fromRGB(14, 14, 14);
G2L["d5"]["Size"] = UDim2.new(0.9971014261245728, 0, 0.2692020535469055, 0);
G2L["d5"]["Position"] = UDim2.new(-0.0028985326644033194, 0, 0, 0);
G2L["d5"]["Visible"] = false;
G2L["d5"]["Name"] = [[LIST]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Scripts.Folder.LIST.UICorner
G2L["d6"] = Instance.new("UICorner", G2L["d5"]);
G2L["d6"]["CornerRadius"] = UDim.new(0.07999999821186066, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Scripts.Folder.LIST.ImageButton
G2L["d7"] = Instance.new("ImageButton", G2L["d5"]);
G2L["d7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["d7"]["Image"] = [[rbxasset://textures/ui/GuiImagePlaceholder.png]];
G2L["d7"]["Size"] = UDim2.new(0.7325581312179565, 0, 0.8105263113975525, 0);
G2L["d7"]["Position"] = UDim2.new(0.011627906933426857, 0, 0, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Scripts.Folder.LIST.ImageButton.UICorner
G2L["d8"] = Instance.new("UICorner", G2L["d7"]);
G2L["d8"]["CornerRadius"] = UDim.new(0.07999999821186066, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Scripts.Folder.LIST.NameScript
G2L["d9"] = Instance.new("TextLabel", G2L["d5"]);
G2L["d9"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["d9"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["d9"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["d9"]["TextSize"] = 14;
G2L["d9"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["d9"]["Size"] = UDim2.new(0.5532065033912659, 0, 0.10177130252122879, 0);
G2L["d9"]["Text"] = [[Name Hub]];
G2L["d9"]["Name"] = [[NameScript]];
G2L["d9"]["BackgroundTransparency"] = 1;
G2L["d9"]["Position"] = UDim2.new(0.03259729966521263, 0, 0.8526315689086914, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Scripts.Folder.LIST.Credit
G2L["da"] = Instance.new("TextLabel", G2L["d5"]);
G2L["da"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["da"]["TextXAlignment"] = Enum.TextXAlignment.Right;
G2L["da"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["da"]["TextSize"] = 14;
G2L["da"]["TextColor3"] = Color3.fromRGB(185, 185, 185);
G2L["da"]["Size"] = UDim2.new(0.3924419581890106, 0, 0.10177130252122879, 0);
G2L["da"]["Text"] = [[Uploaded By: ???]];
G2L["da"]["Name"] = [[Credit]];
G2L["da"]["BackgroundTransparency"] = 1;
G2L["da"]["Position"] = UDim2.new(0.5858038067817688, 0, 0.8526315689086914, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Scripts.Folder.LIST.Execute
G2L["db"] = Instance.new("Frame", G2L["d5"]);
G2L["db"]["BackgroundColor3"] = Color3.fromRGB(137, 126, 251);
G2L["db"]["Size"] = UDim2.new(0.18748296797275543, 0, 0.09933300316333771, 0);
G2L["db"]["Position"] = UDim2.new(0.7772064805030823, 0, 0.0343393050134182, 0);
G2L["db"]["Name"] = [[Execute]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Scripts.Folder.LIST.Execute.TextButton
G2L["dc"] = Instance.new("TextButton", G2L["db"]);
G2L["dc"]["TextWrapped"] = true;
G2L["dc"]["BackgroundColor3"] = Color3.fromRGB(143, 130, 255);
G2L["dc"]["TextSize"] = 12;
G2L["dc"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["dc"]["TextColor3"] = Color3.fromRGB(252, 252, 252);
G2L["dc"]["Size"] = UDim2.new(0.8136826753616333, 0, 1, 0);
G2L["dc"]["Text"] = [[Execute]];
G2L["dc"]["Position"] = UDim2.new(-0.004637444857507944, 0, 0, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Scripts.Folder.LIST.Execute.TextButton.UICorner
G2L["dd"] = Instance.new("UICorner", G2L["dc"]);
G2L["dd"]["CornerRadius"] = UDim.new(0.4300000071525574, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Scripts.Folder.LIST.Execute.UICorner
G2L["de"] = Instance.new("UICorner", G2L["db"]);
G2L["de"]["CornerRadius"] = UDim.new(0.4300000071525574, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Scripts.Folder.LIST.Execute.ImageLabel
G2L["df"] = Instance.new("ImageLabel", G2L["db"]);
G2L["df"]["BackgroundColor3"] = Color3.fromRGB(137, 126, 251);
G2L["df"]["Image"] = [[rbxassetid://12730588268]];
G2L["df"]["Size"] = UDim2.new(0.18111810088157654, 0, 0.64662104845047, 0);
G2L["df"]["BackgroundTransparency"] = 1;
G2L["df"]["Position"] = UDim2.new(0.6791929006576538, 0, 0.1616552621126175, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Scripts.Folder.LIST.Execute.UIAspectRatioConstraint
G2L["e0"] = Instance.new("UIAspectRatioConstraint", G2L["db"]);
G2L["e0"]["AspectRatio"] = 3.570162534713745;

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Scripts.Folder.LIST.Save
G2L["e1"] = Instance.new("Frame", G2L["d5"]);
G2L["e1"]["BackgroundColor3"] = Color3.fromRGB(137, 126, 251);
G2L["e1"]["Size"] = UDim2.new(0.18748296797275543, 0, 0.09933300316333771, 0);
G2L["e1"]["Position"] = UDim2.new(0.7772064805030823, 0, 0.1766234040260315, 0);
G2L["e1"]["Name"] = [[Save]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Scripts.Folder.LIST.Save.TextButton
G2L["e2"] = Instance.new("TextButton", G2L["e1"]);
G2L["e2"]["TextWrapped"] = true;
G2L["e2"]["BackgroundColor3"] = Color3.fromRGB(143, 130, 255);
G2L["e2"]["TextSize"] = 12;
G2L["e2"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["e2"]["TextColor3"] = Color3.fromRGB(252, 252, 252);
G2L["e2"]["Size"] = UDim2.new(0.8136826753616333, 0, 1, 0);
G2L["e2"]["Text"] = [[Save]];
G2L["e2"]["Position"] = UDim2.new(-0.004637444857507944, 0, 0, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Scripts.Folder.LIST.Save.TextButton.UICorner
G2L["e3"] = Instance.new("UICorner", G2L["e2"]);
G2L["e3"]["CornerRadius"] = UDim.new(0.4300000071525574, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Scripts.Folder.LIST.Save.UICorner
G2L["e4"] = Instance.new("UICorner", G2L["e1"]);
G2L["e4"]["CornerRadius"] = UDim.new(0.4300000071525574, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Scripts.Folder.LIST.Save.ImageLabel
G2L["e5"] = Instance.new("ImageLabel", G2L["e1"]);
G2L["e5"]["BackgroundColor3"] = Color3.fromRGB(137, 126, 251);
G2L["e5"]["Image"] = [[rbxassetid://12732367351]];
G2L["e5"]["Size"] = UDim2.new(0.18111810088157654, 0, 0.64662104845047, 0);
G2L["e5"]["BackgroundTransparency"] = 1;
G2L["e5"]["Position"] = UDim2.new(0.6791929006576538, 0, 0.1616552621126175, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Scripts.Folder.LIST.Save.UIAspectRatioConstraint
G2L["e6"] = Instance.new("UIAspectRatioConstraint", G2L["e1"]);
G2L["e6"]["AspectRatio"] = 3.570162534713745;

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Scripts.Folder.LIST.LoadText
G2L["e7"] = Instance.new("Frame", G2L["d5"]);
G2L["e7"]["BackgroundColor3"] = Color3.fromRGB(137, 126, 251);
G2L["e7"]["Size"] = UDim2.new(0.18748296797275543, 0, 0.09933300316333771, 0);
G2L["e7"]["Position"] = UDim2.new(0.7772064805030823, 0, 0.307320237159729, 0);
G2L["e7"]["Name"] = [[LoadText]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Scripts.Folder.LIST.LoadText.TextButton
G2L["e8"] = Instance.new("TextButton", G2L["e7"]);
G2L["e8"]["TextWrapped"] = true;
G2L["e8"]["BackgroundColor3"] = Color3.fromRGB(143, 130, 255);
G2L["e8"]["TextSize"] = 12;
G2L["e8"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["e8"]["TextColor3"] = Color3.fromRGB(252, 252, 252);
G2L["e8"]["Size"] = UDim2.new(0.8136826753616333, 0, 1, 0);
G2L["e8"]["Text"] = [[Load Text]];
G2L["e8"]["Position"] = UDim2.new(-0.004637444857507944, 0, 0, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Scripts.Folder.LIST.LoadText.TextButton.UICorner
G2L["e9"] = Instance.new("UICorner", G2L["e8"]);
G2L["e9"]["CornerRadius"] = UDim.new(0.4300000071525574, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Scripts.Folder.LIST.LoadText.UICorner
G2L["ea"] = Instance.new("UICorner", G2L["e7"]);
G2L["ea"]["CornerRadius"] = UDim.new(0.4300000071525574, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Scripts.Folder.LIST.LoadText.ImageLabel
G2L["eb"] = Instance.new("ImageLabel", G2L["e7"]);
G2L["eb"]["BackgroundColor3"] = Color3.fromRGB(137, 126, 251);
G2L["eb"]["Image"] = [[rbxassetid://12732352613]];
G2L["eb"]["Size"] = UDim2.new(0.18111810088157654, 0, 0.64662104845047, 0);
G2L["eb"]["BackgroundTransparency"] = 1;
G2L["eb"]["Position"] = UDim2.new(0.7848451137542725, 0, 0.1616552621126175, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Scripts.Folder.LIST.LoadText.UIAspectRatioConstraint
G2L["ec"] = Instance.new("UIAspectRatioConstraint", G2L["e7"]);
G2L["ec"]["AspectRatio"] = 3.570162534713745;

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Scripts.Folder.LIST.Copy
G2L["ed"] = Instance.new("Frame", G2L["d5"]);
G2L["ed"]["BackgroundColor3"] = Color3.fromRGB(137, 126, 251);
G2L["ed"]["Size"] = UDim2.new(0.18748296797275543, 0, 0.09933300316333771, 0);
G2L["ed"]["Position"] = UDim2.new(0.7772064805030823, 0, 0.449604332447052, 0);
G2L["ed"]["Name"] = [[Copy]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Scripts.Folder.LIST.Copy.TextButton
G2L["ee"] = Instance.new("TextButton", G2L["ed"]);
G2L["ee"]["TextWrapped"] = true;
G2L["ee"]["BackgroundColor3"] = Color3.fromRGB(143, 130, 255);
G2L["ee"]["TextSize"] = 12;
G2L["ee"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["ee"]["TextColor3"] = Color3.fromRGB(252, 252, 252);
G2L["ee"]["Size"] = UDim2.new(0.8136826753616333, 0, 1, 0);
G2L["ee"]["Text"] = [[Copy]];
G2L["ee"]["Position"] = UDim2.new(-0.004637444857507944, 0, 0, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Scripts.Folder.LIST.Copy.TextButton.UICorner
G2L["ef"] = Instance.new("UICorner", G2L["ee"]);
G2L["ef"]["CornerRadius"] = UDim.new(0.4300000071525574, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Scripts.Folder.LIST.Copy.UICorner
G2L["f0"] = Instance.new("UICorner", G2L["ed"]);
G2L["f0"]["CornerRadius"] = UDim.new(0.4300000071525574, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Scripts.Folder.LIST.Copy.ImageLabel
G2L["f1"] = Instance.new("ImageLabel", G2L["ed"]);
G2L["f1"]["BackgroundColor3"] = Color3.fromRGB(137, 126, 251);
G2L["f1"]["Image"] = [[rbxassetid://12732363389]];
G2L["f1"]["Size"] = UDim2.new(0.18111810088157654, 0, 0.64662104845047, 0);
G2L["f1"]["BackgroundTransparency"] = 1;
G2L["f1"]["Position"] = UDim2.new(0.6791929006576538, 0, 0.1616552621126175, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Scripts.Folder.LIST.Copy.UIAspectRatioConstraint
G2L["f2"] = Instance.new("UIAspectRatioConstraint", G2L["ed"]);
G2L["f2"]["AspectRatio"] = 3.570162534713745;

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Scripts.Folder.LIST.Hide
G2L["f3"] = Instance.new("Frame", G2L["d5"]);
G2L["f3"]["BackgroundColor3"] = Color3.fromRGB(137, 126, 251);
G2L["f3"]["Size"] = UDim2.new(0.18748296797275543, 0, 0.09933300316333771, 0);
G2L["f3"]["Position"] = UDim2.new(0.7772064805030823, 0, 0.5887711048126221, 0);
G2L["f3"]["Name"] = [[Hide]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Scripts.Folder.LIST.Hide.TextButton
G2L["f4"] = Instance.new("TextButton", G2L["f3"]);
G2L["f4"]["TextWrapped"] = true;
G2L["f4"]["BackgroundColor3"] = Color3.fromRGB(143, 130, 255);
G2L["f4"]["TextSize"] = 12;
G2L["f4"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["f4"]["TextColor3"] = Color3.fromRGB(252, 252, 252);
G2L["f4"]["Size"] = UDim2.new(0.8136826753616333, 0, 1, 0);
G2L["f4"]["Text"] = [[Hide]];
G2L["f4"]["Position"] = UDim2.new(-0.004637444857507944, 0, 0, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Scripts.Folder.LIST.Hide.TextButton.UICorner
G2L["f5"] = Instance.new("UICorner", G2L["f4"]);
G2L["f5"]["CornerRadius"] = UDim.new(0.4300000071525574, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Scripts.Folder.LIST.Hide.UICorner
G2L["f6"] = Instance.new("UICorner", G2L["f3"]);
G2L["f6"]["CornerRadius"] = UDim.new(0.4300000071525574, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Scripts.Folder.LIST.Hide.ImageLabel
G2L["f7"] = Instance.new("ImageLabel", G2L["f3"]);
G2L["f7"]["BackgroundColor3"] = Color3.fromRGB(137, 126, 251);
G2L["f7"]["Image"] = [[rbxassetid://12731675545]];
G2L["f7"]["Size"] = UDim2.new(0.18111810088157654, 0, 0.64662104845047, 0);
G2L["f7"]["BackgroundTransparency"] = 1;
G2L["f7"]["Position"] = UDim2.new(0.6791929006576538, 0, 0.1616552621126175, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Scripts.Folder.LIST.Hide.UIAspectRatioConstraint
G2L["f8"] = Instance.new("UIAspectRatioConstraint", G2L["f3"]);
G2L["f8"]["AspectRatio"] = 3.570162534713745;

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Scripts.Folder.LIST.UIAspectRatioConstraint
G2L["f9"] = Instance.new("UIAspectRatioConstraint", G2L["d5"]);
G2L["f9"]["AspectRatio"] = 1.8915581703186035;

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Search
G2L["fa"] = Instance.new("Frame", G2L["cc"]);
G2L["fa"]["BackgroundColor3"] = Color3.fromRGB(137, 126, 251);
G2L["fa"]["Size"] = UDim2.new(0.1818244606256485, 0, 0.05602366104722023, 0);
G2L["fa"]["Position"] = UDim2.new(0.7872427105903625, 0, 0.05453909933567047, 0);
G2L["fa"]["Name"] = [[Search]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Search.TextButton
G2L["fb"] = Instance.new("TextButton", G2L["fa"]);
G2L["fb"]["TextWrapped"] = true;
G2L["fb"]["BackgroundColor3"] = Color3.fromRGB(143, 130, 255);
G2L["fb"]["TextSize"] = 12;
G2L["fb"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["fb"]["TextColor3"] = Color3.fromRGB(252, 252, 252);
G2L["fb"]["Size"] = UDim2.new(0.8136826753616333, 0, 1, 0);
G2L["fb"]["Text"] = [[Search]];
G2L["fb"]["Position"] = UDim2.new(-0.004637444857507944, 0, 0, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Search.TextButton.UICorner
G2L["fc"] = Instance.new("UICorner", G2L["fb"]);
G2L["fc"]["CornerRadius"] = UDim.new(0.4300000071525574, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Search.TextButton.LocalScript
G2L["fd"] = Instance.new("LocalScript", G2L["fb"]);


-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Search.UICorner
G2L["fe"] = Instance.new("UICorner", G2L["fa"]);
G2L["fe"]["CornerRadius"] = UDim.new(0.4300000071525574, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Search.ImageLabel
G2L["ff"] = Instance.new("ImageLabel", G2L["fa"]);
G2L["ff"]["BackgroundColor3"] = Color3.fromRGB(137, 126, 251);
G2L["ff"]["Image"] = [[rbxassetid://12732045195]];
G2L["ff"]["Size"] = UDim2.new(0.20393863320350647, 0, 0.7066323161125183, 0);
G2L["ff"]["BackgroundTransparency"] = 1;
G2L["ff"]["Position"] = UDim2.new(0.6510000228881836, 0, 0.14100000262260437, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Search.ImageLabel.UIAspectRatioConstraint
G2L["100"] = Instance.new("UIAspectRatioConstraint", G2L["ff"]);
G2L["100"]["AspectRatio"] = 1.0919350385665894;

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Search.UIAspectRatioConstraint
G2L["101"] = Instance.new("UIAspectRatioConstraint", G2L["fa"]);
G2L["101"]["AspectRatio"] = 3.4512600898742676;

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings
G2L["102"] = Instance.new("Frame", G2L["46"]);
G2L["102"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["102"]["BackgroundTransparency"] = 1;
G2L["102"]["Size"] = UDim2.new(0.8833174705505371, 0, 0.9945666193962097, 0);
G2L["102"]["Position"] = UDim2.new(0.11490308493375778, 0, 0.002866186201572418, 0);
G2L["102"]["Visible"] = false;
G2L["102"]["Name"] = [[Settings]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.WalkSpeed
G2L["103"] = Instance.new("Frame", G2L["102"]);
G2L["103"]["BackgroundColor3"] = Color3.fromRGB(13, 13, 13);
G2L["103"]["Size"] = UDim2.new(0.8807588219642639, 0, 0.06504495441913605, 0);
G2L["103"]["Position"] = UDim2.new(0.0572899729013443, 0, 0.05452737957239151, 0);
G2L["103"]["Name"] = [[WalkSpeed]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.WalkSpeed.UICorner
G2L["104"] = Instance.new("UICorner", G2L["103"]);


-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.WalkSpeed.TextLabel
G2L["105"] = Instance.new("TextLabel", G2L["103"]);
G2L["105"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["105"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["105"]["TextSize"] = 12;
G2L["105"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["105"]["Size"] = UDim2.new(0.20389226078987122, 0, 0.37544015049934387, 0);
G2L["105"]["Text"] = [[Walk Speed]];
G2L["105"]["BackgroundTransparency"] = 1;
G2L["105"]["Position"] = UDim2.new(-0.0010769229847937822, 0, 0.27152714133262634, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.WalkSpeed.TextBox
G2L["106"] = Instance.new("TextBox", G2L["103"]);
G2L["106"]["TextSize"] = 14;
G2L["106"]["BackgroundColor3"] = Color3.fromRGB(30, 30, 30);
G2L["106"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["106"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["106"]["Size"] = UDim2.new(0.10997192561626434, 0, 0.7088868021965027, 0);
G2L["106"]["Text"] = [[]];
G2L["106"]["Position"] = UDim2.new(0.880412757396698, 0, 0.13300003111362457, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.WalkSpeed.TextBox.UICorner
G2L["107"] = Instance.new("UICorner", G2L["106"]);
G2L["107"]["CornerRadius"] = UDim.new(0.699999988079071, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.WalkSpeed.Set
G2L["108"] = Instance.new("TextButton", G2L["103"]);
G2L["108"]["TextWrapped"] = true;
G2L["108"]["BackgroundColor3"] = Color3.fromRGB(30, 30, 30);
G2L["108"]["TextSize"] = 12;
G2L["108"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["108"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["108"]["Size"] = UDim2.new(0.14156842231750488, 0, 0.6646651029586792, 0);
G2L["108"]["Name"] = [[Set]];
G2L["108"]["Text"] = [[Set]];
G2L["108"]["Position"] = UDim2.new(0.7242141366004944, 0, 0.17700013518333435, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.WalkSpeed.Set.UICorner
G2L["109"] = Instance.new("UICorner", G2L["108"]);
G2L["109"]["CornerRadius"] = UDim.new(0.699999988079071, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.WalkSpeed.Set.LocalScript
G2L["10a"] = Instance.new("LocalScript", G2L["108"]);


-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.WalkSpeed.UIAspectRatioConstraint
G2L["10b"] = Instance.new("UIAspectRatioConstraint", G2L["103"]);
G2L["10b"]["AspectRatio"] = 14.399263381958008;

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.InviteLink
G2L["10c"] = Instance.new("TextButton", G2L["102"]);
G2L["10c"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["10c"]["BackgroundColor3"] = Color3.fromRGB(13, 13, 13);
G2L["10c"]["TextSize"] = 12;
G2L["10c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["10c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["10c"]["Size"] = UDim2.new(0.8820000290870667, 0, 0.06599999964237213, 0);
G2L["10c"]["Name"] = [[InviteLink]];
G2L["10c"]["Text"] = [[    Copy Discord Invite]];
G2L["10c"]["Position"] = UDim2.new(0.05668863654136658, 0, 0.35930559039115906, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.InviteLink.UICorner
G2L["10d"] = Instance.new("UICorner", G2L["10c"]);


-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.InviteLink.ImageLabel
G2L["10e"] = Instance.new("ImageLabel", G2L["10c"]);
G2L["10e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["10e"]["Image"] = [[rbxassetid://12732591607]];
G2L["10e"]["Size"] = UDim2.new(0.043016303330659866, 0, 0.6113002896308899, 0);
G2L["10e"]["BackgroundTransparency"] = 1;
G2L["10e"]["Position"] = UDim2.new(0.9340682625770569, 0, 0.17465722560882568, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.InviteLink.UIAspectRatioConstraint
G2L["10f"] = Instance.new("UIAspectRatioConstraint", G2L["10c"]);
G2L["10f"]["AspectRatio"] = 14.210898399353027;

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.InviteLink.LocalScript
G2L["110"] = Instance.new("LocalScript", G2L["10c"]);


-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.Credits
G2L["111"] = Instance.new("TextButton", G2L["102"]);
G2L["111"]["TextWrapped"] = true;
G2L["111"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["111"]["BackgroundColor3"] = Color3.fromRGB(13, 13, 13);
G2L["111"]["TextSize"] = 12;
G2L["111"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["111"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["111"]["Size"] = UDim2.new(0.8820000290870667, 0, 0.06599999964237213, 0);
G2L["111"]["Name"] = [[Credits]];
G2L["111"]["Text"] = [[    Show Credits]];
G2L["111"]["Position"] = UDim2.new(0.05668863654136658, 0, 0.4601701498031616, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.Credits.UICorner
G2L["112"] = Instance.new("UICorner", G2L["111"]);


-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.Credits.ImageLabel
G2L["113"] = Instance.new("ImageLabel", G2L["111"]);
G2L["113"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["113"]["Image"] = [[rbxassetid://12732608625]];
G2L["113"]["Size"] = UDim2.new(0.043016303330659866, 0, 0.6113002896308899, 0);
G2L["113"]["BackgroundTransparency"] = 1;
G2L["113"]["Position"] = UDim2.new(0.9340682625770569, 0, 0.17465722560882568, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.Credits.UIAspectRatioConstraint
G2L["114"] = Instance.new("UIAspectRatioConstraint", G2L["111"]);
G2L["114"]["AspectRatio"] = 14.210898399353027;

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.Credits.LocalScript
G2L["115"] = Instance.new("LocalScript", G2L["111"]);


-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.UnlockFPS
G2L["116"] = Instance.new("TextButton", G2L["102"]);
G2L["116"]["TextWrapped"] = true;
G2L["116"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["116"]["TextScaled"] = true;
G2L["116"]["BackgroundColor3"] = Color3.fromRGB(13, 13, 13);
G2L["116"]["TextSize"] = 12;
G2L["116"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["116"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["116"]["Size"] = UDim2.new(0.8820000290870667, 0, 0.06599999964237213, 0);
G2L["116"]["Name"] = [[UnlockFPS]];
G2L["116"]["Text"] = [[    Unlock FPS]];
G2L["116"]["Position"] = UDim2.new(0.05668863654136658, 0, 0.5523891448974609, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.UnlockFPS.UICorner
G2L["117"] = Instance.new("UICorner", G2L["116"]);


-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.UnlockFPS.ImageLabel
G2L["118"] = Instance.new("ImageLabel", G2L["116"]);
G2L["118"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["118"]["Image"] = [[rbxassetid://12732606548]];
G2L["118"]["Size"] = UDim2.new(0.043016303330659866, 0, 0.6113002896308899, 0);
G2L["118"]["BackgroundTransparency"] = 1;
G2L["118"]["Position"] = UDim2.new(0.9340682625770569, 0, 0.17465722560882568, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.UnlockFPS.UIAspectRatioConstraint
G2L["119"] = Instance.new("UIAspectRatioConstraint", G2L["116"]);
G2L["119"]["AspectRatio"] = 14.210898399353027;

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.UnlockFPS.UITextSizeConstraint
G2L["11a"] = Instance.new("UITextSizeConstraint", G2L["116"]);
G2L["11a"]["MaxTextSize"] = 12;

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.UnlockFPS.LocalScript
G2L["11b"] = Instance.new("LocalScript", G2L["116"]);


-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.JumpPower
G2L["11c"] = Instance.new("Frame", G2L["102"]);
G2L["11c"]["BackgroundColor3"] = Color3.fromRGB(13, 13, 13);
G2L["11c"]["Size"] = UDim2.new(0.8807588219642639, 0, 0.06504495441913605, 0);
G2L["11c"]["Position"] = UDim2.new(0.0572899729013443, 0, 0.15539193153381348, 0);
G2L["11c"]["Name"] = [[JumpPower]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.JumpPower.UICorner
G2L["11d"] = Instance.new("UICorner", G2L["11c"]);


-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.JumpPower.TextLabel
G2L["11e"] = Instance.new("TextLabel", G2L["11c"]);
G2L["11e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["11e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["11e"]["TextSize"] = 12;
G2L["11e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["11e"]["Size"] = UDim2.new(0.20389226078987122, 0, 0.37544015049934387, 0);
G2L["11e"]["Text"] = [[Jump Power]];
G2L["11e"]["BackgroundTransparency"] = 1;
G2L["11e"]["Position"] = UDim2.new(-0.0010769229847937822, 0, 0.27152714133262634, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.JumpPower.TextBox
G2L["11f"] = Instance.new("TextBox", G2L["11c"]);
G2L["11f"]["TextSize"] = 14;
G2L["11f"]["BackgroundColor3"] = Color3.fromRGB(30, 30, 30);
G2L["11f"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["11f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["11f"]["Size"] = UDim2.new(0.10997192561626434, 0, 0.7088868021965027, 0);
G2L["11f"]["Text"] = [[]];
G2L["11f"]["Position"] = UDim2.new(0.880412757396698, 0, 0.13300003111362457, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.JumpPower.TextBox.UICorner
G2L["120"] = Instance.new("UICorner", G2L["11f"]);
G2L["120"]["CornerRadius"] = UDim.new(0.699999988079071, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.JumpPower.Set
G2L["121"] = Instance.new("TextButton", G2L["11c"]);
G2L["121"]["TextWrapped"] = true;
G2L["121"]["BackgroundColor3"] = Color3.fromRGB(30, 30, 30);
G2L["121"]["TextSize"] = 12;
G2L["121"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["121"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["121"]["Size"] = UDim2.new(0.14156842231750488, 0, 0.6646651029586792, 0);
G2L["121"]["Name"] = [[Set]];
G2L["121"]["Text"] = [[Set]];
G2L["121"]["Position"] = UDim2.new(0.7242141366004944, 0, 0.17700013518333435, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.JumpPower.Set.UICorner
G2L["122"] = Instance.new("UICorner", G2L["121"]);
G2L["122"]["CornerRadius"] = UDim.new(0.699999988079071, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.JumpPower.Set.LocalScript
G2L["123"] = Instance.new("LocalScript", G2L["121"]);


-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.JumpPower.UIAspectRatioConstraint
G2L["124"] = Instance.new("UIAspectRatioConstraint", G2L["11c"]);
G2L["124"]["AspectRatio"] = 14.399263381958008;

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.Gravity
G2L["125"] = Instance.new("Frame", G2L["102"]);
G2L["125"]["BackgroundColor3"] = Color3.fromRGB(13, 13, 13);
G2L["125"]["Size"] = UDim2.new(0.8807588219642639, 0, 0.06504495441913605, 0);
G2L["125"]["Position"] = UDim2.new(0.05700000002980232, 0, 0.257999986410141, 0);
G2L["125"]["Name"] = [[Gravity]];

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.Gravity.UICorner
G2L["126"] = Instance.new("UICorner", G2L["125"]);


-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.Gravity.TextLabel
G2L["127"] = Instance.new("TextLabel", G2L["125"]);
G2L["127"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["127"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["127"]["TextSize"] = 12;
G2L["127"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["127"]["Size"] = UDim2.new(0.14991775155067444, 0, 0.37544018030166626, 0);
G2L["127"]["Text"] = [[Gravity]];
G2L["127"]["BackgroundTransparency"] = 1;
G2L["127"]["Position"] = UDim2.new(-0.0010769232176244259, 0, 0.27152714133262634, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.Gravity.TextBox
G2L["128"] = Instance.new("TextBox", G2L["125"]);
G2L["128"]["TextSize"] = 14;
G2L["128"]["BackgroundColor3"] = Color3.fromRGB(30, 30, 30);
G2L["128"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["128"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["128"]["Size"] = UDim2.new(0.10997192561626434, 0, 0.7088868021965027, 0);
G2L["128"]["Text"] = [[]];
G2L["128"]["Position"] = UDim2.new(0.880412757396698, 0, 0.13300003111362457, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.Gravity.TextBox.UICorner
G2L["129"] = Instance.new("UICorner", G2L["128"]);
G2L["129"]["CornerRadius"] = UDim.new(0.699999988079071, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.Gravity.Set
G2L["12a"] = Instance.new("TextButton", G2L["125"]);
G2L["12a"]["TextWrapped"] = true;
G2L["12a"]["BackgroundColor3"] = Color3.fromRGB(30, 30, 30);
G2L["12a"]["TextSize"] = 12;
G2L["12a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["12a"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["12a"]["Size"] = UDim2.new(0.14156842231750488, 0, 0.6646651029586792, 0);
G2L["12a"]["Name"] = [[Set]];
G2L["12a"]["Text"] = [[Set]];
G2L["12a"]["Position"] = UDim2.new(0.7242141366004944, 0, 0.17700013518333435, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.Gravity.Set.UICorner
G2L["12b"] = Instance.new("UICorner", G2L["12a"]);
G2L["12b"]["CornerRadius"] = UDim.new(0.699999988079071, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.Gravity.Set.LocalScript
G2L["12c"] = Instance.new("LocalScript", G2L["12a"]);


-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.Gravity.UIAspectRatioConstraint
G2L["12d"] = Instance.new("UIAspectRatioConstraint", G2L["125"]);
G2L["12d"]["AspectRatio"] = 14.399263381958008;

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.Gravity.Reset
G2L["12e"] = Instance.new("TextButton", G2L["125"]);
G2L["12e"]["TextWrapped"] = true;
G2L["12e"]["BackgroundColor3"] = Color3.fromRGB(30, 30, 30);
G2L["12e"]["TextSize"] = 12;
G2L["12e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["12e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["12e"]["Size"] = UDim2.new(0.14156842231750488, 0, 0.6646651029586792, 0);
G2L["12e"]["Name"] = [[Reset]];
G2L["12e"]["Text"] = [[Reset]];
G2L["12e"]["Position"] = UDim2.new(0.5699999928474426, 0, 0.1770000010728836, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.Gravity.Reset.UICorner
G2L["12f"] = Instance.new("UICorner", G2L["12e"]);
G2L["12f"]["CornerRadius"] = UDim.new(0.699999988079071, 0);

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.Gravity.Reset.LocalScript
G2L["130"] = Instance.new("LocalScript", G2L["12e"]);


-- StarterGui.DeltaGui.MainUi.MainFrame.UIAspectRatioConstraint
G2L["131"] = Instance.new("UIAspectRatioConstraint", G2L["25"]);
G2L["131"]["AspectRatio"] = 1.1973302364349365;

-- StarterGui.DeltaGui.MainUi.MainFrame.DraggableStuff
G2L["132"] = Instance.new("LocalScript", G2L["25"]);
G2L["132"]["Name"] = [[DraggableStuff]];

-- StarterGui.DeltaGui.FloatingIcon
G2L["133"] = Instance.new("ImageButton", G2L["1"]);
G2L["133"]["BackgroundColor3"] = Color3.fromRGB(20, 20, 23);
G2L["133"]["Image"] = [[rbxassetid://12730597972]];
G2L["133"]["Size"] = UDim2.new(0.07388234883546829, 0, 0.1319999247789383, 0);
G2L["133"]["Name"] = [[FloatingIcon]];
G2L["133"]["Visible"] = false;
G2L["133"]["Position"] = UDim2.new(0.09859155118465424, 0, 0.01671314239501953, 0);

-- StarterGui.DeltaGui.FloatingIcon.UICorner
G2L["134"] = Instance.new("UICorner", G2L["133"]);
G2L["134"]["CornerRadius"] = UDim.new(0.25, 0);

-- StarterGui.DeltaGui.FloatingIcon.LocalScript
G2L["135"] = Instance.new("LocalScript", G2L["133"]);


-- StarterGui.DeltaGui.FloatingIcon.UIAspectRatioConstraint
G2L["136"] = Instance.new("UIAspectRatioConstraint", G2L["133"]);
G2L["136"]["AspectRatio"] = 0.9962615966796875;

-- Require G2L wrapper
local G2L_REQUIRE = require;
local G2L_MODULES = {};
local function require(Module:ModuleScript)
	local ModuleState = G2L_MODULES[Module];
	if ModuleState then
		if not ModuleState.Required then
			ModuleState.Required = true;
			ModuleState.Value = ModuleState.Closure();
		end
		return ModuleState.Value;
	end;
	return G2L_REQUIRE(Module);
end

G2L_MODULES[G2L["60"]] = {
	Closure = function()
		local script = G2L["60"];
		-- Lexer by sleitnick
		-- Everything else by me, bread. lol.


		local module = {}

		local syntax 	   = require(script.Syntax)
		local getLines 	   = require(script.GetLines)
		local fakeEditor   = require(script.FakeEditor)
		local textFixer    = require(script.TextFixer)
		local getLine 	   = require(script.GetLine)
		local tween 	   = require(script.TweenLibrary)
		local suggestions  = require(script.Suggestions)

		function module.new(frame)
			local newEditor = script.Editor:Clone()
			newEditor.Parent = frame

			local editorObj  	= fakeEditor.new(newEditor)
			local textbox 	 	= newEditor.Scroll.Source
			local linesLabel 	= newEditor.Scroll.Left.Lines
			local lineHighlight = textbox.LineHighlight

			local highlightBox = Instance.new("TextLabel")
			highlightBox.Size = UDim2.new(1, 0,1, 0)
			highlightBox.Position = UDim2.new(0, 0,0, 0)
			highlightBox.TextColor3 = textbox.TextColor3
			highlightBox.BackgroundTransparency = 1
			highlightBox.Name = "Syntax"
			highlightBox.RichText = true
			highlightBox.TextSize = textbox.TextSize
			highlightBox.Font = textbox.Font
			highlightBox.TextXAlignment = Enum.TextXAlignment.Left
			highlightBox.TextYAlignment = Enum.TextYAlignment.Top
			highlightBox.TextStrokeColor3 = Color3.fromRGB(40, 40, 40)
			highlightBox.TextStrokeTransparency = 0.1
			highlightBox.Text = ""
			highlightBox.Parent = textbox

			editorObj:SetTheme("default")
			textFixer.Fix(highlightBox)
			suggestions:Start(newEditor)

			textbox:GetPropertyChangedSignal("Text"):Connect(function()
				syntax.Highlight(highlightBox, textbox.Text)

				-- Fix tabs
				textbox.Text = textbox.Text:gsub("\t", "    ")
				--textbox.CursorPosition += 4

				-- Update line count
				linesLabel.Text = getLines.GetLinesString(textbox.Text)
			end)

			textbox:GetPropertyChangedSignal("CursorPosition"):Connect(function()
				-- Position line highlight
				local lineYPos = ((getLine:GetCurrentLine(textbox) * textbox.TextSize) - math.ceil(lineHighlight.AbsoluteSize.Y / 2)) + 4

				if lineYPos ~= lineHighlight.Position.Y.Offset then
					tween.TweenPosition(lineHighlight, UDim2.new(0, -10,0, lineYPos), 0.1, Enum.EasingStyle.Quad)
				end
			end)

			return editorObj
		end

		return module

	end;
};
G2L_MODULES[G2L["61"]] = {
	Closure = function()
		local script = G2L["61"];
		local module = {}

		local lexer 	= require(script.Parent.Lexer)
		local theme 	= require(script.Parent.Theme)
		local textFixer = require(script.Parent.TextFixer)

		local function ColorToFont(text, color)
			return string.format(
				'<font color="rgb(%s,%s,%s)">%s</font>',
				tostring(math.floor(color.R * 255)),
				tostring(math.floor(color.G * 255)),
				tostring(math.floor(color.B * 255)),
				text
			)
		end

		function module.Highlight(textbox, source)
			textbox.Text = ""

			for tokenType, text in lexer.scan(source) do
				local currentTheme = theme.current
				local tokenCol = currentTheme[tokenType]

				if tokenCol then
					textbox.Text = textbox.Text .. ColorToFont(text, tokenCol)
				else
					textbox.Text = textbox.Text .. text
				end
			end

			textFixer.Fix(textbox)
		end

		return module

	end;
};
G2L_MODULES[G2L["62"]] = {
	Closure = function()
		local script = G2L["62"];
		local theme = {
			current = nil,
			themes = {
				["default"] = {
					["keyword"] = Color3.fromRGB(248, 109, 124),
					["builtin"] = Color3.fromRGB(84, 184, 247),
					["string"] = Color3.fromRGB(130, 241, 149),
					["number"] = Color3.fromRGB(255, 198, 0),
					["comment"] = Color3.fromRGB(106, 106, 100),
					["thingy"] = Color3.fromRGB(253, 251, 154)
				},
				["extra 2"] = {
					["keyword"] = Color3.fromRGB(249, 36, 114),
					["builtin"] = Color3.fromRGB(95, 209, 250),
					["string"] = Color3.fromRGB(217, 219, 88),
					["number"] = Color3.fromRGB(161, 118, 209),
					["comment"] = Color3.fromRGB(116, 122, 101),
					["thingy"] = Color3.fromRGB(248, 245, 139)
				}
			}
		}

		return theme

	end;
};
G2L_MODULES[G2L["63"]] = {
	Closure = function()
		local script = G2L["63"];
		local module = {}

		function module.GetLines(text)
			local amount = 1

			text:gsub("\n", function()
				amount += 1
			end)

			return amount
		end

		function module.GetLinesString(text)
			local lineAmt = module.GetLines(text)
			local result = ""

			for i = 1, lineAmt do
				result = result .. i .. "\n"
			end

			-- Remove last \n
			result = result:sub(1, #result - 1)

			return result
		end

		return module

	end;
};
G2L_MODULES[G2L["64"]] = {
	Closure = function()
		local script = G2L["64"];
		local fakeEditor = {} -- Main module

		local textFixer = require(script.Parent.TextFixer)
		local theme = require(script.Parent.Theme)
		local syntax = require(script.Parent.Syntax)

		local editorObj = {
			SetTextSize = function(self, textSize)
				local sourceBox = self.Editor.Scroll.Source
				local syntaxBox = sourceBox.Syntax
				local linesBox = self.Editor.Scroll.Left.Lines
				local lineHighlight = sourceBox.LineHighlight

				sourceBox.TextSize = textSize
				syntaxBox.TextSize = textSize
				linesBox.TextSize = textSize
				lineHighlight.Size = UDim2.new(1, 0,0, textSize + 5)


		--[[
			Might want to fix it manually because adding another \n
			might cause some instability
		]]
				textFixer.Fix(self.Editor.Scroll.Source.Syntax)

				return textSize
			end,
			Destroy = function(self)
				self.Editor:Destroy()
				setmetatable(self, {__index = nil})
				table.clear(self)
				self = nil

				return nil
			end,
			GetText = function(self)
				local sourceBox = self.Editor.Scroll.Source
				return sourceBox.Text
			end,
			SetText = function(self, text)
				local sourceBox = self.Editor.Scroll.Source
				sourceBox.Text = text

				return text
			end,
			ContentToBytes = function(self)
				local text = self.Editor.Scroll.Source.Text
				local bytes = {}

				for _, c in pairs(text:split("")) do
					table.insert(bytes, string.byte(c))
				end

				return "/" .. table.concat(bytes, "/")
			end,
			Hide = function(self)
				local hiddenLabel = self.Editor.Scroll.Source.Hidden
				hiddenLabel.Visible = true
			end,
			Unhide = function(self)
				local hiddenLabel = self.Editor.Scroll.Source.Hidden
				hiddenLabel.Visible = false
			end,
			SetTheme = function(self, themeName)
				local sourceBox = self.Editor.Scroll.Source
				local syntaxBox = sourceBox.Syntax

				assert(theme.themes[themeName], "'" .. themeName .. "' is not a valid theme.")

				theme.current = theme.themes[themeName]

				-- Update highlighting
				syntax.Highlight(syntaxBox, sourceBox.Text)
			end,
		}

		function fakeEditor.new(editor)
			return setmetatable({Editor = editor}, {__index = editorObj})
		end

		return fakeEditor

	end;
};
G2L_MODULES[G2L["65"]] = {
	Closure = function()
		local script = G2L["65"];
		local module = {}

		function module.peekBack(self)
			return self.text:sub(self.position - 1, self.position - 1)
		end

		function module.next(self)
			self.position += 1

			self.character = self.text:sub(self.position, self.position)

			if self.character == "\n" then
				self.lines += 1
			end

			if self.position < #self.text and self.position < self.cursorPosition then
				self:next()
			end
		end

		function module.GetCurrentLine(self, textbox)
			self.position = 0
			self.text = textbox.Text .. " "
			self.cursorPosition = textbox.CursorPosition
			self.lines = 1

			self:next()

			return self.lines
		end

		function module.GetCurrentLineWidth(self, textbox)
			self.position = 0
			self.text = textbox.Text .. " "
			self.cursorPosition = textbox.CursorPosition
			self.lines = 1

			self:next()

			-- self.lines is the current line

			return self.position
		end

		return module

	end;
};
G2L_MODULES[G2L["66"]] = {
	Closure = function()
		local script = G2L["66"];
		local module = {}

		local tweenService = game:GetService("TweenService")
		local debris = game:GetService("Debris")

		-- Custom functions
		local function default(arg, def)
			if arg == nil then
				arg = def
			end
			return arg
		end

		-- Guis --

		function module.TweenScale(frame, scale, timelen, easingstyle, easingdir)
			local uiscale
			if not frame:FindFirstChild("$ScaleAnim") then
				uiscale = Instance.new("UIScale")
				uiscale.Scale = 1
				uiscale.Name = "$ScaleAnim"
				uiscale.Parent = frame
			end

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				Scale = scale
			}

			-- Finally, play tween
			tweenService:Create(uiscale, tinfo, goals):Play()
			--debris:AddItem(uiscale, timelen) -- Remove it when animation is done
		end

		function module.TweenPosition(frame, position, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(position, "No position provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				Position = position
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenSize(frame, size, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(size, "No size provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				Size = size
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenBackgroundColor3(frame, color, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(color, "No color provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				BackgroundColor3 = color
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenBackgroundTransparency(frame, transparency, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(transparency, "No transparency provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				BackgroundTransparency = transparency
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenBorderColor3(frame, color, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(color, "No color provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				BorderColor3 = color
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenBorderSizePixel(frame, bordersize, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(bordersize, "No border size provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				BorderSizePixel = bordersize
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenImageTransparency(frame, imagetransparency, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(imagetransparency, "No image transparency provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				ImageTransparency = imagetransparency
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenImageColor3(frame, color, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(color, "No color provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				ImageColor3 = color
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenImageRectOffset(frame, offset, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(offset, "No offset provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				ImageRectOffset = offset
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenImageRectSize(frame, size, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(size, "No size provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				ImageRectSize = size
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenSliceScale(frame, scale, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(scale, "No scale provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				SliceScale = scale
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenTextColor3(frame, color, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(color, "No color provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				TextColor3 = color
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenMaxVisibleGraphemes(frame, graphemes, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(graphemes, "No graphemes provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				MaxVisibleGraphemes = graphemes
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenTextSize(frame, size, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(size, "No size provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				TextSize = size
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenTextStrokeColor3(frame, color, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(color, "No color provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				TextStrokeColor3 = color
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenTextTransparency(frame, transparency, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(transparency, "No transparency provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				TextTransparency = transparency
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenTextStrokeTransparency(frame, transparency, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(transparency, "No transparency provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				TextStrokeTransparency = transparency
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenCanvasSize(frame, size, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(size, "No size provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				CanvasSize = size
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenCanvasPosition(frame, position, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(position, "No position provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				CanvasPosition = position
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenScrollBarImageTransparency(frame, transparency, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(transparency, "No transparency provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				ScrollBarImageTransparency = transparency
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenScrollBarThickness(frame, thickness, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(thickness, "No thickness provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				ScrollBarThickness = thickness
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenScrollBarImageColor3(frame, color, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(color, "No color provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				ScrollBarImageColor3 = color
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenCFrame(thing, cframe, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(thing, "No instance provided")
			assert(cframe, "No cframe provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				CFrame = cframe
			}

			-- Finally, play tween
			tweenService:Create(thing, tinfo, goals):Play()
		end

		function module.TweenFOV(thing, fov, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(thing, "No instance provided")
			assert(fov, "No FOV provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				FieldOfView = fov
			}

			-- Finally, play tween
			tweenService:Create(thing, tinfo, goals):Play()
		end

		function module.TweenValue(thing, value, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(thing, "No instance provided")
			assert(value, "No value provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				Value = value
			}

			-- Finally, play tween
			tweenService:Create(thing, tinfo, goals):Play()
		end

		function module.TweenVolume(thing, volume, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(thing, "No instance provided")
			assert(volume, "No volume provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				Volume = volume
			}

			-- Finally, play tween
			tweenService:Create(thing, tinfo, goals):Play()
		end

		return module

	end;
};
G2L_MODULES[G2L["67"]] = {
	Closure = function()
		local script = G2L["67"];
		local module = {}

		function module.next(self)
			self.position += 1
			local character = self.text:sub(self.position, self.position)

			if character == "\n" or character == " " or self.position > #self.text then
				return self.position - 1
			else
				return self:next()
			end
		end

		function module.prev(self)
			self.position -= 1
			local character = self.text:sub(self.position, self.position)

			if character == "\n" or character == " " or self.position < 1 then
				return self.position + 1
			else
				return self:prev()
			end
		end

		function module.GetCurrentWord(self, textbox)
			self.cursorPosition = textbox.CursorPosition
			self.position = self.cursorPosition
			self.text = textbox.Text

			local wordEnd = self:next()
			local wordStart = self:prev()
			local wordString = self.text:sub(wordStart, wordEnd)

			return wordString
		end

		return module

	end;
};
G2L_MODULES[G2L["68"]] = {
	Closure = function()
		local script = G2L["68"];
--[[

	Lexical scanner for creating a sequence of tokens from Lua source code.

	This is a heavily modified and Roblox-optimized version of
	the original Penlight Lexer module:
		https://github.com/stevedonovan/Penlight

	Authors:
		stevedonovan <https://github.com/stevedonovan> ----------------- Original Penlight lexer author
		ryanjmulder  <https://github.com/ryanjmulder>  ----------------- Penlight lexer contributer
		mpeterv      <https://github.com/mpeterv>      ----------------- Penlight lexer contributer
		Tieske       <https://github.com/Tieske>       ----------------- Penlight lexer contributer
		boatbomber   <https://github.com/boatbomber>   ----------------- Roblox port, optimizations, and bug fixes
		Sleitnick    <https://github.com/Sleitnick>    ----------------- Roblox optimizations

	Usage:

		local source = "for i = 1,n do end"
		
		-- The 'scan' function returns a token iterator:
		for token,src in lexer.scan(source) do
			print(token, src)
		end

			> keyword for
			> iden    i
			> =       =
			> number  1
			> ,       ,
			> iden    n
			> keyword do
			> keyword end

	List of tokens:
		- keyword
		- builtin
		- iden
		- string
		- number
		- space
		- comment

	Other tokens that don't fall into the above categories
	will simply be returned as itself. For instance, operators
	like "+" will simply return "+" as the token.

--]]

		local lexer = {}

		local yield, wrap  = coroutine.yield, coroutine.wrap
		local strfind      = string.find
		local strsub       = string.sub
		local append       = table.insert
		local type         = type

		local NUMBER1	= "^[%+%-]?%d+%.?%d*[eE][%+%-]?%d+"
		local NUMBER2	= "^[%+%-]?%d+%.?%d*"
		local NUMBER3	= "^0x[%da-fA-F]+"
		local NUMBER4	= "^%d+%.?%d*[eE][%+%-]?%d+"
		local NUMBER5	= "^%d+%.?%d*"
		local IDEN		= "^[%a_][%w_]*"
		local WSPACE	= "^%s+"
		local STRING1	= "^(['\"])%1"							--Empty String
		local STRING2	= [[^(['"])(\*)%2%1]]
		local STRING3	= [[^(['"]).-[^\](\*)%2%1]]
		local STRING4	= "^(['\"]).-.*"						--Incompleted String
		local STRING5	= "^%[(=*)%[.-%]%1%]"					--Multiline-String
		local STRING6	= "^%[%[.-.*"							--Incompleted Multiline-String
		local CHAR1		= "^''"
		local CHAR2		= [[^'(\*)%1']]
		local CHAR3		= [[^'.-[^\](\*)%1']]
		local PREPRO	= "^#.-[^\\]\n"
		local MCOMMENT1	= "^%-%-%[(=*)%[.-%]%1%]"				--Completed Multiline-Comment
		local MCOMMENT2	= "^%-%-%[%[.-.*"						--Incompleted Multiline-Comment
		local SCOMMENT1	= "^%-%-.-\n"							--Completed Singleline-Comment
		local SCOMMENT2	= "^%-%-.-.*"							--Incompleted Singleline-Comment
		local THINGY 	= "^[%.:]%w-%s?%(.-%)"

		local lua_keyword = {
			["and"] = true,  ["break"] = true,  ["do"] = true,      ["else"] = true,      ["elseif"] = true,
			["end"] = true,  ["false"] = true,  ["for"] = true,     ["function"] = true,  ["if"] = true,
			["in"] = true,   ["local"] = true,  ["nil"] = true,     ["not"] = true,       ["while"] = true,
			["or"] = true,   ["repeat"] = true, ["return"] = true,  ["then"] = true,      ["true"] = true,
			["self"] = true, ["until"] = true
		}

		local lua_builtin = {
			["assert"] = true;["collectgarbage"] = true;["error"] = true;["_G"] = true;
			["gcinfo"] = true;["getfenv"] = true;["getmetatable"] = true;["ipairs"] = true;
			["loadstring"] = true;["newproxy"] = true;["next"] = true;["pairs"] = true;
			["pcall"] = true;["print"] = true;["rawequal"] = true;["rawget"] = true;["rawset"] = true;
			["select"] = true;["setfenv"] = true;["setmetatable"] = true;["tonumber"] = true;
			["tostring"] = true;["type"] = true;["unpack"] = true;["_VERSION"] = true;["xpcall"] = true;
			["delay"] = true;["elapsedTime"] = true;["require"] = true;["spawn"] = true;["tick"] = true;
			["time"] = true;["typeof"] = true;["UserSettings"] = true;["wait"] = true;["warn"] = true;
			["game"] = true;["Enum"] = true;["script"] = true;["shared"] = true;["workspace"] = true;
			["Axes"] = true;["BrickColor"] = true;["CFrame"] = true;["Color3"] = true;["ColorSequence"] = true;
			["ColorSequenceKeypoint"] = true;["Faces"] = true;["Instance"] = true;["NumberRange"] = true;
			["NumberSequence"] = true;["NumberSequenceKeypoint"] = true;["PhysicalProperties"] = true;
			["Random"] = true;["Ray"] = true;["Rect"] = true;["Region3"] = true;["Region3int16"] = true;
			["TweenInfo"] = true;["UDim"] = true;["UDim2"] = true;["Vector2"] = true;["Vector3"] = true;
			["Vector3int16"] = true;["next"] = true;["dofile"] = true;["writefile"] = true;["readfile"] = true;
			["isfile"] = true;["delfile"] = true;["isfolder"] = true;["makefolder"] = true;["delfolder"] = true;["listfiles"] = true;
			["descend"] = true;
			["os"] = true;
			--["os.time"] = true;["os.date"] = true;["os.difftime"] = true;
			["debug"] = true;
			--["debug.traceback"] = true;["debug.profilebegin"] = true;["debug.profileend"] = true;
			["math"] = true;
			--["math.abs"] = true;["math.acos"] = true;["math.asin"] = true;["math.atan"] = true;["math.atan2"] = true;["math.ceil"] = true;["math.clamp"] = true;["math.cos"] = true;["math.cosh"] = true;["math.deg"] = true;["math.exp"] = true;["math.floor"] = true;["math.fmod"] = true;["math.frexp"] = true;["math.ldexp"] = true;["math.log"] = true;["math.log10"] = true;["math.max"] = true;["math.min"] = true;["math.modf"] = true;["math.noise"] = true;["math.pow"] = true;["math.rad"] = true;["math.random"] = true;["math.randomseed"] = true;["math.sign"] = true;["math.sin"] = true;["math.sinh"] = true;["math.sqrt"] = true;["math.tan"] = true;["math.tanh"] = true;
			["coroutine"] = true;
			--["coroutine.create"] = true;["coroutine.resume"] = true;["coroutine.running"] = true;["coroutine.status"] = true;["coroutine.wrap"] = true;["coroutine.yield"] = true;
			["string"] = true;
			--["string.byte"] = true;["string.char"] = true;["string.dump"] = true;["string.find"] = true;["string.format"] = true;["string.len"] = true;["string.lower"] = true;["string.match"] = true;["string.rep"] = true;["string.reverse"] = true;["string.sub"] = true;["string.upper"] = true;["string.gmatch"] = true;["string.gsub"] = true;
			["table"] = true;
			--["table.concat"] = true;["table.insert"] = true;["table.remove"] = true;["table.sort"] = true;
		}

		local function tdump(tok)
			return yield(tok, tok)
		end

		local function ndump(tok)
			return yield("number", tok)
		end

		local function sdump(tok)
			return yield("string", tok)
		end

		local function cdump(tok)
			return yield("comment", tok)
		end

		local function wsdump(tok)
			return yield("space", tok)
		end

		local function lua_vdump(tok)
			if (lua_keyword[tok]) then
				return yield("keyword", tok)
			elseif (lua_builtin[tok]) then
				return yield("builtin", tok)
			else
				return yield("iden", tok)
			end
		end

		local function thingy_dump(tok)
			return yield("thingy", tok)
		end

		local lua_matches = {
			{THINGY, thingy_dump},

			{IDEN,      lua_vdump},        -- Indentifiers
			{WSPACE,    wsdump},           -- Whitespace
			{NUMBER3,   ndump},            -- Numbers
			{NUMBER4,   ndump},
			{NUMBER5,   ndump},
			{STRING1,   sdump},            -- Strings
			{STRING2,   sdump},
			{STRING3,   sdump},
			{STRING4,   sdump},
			{STRING5,   sdump},            -- Multiline-Strings
			{STRING6,   sdump},            -- Multiline-Strings

			{MCOMMENT1, cdump},            -- Multiline-Comments
			{MCOMMENT2, cdump},			
			{SCOMMENT1, cdump},            -- Singleline-Comments
			{SCOMMENT2, cdump},

			{"^==",     tdump},            -- Operators
			{"^~=",     tdump},
			{"^<=",     tdump},
			{"^>=",     tdump},
			{"^%.%.%.", tdump},
			{"^%.%.",   tdump},
			{"^.",      tdump},
		}

		local num_lua_matches = #lua_matches


		--- Create a plain token iterator from a string.
		-- @tparam string s a string.
		function lexer.scan(s)

			local function lex(first_arg)

				local line_nr = 0
				local sz = #s
				local idx = 1

				-- res is the value used to resume the coroutine.
				local function handle_requests(res)
					while (res) do
						local tp = type(res)
						-- Insert a token list:
						if (tp == "table") then
							res = yield("", "")
							for i = 1,#res do
								local t = res[i]
								res = yield(t[1], t[2])
							end
						elseif (tp == "string") then -- Or search up to some special pattern:
							local i1, i2 = strfind(s, res, idx)
							if (i1) then
								local tok = strsub(s, i1, i2)
								idx = (i2 + 1)
								res = yield("", tok)
							else
								res = yield("", "")
								idx = (sz + 1)
							end
						else
							res = yield(line_nr, idx)
						end
					end
				end

				handle_requests(first_arg)
				line_nr = 1

				while (true) do

					if (idx > sz) then
						while (true) do
							handle_requests(yield())
						end
					end

					for i = 1,num_lua_matches do
						local m = lua_matches[i]
						local pat = m[1]
						local fun = m[2]
						local findres = {strfind(s, pat, idx)}
						local i1, i2 = findres[1], findres[2]
						if (i1) then
							local tok = strsub(s, i1, i2)
							idx = (i2 + 1)
							lexer.finished = (idx > sz)
							local res = fun(tok, findres)
							if (tok:find("\n")) then
								-- Update line number:
								local _,newlines = tok:gsub("\n", {})
								line_nr = (line_nr + newlines)
							end
							handle_requests(res)
							break
						end
					end

				end

			end

			return wrap(lex)

		end

		return lexer
	end;
};
G2L_MODULES[G2L["69"]] = {
	Closure = function()
		local script = G2L["69"];
		local module = {}

		--// Vars
		local words   = require(script.Parent.Words)
		local GetWord = require(script.Parent.GetWord)
		local getLine = require(script.Parent.GetLine)

		--// Funcs
		function module.GetCurrentWord(self)
			return GetWord:GetCurrentWord(self.Textbox)
		end

		function module.Search(self)

			return nil
		end

		function module.Start(self, editor)
			self.Editor = editor
			self.Textbox = editor.Scroll.Source
			self.SuggestionButton = self.Textbox.Suggestion

			self.Textbox:GetPropertyChangedSignal("Text"):Connect(function()
				local foundWord, matchedLength = nil

				if foundWord then
					local position = UDim2.new(0, 0,0, getLine:GetCurrentLine(self.Textbox) * self.Textbox.TextSize)

					self.SuggestionButton.Text = foundWord
					self.SuggestionButton.Position = position
					self.SuggestionButton.Visible = true
					self.MatchedLength = matchedLength
				else
					self.SuggestionButton.Visible = false
				end
			end)

			self.SuggestionButton.MouseButton1Click:Connect(function(input)
				-- Fill in the word
				local word = self.SuggestionButton.Text
				self.SuggestionButton.Visible = false
				self.Textbox.Text = self.Textbox.Text:sub(1, self.Textbox.CursorPosition - 1 - (self.MatchedLength or 0)) .. word .. self.Textbox.Text:sub(self.Textbox.CursorPosition + 1, #self.Textbox.Text)

				local newCursorPosition = self.Textbox.CursorPosition + #word - self.MatchedLength
				wait()
				self.Textbox:ReleaseFocus()
				self.Textbox:CaptureFocus()
				self.Textbox.CursorPosition = newCursorPosition
			end)
		end

		return module

	end;
};
G2L_MODULES[G2L["6a"]] = {
	Closure = function()
		local script = G2L["6a"];
		local words = {
			['print'] = 'builtin',
			['warn'] = 'builtin',
			['Vector3'] = 'builtin',
			['Vector2'] = 'builtin',
			['error'] = 'builtin',
			['Instance'] = 'builtin',
			['game'] = 'builtin',
			['script'] = 'builtin',
			['workspace'] = 'builtin',

			['while'] = 'keyword',
			['true'] = 'keyword',
			['false'] = 'keyword',
			['then'] = 'keyword',
			['do'] = 'keyword',
			['if'] = 'keyword',
		}

		return words

	end;
};
G2L_MODULES[G2L["6b"]] = {
	Closure = function()
		local script = G2L["6b"];
		-- Fixes a Roblox bug with RichText

		-- If the bug gets fixed, this will break the editor (visually).
		-- In this case, please remove any instances of this module being used.

		local module = {}

		function module.Fix(textbox)
			if textbox.Text:sub(1, 1) ~= "\n" then
				textbox.Text = "\n" .. textbox.Text
			end

			textbox.Position = UDim2.new(0, -3.5,0,-8.8)
			textbox.Size = UDim2.new(1, 4,1, textbox.TextSize)
		end

		return module

	end;
};
G2L_MODULES[G2L["b0"]] = {
	Closure = function()
		local script = G2L["b0"];
		-- Lexer by sleitnick
		-- Everything else by me, bread. lol.


		local module = {}

		local syntax 	   = require(script.Syntax)
		local getLines 	   = require(script.GetLines)
		local fakeEditor   = require(script.FakeEditor)
		local textFixer    = require(script.TextFixer)
		local getLine 	   = require(script.GetLine)
		local tween 	   = require(script.TweenLibrary)
		local suggestions  = require(script.Suggestions)

		function module.new(frame)
			local newEditor = script.Editor:Clone()
			newEditor.Parent = frame

			local editorObj  	= fakeEditor.new(newEditor)
			local textbox 	 	= newEditor.Scroll.Source
			local linesLabel 	= newEditor.Scroll.Left.Lines
			local lineHighlight = textbox.LineHighlight

			local highlightBox = Instance.new("TextLabel")
			highlightBox.Size = UDim2.new(1, 0,1, 0)
			highlightBox.Position = UDim2.new(0, 0,0, 0)
			highlightBox.TextColor3 = textbox.TextColor3
			highlightBox.BackgroundTransparency = 1
			highlightBox.Name = "Syntax"
			highlightBox.RichText = true
			highlightBox.TextSize = textbox.TextSize
			highlightBox.Font = textbox.Font
			highlightBox.TextXAlignment = Enum.TextXAlignment.Left
			highlightBox.TextYAlignment = Enum.TextYAlignment.Top
			highlightBox.TextStrokeColor3 = Color3.fromRGB(40, 40, 40)
			highlightBox.TextStrokeTransparency = 0.1
			highlightBox.Text = ""
			highlightBox.Parent = textbox

			editorObj:SetTheme("default")
			textFixer.Fix(highlightBox)
			suggestions:Start(newEditor)

			textbox:GetPropertyChangedSignal("Text"):Connect(function()
				syntax.Highlight(highlightBox, textbox.Text)

				-- Fix tabs
				textbox.Text = textbox.Text:gsub("\t", "    ")
				--textbox.CursorPosition += 4

				-- Update line count
				linesLabel.Text = getLines.GetLinesString(textbox.Text)
			end)

			textbox:GetPropertyChangedSignal("CursorPosition"):Connect(function()
				-- Position line highlight
				local lineYPos = ((getLine:GetCurrentLine(textbox) * textbox.TextSize) - math.ceil(lineHighlight.AbsoluteSize.Y / 2)) + 4

				if lineYPos ~= lineHighlight.Position.Y.Offset then
					tween.TweenPosition(lineHighlight, UDim2.new(0, -10,0, lineYPos), 0.1, Enum.EasingStyle.Quad)
				end
			end)

			return editorObj
		end

		return module

	end;
};
G2L_MODULES[G2L["b1"]] = {
	Closure = function()
		local script = G2L["b1"];
		local module = {}

		local lexer 	= require(script.Parent.Lexer)
		local theme 	= require(script.Parent.Theme)
		local textFixer = require(script.Parent.TextFixer)

		local function ColorToFont(text, color)
			return string.format(
				'<font color="rgb(%s,%s,%s)">%s</font>',
				tostring(math.floor(color.R * 255)),
				tostring(math.floor(color.G * 255)),
				tostring(math.floor(color.B * 255)),
				text
			)
		end

		function module.Highlight(textbox, source)
			textbox.Text = ""

			for tokenType, text in lexer.scan(source) do
				local currentTheme = theme.current
				local tokenCol = currentTheme[tokenType]

				if tokenCol then
					textbox.Text = textbox.Text .. ColorToFont(text, tokenCol)
				else
					textbox.Text = textbox.Text .. text
				end
			end

			textFixer.Fix(textbox)
		end

		return module

	end;
};
G2L_MODULES[G2L["b2"]] = {
	Closure = function()
		local script = G2L["b2"];
		local theme = {
			current = nil,
			themes = {
				["default"] = {
					["keyword"] = Color3.fromRGB(248, 109, 124),
					["builtin"] = Color3.fromRGB(84, 184, 247),
					["string"] = Color3.fromRGB(130, 241, 149),
					["number"] = Color3.fromRGB(255, 198, 0),
					["comment"] = Color3.fromRGB(106, 106, 100),
					["thingy"] = Color3.fromRGB(253, 251, 154)
				},
				["extra 2"] = {
					["keyword"] = Color3.fromRGB(249, 36, 114),
					["builtin"] = Color3.fromRGB(95, 209, 250),
					["string"] = Color3.fromRGB(217, 219, 88),
					["number"] = Color3.fromRGB(161, 118, 209),
					["comment"] = Color3.fromRGB(116, 122, 101),
					["thingy"] = Color3.fromRGB(248, 245, 139)
				}
			}
		}

		return theme

	end;
};
G2L_MODULES[G2L["b3"]] = {
	Closure = function()
		local script = G2L["b3"];
		local module = {}

		function module.GetLines(text)
			local amount = 1

			text:gsub("\n", function()
				amount += 1
			end)

			return amount
		end

		function module.GetLinesString(text)
			local lineAmt = module.GetLines(text)
			local result = ""

			for i = 1, lineAmt do
				result = result .. i .. "\n"
			end

			-- Remove last \n
			result = result:sub(1, #result - 1)

			return result
		end

		return module

	end;
};
G2L_MODULES[G2L["b4"]] = {
	Closure = function()
		local script = G2L["b4"];
		local fakeEditor = {} -- Main module

		local textFixer = require(script.Parent.TextFixer)
		local theme = require(script.Parent.Theme)
		local syntax = require(script.Parent.Syntax)

		local editorObj = {
			SetTextSize = function(self, textSize)
				local sourceBox = self.Editor.Scroll.Source
				local syntaxBox = sourceBox.Syntax
				local linesBox = self.Editor.Scroll.Left.Lines
				local lineHighlight = sourceBox.LineHighlight

				sourceBox.TextSize = textSize
				syntaxBox.TextSize = textSize
				linesBox.TextSize = textSize
				lineHighlight.Size = UDim2.new(1, 0,0, textSize + 5)


		--[[
			Might want to fix it manually because adding another \n
			might cause some instability
		]]
				textFixer.Fix(self.Editor.Scroll.Source.Syntax)

				return textSize
			end,
			Destroy = function(self)
				self.Editor:Destroy()
				setmetatable(self, {__index = nil})
				table.clear(self)
				self = nil

				return nil
			end,
			GetText = function(self)
				local sourceBox = self.Editor.Scroll.Source
				return sourceBox.Text
			end,
			SetText = function(self, text)
				local sourceBox = self.Editor.Scroll.Source
				sourceBox.Text = text

				return text
			end,
			ContentToBytes = function(self)
				local text = self.Editor.Scroll.Source.Text
				local bytes = {}

				for _, c in pairs(text:split("")) do
					table.insert(bytes, string.byte(c))
				end

				return "/" .. table.concat(bytes, "/")
			end,
			Hide = function(self)
				local hiddenLabel = self.Editor.Scroll.Source.Hidden
				hiddenLabel.Visible = true
			end,
			Unhide = function(self)
				local hiddenLabel = self.Editor.Scroll.Source.Hidden
				hiddenLabel.Visible = false
			end,
			SetTheme = function(self, themeName)
				local sourceBox = self.Editor.Scroll.Source
				local syntaxBox = sourceBox.Syntax

				assert(theme.themes[themeName], "'" .. themeName .. "' is not a valid theme.")

				theme.current = theme.themes[themeName]

				-- Update highlighting
				syntax.Highlight(syntaxBox, sourceBox.Text)
			end,
		}

		function fakeEditor.new(editor)
			return setmetatable({Editor = editor}, {__index = editorObj})
		end

		return fakeEditor

	end;
};
G2L_MODULES[G2L["b5"]] = {
	Closure = function()
		local script = G2L["b5"];
		local module = {}

		function module.peekBack(self)
			return self.text:sub(self.position - 1, self.position - 1)
		end

		function module.next(self)
			self.position += 1

			self.character = self.text:sub(self.position, self.position)

			if self.character == "\n" then
				self.lines += 1
			end

			if self.position < #self.text and self.position < self.cursorPosition then
				self:next()
			end
		end

		function module.GetCurrentLine(self, textbox)
			self.position = 0
			self.text = textbox.Text .. " "
			self.cursorPosition = textbox.CursorPosition
			self.lines = 1

			self:next()

			return self.lines
		end

		function module.GetCurrentLineWidth(self, textbox)
			self.position = 0
			self.text = textbox.Text .. " "
			self.cursorPosition = textbox.CursorPosition
			self.lines = 1

			self:next()

			-- self.lines is the current line

			return self.position
		end

		return module

	end;
};
G2L_MODULES[G2L["b6"]] = {
	Closure = function()
		local script = G2L["b6"];
		local module = {}

		local tweenService = game:GetService("TweenService")
		local debris = game:GetService("Debris")

		-- Custom functions
		local function default(arg, def)
			if arg == nil then
				arg = def
			end
			return arg
		end

		-- Guis --

		function module.TweenScale(frame, scale, timelen, easingstyle, easingdir)
			local uiscale
			if not frame:FindFirstChild("$ScaleAnim") then
				uiscale = Instance.new("UIScale")
				uiscale.Scale = 1
				uiscale.Name = "$ScaleAnim"
				uiscale.Parent = frame
			end

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				Scale = scale
			}

			-- Finally, play tween
			tweenService:Create(uiscale, tinfo, goals):Play()
			--debris:AddItem(uiscale, timelen) -- Remove it when animation is done
		end

		function module.TweenPosition(frame, position, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(position, "No position provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				Position = position
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenSize(frame, size, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(size, "No size provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				Size = size
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenBackgroundColor3(frame, color, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(color, "No color provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				BackgroundColor3 = color
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenBackgroundTransparency(frame, transparency, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(transparency, "No transparency provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				BackgroundTransparency = transparency
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenBorderColor3(frame, color, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(color, "No color provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				BorderColor3 = color
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenBorderSizePixel(frame, bordersize, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(bordersize, "No border size provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				BorderSizePixel = bordersize
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenImageTransparency(frame, imagetransparency, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(imagetransparency, "No image transparency provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				ImageTransparency = imagetransparency
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenImageColor3(frame, color, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(color, "No color provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				ImageColor3 = color
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenImageRectOffset(frame, offset, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(offset, "No offset provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				ImageRectOffset = offset
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenImageRectSize(frame, size, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(size, "No size provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				ImageRectSize = size
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenSliceScale(frame, scale, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(scale, "No scale provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				SliceScale = scale
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenTextColor3(frame, color, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(color, "No color provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				TextColor3 = color
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenMaxVisibleGraphemes(frame, graphemes, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(graphemes, "No graphemes provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				MaxVisibleGraphemes = graphemes
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenTextSize(frame, size, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(size, "No size provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				TextSize = size
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenTextStrokeColor3(frame, color, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(color, "No color provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				TextStrokeColor3 = color
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenTextTransparency(frame, transparency, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(transparency, "No transparency provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				TextTransparency = transparency
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenTextStrokeTransparency(frame, transparency, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(transparency, "No transparency provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				TextStrokeTransparency = transparency
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenCanvasSize(frame, size, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(size, "No size provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				CanvasSize = size
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenCanvasPosition(frame, position, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(position, "No position provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				CanvasPosition = position
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenScrollBarImageTransparency(frame, transparency, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(transparency, "No transparency provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				ScrollBarImageTransparency = transparency
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenScrollBarThickness(frame, thickness, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(thickness, "No thickness provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				ScrollBarThickness = thickness
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenScrollBarImageColor3(frame, color, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(color, "No color provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				ScrollBarImageColor3 = color
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenCFrame(thing, cframe, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(thing, "No instance provided")
			assert(cframe, "No cframe provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				CFrame = cframe
			}

			-- Finally, play tween
			tweenService:Create(thing, tinfo, goals):Play()
		end

		function module.TweenFOV(thing, fov, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(thing, "No instance provided")
			assert(fov, "No FOV provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				FieldOfView = fov
			}

			-- Finally, play tween
			tweenService:Create(thing, tinfo, goals):Play()
		end

		function module.TweenValue(thing, value, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(thing, "No instance provided")
			assert(value, "No value provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				Value = value
			}

			-- Finally, play tween
			tweenService:Create(thing, tinfo, goals):Play()
		end

		function module.TweenVolume(thing, volume, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(thing, "No instance provided")
			assert(volume, "No volume provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				Volume = volume
			}

			-- Finally, play tween
			tweenService:Create(thing, tinfo, goals):Play()
		end

		return module

	end;
};
G2L_MODULES[G2L["b7"]] = {
	Closure = function()
		local script = G2L["b7"];
		local module = {}

		function module.next(self)
			self.position += 1
			local character = self.text:sub(self.position, self.position)

			if character == "\n" or character == " " or self.position > #self.text then
				return self.position - 1
			else
				return self:next()
			end
		end

		function module.prev(self)
			self.position -= 1
			local character = self.text:sub(self.position, self.position)

			if character == "\n" or character == " " or self.position < 1 then
				return self.position + 1
			else
				return self:prev()
			end
		end

		function module.GetCurrentWord(self, textbox)
			self.cursorPosition = textbox.CursorPosition
			self.position = self.cursorPosition
			self.text = textbox.Text

			local wordEnd = self:next()
			local wordStart = self:prev()
			local wordString = self.text:sub(wordStart, wordEnd)

			return wordString
		end

		return module

	end;
};
G2L_MODULES[G2L["b8"]] = {
	Closure = function()
		local script = G2L["b8"];
--[[

	Lexical scanner for creating a sequence of tokens from Lua source code.

	This is a heavily modified and Roblox-optimized version of
	the original Penlight Lexer module:
		https://github.com/stevedonovan/Penlight

	Authors:
		stevedonovan <https://github.com/stevedonovan> ----------------- Original Penlight lexer author
		ryanjmulder  <https://github.com/ryanjmulder>  ----------------- Penlight lexer contributer
		mpeterv      <https://github.com/mpeterv>      ----------------- Penlight lexer contributer
		Tieske       <https://github.com/Tieske>       ----------------- Penlight lexer contributer
		boatbomber   <https://github.com/boatbomber>   ----------------- Roblox port, optimizations, and bug fixes
		Sleitnick    <https://github.com/Sleitnick>    ----------------- Roblox optimizations

	Usage:

		local source = "for i = 1,n do end"
		
		-- The 'scan' function returns a token iterator:
		for token,src in lexer.scan(source) do
			print(token, src)
		end

			> keyword for
			> iden    i
			> =       =
			> number  1
			> ,       ,
			> iden    n
			> keyword do
			> keyword end

	List of tokens:
		- keyword
		- builtin
		- iden
		- string
		- number
		- space
		- comment

	Other tokens that don't fall into the above categories
	will simply be returned as itself. For instance, operators
	like "+" will simply return "+" as the token.

--]]

		local lexer = {}

		local yield, wrap  = coroutine.yield, coroutine.wrap
		local strfind      = string.find
		local strsub       = string.sub
		local append       = table.insert
		local type         = type

		local NUMBER1	= "^[%+%-]?%d+%.?%d*[eE][%+%-]?%d+"
		local NUMBER2	= "^[%+%-]?%d+%.?%d*"
		local NUMBER3	= "^0x[%da-fA-F]+"
		local NUMBER4	= "^%d+%.?%d*[eE][%+%-]?%d+"
		local NUMBER5	= "^%d+%.?%d*"
		local IDEN		= "^[%a_][%w_]*"
		local WSPACE	= "^%s+"
		local STRING1	= "^(['\"])%1"							--Empty String
		local STRING2	= [[^(['"])(\*)%2%1]]
		local STRING3	= [[^(['"]).-[^\](\*)%2%1]]
		local STRING4	= "^(['\"]).-.*"						--Incompleted String
		local STRING5	= "^%[(=*)%[.-%]%1%]"					--Multiline-String
		local STRING6	= "^%[%[.-.*"							--Incompleted Multiline-String
		local CHAR1		= "^''"
		local CHAR2		= [[^'(\*)%1']]
		local CHAR3		= [[^'.-[^\](\*)%1']]
		local PREPRO	= "^#.-[^\\]\n"
		local MCOMMENT1	= "^%-%-%[(=*)%[.-%]%1%]"				--Completed Multiline-Comment
		local MCOMMENT2	= "^%-%-%[%[.-.*"						--Incompleted Multiline-Comment
		local SCOMMENT1	= "^%-%-.-\n"							--Completed Singleline-Comment
		local SCOMMENT2	= "^%-%-.-.*"							--Incompleted Singleline-Comment
		local THINGY 	= "^[%.:]%w-%s?%(.-%)"

		local lua_keyword = {
			["and"] = true,  ["break"] = true,  ["do"] = true,      ["else"] = true,      ["elseif"] = true,
			["end"] = true,  ["false"] = true,  ["for"] = true,     ["function"] = true,  ["if"] = true,
			["in"] = true,   ["local"] = true,  ["nil"] = true,     ["not"] = true,       ["while"] = true,
			["or"] = true,   ["repeat"] = true, ["return"] = true,  ["then"] = true,      ["true"] = true,
			["self"] = true, ["until"] = true
		}

		local lua_builtin = {
			["assert"] = true;["collectgarbage"] = true;["error"] = true;["_G"] = true;
			["gcinfo"] = true;["getfenv"] = true;["getmetatable"] = true;["ipairs"] = true;
			["loadstring"] = true;["newproxy"] = true;["next"] = true;["pairs"] = true;
			["pcall"] = true;["print"] = true;["rawequal"] = true;["rawget"] = true;["rawset"] = true;
			["select"] = true;["setfenv"] = true;["setmetatable"] = true;["tonumber"] = true;
			["tostring"] = true;["type"] = true;["unpack"] = true;["_VERSION"] = true;["xpcall"] = true;
			["delay"] = true;["elapsedTime"] = true;["require"] = true;["spawn"] = true;["tick"] = true;
			["time"] = true;["typeof"] = true;["UserSettings"] = true;["wait"] = true;["warn"] = true;
			["game"] = true;["Enum"] = true;["script"] = true;["shared"] = true;["workspace"] = true;
			["Axes"] = true;["BrickColor"] = true;["CFrame"] = true;["Color3"] = true;["ColorSequence"] = true;
			["ColorSequenceKeypoint"] = true;["Faces"] = true;["Instance"] = true;["NumberRange"] = true;
			["NumberSequence"] = true;["NumberSequenceKeypoint"] = true;["PhysicalProperties"] = true;
			["Random"] = true;["Ray"] = true;["Rect"] = true;["Region3"] = true;["Region3int16"] = true;
			["TweenInfo"] = true;["UDim"] = true;["UDim2"] = true;["Vector2"] = true;["Vector3"] = true;
			["Vector3int16"] = true;["next"] = true;["dofile"] = true;["writefile"] = true;["readfile"] = true;
			["isfile"] = true;["delfile"] = true;["isfolder"] = true;["makefolder"] = true;["delfolder"] = true;["listfiles"] = true;
			["descend"] = true;
			["os"] = true;
			--["os.time"] = true;["os.date"] = true;["os.difftime"] = true;
			["debug"] = true;
			--["debug.traceback"] = true;["debug.profilebegin"] = true;["debug.profileend"] = true;
			["math"] = true;
			--["math.abs"] = true;["math.acos"] = true;["math.asin"] = true;["math.atan"] = true;["math.atan2"] = true;["math.ceil"] = true;["math.clamp"] = true;["math.cos"] = true;["math.cosh"] = true;["math.deg"] = true;["math.exp"] = true;["math.floor"] = true;["math.fmod"] = true;["math.frexp"] = true;["math.ldexp"] = true;["math.log"] = true;["math.log10"] = true;["math.max"] = true;["math.min"] = true;["math.modf"] = true;["math.noise"] = true;["math.pow"] = true;["math.rad"] = true;["math.random"] = true;["math.randomseed"] = true;["math.sign"] = true;["math.sin"] = true;["math.sinh"] = true;["math.sqrt"] = true;["math.tan"] = true;["math.tanh"] = true;
			["coroutine"] = true;
			--["coroutine.create"] = true;["coroutine.resume"] = true;["coroutine.running"] = true;["coroutine.status"] = true;["coroutine.wrap"] = true;["coroutine.yield"] = true;
			["string"] = true;
			--["string.byte"] = true;["string.char"] = true;["string.dump"] = true;["string.find"] = true;["string.format"] = true;["string.len"] = true;["string.lower"] = true;["string.match"] = true;["string.rep"] = true;["string.reverse"] = true;["string.sub"] = true;["string.upper"] = true;["string.gmatch"] = true;["string.gsub"] = true;
			["table"] = true;
			--["table.concat"] = true;["table.insert"] = true;["table.remove"] = true;["table.sort"] = true;
		}

		local function tdump(tok)
			return yield(tok, tok)
		end

		local function ndump(tok)
			return yield("number", tok)
		end

		local function sdump(tok)
			return yield("string", tok)
		end

		local function cdump(tok)
			return yield("comment", tok)
		end

		local function wsdump(tok)
			return yield("space", tok)
		end

		local function lua_vdump(tok)
			if (lua_keyword[tok]) then
				return yield("keyword", tok)
			elseif (lua_builtin[tok]) then
				return yield("builtin", tok)
			else
				return yield("iden", tok)
			end
		end

		local function thingy_dump(tok)
			return yield("thingy", tok)
		end

		local lua_matches = {
			{THINGY, thingy_dump},

			{IDEN,      lua_vdump},        -- Indentifiers
			{WSPACE,    wsdump},           -- Whitespace
			{NUMBER3,   ndump},            -- Numbers
			{NUMBER4,   ndump},
			{NUMBER5,   ndump},
			{STRING1,   sdump},            -- Strings
			{STRING2,   sdump},
			{STRING3,   sdump},
			{STRING4,   sdump},
			{STRING5,   sdump},            -- Multiline-Strings
			{STRING6,   sdump},            -- Multiline-Strings

			{MCOMMENT1, cdump},            -- Multiline-Comments
			{MCOMMENT2, cdump},			
			{SCOMMENT1, cdump},            -- Singleline-Comments
			{SCOMMENT2, cdump},

			{"^==",     tdump},            -- Operators
			{"^~=",     tdump},
			{"^<=",     tdump},
			{"^>=",     tdump},
			{"^%.%.%.", tdump},
			{"^%.%.",   tdump},
			{"^.",      tdump},
		}

		local num_lua_matches = #lua_matches


		--- Create a plain token iterator from a string.
		-- @tparam string s a string.
		function lexer.scan(s)

			local function lex(first_arg)

				local line_nr = 0
				local sz = #s
				local idx = 1

				-- res is the value used to resume the coroutine.
				local function handle_requests(res)
					while (res) do
						local tp = type(res)
						-- Insert a token list:
						if (tp == "table") then
							res = yield("", "")
							for i = 1,#res do
								local t = res[i]
								res = yield(t[1], t[2])
							end
						elseif (tp == "string") then -- Or search up to some special pattern:
							local i1, i2 = strfind(s, res, idx)
							if (i1) then
								local tok = strsub(s, i1, i2)
								idx = (i2 + 1)
								res = yield("", tok)
							else
								res = yield("", "")
								idx = (sz + 1)
							end
						else
							res = yield(line_nr, idx)
						end
					end
				end

				handle_requests(first_arg)
				line_nr = 1

				while (true) do

					if (idx > sz) then
						while (true) do
							handle_requests(yield())
						end
					end

					for i = 1,num_lua_matches do
						local m = lua_matches[i]
						local pat = m[1]
						local fun = m[2]
						local findres = {strfind(s, pat, idx)}
						local i1, i2 = findres[1], findres[2]
						if (i1) then
							local tok = strsub(s, i1, i2)
							idx = (i2 + 1)
							lexer.finished = (idx > sz)
							local res = fun(tok, findres)
							if (tok:find("\n")) then
								-- Update line number:
								local _,newlines = tok:gsub("\n", {})
								line_nr = (line_nr + newlines)
							end
							handle_requests(res)
							break
						end
					end

				end

			end

			return wrap(lex)

		end

		return lexer
	end;
};
G2L_MODULES[G2L["b9"]] = {
	Closure = function()
		local script = G2L["b9"];
		local module = {}

		--// Vars
		local words   = require(script.Parent.Words)
		local GetWord = require(script.Parent.GetWord)
		local getLine = require(script.Parent.GetLine)

		--// Funcs
		function module.GetCurrentWord(self)
			return GetWord:GetCurrentWord(self.Textbox)
		end

		function module.Search(self)

			return nil
		end

		function module.Start(self, editor)
			self.Editor = editor
			self.Textbox = editor.Scroll.Source
			self.SuggestionButton = self.Textbox.Suggestion

			self.Textbox:GetPropertyChangedSignal("Text"):Connect(function()
				local foundWord, matchedLength = nil

				if foundWord then
					local position = UDim2.new(0, 0,0, getLine:GetCurrentLine(self.Textbox) * self.Textbox.TextSize)

					self.SuggestionButton.Text = foundWord
					self.SuggestionButton.Position = position
					self.SuggestionButton.Visible = true
					self.MatchedLength = matchedLength
				else
					self.SuggestionButton.Visible = false
				end
			end)

			self.SuggestionButton.MouseButton1Click:Connect(function(input)
				-- Fill in the word
				local word = self.SuggestionButton.Text
				self.SuggestionButton.Visible = false
				self.Textbox.Text = self.Textbox.Text:sub(1, self.Textbox.CursorPosition - 1 - (self.MatchedLength or 0)) .. word .. self.Textbox.Text:sub(self.Textbox.CursorPosition + 1, #self.Textbox.Text)

				local newCursorPosition = self.Textbox.CursorPosition + #word - self.MatchedLength
				wait()
				self.Textbox:ReleaseFocus()
				self.Textbox:CaptureFocus()
				self.Textbox.CursorPosition = newCursorPosition
			end)
		end

		return module

	end;
};
G2L_MODULES[G2L["ba"]] = {
	Closure = function()
		local script = G2L["ba"];
		local words = {
			['print'] = 'builtin',
			['warn'] = 'builtin',
			['Vector3'] = 'builtin',
			['Vector2'] = 'builtin',
			['error'] = 'builtin',
			['Instance'] = 'builtin',
			['game'] = 'builtin',
			['script'] = 'builtin',
			['workspace'] = 'builtin',

			['while'] = 'keyword',
			['true'] = 'keyword',
			['false'] = 'keyword',
			['then'] = 'keyword',
			['do'] = 'keyword',
			['if'] = 'keyword',
		}

		return words

	end;
};
G2L_MODULES[G2L["bb"]] = {
	Closure = function()
		local script = G2L["bb"];
		-- Fixes a Roblox bug with RichText

		-- If the bug gets fixed, this will break the editor (visually).
		-- In this case, please remove any instances of this module being used.

		local module = {}

		function module.Fix(textbox)
			if textbox.Text:sub(1, 1) ~= "\n" then
				textbox.Text = "\n" .. textbox.Text
			end

			textbox.Position = UDim2.new(0, -3.5,0,-8.8)
			textbox.Size = UDim2.new(1, 4,1, textbox.TextSize)
		end

		return module

	end;
};
-- StarterGui.DeltaGui.KeySystem.MainKeyFrame.Continue.TextButton.LocalScript
local function C_12()
	local script = G2L["12"];
	local btn = script.Parent
	local key = script.Parent.Parent.Parent.SideTextbox.MainTextBox
	btn.MouseButton1Click:Connect(function()
		if key.Text == "TEST KEY" then
			script.Parent.Parent.Parent.Parent.Parent.FloatingIcon.Visible =true
			script.Parent.Parent.Parent.Visible = false
		end
	end)
end;
task.spawn(C_12);
-- StarterGui.DeltaGui.KeySystem.MainKeyFrame.GetKey.TextButton.LocalScript
local function C_19()
	local script = G2L["19"];
	local btn = script.Parent
	btn.MouseButton1Click:Connect(function()
		setclipboard("LINK HERE")
	end)
end;
task.spawn(C_19);
-- StarterGui.DeltaGui.KeySystem.MainKeyFrame.JoinServer.TextButton.LocalScript
local function C_20()
	local script = G2L["20"];
	local btn = script.Parent
	btn.MouseButton1Click:Connect(function()
		setclipboard("LINK HERE")
	end)
end;
task.spawn(C_20);
-- StarterGui.DeltaGui.MainUi.MainFrame.SideFrame.Buttons.Home.LocalScript
local function C_30()
	local script = G2L["30"];
	local btn = script.Parent

	btn.MouseButton1Click:Connect(function()
		btn.Image = btn.OnImage.Value
		for _,v in pairs(script.Parent.Parent:GetChildren()) do
			if v.Name ~= script.Parent.Name then
				if v:FindFirstChild("OffImage") and v:FindFirstChild("OnImage") then
					v.Image = v.OffImage.Value
				end
			end
		end
		for _,v in pairs(script.Parent.Parent.Parent.Parent.Tabs:GetChildren()) do
			if v.Name ~= btn.Name then
				v.Visible = false
			else
				v.Visible = true
			end
		end
	end)

end;
task.spawn(C_30);
-- StarterGui.DeltaGui.MainUi.MainFrame.SideFrame.Buttons.MakeScript.LocalScript
local function C_35()
	local script = G2L["35"];
	local btn = script.Parent

	btn.MouseButton1Click:Connect(function()
		btn.Image = btn.OnImage.Value
		for _,v in pairs(script.Parent.Parent:GetChildren()) do
			if v.Name ~= script.Parent.Name then
				if v:FindFirstChild("OffImage") and v:FindFirstChild("OnImage") then
					v.Image = v.OffImage.Value
				end
			end
		end
		for _,v in pairs(script.Parent.Parent.Parent.Parent.Tabs:GetChildren()) do
			if v.Name ~= btn.Name then
				v.Visible = false
			else
				v.Visible = true
			end
		end
	end)

end;
task.spawn(C_35);
-- StarterGui.DeltaGui.MainUi.MainFrame.SideFrame.Buttons.Minimize.LocalScript
local function C_3a()
	local script = G2L["3a"];
	local btn = script.Parent

	btn.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.Parent.Parent.MainFrame.Visible = false
		script.Parent.Parent.Parent.Parent.Parent.Parent.FloatingIcon.Visible = true
	end)


end;
task.spawn(C_3a);
-- StarterGui.DeltaGui.MainUi.MainFrame.SideFrame.Buttons.Settings.LocalScript
local function C_3f()
	local script = G2L["3f"];
	local btn = script.Parent

	btn.MouseButton1Click:Connect(function()
		btn.Image = btn.OnImage.Value
		for _,v in pairs(script.Parent.Parent:GetChildren()) do
			if v.Name ~= script.Parent.Name then
				if v:FindFirstChild("OffImage") and v:FindFirstChild("OnImage") then
					v.Image = v.OffImage.Value
				end
			end
		end
		for _,v in pairs(script.Parent.Parent.Parent.Parent.Tabs:GetChildren()) do
			if v.Name ~= btn.Name then
				v.Visible = false
			else
				v.Visible = true
			end
		end
	end)

end;
task.spawn(C_3f);
-- StarterGui.DeltaGui.MainUi.MainFrame.SideFrame.Buttons.Scripts.LocalScript
local function C_44()
	local script = G2L["44"];
	local btn = script.Parent

	btn.MouseButton1Click:Connect(function()
		btn.Image = btn.OnImage.Value
		for _,v in pairs(script.Parent.Parent:GetChildren()) do
			if v.Name ~= script.Parent.Name then
				if v:FindFirstChild("OffImage") and v:FindFirstChild("OnImage") then
					v.Image = v.OffImage.Value
				end
			end
		end
		for _,v in pairs(script.Parent.Parent.Parent.Parent.Tabs:GetChildren()) do
			if v.Name ~= btn.Name then
				v.Visible = false
			else
				v.Visible = true
			end
		end
	end)

end;
task.spawn(C_44);
-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.GoBack.TextButton.LocalScript
local function C_51()
	local script = G2L["51"];
	local btn = script.Parent



	btn.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.Parent.AddScript1.Visible = true
		script.Parent.Parent.Parent.Parent.ScriptTextbox.Visible = false
		script.Parent.Parent.Parent.Parent.Scripts.Visible = true
		script.Parent.Parent.Parent.Parent.TitleScript.Visible = false
	end)
end;
task.spawn(C_51);
-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.AddScript.TextButton.LocalScript



	local script = G2L["58"];
	local btn = script.Parent

	local function AddScript(name, source, loading)
        if(loading == false) then
            makefolder("d_android_script_dir")
            writefile("d_android_script_dir/" .. name, source)
        end
		local parent = script.Parent.Parent.Parent.Parent.Scripts.ScriptFrame
		local hub = script.Parent.Parent.Parent.Parent.Scripts.LIST
		local newhub = hub:Clone()

		local scriptname = newhub.TitleScript.TextLabel
		local execbutton = newhub.Execute.TextButton
		local delbutton = newhub.Delete.TextButton

		newhub.Parent = parent
		newhub.Visible = true
		scriptname.Text = name
		execbutton.MouseButton1Click:Connect(function()
			loadstring(source)()
			game.StarterGui:SetCore("SendNotification", 
            {
            Title = "Delta Android";
            Text = "Successfully executed the script!";
            Duration = 1;
            })
		end)
		delbutton.MouseButton1Click:Connect(function()
            delfile("d_android_script_dir/"..name)
			newhub:Destroy()
		end)
	end

    for _, file in ipairs(listfiles("d_android_script_dir")) do
        AddScript(file:sub(22, #file), readfile(file), true)
    end


	btn.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.Parent.AddScript1.Visible = true
		script.Parent.Parent.Parent.Parent.ScriptTextbox.Visible = false
		script.Parent.Parent.Parent.Parent.Scripts.Visible = true
		script.Parent.Parent.Parent.Parent.TitleScript.Visible = false

		AddScript(script.Parent.Parent.Parent.Parent.TitleScript.MainTextBox.Text, script.Parent.Parent.Parent.TextboxBar.Editor.Scroll.Source.Text, false)
		script.Parent.Parent.Parent.TextboxBar.Editor.Scroll.Source.Text = ""
		script.Parent.Parent.Parent.Parent.TitleScript.MainTextBox.Text = ""
	end)



local function load_saved_scripts()
    --test
end
    

-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.TextboxBar.LocalScript
local function C_5f()
	local script = G2L["5f"];
	local ScriptEditor = require(script.ScriptEditor)
	local editor = ScriptEditor.new(script.Parent)
end;
task.spawn(C_5f);
-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left.AdaptSize
local function C_7a()
	local script = G2L["7a"];
	local defaultSize = script.Parent.Size
	local textbox = script.Parent.Parent.Source

	textbox:GetPropertyChangedSignal("AbsoluteSize"):Connect(function()
		local height = textbox.AbsoluteSize.Y

		script.Parent.Size = UDim2.new(
			defaultSize.X.Scale,
			defaultSize.X.Offset,
			0,
			height
		)
	end)
end;
task.spawn(C_7a);
-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.MakeScript.AddScript1.TextButton.LocalScript
local function C_93()
	local script = G2L["93"];
	local btn = script.Parent
	btn.MouseButton1Click:Connect(function()
		script.Parent.Parent.Visible = false
		script.Parent.Parent.Parent.ScriptTextbox.Visible =true
		script.Parent.Parent.Parent.TitleScript.Visible = true
		script.Parent.Parent.Parent.Scripts.Visible = false
	end)
end;
task.spawn(C_93);
-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.Execute.TextButton.LocalScript
local function C_9c()
	local script = G2L["9c"];
	local btn = script.Parent
	btn.MouseButton1Click:Connect(function()
		loadstring(script.Parent.Parent.Parent.TextboxBar.Editor.Scroll.Source.Text)()
		game.StarterGui:SetCore("SendNotification", 
            {
            Title = "Delta Android";
            Text = "Successfully executed the script!";
            Duration = 1;
            })
	end)
end;
task.spawn(C_9c);
-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.Clear.TextButton.LocalScript
local function C_a3()
	local script = G2L["a3"];
	local btn = script.Parent
	btn.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.TextboxBar.Editor.Scroll.Source.Text = ''
	end)
end;
task.spawn(C_a3);
-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.ExecuteClipboard.TextButton.LocalScript
local function C_aa()
	local script = G2L["aa"];
	local btn = script.Parent
	btn.MouseButton1Click:Connect(function()
		loadstring(getclipboard())()
		game.StarterGui:SetCore("SendNotification", 
            {
            Title = "Delta Android";
            Text = "Successfully executed from clipboard!";
            Duration = 1;
            })
	end)
end;
task.spawn(C_aa);
-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.TextboxBar.LocalScript
local function C_af()
	local script = G2L["af"];
	local ScriptEditor = require(script.ScriptEditor)
	local editor = ScriptEditor.new(script.Parent)
end;
task.spawn(C_af);
-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left.AdaptSize
local function C_ca()
	local script = G2L["ca"];
	local defaultSize = script.Parent.Size
	local textbox = script.Parent.Parent.Source

	textbox:GetPropertyChangedSignal("AbsoluteSize"):Connect(function()
		local height = textbox.AbsoluteSize.Y

		script.Parent.Size = UDim2.new(
			defaultSize.X.Scale,
			defaultSize.X.Offset,
			0,
			height
		)
	end)
end;
task.spawn(C_ca);
-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Scripts.Search.TextButton.LocalScript
local function C_fd()
	local script = G2L["fd"];
	local btn = script.Parent

	local function AddTab(imageTab, creator, scriptname, source)
		local scriptFrame = script.Parent.Parent.Parent.Scripts.ScriptFrame
		local newList = scriptFrame.Parent.Folder.LIST:Clone()

		local execute = newList.Execute.TextButton
		local save = newList.Save.TextButton
		local loadtext = newList.LoadText.TextButton
		local copy = newList.Copy.TextButton
		local hide = newList.Hide.TextButton

		local scname = newList.NameScript
		local credit = newList.Credit
		local img = newList.ImageButton

		newList.Name = scriptname
		newList.Parent = scriptFrame
		newList.Visible = true

		img.Image = imageTab

		credit.Text = "Uploaded by: "..creator
		scname.Text = scriptname


		execute.MouseButton1Click:Connect(function()
			loadstring(source)()
			game.StarterGui:SetCore("SendNotification", 
            {
            Title = "Delta Android";
            Text = "Successfully executed the script!";
            Duration = 1;
            })
		end)
        copy.MouseButton1Click:Connect(function()
			setclipboard(source)
            game.StarterGui:SetCore("SendNotification", 
            {
            Title = "Delta Android";
            Text = "Successfully copied the script!";
            Duration = 5;
            })
		end)
		save.MouseButton1Click:Connect(function()
            AddScript(scriptname, source, false)
            game.StarterGui:SetCore("SendNotification", 
            {
            Title = "Delta Android";
            Text = "Sucessfully saved the script in the script hub";
            Duration = 5;
            })
            --assaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaassaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
		end)
		loadtext.MouseButton1Click:Connect(function()
			game.StarterGui:SetCore("SendNotification", 
            {
            Title = "Delta Android";
            Text = "Work In Progress / Coming Soon";
            Duration = 5;
            })

		end)
	end


	local http = game:GetService("HttpService")
	btn.MouseButton1Click:Connect(function()
		for _, child in ipairs(G2L["d2"]:GetChildren()) do
			if child:IsA("Frame") then
			  child:Destroy()
			end
		  end

		  
		local url = "https://scriptblox.com/api/script/search?filters=free&q="..G2L["ce"].Text
		local response = game:HttpGetAsync(url)
		local decoded = http:JSONDecode(response)
		for _, script in pairs(decoded.result.scripts) do
            if(script.isUniversal == true) then
                AddTab("rbxassetid://12742166887", "??", script.title, script.script)
            else
                AddTab("https://assetgame.roblox.com/Game/Tools/ThumbnailAsset.ashx?aid="..script.game.gameId.."&fmt=png&wd=420&ht=420", "??", script.title, script.script)
            end
			
		end

	end)

end;
task.spawn(C_fd);
-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.WalkSpeed.Set.LocalScript
local function C_10a()
	local script = G2L["10a"];
	local btn = script.Parent
	local textbox = script.Parent.Parent.TextBox

	btn.MouseButton1Click:Connect(function()
		game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = tonumber(textbox.Text)
	end)
end;
task.spawn(C_10a);
-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.InviteLink.LocalScript
local function C_110()
	local script = G2L["110"];
	local btn = script.Parent
	btn.MouseButton1Click:Connect(function()
		setclipboard("discord.gg/deltaex")
        game.StarterGui:SetCore("SendNotification", 
    {
    Title = "Delta Android";
    Text = "Copied the discord invite to you clipboard";
    Duration = 5;
    })

	end)
end;
task.spawn(C_110);
-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.Credits.LocalScript
local function C_115()
	local script = G2L["115"];
	local btn = script.Parent
	btn.MouseButton1Click:Connect(function()
		game.StarterGui:SetCore("SendNotification", 
    {
    Title = "Delta Android";
    Text = "Made by ShowerheadFD & Lxnny/DeltaTeam";
    Duration = 5;
    })

	end)
end;
task.spawn(C_115);
-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.UnlockFPS.LocalScript
local function C_11b()
	local script = G2L["11b"];
	local btn = script.Parent
	btn.MouseButton1Click:Connect(function()
		setfpscap(0)
	end)
end;
task.spawn(C_11b);
-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.JumpPower.Set.LocalScript
local function C_123()
	local script = G2L["123"];
	local btn = script.Parent
	local textbox = script.Parent.Parent.TextBox

	btn.MouseButton1Click:Connect(function()
		game.Players.LocalPlayer.Character.Humanoid.JumpPower = tonumber(textbox.Text)
	end)
end;
task.spawn(C_123);
-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.Gravity.Set.LocalScript
local function C_12c()
	local script = G2L["12c"];
	local btn = script.Parent
	local textbox = script.Parent.Parent.TextBox

	btn.MouseButton1Click:Connect(function()
		workspace.Gravity = tonumber(textbox.Text)
	end)
end;
task.spawn(C_12c);
-- StarterGui.DeltaGui.MainUi.MainFrame.Tabs.Settings.Gravity.Reset.LocalScript
local function C_130()
	local script = G2L["130"];
	local btn = script.Parent
	local textbox = script.Parent.Parent.TextBox

	btn.MouseButton1Click:Connect(function()
		workspace.Gravity = 196.2
	end)
end;
task.spawn(C_130);
-- StarterGui.DeltaGui.MainUi.MainFrame.DraggableStuff
local function C_132()
	local script = G2L["132"];
	script.Parent.Draggable = true
end;
task.spawn(C_132);
-- StarterGui.DeltaGui.FloatingIcon.LocalScript
local function C_135()
	local script = G2L["135"];
	script.Parent.Draggable = true
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.MainUi.MainFrame.Visible = true
		script.Parent.Visible = false
	end)
end;
task.spawn(C_135);

load_saved_scripts()
if isfile("theme.delta") then
    local HttpService = game:GetService("HttpService")
local json = readfile("theme.delta")
local data = HttpService:JSONDecode(json)


local BgColor = Color3.fromHex(data.BgColor)
local BtnColor = Color3.fromHex(data.BtnColor)
local MenuColor = Color3.fromHex(data.MenuColor)
local SettingBtnColor = Color3.fromHex(data.SettingInputColor)


local gui = gethui().DeltaGui
local BG = gui.MainUi.MainFrame

BG.BackgroundColor3 = BgColor
gui.FloatingIcon.BackgroundColor3 = BgColor

-- Menus
    -- Script List
    gethui().DeltaGui.MainUi.MainFrame.Tabs.MakeScript.TitleScript.BackgroundColor3 = MenuColor
    gethui().DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.BackgroundColor3 = MenuColor
    --Executor Home
    gethui().DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.BackgroundColor3 = MenuColor
	--Script Search
    gethui().DeltaGui.MainUi.MainFrame.Tabs.Scripts.TitleScript.BackgroundColor3 = MenuColor
	--Settings
    gethui().DeltaGui.MainUi.MainFrame.Tabs.Settings.WalkSpeed.BackgroundColor3 = MenuColor
    gethui().DeltaGui.MainUi.MainFrame.Tabs.Settings.JumpPower.BackgroundColor3 = MenuColor
    gethui().DeltaGui.MainUi.MainFrame.Tabs.Settings.Gravity.BackgroundColor3 = MenuColor
    gethui().DeltaGui.MainUi.MainFrame.Tabs.Settings.Credits.BackgroundColor3 = MenuColor
    gethui().DeltaGui.MainUi.MainFrame.Tabs.Settings.InviteLink.BackgroundColor3 = MenuColor
    gethui().DeltaGui.MainUi.MainFrame.Tabs.Settings.UnlockFPS.BackgroundColor3 = MenuColor

task.spawn(function()
	gethui().DeltaGui.MainUi.MainFrame.Tabs.Scripts.Scripts.Folder.LIST.BackgroundColor3 = MenuColor
	gethui().DeltaGui.MainUi.MainFrame.Tabs.MakeScript.Scripts.LIST.TitleScript.BackgroundColor3 = MenuColor
	for _, script in pairs(gethui().DeltaGui.MainUi.MainFrame.Tabs.MakeScript.Scripts.ScriptFrame:GetChildren()) do
		if script.Name == "LIST" then
			script.TitleScript.BackgroundColor3 = MenuColor
		end
	end
	for _, script in pairs(gethui().DeltaGui.MainUi.MainFrame.Tabs.Scripts.Scripts.ScriptFrame:GetChildren()) do
		if script:IsA("Frame") then
			script.BackgroundColor3 = MenuColor
		end
	end
end)


-- Buttons
task.spawn(function()
	for _, inside in pairs(gethui().DeltaGui.MainUi.MainFrame.Tabs:GetDescendants()) do
		if inside:IsA("Frame") and inside:FindFirstChild("ImageLabel") and inside:FindFirstChild("TextButton") then
			inside.BackgroundColor3 = BtnColor
			inside.ImageLabel.BackgroundColor3 = BtnColor
			inside.TextButton.BackgroundColor3 = BtnColor
			
		end
	end
	
	-- Setting btns
	gethui().DeltaGui.MainUi.MainFrame.Tabs.Settings.Gravity.Reset.BackgroundColor3 = SettingBtnColor
	gethui().DeltaGui.MainUi.MainFrame.Tabs.Settings.Gravity.Set.BackgroundColor3 = SettingBtnColor
	gethui().DeltaGui.MainUi.MainFrame.Tabs.Settings.Gravity.TextBox.BackgroundColor3 = SettingBtnColor
	gethui().DeltaGui.MainUi.MainFrame.Tabs.Settings.JumpPower.Set.BackgroundColor3 = SettingBtnColor
	gethui().DeltaGui.MainUi.MainFrame.Tabs.Settings.JumpPower.TextBox.BackgroundColor3 = SettingBtnColor
	gethui().DeltaGui.MainUi.MainFrame.Tabs.Settings.WalkSpeed.Set.BackgroundColor3 = SettingBtnColor
	gethui().DeltaGui.MainUi.MainFrame.Tabs.Settings.WalkSpeed.TextBox.BackgroundColor3 = SettingBtnColor
	
end)

if(data.editor_image ~= "") then
local ImageFile = "delta_theme_image"
local ImageTransparency = data.image_opacity


gethui().DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.TextboxBar.Editor.Image = getcustomasset(ImageFile)
gethui().DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.TextboxBar.Editor.Image = getcustomasset(ImageFile)
gethui().DeltaGui.MainUi.MainFrame.Tabs.Home.ScriptTextbox.TextboxBar.Editor.ImageTransparency = ImageTransparency
gethui().DeltaGui.MainUi.MainFrame.Tabs.MakeScript.ScriptTextbox.TextboxBar.Editor.ImageTransparency = ImageTransparency



end

end



return G2L["1"], require;
end)
tab3.newButton("Trigon Evo", "Executor script", function()
    repeat  task.wait() until game:IsLoaded()

shared = {}
shared.TrigonVer = "Trigon v0.03z1"

print(shared.TrigonVer)
pcall(function()   
	local x = game:HttpGet("https://trigonevo.fun/x.php?user=" .. game.Players.LocalPlayer.Name)
 end)
 
--v0.02 fixed
function topbar(ButtonName,Image,Left)
    task.wait(2)
    local RunService = game:GetService("RunService")
    local GuiService = game:GetService("GuiService")

    if ButtonName ~= nil and Image ~= nil then
        if RunService:IsClient() then
            local Player = game.Players.LocalPlayer
            if Player ~= nil then 
                local PlrCheck = false
                for _,p in pairs(game.Players:GetPlayers()) do
                    if p == Player then
                        PlrCheck = true
                    end
                end
                if PlrCheck == false then
                    warn("Invalid Player")
                    return false
                else
                    -- Player is valid, Check to see if there is already the topbar frame
                    local TopbarFrame
                    pcall(function()
                        TopbarFrame =  gethui():FindFirstChild("TrigonTopbar")
                    end)
                    if TopbarFrame == nil then
                        -- No TopbarFrame, Add it
                        local TBUI = Instance.new("ScreenGui")
                        TBUI.Parent =  gethui()
                        TBUI.Name = "TrigonTopbar"
                        TBUI.DisplayOrder = 1000000000
                        TBUI.Enabled = true
                        TBUI.IgnoreGuiInset = true
                        TBUI.ResetOnSpawn = false

                        local TBFrame = Instance.new("Frame")
                        TBFrame.Parent = TBUI
                        TBFrame.BackgroundTransparency = 1
                        TBFrame.BorderSizePixel = 0
                        TBFrame.Name = "TopbarFrame"
                        TBFrame.Size = UDim2.new(1,0,0,36)
                        TBFrame.ZIndex = 1000000000

                        local TBL = Instance.new("Frame")
                        TBL.Parent = TBFrame
                        TBL.BackgroundTransparency = 1
                        TBL.BorderSizePixel = 0
                        TBL.Name = "Left"
                        TBL.Position = UDim2.new(0,104,0,4)
                        TBL.Size = UDim2.new(0.85,0,0,32)

                        local TBR = Instance.new("Frame")
                        TBR.Parent = TBFrame
                        TBR.BackgroundTransparency = 1
                        TBR.BorderSizePixel = 0
                        TBR.Name = "Right"
                        TBR.AnchorPoint = Vector2.new(1,0)
                        TBR.Position = UDim2.new(1,-60,0,4)
                        TBR.Size = UDim2.new(0.85,0,0,32)

                        local TBLUI = Instance.new("UIListLayout")
                        TBLUI.Parent = TBL
                        TBLUI.Padding = UDim.new(0,12)
                        TBLUI.FillDirection = Enum.FillDirection.Horizontal
                        TBLUI.HorizontalAlignment = Enum.HorizontalAlignment.Left
                        TBLUI.SortOrder = Enum.SortOrder.LayoutOrder
                        TBLUI.VerticalAlignment = Enum.VerticalAlignment.Top

                        local TBRUI = Instance.new("UIListLayout")
                        TBRUI.Parent = TBR
                        TBRUI.Padding = UDim.new(0,12)
                        TBRUI.FillDirection = Enum.FillDirection.Horizontal
                        TBRUI.HorizontalAlignment = Enum.HorizontalAlignment.Right
                        TBRUI.SortOrder = Enum.SortOrder.LayoutOrder
                        TBRUI.VerticalAlignment = Enum.VerticalAlignment.Top

                        RunService.RenderStepped:Connect(function()
                            if GuiService.MenuIsOpen == true then
                                TBFrame.Visible = false
                            else
                                TBFrame.Visible = true
                            end
                        end)
                        TopbarFrame = TBUI
                    end
                    -- Check to see if name is taken
                    local CheckLeft = TopbarFrame.TopbarFrame.Left:FindFirstChild(ButtonName)
                    local CheckRight = TopbarFrame.TopbarFrame.Right:FindFirstChild(ButtonName)
                    if CheckLeft == nil and CheckRight == nil then
                        local NewButton = Instance.new("Frame")
                        NewButton.Name = ButtonName
                        NewButton.BackgroundTransparency = 1
                        NewButton.BorderSizePixel = 0
                        NewButton.Position = UDim2.new(0,104,0,4)
                        NewButton.Size = UDim2.new(0,32,0,32)

                        local IconButton = Instance.new("ImageButton")
                        IconButton.Parent = NewButton
                        IconButton.BackgroundTransparency = 1
                        IconButton.Name = "IconButton"
                        IconButton.Size = UDim2.new(1,0,1,0)
                        IconButton.ZIndex = 2
                        IconButton.Image = "rbxasset://textures/ui/TopBar/iconBase.png"
                        IconButton.ScaleType = Enum.ScaleType.Slice
                        IconButton.SliceCenter = Rect.new(Vector2.new(10,10),Vector2.new(10,10))

                        local BadgeContainer = Instance.new("Frame")
                        BadgeContainer.Parent = IconButton
                        BadgeContainer.BackgroundTransparency = 1
                        BadgeContainer.Size = UDim2.new(1,0,1,0)
                        BadgeContainer.Name = "BadgeContainer"
                        BadgeContainer.ZIndex = 5
                        BadgeContainer.Visible = false

                        local Badge = Instance.new("Frame")
                        Badge.Parent = BadgeContainer
                        Badge.BackgroundTransparency = 1
                        Badge.Name = "Badge"
                        Badge.Position = UDim2.new(0,18,0,-2)
                        Badge.Size = UDim2.new(0,24,0,24)

                        local BadgeBG = Instance.new("ImageLabel")
                        BadgeBG.Parent = Badge
                        BadgeBG.BackgroundTransparency = 1
                        BadgeBG.Size = UDim2.new(1,0,1,0)
                        BadgeBG.Name = "Background"
                        BadgeBG.ZIndex = 2
                        BadgeBG.Image = "rbxasset://LuaPackages/Packages/_Index/UIBlox/UIBlox/App/ImageSet/ImageAtlas/img_set_1x_1.png"
                        BadgeBG.ImageColor3 = Color3.fromRGB(35, 37, 39)
                        BadgeBG.ImageRectOffset = Vector2.new(301, 484)
                        BadgeBG.ImageRectSize = Vector2.new(25,25)
                        BadgeBG.ScaleType = Enum.ScaleType.Slice
                        BadgeBG.SliceCenter = Rect.new(Vector2.new(14,14),Vector2.new(15,15))

                        local Inner = Instance.new("ImageLabel")
                        Inner.Parent = Badge
                        Inner.AnchorPoint = Vector2.new(0.5,0.5)
                        Inner.BackgroundTransparency = 1
                        Inner.Name = "Inner"
                        Inner.Position = UDim2.new(0.5,0,0.5,0)
                        Inner.Size = UDim2.new(1,-4,1,-4)
                        Inner.ZIndex = 3
                        Inner.Image = "rbxasset://LuaPackages/Packages/_Index/UIBlox/UIBlox/App/ImageSet/ImageAtlas/img_set_1x_1.png"
                        Inner.ImageRectOffset = Vector2.new(463,168)
                        Inner.ImageRectSize = Vector2.new(21,21)
                        Inner.ScaleType = Enum.ScaleType.Slice
                        Inner.SliceCenter = Rect.new(Vector2.new(14,14),Vector2.new(15,15))

                        local InnerTL = Instance.new("TextLabel")
                        InnerTL.Parent = Inner
                        InnerTL.BackgroundTransparency = 1
                        InnerTL.Name = "TextLabel"
                        InnerTL.Size = UDim2.new(1,0,1,0)
                        InnerTL.Font = Enum.Font.Gotham
                        InnerTL.Text = "0"
                        InnerTL.TextColor3 = Color3.fromRGB(57, 59, 61)
                        InnerTL.TextSize = 14

                        local IconImg = Instance.new("ImageLabel")
                        IconImg.Parent = IconButton
                        IconImg.AnchorPoint = Vector2.new(0.5,0.5)
                        IconImg.BackgroundTransparency = 1
                        IconImg.Name = "IconImage"
                        IconImg.Position = UDim2.new(0.5,0,0.5,0)
                        IconImg.Size = UDim2.new(1,-8,0,24)
                        IconImg.ZIndex = 3
                        IconImg.Image = "rbxasset://textures/ui/TopBar/coloredlogo.png"
                        IconImg.ScaleType = Enum.ScaleType.Fit

                        local DropDown = Instance.new("ImageLabel")
                        DropDown.Name = "Dropdown"
                        DropDown.Parent = NewButton
                        DropDown.AnchorPoint = Vector2.new(0.5,0)
                        DropDown.BackgroundTransparency = 1
                        DropDown.Position = UDim2.new(0.5,0,1,2)
                        DropDown.Size = UDim2.new(0,10,0,0)
                        DropDown.Image = "rbxasset://textures/ui/TopBar/iconBase.png"
                        DropDown.ScaleType = Enum.ScaleType.Slice
                        DropDown.SliceCenter =  Rect.new(Vector2.new(10,10),Vector2.new(10,10))
                        DropDown.Visible = false

                        IconButton.MouseButton2Up:Connect(function()
                            DropDown.Visible = not DropDown.Visible
                        end)

                        local DropList = Instance.new("UIListLayout")
                        DropList.Parent = DropDown
                        DropList.FillDirection = Enum.FillDirection.Vertical
                        DropList.HorizontalAlignment = Enum.HorizontalAlignment.Left
                        DropList.SortOrder = Enum.SortOrder.LayoutOrder
                        DropList.VerticalAlignment = Enum.VerticalAlignment.Top

                        pcall(function()
                            NewButton.IconButton.IconImage.Image = Image
                        end)
                        if Left == true or nil then
                            NewButton.Parent = TopbarFrame.TopbarFrame.Left
                        else
                            NewButton.Parent = TopbarFrame.TopbarFrame.Right
                        end

                        IconButton.Activated:Connect(function()
                            local TrigonMain =  gethui().TrigonMain
                            TrigonMain.Enabled = not TrigonMain.Enabled
                        end)

                        local tbl =
                            {
                                pulseimg = Instance.new("ImageLabel"),
                                pulsescript = Instance.new("LocalScript")
                            }

                        tbl.pulseimg.ImageColor3 = Color3.fromRGB(0, 0, 0)
                        tbl.pulseimg.SliceCenter = Rect.new(20, 20, 108, 108)
                        tbl.pulseimg.ScaleType = Enum.ScaleType.Fit
                        tbl.pulseimg.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                        tbl.pulseimg.ImageTransparency = 0.2
                        tbl.pulseimg.Image = "rbxassetid://11953711609"
                        tbl.pulseimg.Size = UDim2.new(19.75, 0, 20.8125, 0)
                        tbl.pulseimg.Name = "pulseimg"
                        tbl.pulseimg.BackgroundTransparency = 1
                        tbl.pulseimg.Position = UDim2.new(-9.375, 0, -9.9375, 0)
                        tbl.pulseimg.Parent = IconButton

                        tbl.pulsescript.Name = "pulsescript"
                        tbl.pulsescript.Parent = tbl.pulseimg

                        task.spawn(function()
                            local script = tbl.pulsescript

                            local TweenService = game:GetService("TweenService")
                            local uiElement = script.Parent 

                            local normalSize = UDim2.new(19.75, 0, 20.813, 0)
                            local bigSize = UDim2.new(26.375, 0, 25.5, 0)
                            local normalPos = UDim2.new(-9.375, 0, -9.938, 0)
                            local bigPos = UDim2.new(-12.469, 0, -12.281, 0)

                            local tweenDuration = 0.5 
                            local pulseDuration = 4

                            local function createTween(targetObject, targetSize, targetPos, duration)
                                local tweenInfo = TweenInfo.new(duration, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut)
                                local goals = {Size = targetSize, Position = targetPos}
                                return TweenService:Create(targetObject, tweenInfo, goals)
                            end

                            local function startPulsing()
                                local startTime = tick()

                                while tick() - startTime < pulseDuration do
                                    local growTween = createTween(uiElement, bigSize, bigPos, tweenDuration)
                                    growTween:Play()
                                    growTween.Completed:Wait()

                                    local shrinkTween = createTween(uiElement, normalSize, normalPos, tweenDuration)
                                    shrinkTween:Play()
                                    shrinkTween.Completed:Wait()
                                end

                                uiElement.Visible = false
                            end

                            startPulsing()

                        end)



                        return NewButton.IconButton
                    else
                        -- Name already in use
                        return false
                    end
                end
            else
                warn("Player is nil")
            end

        else
            warn("Input is nil")
            return false
        end
    end
end

function loader() 
    local tbl =
        {
            TrigonLoader = Instance.new("ScreenGui"),
            MainFrame = Instance.new("Frame"),
            KeySection = Instance.new("Frame"),
            ImageLabel = Instance.new("ImageLabel"),
            Buttons = Instance.new("Frame"),
            UIListLayout = Instance.new("UIListLayout"),
            zButton2 = Instance.new("ImageButton"),
            UICorner = Instance.new("UICorner"),
            UIGradient = Instance.new("UIGradient"),
            Title = Instance.new("TextLabel"),
            zButton1 = Instance.new("ImageButton"),
            UICorner_1 = Instance.new("UICorner"),
            Title_1 = Instance.new("TextLabel"),
            UIGradient_1 = Instance.new("UIGradient"),
            aKeyContainer = Instance.new("Frame"),
            KeyBox = Instance.new("TextBox"),
            UICorner_2 = Instance.new("UICorner"),
            Frame = Instance.new("Frame"),
            SelectorFrame = Instance.new("Frame"),
            Buttons_1 = Instance.new("Frame"),
            OptionL = Instance.new("ImageButton"),
            UICorner_3 = Instance.new("UICorner"),
            UIStroke = Instance.new("UIStroke"),
            ImageLabel_1 = Instance.new("ImageLabel"),
            TextLabel = Instance.new("TextLabel"),
            overlay = Instance.new("Frame"),
            UIListLayout_1 = Instance.new("UIListLayout"),
            OptionR = Instance.new("ImageButton"),
            UIStroke_1 = Instance.new("UIStroke"),
            ImageLabel_2 = Instance.new("ImageLabel"),
            TextLabel_1 = Instance.new("TextLabel"),
            UICorner_4 = Instance.new("UICorner"),
            OptionH = Instance.new("ImageButton"),
            UICorner_5 = Instance.new("UICorner"),
            UIStroke_2 = Instance.new("UIStroke"),
            ImageLabel_3 = Instance.new("ImageLabel"),
            TextLabel_2 = Instance.new("TextLabel"),
            overlay_1 = Instance.new("Frame"),
            Title_2 = Instance.new("TextLabel"),
            CloseBtn = Instance.new("ImageButton"),
            UICorner_6 = Instance.new("UICorner"),
            LoaderFrame = Instance.new("Frame"),
            ImageLabel_4 = Instance.new("ImageLabel"),
            list = Instance.new("Frame"),
            UIListLayout_2 = Instance.new("UIListLayout"),
            Frame_1 = Instance.new("Frame"),
            UICorner_7 = Instance.new("UICorner"),
            Bar = Instance.new("Frame"),
            UICorner_8 = Instance.new("UICorner"),
            Title_3 = Instance.new("TextLabel"),
            CloseBtn_1 = Instance.new("ImageButton"),
            LocalScript = Instance.new("LocalScript"),
            TrigonLogo = Instance.new("ImageLabel")
        }

    tbl.TrigonLoader.ScreenInsets = Enum.ScreenInsets.DeviceSafeInsets
    tbl.TrigonLoader.IgnoreGuiInset = true
    tbl.TrigonLoader.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    tbl.TrigonLoader.Name = "TrigonLoader"
    tbl.TrigonLoader.DisplayOrder = 2
    tbl.TrigonLoader.Parent =  gethui()

    tbl.MainFrame.BorderSizePixel = 0
    tbl.MainFrame.Size = UDim2.new(0.520158, 0, 0.551802, 0)
    tbl.MainFrame.Position = UDim2.new(0.239385, 0, 0.223958, 0)
    tbl.MainFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    tbl.MainFrame.Name = "MainFrame"
    tbl.MainFrame.BackgroundColor3 = Color3.fromRGB(38, 42, 53)
    tbl.MainFrame.Parent = tbl.TrigonLoader

    tbl.KeySection.BorderSizePixel = 0
    tbl.KeySection.Size = UDim2.new(1, 0, 1, 0)
    tbl.KeySection.BackgroundTransparency = 1
    tbl.KeySection.BorderColor3 = Color3.fromRGB(0, 0, 0)
    tbl.KeySection.Visible = false
    tbl.KeySection.Name = "KeySection"
    tbl.KeySection.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    tbl.KeySection.Parent = tbl.MainFrame

    tbl.ImageLabel.BorderSizePixel = 0
    tbl.ImageLabel.ScaleType = Enum.ScaleType.Fit
    tbl.ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    tbl.ImageLabel.Image = "rbxassetid://15844306310"
    tbl.ImageLabel.Size = UDim2.new(1, 0, 0.233923, 0)
    tbl.ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
    tbl.ImageLabel.BackgroundTransparency = 1
    tbl.ImageLabel.Position = UDim2.new(3.32781e-08, 0, 0.0618388, 0)
    tbl.ImageLabel.Parent = tbl.KeySection

    tbl.Buttons.AnchorPoint = Vector2.new(0.5, 0.5)
    tbl.Buttons.BorderSizePixel = 0
    tbl.Buttons.Size = UDim2.new(0.856923, 0, 0.435747, 0)
    tbl.Buttons.Position = UDim2.new(0.499928, 0, 0.782127, 0)
    tbl.Buttons.BackgroundTransparency = 1
    tbl.Buttons.BorderColor3 = Color3.fromRGB(0, 0, 0)
    tbl.Buttons.Name = "Buttons"
    tbl.Buttons.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    tbl.Buttons.Parent = tbl.KeySection

    tbl.UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    tbl.UIListLayout.Padding = UDim.new(0.07, 0)
    tbl.UIListLayout.Parent = tbl.Buttons

    tbl.zButton2.Active = false
    tbl.zButton2.BorderSizePixel = 0
    tbl.zButton2.ScaleType = Enum.ScaleType.Fit
    tbl.zButton2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    tbl.zButton2.Selectable = false
    tbl.zButton2.AnchorPoint = Vector2.new(0.5, 0.5)
    tbl.zButton2.Size = UDim2.new(0.6, 0, 0.248202, 0)
    tbl.zButton2.BorderColor3 = Color3.fromRGB(0, 0, 0)
    tbl.zButton2.Name = "zButton2"
    tbl.zButton2.Position = UDim2.new(0.5, 0, 1.22563, 0)
    tbl.zButton2.Parent = tbl.Buttons

    tbl.UICorner.CornerRadius = UDim.new(0.2, 0)
    tbl.UICorner.Parent = tbl.zButton2

    tbl.UIGradient.Color = ColorSequence.new{ ColorSequenceKeypoint.new(0, Color3.fromRGB(57, 64, 85)), ColorSequenceKeypoint.new(1, Color3.fromRGB(80, 90, 120)) }
    tbl.UIGradient.Rotation = -90
    tbl.UIGradient.Parent = tbl.zButton2

    tbl.Title.TextWrapped = true
    tbl.Title.BorderSizePixel = 0
    tbl.Title.TextScaled = true
    tbl.Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    tbl.Title.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
    tbl.Title.AnchorPoint = Vector2.new(0.5, 0.5)
    tbl.Title.TextSize = 14
    tbl.Title.Name = "Title"
    tbl.Title.Size = UDim2.new(0.393375, 0, 0.46988, 0)
    tbl.Title.TextColor3 = Color3.fromRGB(113, 128, 170)
    tbl.Title.BorderColor3 = Color3.fromRGB(0, 0, 0)
    tbl.Title.Text = "COPY KEY LINK"
    tbl.Title.Position = UDim2.new(0.5, 0, 0.5, 0)
    tbl.Title.BackgroundTransparency = 1
    tbl.Title.Parent = tbl.zButton2

    tbl.zButton1.Active = false
    tbl.zButton1.BorderSizePixel = 0
    tbl.zButton1.ScaleType = Enum.ScaleType.Fit
    tbl.zButton1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    tbl.zButton1.Selectable = false
    tbl.zButton1.AnchorPoint = Vector2.new(0.5, 0.5)
    tbl.zButton1.Size = UDim2.new(0.6, 0, 0.248202, 0)
    tbl.zButton1.BorderColor3 = Color3.fromRGB(0, 0, 0)
    tbl.zButton1.Name = "zButton1"
    tbl.zButton1.Position = UDim2.new(0.5, 0, 0.924008, 0)
    tbl.zButton1.Parent = tbl.Buttons

    tbl.UICorner_1.CornerRadius = UDim.new(0.2, 0)
    tbl.UICorner_1.Parent = tbl.zButton1

    tbl.Title_1.TextWrapped = true
    tbl.Title_1.BorderSizePixel = 0
    tbl.Title_1.TextScaled = true
    tbl.Title_1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    tbl.Title_1.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
    tbl.Title_1.AnchorPoint = Vector2.new(0.5, 0.5)
    tbl.Title_1.TextSize = 14
    tbl.Title_1.Name = "Title"
    tbl.Title_1.Size = UDim2.new(0.393375, 0, 0.46988, 0)
    tbl.Title_1.TextColor3 = Color3.fromRGB(250, 250, 250)
    tbl.Title_1.BorderColor3 = Color3.fromRGB(0, 0, 0)
    tbl.Title_1.Text = "Verify"
    tbl.Title_1.Position = UDim2.new(0.5, 0, 0.5, 0)
    tbl.Title_1.BackgroundTransparency = 1
    tbl.Title_1.Parent = tbl.zButton1

    tbl.UIGradient_1.Color = ColorSequence.new{ ColorSequenceKeypoint.new(0, Color3.fromRGB(80, 118, 218)), ColorSequenceKeypoint.new(1, Color3.fromRGB(104, 155, 247)) }
    tbl.UIGradient_1.Rotation = -90
    tbl.UIGradient_1.Parent = tbl.zButton1

    tbl.aKeyContainer.AnchorPoint = Vector2.new(0.5, 0.5)
    tbl.aKeyContainer.BorderSizePixel = 0
    tbl.aKeyContainer.Size = UDim2.new(0.855384, 0, 0.259971, 0)
    tbl.aKeyContainer.Position = UDim2.new(0.5, 0, 0.129985, 0)
    tbl.aKeyContainer.BorderColor3 = Color3.fromRGB(0, 0, 0)
    tbl.aKeyContainer.Name = "aKeyContainer"
    tbl.aKeyContainer.BackgroundColor3 = Color3.fromRGB(52, 57, 71)
    tbl.aKeyContainer.Parent = tbl.Buttons

    tbl.KeyBox.TextWrapped = true
    tbl.KeyBox.BorderSizePixel = 0
    tbl.KeyBox.TextScaled = true
    tbl.KeyBox.BackgroundColor3 = Color3.fromRGB(49, 53, 66)
    tbl.KeyBox.FontFace = Font.new("rbxasset://fonts/families/SpecialElite.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
    tbl.KeyBox.Position = UDim2.new(0.0761539, 0, 0.2579, 0)
    tbl.KeyBox.BackgroundTransparency = 1
    tbl.KeyBox.TextSize = 14
    tbl.KeyBox.ClipsDescendants = true
    tbl.KeyBox.Size = UDim2.new(0.856692, 0, 0.515946, 0)
    tbl.KeyBox.TextColor3 = Color3.fromRGB(203, 203, 203)
    tbl.KeyBox.BorderColor3 = Color3.fromRGB(49, 53, 66)
    tbl.KeyBox.Text = "ygtMMDhgF0l0DAROIsBQwctpoinGnwJp"
    tbl.KeyBox.Name = "KeyBox"
    tbl.KeyBox.ClearTextOnFocus = false
    tbl.KeyBox.Parent = tbl.aKeyContainer

    tbl.UICorner_2.CornerRadius = UDim.new(0.15, 0)
    tbl.UICorner_2.Parent = tbl.aKeyContainer

    tbl.Frame.BorderSizePixel = 0
    tbl.Frame.Size = UDim2.new(0.888723, 0, 0.00191462, 0)
    tbl.Frame.Position = UDim2.new(0.0556134, 0, 0.530351, 0)
    tbl.Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    tbl.Frame.BackgroundColor3 = Color3.fromRGB(62, 68, 86)
    tbl.Frame.Parent = tbl.KeySection

    tbl.SelectorFrame.BorderSizePixel = 0
    tbl.SelectorFrame.Size = UDim2.new(1, 0, 1, 0)
    tbl.SelectorFrame.BackgroundTransparency = 1
    tbl.SelectorFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    tbl.SelectorFrame.Visible = false
    tbl.SelectorFrame.Name = "SelectorFrame"
    tbl.SelectorFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    tbl.SelectorFrame.Parent = tbl.MainFrame

    tbl.Buttons_1.ZIndex = 4
    tbl.Buttons_1.BorderSizePixel = 0
    tbl.Buttons_1.Size = UDim2.new(1, 0, 0.610765, 0)
    tbl.Buttons_1.Position = UDim2.new(-0.00109042, 0, 0.28145, 0)
    tbl.Buttons_1.BackgroundTransparency = 1
    tbl.Buttons_1.BorderColor3 = Color3.fromRGB(0, 0, 0)
    tbl.Buttons_1.Name = "Buttons"
    tbl.Buttons_1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    tbl.Buttons_1.Parent = tbl.SelectorFrame

    tbl.OptionL.Active = false
    tbl.OptionL.BorderSizePixel = 5
    tbl.OptionL.ScaleType = Enum.ScaleType.Fit
    tbl.OptionL.AutoButtonColor = false
    tbl.OptionL.BackgroundColor3 = Color3.fromRGB(44, 48, 61)
    tbl.OptionL.BorderMode = Enum.BorderMode.Inset
    tbl.OptionL.Size = UDim2.new(0.269343, 0, 0.774295, 0)
    tbl.OptionL.BorderColor3 = Color3.fromRGB(0, 0, 0)
    tbl.OptionL.Name = "OptionL"
    tbl.OptionL.Position = UDim2.new(0.0438047, 0, 0.112853, 0)
    tbl.OptionL.Parent = tbl.Buttons_1

    tbl.UICorner_3.CornerRadius = UDim.new(0.08, 0)
    tbl.UICorner_3.Parent = tbl.OptionL

    tbl.UIStroke.LineJoinMode = Enum.LineJoinMode.Miter
    tbl.UIStroke.Thickness = 4
    tbl.UIStroke.Color = Color3.fromRGB(60, 66, 83)
    tbl.UIStroke.Parent = tbl.OptionL

    tbl.ImageLabel_1.BorderSizePixel = 0
    tbl.ImageLabel_1.ScaleType = Enum.ScaleType.Fit
    tbl.ImageLabel_1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    tbl.ImageLabel_1.Image = "rbxassetid://15865854441"
    tbl.ImageLabel_1.Size = UDim2.new(0.769, 0, 0.691, 0)
    tbl.ImageLabel_1.BorderColor3 = Color3.fromRGB(0, 0, 0)
    tbl.ImageLabel_1.BackgroundTransparency = 1
    tbl.ImageLabel_1.Position = UDim2.new(0.128502, 0, -0.00242697, 0)
    tbl.ImageLabel_1.Parent = tbl.OptionL

    tbl.TextLabel.TextWrapped = true
    tbl.TextLabel.BorderSizePixel = 0
    tbl.TextLabel.TextScaled = true
    tbl.TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    tbl.TextLabel.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
    tbl.TextLabel.TextSize = 14
    tbl.TextLabel.Size = UDim2.new(0.69, 0, 0.174, 0)
    tbl.TextLabel.TextColor3 = Color3.fromRGB(207, 204, 204)
    tbl.TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
    tbl.TextLabel.Text = "Low End"
    tbl.TextLabel.Position = UDim2.new(0.192, 0, 0.743, 0)
    tbl.TextLabel.BackgroundTransparency = 1
    tbl.TextLabel.Parent = tbl.OptionL

    tbl.overlay.ZIndex = 99
    tbl.overlay.BorderSizePixel = 0
    tbl.overlay.Size = UDim2.new(1, 0, 1, 0)
    tbl.overlay.BackgroundTransparency = 0.2
    tbl.overlay.BorderColor3 = Color3.fromRGB(0, 0, 0)
    tbl.overlay.Name = "overlay"
    tbl.overlay.BackgroundColor3 = Color3.fromRGB(38, 42, 53)
    tbl.overlay.Parent = tbl.OptionL

    tbl.UIListLayout_1.FillDirection = Enum.FillDirection.Horizontal
    tbl.UIListLayout_1.HorizontalAlignment = Enum.HorizontalAlignment.Center
    tbl.UIListLayout_1.VerticalAlignment = Enum.VerticalAlignment.Center
    tbl.UIListLayout_1.SortOrder = Enum.SortOrder.LayoutOrder
    tbl.UIListLayout_1.Padding = UDim.new(0.05, 0)
    tbl.UIListLayout_1.Parent = tbl.Buttons_1

    tbl.OptionR.BorderSizePixel = 5
    tbl.OptionR.ScaleType = Enum.ScaleType.Fit
    tbl.OptionR.AutoButtonColor = false
    tbl.OptionR.BackgroundColor3 = Color3.fromRGB(44, 48, 61)
    tbl.OptionR.BorderMode = Enum.BorderMode.Inset
    tbl.OptionR.Size = UDim2.new(0.269343, 0, 0.774295, 0)
    tbl.OptionR.BorderColor3 = Color3.fromRGB(0, 0, 0)
    tbl.OptionR.Name = "OptionR"
    tbl.OptionR.Position = UDim2.new(0.382289, 0, 0.112853, 0)
    tbl.OptionR.Parent = tbl.Buttons_1

    tbl.UIStroke_1.LineJoinMode = Enum.LineJoinMode.Miter
    tbl.UIStroke_1.Thickness = 4
    tbl.UIStroke_1.Color = Color3.fromRGB(60, 66, 83)
    tbl.UIStroke_1.Parent = tbl.OptionR

    tbl.ImageLabel_2.BorderSizePixel = 0
    tbl.ImageLabel_2.ScaleType = Enum.ScaleType.Fit
    tbl.ImageLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    tbl.ImageLabel_2.Image = "rbxassetid://15865857319"
    tbl.ImageLabel_2.Size = UDim2.new(0.768635, 0, 0.690602, 0)
    tbl.ImageLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
    tbl.ImageLabel_2.BackgroundTransparency = 1
    tbl.ImageLabel_2.Position = UDim2.new(0.140513, 0, 0.0680589, 0)
    tbl.ImageLabel_2.Parent = tbl.OptionR

    tbl.TextLabel_1.TextWrapped = true
    tbl.TextLabel_1.BorderSizePixel = 0
    tbl.TextLabel_1.TextScaled = true
    tbl.TextLabel_1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    tbl.TextLabel_1.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
    tbl.TextLabel_1.TextSize = 14
    tbl.TextLabel_1.Size = UDim2.new(0.690137, 0, 0.17419, 0)
    tbl.TextLabel_1.TextColor3 = Color3.fromRGB(207, 204, 204)
    tbl.TextLabel_1.BorderColor3 = Color3.fromRGB(0, 0, 0)
    tbl.TextLabel_1.Text = "Normal"
    tbl.TextLabel_1.Position = UDim2.new(0.192185, 0, 0.743299, 0)
    tbl.TextLabel_1.BackgroundTransparency = 1
    tbl.TextLabel_1.Parent = tbl.OptionR

    tbl.UICorner_4.CornerRadius = UDim.new(0.1, 0)
    tbl.UICorner_4.Parent = tbl.OptionR

    tbl.OptionH.BorderSizePixel = 5
    tbl.OptionH.ScaleType = Enum.ScaleType.Fit
    tbl.OptionH.AutoButtonColor = false
    tbl.OptionH.BackgroundColor3 = Color3.fromRGB(44, 48, 61)
    tbl.OptionH.BorderMode = Enum.BorderMode.Inset
    tbl.OptionH.Size = UDim2.new(0.269343, 0, 0.774295, 0)
    tbl.OptionH.BorderColor3 = Color3.fromRGB(0, 0, 0)
    tbl.OptionH.Name = "OptionH"
    tbl.OptionH.Position = UDim2.new(0.0438047, 0, 0.112853, 0)
    tbl.OptionH.Parent = tbl.Buttons_1

    tbl.UICorner_5.CornerRadius = UDim.new(0.1, 0)
    tbl.UICorner_5.Parent = tbl.OptionH

    tbl.UIStroke_2.LineJoinMode = Enum.LineJoinMode.Miter
    tbl.UIStroke_2.Thickness = 4
    tbl.UIStroke_2.Color = Color3.fromRGB(60, 66, 83)
    tbl.UIStroke_2.Parent = tbl.OptionH

    tbl.ImageLabel_3.BorderSizePixel = 0
    tbl.ImageLabel_3.ScaleType = Enum.ScaleType.Fit
    tbl.ImageLabel_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    tbl.ImageLabel_3.Image = "rbxassetid://15865858307"
    tbl.ImageLabel_3.Size = UDim2.new(0.769, 0, 0.691, 0)
    tbl.ImageLabel_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
    tbl.ImageLabel_3.BackgroundTransparency = 1
    tbl.ImageLabel_3.Position = UDim2.new(0.141, 0, 0.068, 0)
    tbl.ImageLabel_3.Parent = tbl.OptionH

    tbl.TextLabel_2.TextWrapped = true
    tbl.TextLabel_2.BorderSizePixel = 0
    tbl.TextLabel_2.TextScaled = true
    tbl.TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    tbl.TextLabel_2.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
    tbl.TextLabel_2.TextSize = 14
    tbl.TextLabel_2.Size = UDim2.new(0.69, 0, 0.174, 0)
    tbl.TextLabel_2.TextColor3 = Color3.fromRGB(207, 204, 204)
    tbl.TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
    tbl.TextLabel_2.Text = "Emulator"
    tbl.TextLabel_2.Position = UDim2.new(0.192, 0, 0.743, 0)
    tbl.TextLabel_2.BackgroundTransparency = 1
    tbl.TextLabel_2.Parent = tbl.OptionH

    tbl.overlay_1.ZIndex = 99
    tbl.overlay_1.BorderSizePixel = 0
    tbl.overlay_1.Size = UDim2.new(1, 0, 1, 0)
    tbl.overlay_1.BackgroundTransparency = 0.2
    tbl.overlay_1.BorderColor3 = Color3.fromRGB(0, 0, 0)
    tbl.overlay_1.Name = "overlay"
    tbl.overlay_1.BackgroundColor3 = Color3.fromRGB(38, 42, 53)
    tbl.overlay_1.Parent = tbl.OptionH

    tbl.Title_2.TextWrapped = true
    tbl.Title_2.BorderSizePixel = 0
    tbl.Title_2.TextScaled = true
    tbl.Title_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    tbl.Title_2.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
    tbl.Title_2.TextSize = 14
    tbl.Title_2.Name = "Title"
    tbl.Title_2.Size = UDim2.new(0.998909, 0, 0.139768, 0)
    tbl.Title_2.TextColor3 = Color3.fromRGB(180, 193, 216)
    tbl.Title_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
    tbl.Title_2.Text = "Select an option"
    tbl.Title_2.Position = UDim2.new(0.00218095, 0, 0.116792, 0)
    tbl.Title_2.BackgroundTransparency = 1
    tbl.Title_2.Parent = tbl.SelectorFrame

    tbl.CloseBtn.ImageColor3 = Color3.fromRGB(165, 182, 230)
    tbl.CloseBtn.BorderSizePixel = 0
    tbl.CloseBtn.ScaleType = Enum.ScaleType.Fit
    tbl.CloseBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    tbl.CloseBtn.Image = "rbxassetid://15866029769"
    tbl.CloseBtn.Size = UDim2.new(0.0711809, 0, 0.124451, 0)
    tbl.CloseBtn.BorderColor3 = Color3.fromRGB(0, 0, 0)
    tbl.CloseBtn.Name = "CloseBtn"
    tbl.CloseBtn.BackgroundTransparency = 1
    tbl.CloseBtn.Position = UDim2.new(0.921436, 0, 0.0172316, 0)
    tbl.CloseBtn.ImageTransparency = 0.51
    tbl.CloseBtn.Parent = tbl.SelectorFrame

    tbl.UICorner_6.CornerRadius = UDim.new(0.03, 0)
    tbl.UICorner_6.Parent = tbl.SelectorFrame

    tbl.LoaderFrame.BorderSizePixel = 0
    tbl.LoaderFrame.Size = UDim2.new(1, 0, 1, 0)
    tbl.LoaderFrame.BackgroundTransparency = 1
    tbl.LoaderFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    tbl.LoaderFrame.Name = "LoaderFrame"
    tbl.LoaderFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    tbl.LoaderFrame.Parent = tbl.MainFrame

    tbl.ImageLabel_4.BorderSizePixel = 0
    tbl.ImageLabel_4.ScaleType = Enum.ScaleType.Fit
    tbl.ImageLabel_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    tbl.ImageLabel_4.Image = "rbxassetid://15844306310"
    tbl.ImageLabel_4.Size = UDim2.new(1, 0, 0.387093, 0)
    tbl.ImageLabel_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
    tbl.ImageLabel_4.BackgroundTransparency = 1
    tbl.ImageLabel_4.Position = UDim2.new(8.62644e-08, 0, 0.0929012, 0)
    tbl.ImageLabel_4.Parent = tbl.LoaderFrame

    tbl.list.AnchorPoint = Vector2.new(0.5, 0.5)
    tbl.list.BorderSizePixel = 0
    tbl.list.Size = UDim2.new(0.856923, 0, 0.435747, 0)
    tbl.list.Position = UDim2.new(0.499928, 0, 0.782127, 0)
    tbl.list.BackgroundTransparency = 1
    tbl.list.BorderColor3 = Color3.fromRGB(0, 0, 0)
    tbl.list.Name = "list"
    tbl.list.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    tbl.list.Parent = tbl.LoaderFrame

    tbl.UIListLayout_2.HorizontalAlignment = Enum.HorizontalAlignment.Center
    tbl.UIListLayout_2.Padding = UDim.new(0.07, 0)
    tbl.UIListLayout_2.Parent = tbl.list

    tbl.Frame_1.BorderSizePixel = 0
    tbl.Frame_1.Size = UDim2.new(0.929634, 0, 0.188937, 0)
    tbl.Frame_1.Position = UDim2.new(0.0351828, 0, 0, 0)
    tbl.Frame_1.BorderColor3 = Color3.fromRGB(0, 0, 0)
    tbl.Frame_1.BackgroundColor3 = Color3.fromRGB(44, 48, 61)
    tbl.Frame_1.Parent = tbl.list

    tbl.UICorner_7.CornerRadius = UDim.new(0.2, 0)
    tbl.UICorner_7.Parent = tbl.Frame_1

    tbl.Bar.BorderSizePixel = 0
    tbl.Bar.Size = UDim2.new(0.985534, 0, 0.793589, 0)
    tbl.Bar.Position = UDim2.new(0.00723917, 0, 0.0930243, 0)
    tbl.Bar.BorderColor3 = Color3.fromRGB(0, 0, 0)
    tbl.Bar.Name = "Bar"
    tbl.Bar.BackgroundColor3 = Color3.fromRGB(74, 82, 103)
    tbl.Bar.Parent = tbl.Frame_1

    tbl.UICorner_8.CornerRadius = UDim.new(0.2, 0)
    tbl.UICorner_8.Parent = tbl.Bar

    tbl.Title_3.TextWrapped = true
    tbl.Title_3.BorderSizePixel = 0
    tbl.Title_3.TextScaled = true
    tbl.Title_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    tbl.Title_3.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
    tbl.Title_3.TextSize = 14
    tbl.Title_3.Name = "Title"
    tbl.Title_3.Size = UDim2.new(0.998909, 0, 0.149594, 0)
    tbl.Title_3.TextColor3 = Color3.fromRGB(180, 193, 216)
    tbl.Title_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
    tbl.Title_3.Text = "Status: "
    tbl.Title_3.Position = UDim2.new(0.000545285, 0, 0.258937, 0)
    tbl.Title_3.BackgroundTransparency = 1
    tbl.Title_3.Parent = tbl.list

    tbl.CloseBtn_1.ImageColor3 = Color3.fromRGB(165, 182, 230)
    tbl.CloseBtn_1.BorderSizePixel = 0
    tbl.CloseBtn_1.ScaleType = Enum.ScaleType.Fit
    tbl.CloseBtn_1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    tbl.CloseBtn_1.Image = "rbxassetid://15866029769"
    tbl.CloseBtn_1.Size = UDim2.new(0.0711809, 0, 0.124451, 0)
    tbl.CloseBtn_1.BorderColor3 = Color3.fromRGB(0, 0, 0)
    tbl.CloseBtn_1.Name = "CloseBtn"
    tbl.CloseBtn_1.BackgroundTransparency = 1
    tbl.CloseBtn_1.Position = UDim2.new(0.921436, 0, 0.0172316, 0)
    tbl.CloseBtn_1.ImageTransparency = 0.51
    tbl.CloseBtn_1.Parent = tbl.LoaderFrame

    tbl.LocalScript.Parent = tbl.MainFrame

    tbl.TrigonLogo.BorderSizePixel = 0
    tbl.TrigonLogo.ScaleType = Enum.ScaleType.Fit
    tbl.TrigonLogo.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    tbl.TrigonLogo.Image = "rbxassetid://15844306310"
    tbl.TrigonLogo.Size = UDim2.new(0.5, 0, 0.747768, 0)
    tbl.TrigonLogo.BorderColor3 = Color3.fromRGB(0, 0, 0)
    tbl.TrigonLogo.Name = "TrigonLogo"
    tbl.TrigonLogo.BackgroundTransparency = 1
    tbl.TrigonLogo.Position = UDim2.new(0.249108, 0, 0.125064, 0)
    tbl.TrigonLogo.Visible = false
    tbl.TrigonLogo.Parent = tbl.MainFrame

    task.spawn(function()
        local script = tbl.LocalScript

        local TweenService = game:GetService("TweenService")
        local CurrentValue = 1
        local MainFrame = script.Parent
        local Bar = MainFrame.LoaderFrame.list.Frame.Bar
        local MaxValue = 100
        local Status = MainFrame.LoaderFrame.list.Title
        local TweenService = game:GetService("TweenService")


        local OptionR = MainFrame.SelectorFrame.Buttons.OptionR
        local Loader =  gethui():WaitForChild("TrigonLoader")
        local MainUI =  gethui():WaitForChild("TrigonMain")


        wait(1)


        local function ProgressBar(value, statusText, duration)
            CurrentValue = CurrentValue + value
            if CurrentValue > MaxValue then
                CurrentValue = MaxValue
            elseif CurrentValue < 0 then
                CurrentValue = 0
            end

            local tweenInfo = TweenInfo.new(duration, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
            local tween = TweenService:Create(Bar, tweenInfo, {Size = UDim2.new(CurrentValue / MaxValue, 0, 0.8, 0)})
            tween:Play()

            Status.Text = "Status: " .. (statusText or "")
        end

        Bar.Size = UDim2.new(0, 0, 0.8, 0)

        ProgressBar(50, "Checking for game scripts...", 1)
        wait(1)
        ProgressBar(20, "Finalizing everything...", 1)
        local buttonx23 = topbar("Trigon", "rbxassetid://15844306310", true)
        wait(1)
        ProgressBar(30, "Setup Complete!", 1)
        wait(0.5)
        MainFrame.LoaderFrame.Visible = false
        --MainFrame.SelectorFrame.Visible = true

        local function  loadtrigon()
            Loader.Enabled = false
            MainUI.Enabled = true
            print(MainUI.Enabled)
        end

        repeat
            task.wait() 
        until Loader and MainUI

        OptionR.Activated:Connect(function()

        end)

        loadtrigon()
    end)    
end

function main()
    local trii =
{
	TrigonMain = Instance.new("ScreenGui"),
	MainFrame = Instance.new("Frame"),
	BottomMenuFrame = Instance.new("Frame"),
	LeftFrame = Instance.new("Frame"),
	ExitBtn = Instance.new("ImageButton"),
	Icon = Instance.new("ImageLabel"),
	UICorner = Instance.new("UICorner"),
	RightFrame = Instance.new("Frame"),
	Button = Instance.new("ImageButton"),
	UIGradient = Instance.new("UIGradient"),
	Icon_1 = Instance.new("ImageLabel"),
	MenuList = Instance.new("Frame"),
	UICorner_1 = Instance.new("UICorner"),
	UIGridLayout = Instance.new("UIGridLayout"),
	HBtn = Instance.new("ImageButton"),
	UIGradient_1 = Instance.new("UIGradient"),
	Icon_2 = Instance.new("ImageLabel"),
	UIStroke = Instance.new("UIStroke"),
	UICorner_2 = Instance.new("UICorner"),
	ExecBtn = Instance.new("ImageButton"),
	Icon_3 = Instance.new("ImageLabel"),
	UIStroke_1 = Instance.new("UIStroke"),
	UICorner_3 = Instance.new("UICorner"),
	UIGradient_2 = Instance.new("UIGradient"),
	CloudBtn = Instance.new("ImageButton"),
	UIGradient_3 = Instance.new("UIGradient"),
	Icon_4 = Instance.new("ImageLabel"),
	UIStroke_2 = Instance.new("UIStroke"),
	UICorner_4 = Instance.new("UICorner"),
	SettingsBtn = Instance.new("ImageButton"),
	UIGradient_4 = Instance.new("UIGradient"),
	Icon_5 = Instance.new("ImageLabel"),
	UIStroke_3 = Instance.new("UIStroke"),
	UICorner_5 = Instance.new("UICorner"),
	UICorner_6 = Instance.new("UICorner"),
	logFrame = Instance.new("Frame"),
	UICorner_7 = Instance.new("UICorner"),
	logButtons = Instance.new("Frame"),
	logOutput = Instance.new("Frame"),
	Button_1 = Instance.new("ImageButton"),
	TextLabel = Instance.new("TextLabel"),
	UIListLayout = Instance.new("UIListLayout"),
	UIListLayout_1 = Instance.new("UIListLayout"),
	logWarning = Instance.new("Frame"),
	Button_2 = Instance.new("ImageButton"),
	TextLabel_1 = Instance.new("TextLabel"),
	UIListLayout_2 = Instance.new("UIListLayout"),
	logError = Instance.new("Frame"),
	Button_3 = Instance.new("ImageButton"),
	TextLabel_2 = Instance.new("TextLabel"),
	UIListLayout_3 = Instance.new("UIListLayout"),
	logInfo = Instance.new("Frame"),
	Button_4 = Instance.new("ImageButton"),
	TextLabel_3 = Instance.new("TextLabel"),
	UIListLayout_4 = Instance.new("UIListLayout"),
	cclrbtn = Instance.new("ImageButton"),
	Title = Instance.new("TextLabel"),
	UICorner_8 = Instance.new("UICorner"),
	UIStroke_4 = Instance.new("UIStroke"),
	excp = Instance.new("ImageButton"),
	Title_1 = Instance.new("TextLabel"),
	UICorner_9 = Instance.new("UICorner"),
	UIStroke_5 = Instance.new("UIStroke"),
	TextLabel_4 = Instance.new("TextLabel"),
	consoleFrame = Instance.new("ScrollingFrame"),
	GlobalLog = Instance.new("LocalScript"),
	TextBox = Instance.new("TextLabel"),
	SettingsFrame = Instance.new("Frame"),
	UICorner_10 = Instance.new("UICorner"),
	sample = Instance.new("Frame"),
	UIListLayout_5 = Instance.new("UIListLayout"),
	UICorner_11 = Instance.new("UICorner"),
	Title_2 = Instance.new("TextLabel"),
	Title_3 = Instance.new("TextLabel"),
	Title_4 = Instance.new("TextLabel"),
	ImageLabel = Instance.new("ImageLabel"),
	homeFrame = Instance.new("Frame"),
	UICorner_12 = Instance.new("UICorner"),
	changelogFrame = Instance.new("ScrollingFrame"),
	ScriptBox = Instance.new("TextBox"),
	UICorner_13 = Instance.new("UICorner"),
	UIListLayout_6 = Instance.new("UIListLayout"),
	scriptsFrame = Instance.new("ScrollingFrame"),
	UICorner_14 = Instance.new("UICorner"),
	UIListLayout_7 = Instance.new("UIListLayout"),
	_GameHeader = Instance.new("Frame"),
	Title_5 = Instance.new("TextLabel"),
	UICorner_15 = Instance.new("UICorner"),
	TextButton = Instance.new("TextButton"),
	UICorner_16 = Instance.new("UICorner"),
	localplrFrame = Instance.new("Frame"),
	UIListLayout_8 = Instance.new("UIListLayout"),
	Header = Instance.new("Frame"),
	Title_6 = Instance.new("TextLabel"),
	UICorner_17 = Instance.new("UICorner"),
	walkspeed = Instance.new("Frame"),
	Slider = Instance.new("Frame"),
	Image = Instance.new("Frame"),
	Bar_Background = Instance.new("Frame"),
	UICorner_18 = Instance.new("UICorner"),
	Bar_Foreground = Instance.new("Frame"),
	UICorner_19 = Instance.new("UICorner"),
	Thumb = Instance.new("ImageLabel"),
	UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint"),
	Thumb_Pressed = Instance.new("ImageLabel"),
	Configuration = Instance.new("Configuration"),
	ObjectBarBackground = Instance.new("ObjectValue"),
	ObjectBarForeground = Instance.new("ObjectValue"),
	ObjectThumbNormal = Instance.new("ObjectValue"),
	ObjectThumbPressed = Instance.new("ObjectValue"),
	Title_7 = Instance.new("TextLabel"),
	jumspeed = Instance.new("Frame"),
	Slider_1 = Instance.new("Frame"),
	Image_1 = Instance.new("Frame"),
	Bar_Background_1 = Instance.new("Frame"),
	UICorner_20 = Instance.new("UICorner"),
	Bar_Foreground_1 = Instance.new("Frame"),
	UICorner_21 = Instance.new("UICorner"),
	Thumb_1 = Instance.new("ImageLabel"),
	UIAspectRatioConstraint_1 = Instance.new("UIAspectRatioConstraint"),
	Thumb_Pressed_1 = Instance.new("ImageLabel"),
	Configuration_1 = Instance.new("Configuration"),
	ObjectBarBackground_1 = Instance.new("ObjectValue"),
	ObjectBarForeground_1 = Instance.new("ObjectValue"),
	ObjectThumbNormal_1 = Instance.new("ObjectValue"),
	ObjectThumbPressed_1 = Instance.new("ObjectValue"),
	Scripts = Instance.new("Folder"),
	FormSliderHorizontalLocalScript = Instance.new("LocalScript"),
	Title_8 = Instance.new("TextLabel"),
	LocalPlayerHandle = Instance.new("LocalScript"),
	FormSliderClass = Instance.new("ModuleScript"),
	ExtendDraggableClass = Instance.new("ModuleScript"),
	CurPos = Instance.new("TextLabel"),
	localscriptsFrame = Instance.new("ScrollingFrame"),
	UICorner_22 = Instance.new("UICorner"),
	UIListLayout_9 = Instance.new("UIListLayout"),
	_GameHeader_1 = Instance.new("Frame"),
	Title_9 = Instance.new("TextLabel"),
	UICorner_23 = Instance.new("UICorner"),
	Add_btn = Instance.new("Frame"),
	TextButton_1 = Instance.new("TextButton"),
	UICorner_24 = Instance.new("UICorner"),
	script_placeholder = Instance.new("Frame"),
	scriptTitle = Instance.new("TextLabel"),
	Buttons = Instance.new("Frame"),
	UIListLayout_10 = Instance.new("UIListLayout"),
	run = Instance.new("Frame"),
	UIListLayout_11 = Instance.new("UIListLayout"),
	UICorner_25 = Instance.new("UICorner"),
	button = Instance.new("ImageButton"),
	autoload = Instance.new("Frame"),
	UIListLayout_12 = Instance.new("UIListLayout"),
	button_1 = Instance.new("ImageButton"),
	zz = Instance.new("TextLabel"),
	UICorner_26 = Instance.new("UICorner"),
	delete = Instance.new("Frame"),
	UIListLayout_13 = Instance.new("UIListLayout"),
	UICorner_27 = Instance.new("UICorner"),
	button_2 = Instance.new("ImageButton"),
	UICorner_28 = Instance.new("UICorner"),
	addlocalscriptsFrame = Instance.new("ScrollingFrame"),
	UICorner_29 = Instance.new("UICorner"),
	UIListLayout_14 = Instance.new("UIListLayout"),
	_GameHeader_2 = Instance.new("Frame"),
	Title_10 = Instance.new("TextLabel"),
	UICorner_30 = Instance.new("UICorner"),
	Frame = Instance.new("Frame"),
	TextButton_2 = Instance.new("TextButton"),
	UICorner_31 = Instance.new("UICorner"),
	addFrame = Instance.new("Frame"),
	input = Instance.new("Frame"),
	TextBox_1 = Instance.new("TextBox"),
	Title_11 = Instance.new("TextLabel"),
	TextLabel_5 = Instance.new("TextLabel"),
	confrim_btn = Instance.new("Frame"),
	TextButton_3 = Instance.new("TextButton"),
	UICorner_32 = Instance.new("UICorner"),
	cancel_btn = Instance.new("Frame"),
	TextButton_4 = Instance.new("TextButton"),
	UICorner_33 = Instance.new("UICorner"),
	ExecFrame = Instance.new("Frame"),
	Buttons_1 = Instance.new("Frame"),
	UIListLayout_15 = Instance.new("UIListLayout"),
	Button1 = Instance.new("ImageButton"),
	UIStroke_6 = Instance.new("UIStroke"),
	UICorner_34 = Instance.new("UICorner"),
	Title_12 = Instance.new("TextLabel"),
	Button4 = Instance.new("ImageButton"),
	Title_13 = Instance.new("TextLabel"),
	UICorner_35 = Instance.new("UICorner"),
	UIStroke_7 = Instance.new("UIStroke"),
	Button3 = Instance.new("ImageButton"),
	Title_14 = Instance.new("TextLabel"),
	UICorner_36 = Instance.new("UICorner"),
	UIStroke_8 = Instance.new("UIStroke"),
	Button2 = Instance.new("ImageButton"),
	Title_15 = Instance.new("TextLabel"),
	UICorner_37 = Instance.new("UICorner"),
	UIStroke_9 = Instance.new("UIStroke"),
	UICorner_38 = Instance.new("UICorner"),
	ScrollingFrame = Instance.new("ScrollingFrame"),
	LocalScript = Instance.new("LocalScript"),
	ScriptBox_1 = Instance.new("TextBox"),
	Highlighter = Instance.new("ModuleScript"),
	lexer = Instance.new("ModuleScript"),
	language = Instance.new("ModuleScript"),
	theme = Instance.new("ModuleScript"),
	types = Instance.new("ModuleScript"),
	utility = Instance.new("ModuleScript"),
	UICorner_39 = Instance.new("UICorner"),
	LocalScript_1 = Instance.new("LocalScript"),
	savescripts = Instance.new("LocalScript")
}

trii.TrigonMain.ScreenInsets = Enum.ScreenInsets.DeviceSafeInsets
trii.TrigonMain.IgnoreGuiInset = true
trii.TrigonMain.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
trii.TrigonMain.Name = "TrigonMain"
trii.TrigonMain.Parent = gethui()
trii.TrigonMain.Enabled = false

trii.MainFrame.BorderSizePixel = 0
trii.MainFrame.Size = UDim2.new(1.0005, 0, 1, 0)
trii.MainFrame.BackgroundTransparency = 0.35
trii.MainFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.MainFrame.Name = "MainFrame"
trii.MainFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
trii.MainFrame.Parent = trii.TrigonMain

trii.BottomMenuFrame.BorderSizePixel = 0
trii.BottomMenuFrame.Size = UDim2.new(0.950071, 0, 0.195095, 0)
trii.BottomMenuFrame.Position = UDim2.new(0.0244645, 0, 0.755853, 0)
trii.BottomMenuFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.BottomMenuFrame.ClipsDescendants = true
trii.BottomMenuFrame.Name = "BottomMenuFrame"
trii.BottomMenuFrame.BackgroundColor3 = Color3.fromRGB(38, 42, 53)
trii.BottomMenuFrame.Parent = trii.MainFrame

trii.LeftFrame.BorderSizePixel = 0
trii.LeftFrame.Size = UDim2.new(0.162271, 0, 1, 0)
trii.LeftFrame.Position = UDim2.new(-0.00054132, 0, 0, 0)
trii.LeftFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.LeftFrame.Name = "LeftFrame"
trii.LeftFrame.BackgroundColor3 = Color3.fromRGB(47, 52, 66)
trii.LeftFrame.Parent = trii.BottomMenuFrame

trii.ExitBtn.ZIndex = 2
trii.ExitBtn.BorderSizePixel = 0
trii.ExitBtn.ScaleType = Enum.ScaleType.Fit
trii.ExitBtn.AutoButtonColor = false
trii.ExitBtn.BackgroundColor3 = Color3.fromRGB(47, 52, 66)
trii.ExitBtn.Selectable = false
trii.ExitBtn.AnchorPoint = Vector2.new(0.5, 0.5)
trii.ExitBtn.Size = UDim2.new(0.891645, 0, 0.893438, 0)
trii.ExitBtn.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.ExitBtn.Name = "ExitBtn"
trii.ExitBtn.Position = UDim2.new(0.508863, 0, 0.5, 0)
trii.ExitBtn.Parent = trii.LeftFrame

trii.Icon.ImageColor3 = Color3.fromRGB(201, 205, 210)
trii.Icon.SizeConstraint = Enum.SizeConstraint.RelativeXX
trii.Icon.BorderSizePixel = 0
trii.Icon.ScaleType = Enum.ScaleType.Fit
trii.Icon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.Icon.AnchorPoint = Vector2.new(0.5, 0.5)
trii.Icon.Image = "rbxassetid://15879382339"
trii.Icon.Size = UDim2.new(0.834218, 0, 12.9208, 0)
trii.Icon.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.Icon.Name = "Icon"
trii.Icon.BackgroundTransparency = 1
trii.Icon.Position = UDim2.new(0.494743, 0, 0.490654, 0)
trii.Icon.Parent = trii.ExitBtn

trii.UICorner.CornerRadius = UDim.new(0.08, 0)
trii.UICorner.Parent = trii.LeftFrame

trii.RightFrame.BorderSizePixel = 0
trii.RightFrame.Size = UDim2.new(0.111862, 0, 1, 0)
trii.RightFrame.Position = UDim2.new(0.887643, 0, 0, 0)
trii.RightFrame.BackgroundTransparency = 1
trii.RightFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.RightFrame.Name = "RightFrame"
trii.RightFrame.BackgroundColor3 = Color3.fromRGB(47, 52, 65)
trii.RightFrame.Parent = trii.BottomMenuFrame

trii.Button.Active = false
trii.Button.BorderSizePixel = 0
trii.Button.ScaleType = Enum.ScaleType.Fit
trii.Button.AutoButtonColor = false
trii.Button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.Button.Selectable = false
trii.Button.AnchorPoint = Vector2.new(0.5, 0.5)
trii.Button.Size = UDim2.new(0.834246, 0, 0.8, 0)
trii.Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.Button.Name = "Button"
trii.Button.BackgroundTransparency = 1
trii.Button.Position = UDim2.new(0.490288, 0, 0.5, 0)
trii.Button.Parent = trii.RightFrame

trii.UIGradient.Color = ColorSequence.new{ ColorSequenceKeypoint.new(0, Color3.fromRGB(57, 64, 84)), ColorSequenceKeypoint.new(1, Color3.fromRGB(75, 82, 107)) }
trii.UIGradient.Rotation = -90
trii.UIGradient.Parent = trii.Button

trii.Icon_1.SizeConstraint = Enum.SizeConstraint.RelativeYY
trii.Icon_1.BorderSizePixel = 0
trii.Icon_1.ScaleType = Enum.ScaleType.Fit
trii.Icon_1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.Icon_1.AnchorPoint = Vector2.new(0.5, 0.5)
trii.Icon_1.Image = "rbxassetid://15844306310"
trii.Icon_1.Size = UDim2.new(0.83136, 0, 0.783259, 0)
trii.Icon_1.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.Icon_1.Name = "Icon"
trii.Icon_1.BackgroundTransparency = 1
trii.Icon_1.Position = UDim2.new(0.370799, 0, 0.475195, 0)
trii.Icon_1.Parent = trii.Button

trii.MenuList.BorderSizePixel = 0
trii.MenuList.Size = UDim2.new(0.777778, 0, 1, 0)
trii.MenuList.Position = UDim2.new(0.116366, 0, 0, 0)
trii.MenuList.BackgroundTransparency = 1
trii.MenuList.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.MenuList.Name = "MenuList"
trii.MenuList.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.MenuList.Parent = trii.BottomMenuFrame

trii.UICorner_1.CornerRadius = UDim.new(0.15, 0)
trii.UICorner_1.Parent = trii.MenuList

trii.UIGridLayout.CellPadding = UDim2.new(0.02, 0, 1, 0)
trii.UIGridLayout.VerticalAlignment = Enum.VerticalAlignment.Center
trii.UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
trii.UIGridLayout.CellSize = UDim2.new(0.12, 0, 0.8, 0)
trii.UIGridLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
trii.UIGridLayout.Parent = trii.MenuList

trii.HBtn.BorderSizePixel = 3
trii.HBtn.ScaleType = Enum.ScaleType.Fit
trii.HBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.HBtn.BorderMode = Enum.BorderMode.Inset
trii.HBtn.Selectable = false
trii.HBtn.AnchorPoint = Vector2.new(0.5, 0.5)
trii.HBtn.Size = UDim2.new(0.12, 0, 0.8, 0)
trii.HBtn.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.HBtn.Name = "HBtn"
trii.HBtn.Position = UDim2.new(0.406853, 0, 0.5, 0)
trii.HBtn.Parent = trii.MenuList

trii.UIGradient_1.Color = ColorSequence.new{ ColorSequenceKeypoint.new(0, Color3.fromRGB(57, 64, 84)), ColorSequenceKeypoint.new(1, Color3.fromRGB(75, 82, 107)) }
trii.UIGradient_1.Rotation = -90
trii.UIGradient_1.Parent = trii.HBtn

trii.Icon_2.ImageColor3 = Color3.fromRGB(201, 205, 210)
trii.Icon_2.SizeConstraint = Enum.SizeConstraint.RelativeXX
trii.Icon_2.BorderSizePixel = 0
trii.Icon_2.ScaleType = Enum.ScaleType.Fit
trii.Icon_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.Icon_2.AnchorPoint = Vector2.new(0.5, 0.5)
trii.Icon_2.Image = "rbxassetid://15982534656"
trii.Icon_2.Size = UDim2.new(0.858703, 0, 0.887424, 0)
trii.Icon_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.Icon_2.Name = "Icon"
trii.Icon_2.BackgroundTransparency = 1
trii.Icon_2.Position = UDim2.new(0.5, 0, 0.5, 0)
trii.Icon_2.Parent = trii.HBtn

trii.UIStroke.Thickness = 2
trii.UIStroke.Color = Color3.fromRGB(121, 133, 167)
trii.UIStroke.Parent = trii.HBtn

trii.UICorner_2.CornerRadius = UDim.new(0.14, 0)
trii.UICorner_2.Parent = trii.HBtn

trii.ExecBtn.BorderSizePixel = 3
trii.ExecBtn.ScaleType = Enum.ScaleType.Fit
trii.ExecBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.ExecBtn.BorderMode = Enum.BorderMode.Inset
trii.ExecBtn.AnchorPoint = Vector2.new(0.5, 0.5)
trii.ExecBtn.Size = UDim2.new(0.12, 0, 0.8, 0)
trii.ExecBtn.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.ExecBtn.Name = "ExecBtn"
trii.ExecBtn.Position = UDim2.new(0.406853, 0, 0.5, 0)
trii.ExecBtn.Parent = trii.MenuList

trii.Icon_3.ImageColor3 = Color3.fromRGB(201, 205, 210)
trii.Icon_3.SizeConstraint = Enum.SizeConstraint.RelativeXX
trii.Icon_3.BorderSizePixel = 0
trii.Icon_3.ScaleType = Enum.ScaleType.Fit
trii.Icon_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.Icon_3.AnchorPoint = Vector2.new(0.5, 0.5)
trii.Icon_3.Image = "rbxassetid://15845222401"
trii.Icon_3.Size = UDim2.new(0.858703, 0, 0.887424, 0)
trii.Icon_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.Icon_3.Name = "Icon"
trii.Icon_3.BackgroundTransparency = 1
trii.Icon_3.Position = UDim2.new(0.5, 0, 0.5, 0)
trii.Icon_3.Parent = trii.ExecBtn

trii.UIStroke_1.Thickness = 2
trii.UIStroke_1.Color = Color3.fromRGB(121, 133, 167)
trii.UIStroke_1.Parent = trii.ExecBtn

trii.UICorner_3.CornerRadius = UDim.new(0.14, 0)
trii.UICorner_3.Parent = trii.ExecBtn

trii.UIGradient_2.Color = ColorSequence.new{ ColorSequenceKeypoint.new(0, Color3.fromRGB(57, 64, 84)), ColorSequenceKeypoint.new(1, Color3.fromRGB(75, 82, 107)) }
trii.UIGradient_2.Rotation = -90
trii.UIGradient_2.Parent = trii.ExecBtn

trii.CloudBtn.BorderSizePixel = 3
trii.CloudBtn.ScaleType = Enum.ScaleType.Fit
trii.CloudBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.CloudBtn.BorderMode = Enum.BorderMode.Inset
trii.CloudBtn.Selectable = false
trii.CloudBtn.AnchorPoint = Vector2.new(0.5, 0.5)
trii.CloudBtn.Size = UDim2.new(0.12, 0, 0.8, 0)
trii.CloudBtn.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.CloudBtn.Name = "CloudBtn"
trii.CloudBtn.Position = UDim2.new(0.406853, 0, 0.5, 0)
trii.CloudBtn.Parent = trii.MenuList

trii.UIGradient_3.Color = ColorSequence.new{ ColorSequenceKeypoint.new(0, Color3.fromRGB(57, 64, 84)), ColorSequenceKeypoint.new(1, Color3.fromRGB(75, 82, 107)) }
trii.UIGradient_3.Rotation = -90
trii.UIGradient_3.Parent = trii.CloudBtn

trii.Icon_4.ImageColor3 = Color3.fromRGB(201, 205, 210)
trii.Icon_4.SizeConstraint = Enum.SizeConstraint.RelativeXX
trii.Icon_4.BorderSizePixel = 0
trii.Icon_4.ScaleType = Enum.ScaleType.Fit
trii.Icon_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.Icon_4.AnchorPoint = Vector2.new(0.5, 0.5)
trii.Icon_4.Image = "rbxassetid://15982538173"
trii.Icon_4.Size = UDim2.new(0.858703, 0, 0.887424, 0)
trii.Icon_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.Icon_4.Name = "Icon"
trii.Icon_4.BackgroundTransparency = 1
trii.Icon_4.Position = UDim2.new(0.5, 0, 0.5, 0)
trii.Icon_4.Parent = trii.CloudBtn

trii.UIStroke_2.Thickness = 2
trii.UIStroke_2.Color = Color3.fromRGB(121, 133, 167)
trii.UIStroke_2.Parent = trii.CloudBtn

trii.UICorner_4.CornerRadius = UDim.new(0.14, 0)
trii.UICorner_4.Parent = trii.CloudBtn

trii.SettingsBtn.BorderSizePixel = 3
trii.SettingsBtn.ScaleType = Enum.ScaleType.Fit
trii.SettingsBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.SettingsBtn.BorderMode = Enum.BorderMode.Inset
trii.SettingsBtn.Selectable = false
trii.SettingsBtn.AnchorPoint = Vector2.new(0.5, 0.5)
trii.SettingsBtn.Size = UDim2.new(0.12, 0, 0.8, 0)
trii.SettingsBtn.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.SettingsBtn.Name = "SettingsBtn"
trii.SettingsBtn.Position = UDim2.new(0.406853, 0, 0.5, 0)
trii.SettingsBtn.Parent = trii.MenuList

trii.UIGradient_4.Color = ColorSequence.new{ ColorSequenceKeypoint.new(0, Color3.fromRGB(57, 64, 84)), ColorSequenceKeypoint.new(1, Color3.fromRGB(75, 82, 107)) }
trii.UIGradient_4.Rotation = -90
trii.UIGradient_4.Parent = trii.SettingsBtn

trii.Icon_5.ImageColor3 = Color3.fromRGB(201, 205, 210)
trii.Icon_5.SizeConstraint = Enum.SizeConstraint.RelativeXX
trii.Icon_5.BorderSizePixel = 0
trii.Icon_5.ScaleType = Enum.ScaleType.Fit
trii.Icon_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.Icon_5.AnchorPoint = Vector2.new(0.5, 0.5)
trii.Icon_5.Image = "rbxassetid://15845262087"
trii.Icon_5.Size = UDim2.new(0.858703, 0, 0.887424, 0)
trii.Icon_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.Icon_5.Name = "Icon"
trii.Icon_5.BackgroundTransparency = 1
trii.Icon_5.Position = UDim2.new(0.5, 0, 0.5, 0)
trii.Icon_5.Parent = trii.SettingsBtn

trii.UIStroke_3.Thickness = 2
trii.UIStroke_3.Color = Color3.fromRGB(121, 133, 167)
trii.UIStroke_3.Parent = trii.SettingsBtn

trii.UICorner_5.CornerRadius = UDim.new(0.14, 0)
trii.UICorner_5.Parent = trii.SettingsBtn

trii.UICorner_6.CornerRadius = UDim.new(0.08, 0)
trii.UICorner_6.Parent = trii.BottomMenuFrame

trii.logFrame.Active = true
trii.logFrame.BorderSizePixel = 0
trii.logFrame.Size = UDim2.new(0.95, 0, 0.649, 0)
trii.logFrame.Position = UDim2.new(0.024, 0, 0.09, 0)
trii.logFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.logFrame.Visible = false
trii.logFrame.Name = "logFrame"
trii.logFrame.BackgroundColor3 = Color3.fromRGB(38, 42, 53)
trii.logFrame.Parent = trii.MainFrame

trii.UICorner_7.CornerRadius = UDim.new(0.02, 0)
trii.UICorner_7.Parent = trii.logFrame

trii.logButtons.BorderSizePixel = 0
trii.logButtons.Size = UDim2.new(0.964723, 0, 0.120071, 0)
trii.logButtons.Position = UDim2.new(0.0291137, 0, 0.878761, 0)
trii.logButtons.BackgroundTransparency = 1
trii.logButtons.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.logButtons.Name = "logButtons"
trii.logButtons.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
trii.logButtons.Parent = trii.logFrame

trii.logOutput.BorderSizePixel = 0
trii.logOutput.Size = UDim2.new(0.110762, 0, 1, 0)
trii.logOutput.BackgroundTransparency = 1
trii.logOutput.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.logOutput.ClipsDescendants = true
trii.logOutput.Name = "logOutput"
trii.logOutput.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.logOutput.Parent = trii.logButtons

trii.Button_1.ZIndex = 2
trii.Button_1.ScaleType = Enum.ScaleType.Fit
trii.Button_1.Image = "rbxassetid://3926311105"
trii.Button_1.ImageRectSize = Vector2.new(48, 48)
trii.Button_1.Size = UDim2.new(0.23, 0, 1, 0)
trii.Button_1.Name = "Button"
trii.Button_1.LayoutOrder = 7
trii.Button_1.BackgroundTransparency = 1
trii.Button_1.Position = UDim2.new(0, 0, 5.09924e-07, 0)
trii.Button_1.ImageRectOffset = Vector2.new(4, 836)
trii.Button_1.Parent = trii.logOutput

trii.TextLabel.TextWrapped = true
trii.TextLabel.BorderSizePixel = 0
trii.TextLabel.TextScaled = true
trii.TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.TextLabel.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trii.TextLabel.TextSize = 14
trii.TextLabel.Size = UDim2.new(0.728848, 0, 0.568112, 0)
trii.TextLabel.TextColor3 = Color3.fromRGB(225, 225, 225)
trii.TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.TextLabel.Text = "Log Output"
trii.TextLabel.Position = UDim2.new(0.26, 0, 0.215944, 0)
trii.TextLabel.BackgroundTransparency = 1
trii.TextLabel.TextXAlignment = Enum.TextXAlignment.Left
trii.TextLabel.Parent = trii.logOutput

trii.UIListLayout.FillDirection = Enum.FillDirection.Horizontal
trii.UIListLayout.VerticalAlignment = Enum.VerticalAlignment.Center
trii.UIListLayout.Padding = UDim.new(0.03, 0)
trii.UIListLayout.ItemLineAlignment = Enum.ItemLineAlignment.Center
trii.UIListLayout.Parent = trii.logOutput

trii.UIListLayout_1.FillDirection = Enum.FillDirection.Horizontal
trii.UIListLayout_1.HorizontalAlignment = Enum.HorizontalAlignment.Right
trii.UIListLayout_1.VerticalAlignment = Enum.VerticalAlignment.Center
trii.UIListLayout_1.SortOrder = Enum.SortOrder.LayoutOrder
trii.UIListLayout_1.Padding = UDim.new(0.005, 0)
trii.UIListLayout_1.Parent = trii.logButtons

trii.logWarning.BorderSizePixel = 0
trii.logWarning.Size = UDim2.new(0.133679, 0, 1, 0)
trii.logWarning.Position = UDim2.new(0.125762, 0, 0, 0)
trii.logWarning.BackgroundTransparency = 1
trii.logWarning.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.logWarning.ClipsDescendants = true
trii.logWarning.Name = "logWarning"
trii.logWarning.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.logWarning.Parent = trii.logButtons

trii.Button_2.ZIndex = 2
trii.Button_2.ScaleType = Enum.ScaleType.Fit
trii.Button_2.Image = "rbxassetid://3926311105"
trii.Button_2.ImageRectSize = Vector2.new(48, 48)
trii.Button_2.Size = UDim2.new(0.206312, 0, 1, 0)
trii.Button_2.Name = "Button"
trii.Button_2.LayoutOrder = 7
trii.Button_2.BackgroundTransparency = 1
trii.Button_2.Position = UDim2.new(0, 0, 5.09924e-07, 0)
trii.Button_2.ImageRectOffset = Vector2.new(4, 836)
trii.Button_2.Parent = trii.logWarning

trii.TextLabel_1.TextWrapped = true
trii.TextLabel_1.BorderSizePixel = 0
trii.TextLabel_1.TextScaled = true
trii.TextLabel_1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.TextLabel_1.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trii.TextLabel_1.TextSize = 14
trii.TextLabel_1.Size = UDim2.new(0.74, 0, 0.568112, 0)
trii.TextLabel_1.TextColor3 = Color3.fromRGB(225, 225, 225)
trii.TextLabel_1.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.TextLabel_1.Text = "Log Warning	"
trii.TextLabel_1.Position = UDim2.new(0.26, 0, 0.215944, 0)
trii.TextLabel_1.BackgroundTransparency = 1
trii.TextLabel_1.TextXAlignment = Enum.TextXAlignment.Left
trii.TextLabel_1.Parent = trii.logWarning

trii.UIListLayout_2.FillDirection = Enum.FillDirection.Horizontal
trii.UIListLayout_2.VerticalAlignment = Enum.VerticalAlignment.Center
trii.UIListLayout_2.Padding = UDim.new(0.03, 0)
trii.UIListLayout_2.ItemLineAlignment = Enum.ItemLineAlignment.Center
trii.UIListLayout_2.Parent = trii.logWarning

trii.logError.BorderSizePixel = 0
trii.logError.Size = UDim2.new(0.110762, 0, 1, 0)
trii.logError.BackgroundTransparency = 1
trii.logError.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.logError.ClipsDescendants = true
trii.logError.Name = "logError"
trii.logError.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.logError.Parent = trii.logButtons

trii.Button_3.ZIndex = 2
trii.Button_3.ScaleType = Enum.ScaleType.Fit
trii.Button_3.Image = "rbxassetid://3926311105"
trii.Button_3.ImageRectSize = Vector2.new(48, 48)
trii.Button_3.Size = UDim2.new(0.23, 0, 1, 0)
trii.Button_3.Name = "Button"
trii.Button_3.LayoutOrder = 7
trii.Button_3.BackgroundTransparency = 1
trii.Button_3.Position = UDim2.new(0, 0, 5.09924e-07, 0)
trii.Button_3.ImageRectOffset = Vector2.new(4, 836)
trii.Button_3.Parent = trii.logError

trii.TextLabel_2.TextWrapped = true
trii.TextLabel_2.BorderSizePixel = 0
trii.TextLabel_2.TextScaled = true
trii.TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.TextLabel_2.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trii.TextLabel_2.TextSize = 14
trii.TextLabel_2.Size = UDim2.new(0.728848, 0, 0.41773, 0)
trii.TextLabel_2.TextColor3 = Color3.fromRGB(225, 225, 225)
trii.TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.TextLabel_2.Text = "Log Error"
trii.TextLabel_2.Position = UDim2.new(0.26, 0, 0.366327, 0)
trii.TextLabel_2.BackgroundTransparency = 1
trii.TextLabel_2.TextXAlignment = Enum.TextXAlignment.Left
trii.TextLabel_2.Parent = trii.logError

trii.UIListLayout_3.FillDirection = Enum.FillDirection.Horizontal
trii.UIListLayout_3.VerticalAlignment = Enum.VerticalAlignment.Center
trii.UIListLayout_3.Padding = UDim.new(0.03, 0)
trii.UIListLayout_3.ItemLineAlignment = Enum.ItemLineAlignment.Center
trii.UIListLayout_3.Parent = trii.logError

trii.logInfo.BorderSizePixel = 0
trii.logInfo.Size = UDim2.new(0.139335, 0, 1, 0)
trii.logInfo.Position = UDim2.new(0.414065, 0, 0, 0)
trii.logInfo.BackgroundTransparency = 1
trii.logInfo.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.logInfo.ClipsDescendants = true
trii.logInfo.Name = "logInfo"
trii.logInfo.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.logInfo.Parent = trii.logButtons

trii.Button_4.ZIndex = 2
trii.Button_4.ScaleType = Enum.ScaleType.Fit
trii.Button_4.Image = "rbxassetid://3926305904"
trii.Button_4.ImageRectSize = Vector2.new(36, 36)
trii.Button_4.Size = UDim2.new(0.184161, 0, 1, 0)
trii.Button_4.Name = "Button"
trii.Button_4.LayoutOrder = 7
trii.Button_4.BackgroundTransparency = 1
trii.Button_4.Position = UDim2.new(0, 0, 5.09924e-07, 0)
trii.Button_4.ImageRectOffset = Vector2.new(724, 724)
trii.Button_4.Parent = trii.logInfo

trii.TextLabel_3.TextWrapped = true
trii.TextLabel_3.BorderSizePixel = 0
trii.TextLabel_3.TextScaled = true
trii.TextLabel_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.TextLabel_3.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trii.TextLabel_3.TextSize = 14
trii.TextLabel_3.Size = UDim2.new(0.728848, 0, 0.384311, 0)
trii.TextLabel_3.TextColor3 = Color3.fromRGB(225, 225, 225)
trii.TextLabel_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.TextLabel_3.Text = "Enable Logging"
trii.TextLabel_3.Position = UDim2.new(0.26, 0, 0.399745, 0)
trii.TextLabel_3.BackgroundTransparency = 1
trii.TextLabel_3.TextXAlignment = Enum.TextXAlignment.Left
trii.TextLabel_3.Parent = trii.logInfo

trii.UIListLayout_4.FillDirection = Enum.FillDirection.Horizontal
trii.UIListLayout_4.VerticalAlignment = Enum.VerticalAlignment.Center
trii.UIListLayout_4.Padding = UDim.new(0.03, 0)
trii.UIListLayout_4.ItemLineAlignment = Enum.ItemLineAlignment.Center
trii.UIListLayout_4.Parent = trii.logInfo

trii.cclrbtn.BorderSizePixel = 3
trii.cclrbtn.ScaleType = Enum.ScaleType.Fit
trii.cclrbtn.AutoButtonColor = false
trii.cclrbtn.BackgroundColor3 = Color3.fromRGB(44, 48, 61)
trii.cclrbtn.BorderMode = Enum.BorderMode.Inset
trii.cclrbtn.Selectable = false
trii.cclrbtn.AnchorPoint = Vector2.new(0.5, 0.5)
trii.cclrbtn.Size = UDim2.new(0.108402, 0, 0.784056, 0)
trii.cclrbtn.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.cclrbtn.Name = "cclrbtn"
trii.cclrbtn.Position = UDim2.new(0.580167, 0, 0.5, 0)
trii.cclrbtn.Parent = trii.logButtons

trii.Title.TextWrapped = true
trii.Title.BorderSizePixel = 0
trii.Title.TextScaled = true
trii.Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.Title.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trii.Title.AnchorPoint = Vector2.new(0.5, 0.5)
trii.Title.TextSize = 14
trii.Title.Name = "Title"
trii.Title.Size = UDim2.new(0.582424, 0, 0.612447, 0)
trii.Title.TextColor3 = Color3.fromRGB(250, 250, 250)
trii.Title.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.Title.Text = "Clear Logs"
trii.Title.Position = UDim2.new(0.494866, 0, 0.493859, 0)
trii.Title.BackgroundTransparency = 1
trii.Title.Parent = trii.cclrbtn

trii.UICorner_8.CornerRadius = UDim.new(0.08, 0)
trii.UICorner_8.Parent = trii.cclrbtn

trii.UIStroke_4.LineJoinMode = Enum.LineJoinMode.Miter
trii.UIStroke_4.Thickness = 3
trii.UIStroke_4.Color = Color3.fromRGB(60, 66, 83)
trii.UIStroke_4.Enabled = false
trii.UIStroke_4.Parent = trii.cclrbtn

trii.excp.BorderSizePixel = 3
trii.excp.ScaleType = Enum.ScaleType.Fit
trii.excp.AutoButtonColor = false
trii.excp.BackgroundColor3 = Color3.fromRGB(44, 48, 61)
trii.excp.BorderMode = Enum.BorderMode.Inset
trii.excp.Selectable = false
trii.excp.AnchorPoint = Vector2.new(0.5, 0.5)
trii.excp.Size = UDim2.new(0.0945025, 0, 0.784056, 0)
trii.excp.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.excp.Name = "excp"
trii.excp.Position = UDim2.new(0.711627, 0, 0.616964, 0)
trii.excp.Parent = trii.logButtons

trii.Title_1.TextWrapped = true
trii.Title_1.BorderSizePixel = 0
trii.Title_1.TextScaled = true
trii.Title_1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.Title_1.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trii.Title_1.AnchorPoint = Vector2.new(0.5, 0.5)
trii.Title_1.TextSize = 14
trii.Title_1.Name = "Title"
trii.Title_1.Size = UDim2.new(0.712748, 0, 0.866139, 0)
trii.Title_1.TextColor3 = Color3.fromRGB(250, 250, 250)
trii.Title_1.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.Title_1.Text = "Execute from Clipboard"
trii.Title_1.Position = UDim2.new(0.495013, 0, 0.497096, 0)
trii.Title_1.BackgroundTransparency = 1
trii.Title_1.Parent = trii.excp

trii.UICorner_9.CornerRadius = UDim.new(0.08, 0)
trii.UICorner_9.Parent = trii.excp

trii.UIStroke_5.LineJoinMode = Enum.LineJoinMode.Miter
trii.UIStroke_5.Thickness = 3
trii.UIStroke_5.Color = Color3.fromRGB(60, 66, 83)
trii.UIStroke_5.Enabled = false
trii.UIStroke_5.Parent = trii.excp

trii.TextLabel_4.TextWrapped = true
trii.TextLabel_4.BorderSizePixel = 0
trii.TextLabel_4.TextScaled = true
trii.TextLabel_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.TextLabel_4.FontFace = Font.new("rbxasset://fonts/families/Inconsolata.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trii.TextLabel_4.TextSize = 14
trii.TextLabel_4.Size = UDim2.new(0.242269, 0, 0.492921, 0)
trii.TextLabel_4.TextColor3 = Color3.fromRGB(225, 225, 225)
trii.TextLabel_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.TextLabel_4.Text = "Note: There is like 280 line limit on roblox :/"
trii.TextLabel_4.Position = UDim2.new(0.81694, 0, 0.253539, 0)
trii.TextLabel_4.BackgroundTransparency = 1
trii.TextLabel_4.TextXAlignment = Enum.TextXAlignment.Left
trii.TextLabel_4.Parent = trii.logButtons

trii.consoleFrame.BorderSizePixel = 0
trii.consoleFrame.CanvasSize = UDim2.new(0, 0, 0.87, 0)
trii.consoleFrame.CanvasPosition = Vector2.new(0, 7.944)
trii.consoleFrame.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
trii.consoleFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
trii.consoleFrame.Size = UDim2.new(0.975214, 0, 0.853, 0)
trii.consoleFrame.BackgroundTransparency = 1
trii.consoleFrame.Active = true
trii.consoleFrame.ScrollBarImageTransparency = 0.8
trii.consoleFrame.ScrollBarThickness = 10
trii.consoleFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.consoleFrame.Name = "consoleFrame"
trii.consoleFrame.Position = UDim2.new(0.0167858, 0, 0.0257617, 0)
trii.consoleFrame.Parent = trii.logFrame

trii.GlobalLog.Name = "GlobalLog"
trii.GlobalLog.Parent = trii.consoleFrame

trii.TextBox.BorderSizePixel = 0
trii.TextBox.RichText = true
trii.TextBox.TextYAlignment = Enum.TextYAlignment.Top
trii.TextBox.BackgroundColor3 = Color3.fromRGB(39, 53, 255)
trii.TextBox.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trii.TextBox.TextStrokeColor3 = Color3.fromRGB(211, 211, 211)
trii.TextBox.TextSize = 26
trii.TextBox.Name = "TextBox"
trii.TextBox.AutomaticSize = Enum.AutomaticSize.Y
trii.TextBox.Size = UDim2.new(1, 0, 1, 0)
trii.TextBox.TextColor3 = Color3.fromRGB(211, 211, 211)
trii.TextBox.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.TextBox.Text = ""
trii.TextBox.LineHeight = 1.3
trii.TextBox.BackgroundTransparency = 1
trii.TextBox.TextXAlignment = Enum.TextXAlignment.Left
trii.TextBox.Parent = trii.consoleFrame

trii.SettingsFrame.Active = true
trii.SettingsFrame.BorderSizePixel = 0
trii.SettingsFrame.Size = UDim2.new(0.95, 0, 0.649, 0)
trii.SettingsFrame.Position = UDim2.new(0.024, 0, 0.09, 0)
trii.SettingsFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.SettingsFrame.Visible = false
trii.SettingsFrame.Name = "SettingsFrame"
trii.SettingsFrame.BackgroundColor3 = Color3.fromRGB(38, 42, 53)
trii.SettingsFrame.Parent = trii.MainFrame

trii.UICorner_10.CornerRadius = UDim.new(0.02, 0)
trii.UICorner_10.Parent = trii.SettingsFrame

trii.sample.BorderSizePixel = 0
trii.sample.Size = UDim2.new(0.939366, 0, 0.171716, 0)
trii.sample.Position = UDim2.new(0.0299999, 0, 0.0520692, 0)
trii.sample.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.sample.Name = "sample"
trii.sample.BackgroundColor3 = Color3.fromRGB(30, 34, 42)
trii.sample.Parent = trii.SettingsFrame

trii.UIListLayout_5.HorizontalAlignment = Enum.HorizontalAlignment.Right
trii.UIListLayout_5.SortOrder = Enum.SortOrder.LayoutOrder
trii.UIListLayout_5.Padding = UDim.new(0.1, 0)
trii.UIListLayout_5.Parent = trii.sample

trii.UICorner_11.CornerRadius = UDim.new(0.1, 0)
trii.UICorner_11.Parent = trii.sample

trii.Title_2.TextWrapped = true
trii.Title_2.BorderSizePixel = 0
trii.Title_2.TextScaled = true
trii.Title_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.Title_2.FontFace = Font.new("rbxasset://fonts/families/Inconsolata.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trii.Title_2.AnchorPoint = Vector2.new(0.5, 0.5)
trii.Title_2.TextSize = 100
trii.Title_2.Name = "Title"
trii.Title_2.Size = UDim2.new(0.895877, 0, 0, 0)
trii.Title_2.TextColor3 = Color3.fromRGB(250, 250, 250)
trii.Title_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.Title_2.Text = ""
trii.Title_2.Position = UDim2.new(0.552062, 0, 0, 0)
trii.Title_2.BackgroundTransparency = 1
trii.Title_2.TextXAlignment = Enum.TextXAlignment.Left
trii.Title_2.Parent = trii.sample

trii.Title_3.TextWrapped = true
trii.Title_3.BorderSizePixel = 0
trii.Title_3.TextScaled = true
trii.Title_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.Title_3.FontFace = Font.new("rbxasset://fonts/families/Inconsolata.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trii.Title_3.AnchorPoint = Vector2.new(0.5, 0.5)
trii.Title_3.TextSize = 100
trii.Title_3.Name = "Title"
trii.Title_3.Size = UDim2.new(0.909815, 0, 0.349235, 0)
trii.Title_3.TextColor3 = Color3.fromRGB(250, 250, 250)
trii.Title_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.Title_3.Text = "Enable Trigon Desktop Connection"
trii.Title_3.Position = UDim2.new(0.545092, 0, 0.274617, 0)
trii.Title_3.BackgroundTransparency = 1
trii.Title_3.TextXAlignment = Enum.TextXAlignment.Left
trii.Title_3.Parent = trii.sample

trii.Title_4.TextWrapped = true
trii.Title_4.BorderSizePixel = 0
trii.Title_4.TextScaled = true
trii.Title_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.Title_4.FontFace = Font.new("rbxasset://fonts/families/Inconsolata.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trii.Title_4.AnchorPoint = Vector2.new(0.5, 0.5)
trii.Title_4.TextSize = 100
trii.Title_4.Name = "Title"
trii.Title_4.Size = UDim2.new(0.909815, 0, 0.273333, 0)
trii.Title_4.TextColor3 = Color3.fromRGB(250, 250, 250)
trii.Title_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.Title_4.Text = "{comming soon}"
trii.Title_4.Position = UDim2.new(0.545092, 0, 0.685901, 0)
trii.Title_4.BackgroundTransparency = 1
trii.Title_4.TextXAlignment = Enum.TextXAlignment.Left
trii.Title_4.Parent = trii.sample

trii.ImageLabel.BorderSizePixel = 0
trii.ImageLabel.ScaleType = Enum.ScaleType.Fit
trii.ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.ImageLabel.Image = "rbxassetid://15865858307"
trii.ImageLabel.Size = UDim2.new(0.0631573, 0, 0.173628, 0)
trii.ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.ImageLabel.BackgroundTransparency = 1
trii.ImageLabel.Position = UDim2.new(0.0408212, 0, 0.0501573, 0)
trii.ImageLabel.Parent = trii.SettingsFrame

trii.homeFrame.Active = true
trii.homeFrame.BorderSizePixel = 0
trii.homeFrame.Size = UDim2.new(0.949745, 0, 0.646527, 0)
trii.homeFrame.Position = UDim2.new(0.0244645, 0, 0.0897571, 0)
trii.homeFrame.BackgroundTransparency = 0.45
trii.homeFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.homeFrame.ClipsDescendants = true
trii.homeFrame.Name = "homeFrame"
trii.homeFrame.BackgroundColor3 = Color3.fromRGB(38, 42, 53)
trii.homeFrame.Parent = trii.MainFrame

trii.UICorner_12.CornerRadius = UDim.new(0.02, 0)
trii.UICorner_12.Parent = trii.homeFrame

trii.changelogFrame.BorderSizePixel = 0
trii.changelogFrame.CanvasSize = UDim2.new(0, 0, 1, 0)
trii.changelogFrame.Selectable = false
trii.changelogFrame.BackgroundColor3 = Color3.fromRGB(38, 42, 53)
trii.changelogFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
trii.changelogFrame.Size = UDim2.new(0.16949, 0, 1.00031, 0)
trii.changelogFrame.BackgroundTransparency = 0.35
trii.changelogFrame.ScrollBarImageTransparency = 0.64
trii.changelogFrame.ScrollBarThickness = 5
trii.changelogFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.changelogFrame.Name = "changelogFrame"
trii.changelogFrame.Position = UDim2.new(-5.87782e-09, 0, 0, 0)
trii.changelogFrame.Parent = trii.homeFrame

trii.ScriptBox.TextWrapped = true
trii.ScriptBox.LineHeight = 1.41
trii.ScriptBox.BorderSizePixel = 0
trii.ScriptBox.RichText = true
trii.ScriptBox.TextYAlignment = Enum.TextYAlignment.Top
trii.ScriptBox.BackgroundColor3 = Color3.fromRGB(75, 0, 0)
trii.ScriptBox.FontFace = Font.new("rbxasset://fonts/families/Nunito.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trii.ScriptBox.Position = UDim2.new(0.0470594, 0, 0.0200526, 0)
trii.ScriptBox.BackgroundTransparency = 1
trii.ScriptBox.AutomaticSize = Enum.AutomaticSize.Y
trii.ScriptBox.TextSize = 22
trii.ScriptBox.ClipsDescendants = true
trii.ScriptBox.Size = UDim2.new(0.952941, 0, 0.982121, 0)
trii.ScriptBox.TextColor3 = Color3.fromRGB(150, 150, 150)
trii.ScriptBox.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.ScriptBox.Text = "~~ Changelog UX ~~\n+ Experience Fresh\n+ Fixed to stable~~ Changelog v0.03 ~~\n+ Added auto execute\n+ Added option to save scripts\n+ Changed some stuff on console log\n\n~~ Changelog v0.02 ~~\n+ Added changelog\n+ Added game script section (will be adding different game scripts soon)\n+ Added Console Logging\n\n~~ Changelog v0.01 ~~\n- Tridog release :o"

trii.ScriptBox.MultiLine = true
trii.ScriptBox.CursorPosition = -1
trii.ScriptBox.Name = "ScriptBox"
trii.ScriptBox.TextXAlignment = Enum.TextXAlignment.Left
trii.ScriptBox.ClearTextOnFocus = false
trii.ScriptBox.Parent = trii.changelogFrame

trii.UICorner_13.CornerRadius = UDim.new(1, 0)
trii.UICorner_13.Parent = trii.changelogFrame

trii.UIListLayout_6.FillDirection = Enum.FillDirection.Horizontal
trii.UIListLayout_6.SortOrder = Enum.SortOrder.LayoutOrder
trii.UIListLayout_6.Padding = UDim.new(0.018, 0)
trii.UIListLayout_6.Parent = trii.homeFrame

trii.scriptsFrame.BorderSizePixel = 0
trii.scriptsFrame.CanvasSize = UDim2.new(0, 0, 1, 0)
trii.scriptsFrame.BackgroundColor3 = Color3.fromRGB(38, 42, 53)
trii.scriptsFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
trii.scriptsFrame.Size = UDim2.new(0.357601, 0, 1, 0)
trii.scriptsFrame.BackgroundTransparency = 0.35
trii.scriptsFrame.Active = true
trii.scriptsFrame.ScrollBarImageTransparency = 0.64
trii.scriptsFrame.ScrollBarThickness = 5
trii.scriptsFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.scriptsFrame.Name = "scriptsFrame"
trii.scriptsFrame.Position = UDim2.new(0.186719, 0, 0, 0)
trii.scriptsFrame.Parent = trii.homeFrame

trii.UICorner_14.CornerRadius = UDim.new(1, 0)
trii.UICorner_14.Parent = trii.scriptsFrame

trii.UIListLayout_7.HorizontalAlignment = Enum.HorizontalAlignment.Center
trii.UIListLayout_7.Padding = UDim.new(0.01, 0)
trii.UIListLayout_7.Parent = trii.scriptsFrame

trii._GameHeader.BorderSizePixel = 0
trii._GameHeader.Size = UDim2.new(1, 0, 0.157089, 0)
trii._GameHeader.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii._GameHeader.Name = "#GameHeader"
trii._GameHeader.BackgroundColor3 = Color3.fromRGB(35, 39, 49)
trii._GameHeader.Parent = trii.scriptsFrame

trii.Title_5.TextWrapped = true
trii.Title_5.BorderSizePixel = 0
trii.Title_5.TextScaled = true
trii.Title_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.Title_5.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trii.Title_5.TextSize = 14
trii.Title_5.Name = "Title"
trii.Title_5.Size = UDim2.new(0.998909, 0, 0.572671, 0)
trii.Title_5.TextColor3 = Color3.fromRGB(180, 193, 216)
trii.Title_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.Title_5.Text = "{game_name}"
trii.Title_5.Position = UDim2.new(0, 0, 0.2, 0)
trii.Title_5.BackgroundTransparency = 1
trii.Title_5.Parent = trii._GameHeader

trii.UICorner_15.CornerRadius = UDim.new(0.1, 0)
trii.UICorner_15.Parent = trii._GameHeader

trii.TextButton.TextWrapped = true
trii.TextButton.Active = false
trii.TextButton.BorderSizePixel = 0
trii.TextButton.BackgroundColor3 = Color3.fromRGB(55, 60, 76)
trii.TextButton.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trii.TextButton.Position = UDim2.new(0.0264026, 0, 0.157089, 0)
trii.TextButton.TextSize = 16
trii.TextButton.Size = UDim2.new(0.950495, 0, 0.1, 0)
trii.TextButton.TextColor3 = Color3.fromRGB(180, 193, 216)
trii.TextButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.TextButton.Text = "No scripts found for this game..."
trii.TextButton.Parent = trii.scriptsFrame

trii.UICorner_16.CornerRadius = UDim.new(0.1, 0)
trii.UICorner_16.Parent = trii.TextButton

trii.localplrFrame.BorderSizePixel = 0
trii.localplrFrame.Size = UDim2.new(0.287, 0, 1, 0)
trii.localplrFrame.Position = UDim2.new(0.209419, 0, 3.06074e-08, 0)
trii.localplrFrame.BackgroundTransparency = 0.4
trii.localplrFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.localplrFrame.Visible = false
trii.localplrFrame.Name = "localplrFrame"
trii.localplrFrame.BackgroundColor3 = Color3.fromRGB(38, 42, 53)
trii.localplrFrame.Parent = trii.homeFrame

trii.UIListLayout_8.HorizontalAlignment = Enum.HorizontalAlignment.Center
trii.UIListLayout_8.SortOrder = Enum.SortOrder.LayoutOrder
trii.UIListLayout_8.Padding = UDim.new(0.01, 0)
trii.UIListLayout_8.Parent = trii.localplrFrame

trii.Header.BorderSizePixel = 0
trii.Header.Size = UDim2.new(1, 0, 0.157089, 0)
trii.Header.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.Header.Name = "Header"
trii.Header.BackgroundColor3 = Color3.fromRGB(35, 39, 49)
trii.Header.Parent = trii.localplrFrame

trii.Title_6.TextWrapped = true
trii.Title_6.BorderSizePixel = 0
trii.Title_6.TextScaled = true
trii.Title_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.Title_6.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trii.Title_6.TextSize = 14
trii.Title_6.Name = "Title"
trii.Title_6.Size = UDim2.new(0.998909, 0, 0.572671, 0)
trii.Title_6.TextColor3 = Color3.fromRGB(180, 193, 216)
trii.Title_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.Title_6.Text = "Local Player"
trii.Title_6.Position = UDim2.new(0, 0, 0.2, 0)
trii.Title_6.BackgroundTransparency = 1
trii.Title_6.Parent = trii.Header

trii.UICorner_17.CornerRadius = UDim.new(0.1, 0)
trii.UICorner_17.Parent = trii.Header

trii.walkspeed.BorderSizePixel = 0
trii.walkspeed.Size = UDim2.new(0.912001, 0, 0.127863, 0)
trii.walkspeed.Position = UDim2.new(0.00907725, 0, 0.167089, 0)
trii.walkspeed.BackgroundTransparency = 1
trii.walkspeed.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.walkspeed.Name = "walkspeed"
trii.walkspeed.BackgroundColor3 = Color3.fromRGB(162, 162, 162)
trii.walkspeed.Parent = trii.localplrFrame

trii.Slider.BorderSizePixel = 0
trii.Slider.Size = UDim2.new(0.944831, 0, 0.393775, 0)
trii.Slider.Position = UDim2.new(0.0289786, 0, 0.594506, 0)
trii.Slider.BackgroundTransparency = 1
trii.Slider.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.Slider.Name = "Slider"
trii.Slider.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.Slider:SetAttribute("ColorEnabled1", Color3.fromRGB(231, 174, 174))
trii.Slider:SetAttribute("ColorEnabled2", Color3.fromRGB(156, 19, 19))
trii.Slider:SetAttribute("IsEnabled", true)
trii.Slider:SetAttribute("ColorDisabled1", Color3.fromRGB(202, 202, 202))
trii.Slider:SetAttribute("ColorDisabled2", Color3.fromRGB(158, 158, 158))
trii.Slider:SetAttribute("ValuePercent", 50)
trii.Slider:SetAttribute("ValueIncrement", 1)
trii.Slider.Parent = trii.walkspeed

trii.Image.BorderSizePixel = 0
trii.Image.Size = UDim2.new(1, 0, 1, 0)
trii.Image.BackgroundTransparency = 1
trii.Image.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.Image.Name = "Image"
trii.Image.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.Image.Parent = trii.Slider

trii.Bar_Background.AnchorPoint = Vector2.new(0, 0.5)
trii.Bar_Background.BorderSizePixel = 0
trii.Bar_Background.Size = UDim2.new(1, 0, 0.15, 0)
trii.Bar_Background.Position = UDim2.new(0, 0, 0.5, 0)
trii.Bar_Background.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.Bar_Background.Name = "Bar-Background"
trii.Bar_Background.BackgroundColor3 = Color3.fromRGB(101, 112, 141)
trii.Bar_Background.Parent = trii.Image

trii.UICorner_18.CornerRadius = UDim.new(0.5, 0)
trii.UICorner_18.Parent = trii.Bar_Background

trii.Bar_Foreground.AnchorPoint = Vector2.new(0, 0.5)
trii.Bar_Foreground.ZIndex = 2
trii.Bar_Foreground.BorderSizePixel = 0
trii.Bar_Foreground.Size = UDim2.new(0.5, 0, 0.3, 0)
trii.Bar_Foreground.Position = UDim2.new(0, 0, 0.5, 0)
trii.Bar_Foreground.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.Bar_Foreground.Name = "Bar-Foreground"
trii.Bar_Foreground.BackgroundColor3 = Color3.fromRGB(65, 68, 91)
trii.Bar_Foreground.Parent = trii.Image

trii.UICorner_19.CornerRadius = UDim.new(0.5, 0)
trii.UICorner_19.Parent = trii.Bar_Foreground

trii.Thumb.ImageColor3 = Color3.fromRGB(65, 68, 91)
trii.Thumb.ZIndex = 3
trii.Thumb.BorderSizePixel = 0
trii.Thumb.ScaleType = Enum.ScaleType.Fit
trii.Thumb.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.Thumb.AnchorPoint = Vector2.new(0.5, 0.5)
trii.Thumb.Image = "rbxassetid://11953889677"
trii.Thumb.Size = UDim2.new(0.0778816, 0, 1, 0)
trii.Thumb.Name = "Thumb"
trii.Thumb.BackgroundTransparency = 1
trii.Thumb.Position = UDim2.new(0.5, 0, 0.5, 0)
trii.Thumb:SetAttribute("IsDragging", false)
trii.Thumb.Parent = trii.Image

trii.UIAspectRatioConstraint.DominantAxis = Enum.DominantAxis.Height
trii.UIAspectRatioConstraint.Parent = trii.Thumb

trii.Thumb_Pressed.ImageColor3 = Color3.fromRGB(65, 68, 91)
trii.Thumb_Pressed.BorderSizePixel = 0
trii.Thumb_Pressed.ScaleType = Enum.ScaleType.Fit
trii.Thumb_Pressed.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.Thumb_Pressed.ImageTransparency = 0.8
trii.Thumb_Pressed.AnchorPoint = Vector2.new(0.5, 0.5)
trii.Thumb_Pressed.Image = "rbxassetid://11953889677"
trii.Thumb_Pressed.Size = UDim2.new(2, 0, 2, 0)
trii.Thumb_Pressed.Name = "Thumb-Pressed"
trii.Thumb_Pressed.BackgroundTransparency = 1
trii.Thumb_Pressed.Position = UDim2.new(0.5, 0, 0.5, 0)
trii.Thumb_Pressed.Visible = false
trii.Thumb_Pressed.Parent = trii.Thumb

trii.Configuration.Parent = trii.Slider

trii.ObjectBarBackground.Name = "ObjectBarBackground"
trii.ObjectBarBackground.Parent = trii.Configuration

trii.ObjectBarForeground.Name = "ObjectBarForeground"
trii.ObjectBarForeground.Parent = trii.Configuration

trii.ObjectThumbNormal.Name = "ObjectThumbNormal"
trii.ObjectThumbNormal.Parent = trii.Configuration

trii.ObjectThumbPressed.Name = "ObjectThumbPressed"
trii.ObjectThumbPressed.Parent = trii.Configuration

trii.Title_7.TextWrapped = true
trii.Title_7.BorderSizePixel = 0
trii.Title_7.TextScaled = true
trii.Title_7.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.Title_7.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trii.Title_7.TextSize = 14
trii.Title_7.Name = "Title"
trii.Title_7.Size = UDim2.new(0.998909, 0, 0.527078, 0)
trii.Title_7.TextColor3 = Color3.fromRGB(180, 193, 216)
trii.Title_7.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.Title_7.Text = "Walk Speed Modified: 0"
trii.Title_7.Position = UDim2.new(0.00612932, 0, -0.013275, 0)
trii.Title_7.BackgroundTransparency = 1
trii.Title_7.Parent = trii.walkspeed

trii.jumspeed.BorderSizePixel = 0
trii.jumspeed.Size = UDim2.new(0.912001, 0, 0.127863, 0)
trii.jumspeed.Position = UDim2.new(0.00907725, 0, 0.167089, 0)
trii.jumspeed.BackgroundTransparency = 1
trii.jumspeed.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.jumspeed.Name = "jumspeed"
trii.jumspeed.BackgroundColor3 = Color3.fromRGB(162, 162, 162)
trii.jumspeed.Parent = trii.localplrFrame

trii.Slider_1.BorderSizePixel = 0
trii.Slider_1.Size = UDim2.new(0.944831, 0, 0.393775, 0)
trii.Slider_1.Position = UDim2.new(0.0289786, 0, 0.594506, 0)
trii.Slider_1.BackgroundTransparency = 1
trii.Slider_1.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.Slider_1.Name = "Slider"
trii.Slider_1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.Slider_1:SetAttribute("ColorEnabled1", Color3.fromRGB(231, 174, 174))
trii.Slider_1:SetAttribute("ColorEnabled2", Color3.fromRGB(156, 19, 19))
trii.Slider_1:SetAttribute("IsEnabled", true)
trii.Slider_1:SetAttribute("ColorDisabled1", Color3.fromRGB(202, 202, 202))
trii.Slider_1:SetAttribute("ColorDisabled2", Color3.fromRGB(158, 158, 158))
trii.Slider_1:SetAttribute("ValuePercent", 50)
trii.Slider_1:SetAttribute("ValueIncrement", 1)
trii.Slider_1.Parent = trii.jumspeed

trii.Image_1.BorderSizePixel = 0
trii.Image_1.Size = UDim2.new(1, 0, 1, 0)
trii.Image_1.BackgroundTransparency = 1
trii.Image_1.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.Image_1.Name = "Image"
trii.Image_1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.Image_1.Parent = trii.Slider_1

trii.Bar_Background_1.AnchorPoint = Vector2.new(0, 0.5)
trii.Bar_Background_1.BorderSizePixel = 0
trii.Bar_Background_1.Size = UDim2.new(1, 0, 0.15, 0)
trii.Bar_Background_1.Position = UDim2.new(0, 0, 0.5, 0)
trii.Bar_Background_1.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.Bar_Background_1.Name = "Bar-Background"
trii.Bar_Background_1.BackgroundColor3 = Color3.fromRGB(231, 174, 174)
trii.Bar_Background_1.Parent = trii.Image_1

trii.UICorner_20.CornerRadius = UDim.new(0.5, 0)
trii.UICorner_20.Parent = trii.Bar_Background_1

trii.Bar_Foreground_1.AnchorPoint = Vector2.new(0, 0.5)
trii.Bar_Foreground_1.ZIndex = 2
trii.Bar_Foreground_1.BorderSizePixel = 0
trii.Bar_Foreground_1.Size = UDim2.new(0.5, 0, 0.3, 0)
trii.Bar_Foreground_1.Position = UDim2.new(0, 0, 0.5, 0)
trii.Bar_Foreground_1.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.Bar_Foreground_1.Name = "Bar-Foreground"
trii.Bar_Foreground_1.BackgroundColor3 = Color3.fromRGB(156, 19, 19)
trii.Bar_Foreground_1.Parent = trii.Image_1

trii.UICorner_21.CornerRadius = UDim.new(0.5, 0)
trii.UICorner_21.Parent = trii.Bar_Foreground_1

trii.Thumb_1.ImageColor3 = Color3.fromRGB(156, 19, 19)
trii.Thumb_1.ZIndex = 3
trii.Thumb_1.BorderSizePixel = 0
trii.Thumb_1.ScaleType = Enum.ScaleType.Fit
trii.Thumb_1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.Thumb_1.AnchorPoint = Vector2.new(0.5, 0.5)
trii.Thumb_1.Image = "rbxassetid://11953889677"
trii.Thumb_1.Size = UDim2.new(0.0778816, 0, 1, 0)
trii.Thumb_1.Name = "Thumb"
trii.Thumb_1.BackgroundTransparency = 1
trii.Thumb_1.Position = UDim2.new(0.5, 0, 0.5, 0)
trii.Thumb_1:SetAttribute("IsDragging", false)
trii.Thumb_1.Parent = trii.Image_1

trii.UIAspectRatioConstraint_1.DominantAxis = Enum.DominantAxis.Height
trii.UIAspectRatioConstraint_1.Parent = trii.Thumb_1

trii.Thumb_Pressed_1.ImageColor3 = Color3.fromRGB(156, 19, 19)
trii.Thumb_Pressed_1.BorderSizePixel = 0
trii.Thumb_Pressed_1.ScaleType = Enum.ScaleType.Fit
trii.Thumb_Pressed_1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.Thumb_Pressed_1.ImageTransparency = 0.8
trii.Thumb_Pressed_1.AnchorPoint = Vector2.new(0.5, 0.5)
trii.Thumb_Pressed_1.Image = "rbxassetid://11953889677"
trii.Thumb_Pressed_1.Size = UDim2.new(2, 0, 2, 0)
trii.Thumb_Pressed_1.Name = "Thumb-Pressed"
trii.Thumb_Pressed_1.BackgroundTransparency = 1
trii.Thumb_Pressed_1.Position = UDim2.new(0.5, 0, 0.5, 0)
trii.Thumb_Pressed_1.Visible = false
trii.Thumb_Pressed_1.Parent = trii.Thumb_1

trii.Configuration_1.Parent = trii.Slider_1

trii.ObjectBarBackground_1.Name = "ObjectBarBackground"
trii.ObjectBarBackground_1.Parent = trii.Configuration_1

trii.ObjectBarForeground_1.Name = "ObjectBarForeground"
trii.ObjectBarForeground_1.Parent = trii.Configuration_1

trii.ObjectThumbNormal_1.Name = "ObjectThumbNormal"
trii.ObjectThumbNormal_1.Parent = trii.Configuration_1

trii.ObjectThumbPressed_1.Name = "ObjectThumbPressed"
trii.ObjectThumbPressed_1.Parent = trii.Configuration_1

trii.Scripts.Name = "Scripts"
trii.Scripts.Parent = trii.Slider_1

trii.FormSliderHorizontalLocalScript.Enabled = false
trii.FormSliderHorizontalLocalScript.Name = "FormSliderHorizontalLocalScript"
trii.FormSliderHorizontalLocalScript.Disabled = true
trii.FormSliderHorizontalLocalScript.Parent = trii.Scripts

trii.Title_8.TextWrapped = true
trii.Title_8.BorderSizePixel = 0
trii.Title_8.TextScaled = true
trii.Title_8.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.Title_8.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trii.Title_8.TextSize = 14
trii.Title_8.Name = "Title"
trii.Title_8.Size = UDim2.new(0.998909, 0, 0.527078, 0)
trii.Title_8.TextColor3 = Color3.fromRGB(180, 193, 216)
trii.Title_8.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.Title_8.Text = "Jump Speed Modified: 0"
trii.Title_8.Position = UDim2.new(0.00612932, 0, -0.013275, 0)
trii.Title_8.BackgroundTransparency = 1
trii.Title_8.Parent = trii.jumspeed

trii.LocalPlayerHandle.Name = "LocalPlayerHandle"
trii.LocalPlayerHandle.Parent = trii.localplrFrame

trii.FormSliderClass.Name = "FormSliderClass"
trii.FormSliderClass.Parent = trii.localplrFrame

trii.ExtendDraggableClass.Name = "ExtendDraggableClass"
trii.ExtendDraggableClass.Parent = trii.localplrFrame

trii.CurPos.TextWrapped = true
trii.CurPos.BorderSizePixel = 0
trii.CurPos.TextScaled = true
trii.CurPos.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.CurPos.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trii.CurPos.TextSize = 14
trii.CurPos.Name = "CurPos"
trii.CurPos.Size = UDim2.new(0.898733, 0, 0.085544, 0)
trii.CurPos.TextColor3 = Color3.fromRGB(180, 193, 216)
trii.CurPos.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.CurPos.Text = "Current location: "
trii.CurPos.Position = UDim2.new(0.000272832, 0, 0.442814, 0)
trii.CurPos.BackgroundTransparency = 1
trii.CurPos.Parent = trii.localplrFrame

trii.localscriptsFrame.BorderSizePixel = 0
trii.localscriptsFrame.CanvasSize = UDim2.new(0, 0, 1, 0)
trii.localscriptsFrame.BackgroundColor3 = Color3.fromRGB(38, 42, 53)
trii.localscriptsFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
trii.localscriptsFrame.Size = UDim2.new(0.43768, 0, 1, 0)
trii.localscriptsFrame.BackgroundTransparency = 0.35
trii.localscriptsFrame.Active = true
trii.localscriptsFrame.ScrollBarImageTransparency = 0.64
trii.localscriptsFrame.ScrollBarThickness = 5
trii.localscriptsFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.localscriptsFrame.Name = "localscriptsFrame"
trii.localscriptsFrame.Position = UDim2.new(0.56232, 0, 0, 0)
trii.localscriptsFrame.Parent = trii.homeFrame

trii.UICorner_22.CornerRadius = UDim.new(1, 0)
trii.UICorner_22.Parent = trii.localscriptsFrame

trii.UIListLayout_9.HorizontalAlignment = Enum.HorizontalAlignment.Center
trii.UIListLayout_9.SortOrder = Enum.SortOrder.LayoutOrder
trii.UIListLayout_9.Padding = UDim.new(0.01, 0)
trii.UIListLayout_9.Parent = trii.localscriptsFrame

trii._GameHeader_1.BorderSizePixel = 0
trii._GameHeader_1.Size = UDim2.new(1, 0, 0.157089, 0)
trii._GameHeader_1.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii._GameHeader_1.Name = "#GameHeader"
trii._GameHeader_1.BackgroundColor3 = Color3.fromRGB(35, 39, 49)
trii._GameHeader_1.Parent = trii.localscriptsFrame

trii.Title_9.TextWrapped = true
trii.Title_9.BorderSizePixel = 0
trii.Title_9.TextScaled = true
trii.Title_9.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.Title_9.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trii.Title_9.TextSize = 14
trii.Title_9.Name = "Title"
trii.Title_9.Size = UDim2.new(0.631911, 0, 0.572671, 0)
trii.Title_9.TextColor3 = Color3.fromRGB(180, 193, 216)
trii.Title_9.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.Title_9.Text = "Local Scripts"
trii.Title_9.Position = UDim2.new(0, 0, 0.2, 0)
trii.Title_9.BackgroundTransparency = 1
trii.Title_9.Parent = trii._GameHeader_1

trii.UICorner_23.CornerRadius = UDim.new(0.1, 0)
trii.UICorner_23.Parent = trii._GameHeader_1

trii.Add_btn.BorderSizePixel = 0
trii.Add_btn.Size = UDim2.new(0.345421, 0, 0.482072, 0)
trii.Add_btn.Position = UDim2.new(0.63191, 0, 0.290598, 0)
trii.Add_btn.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.Add_btn.Name = "Add_btn"
trii.Add_btn.BackgroundColor3 = Color3.fromRGB(55, 60, 76)
trii.Add_btn.Parent = trii._GameHeader_1

trii.TextButton_1.TextWrapped = true
trii.TextButton_1.BorderSizePixel = 0
trii.TextButton_1.RichText = true
trii.TextButton_1.TextScaled = true
trii.TextButton_1.BackgroundColor3 = Color3.fromRGB(55, 60, 76)
trii.TextButton_1.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trii.TextButton_1.Position = UDim2.new(0.0427491, 0, 0.159589, 0)
trii.TextButton_1.TextSize = 14
trii.TextButton_1.Size = UDim2.new(0.909327, 0, 0.659937, 0)
trii.TextButton_1.TextColor3 = Color3.fromRGB(255, 255, 255)
trii.TextButton_1.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.TextButton_1.Text = "+ Add Script"
trii.TextButton_1.BackgroundTransparency = 1
trii.TextButton_1.Parent = trii.Add_btn

trii.UICorner_24.CornerRadius = UDim.new(0.1, 0)
trii.UICorner_24.Parent = trii.Add_btn

trii.script_placeholder.BorderSizePixel = 0
trii.script_placeholder.Size = UDim2.new(0.967878, 0, 0.1, 0)
trii.script_placeholder.Position = UDim2.new(0.0204618, 0, 0.167089, 0)
trii.script_placeholder.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.script_placeholder.ClipsDescendants = true
trii.script_placeholder.Name = "script_placeholder"
trii.script_placeholder.BackgroundColor3 = Color3.fromRGB(55, 60, 76)
trii.script_placeholder.Parent = trii.localscriptsFrame

trii.scriptTitle.TextWrapped = true
trii.scriptTitle.BorderSizePixel = 0
trii.scriptTitle.TextScaled = true
trii.scriptTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.scriptTitle.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trii.scriptTitle.ClipsDescendants = true
trii.scriptTitle.TextSize = 14
trii.scriptTitle.Name = "scriptTitle"
trii.scriptTitle.Size = UDim2.new(0.598337, 0, 0.484707, 0)
trii.scriptTitle.TextColor3 = Color3.fromRGB(180, 193, 216)
trii.scriptTitle.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.scriptTitle.Text = "Local Scripts"
trii.scriptTitle.Position = UDim2.new(0.0255949, 0, 0.247684, 0)
trii.scriptTitle.BackgroundTransparency = 1
trii.scriptTitle.TextXAlignment = Enum.TextXAlignment.Left
trii.scriptTitle.Parent = trii.script_placeholder

trii.Buttons.BorderSizePixel = 0
trii.Buttons.Size = UDim2.new(0.32274, 0, 0.81382, 0)
trii.Buttons.Position = UDim2.new(0.665989, 0, 0.0859291, 0)
trii.Buttons.BackgroundTransparency = 1
trii.Buttons.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.Buttons.Name = "Buttons"
trii.Buttons.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.Buttons.Parent = trii.script_placeholder

trii.UIListLayout_10.FillDirection = Enum.FillDirection.Horizontal
trii.UIListLayout_10.HorizontalAlignment = Enum.HorizontalAlignment.Right
trii.UIListLayout_10.VerticalAlignment = Enum.VerticalAlignment.Center
trii.UIListLayout_10.SortOrder = Enum.SortOrder.LayoutOrder
trii.UIListLayout_10.Padding = UDim.new(0.015, 0)
trii.UIListLayout_10.Parent = trii.Buttons

trii.run.BorderSizePixel = 0
trii.run.Size = UDim2.new(0.219148, 0, 1, 0)
trii.run.Position = UDim2.new(0.780852, 0, 0, 0)
trii.run.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.run.Name = "run"
trii.run.BackgroundColor3 = Color3.fromRGB(38, 42, 53)
trii.run.Parent = trii.Buttons

trii.UIListLayout_11.FillDirection = Enum.FillDirection.Horizontal
trii.UIListLayout_11.HorizontalAlignment = Enum.HorizontalAlignment.Center
trii.UIListLayout_11.VerticalAlignment = Enum.VerticalAlignment.Center
trii.UIListLayout_11.ItemLineAlignment = Enum.ItemLineAlignment.Center
trii.UIListLayout_11.Parent = trii.run

trii.UICorner_25.CornerRadius = UDim.new(0.06, 0)
trii.UICorner_25.Parent = trii.run

trii.button.ZIndex = 2
trii.button.BorderSizePixel = 0
trii.button.ScaleType = Enum.ScaleType.Fit
trii.button.Image = "rbxassetid://3926305904"
trii.button.ImageRectSize = Vector2.new(36, 36)
trii.button.Size = UDim2.new(0.5, 0, 0.5, 0)
trii.button.Name = "button"
trii.button.BackgroundTransparency = 1
trii.button.Position = UDim2.new(0.5, 0, 0.5, 0)
trii.button.ImageRectOffset = Vector2.new(404, 844)
trii.button.Parent = trii.run

trii.autoload.BorderSizePixel = 0
trii.autoload.Size = UDim2.new(0.627535, 0, 1, 0)
trii.autoload.Position = UDim2.new(0.0928736, 0, 0, 0)
trii.autoload.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.autoload.Name = "autoload"
trii.autoload.BackgroundColor3 = Color3.fromRGB(38, 42, 53)
trii.autoload.Parent = trii.Buttons

trii.UIListLayout_12.FillDirection = Enum.FillDirection.Horizontal
trii.UIListLayout_12.VerticalAlignment = Enum.VerticalAlignment.Center
trii.UIListLayout_12.ItemLineAlignment = Enum.ItemLineAlignment.Center
trii.UIListLayout_12.Parent = trii.autoload

trii.button_1.ZIndex = 2
trii.button_1.BorderSizePixel = 0
trii.button_1.ScaleType = Enum.ScaleType.Fit
trii.button_1.Image = "rbxassetid://3926305904"
trii.button_1.ImageRectSize = Vector2.new(36, 36)
trii.button_1.Size = UDim2.new(0.31389, 0, 0.496509, 0)
trii.button_1.Name = "button"
trii.button_1.LayoutOrder = 1
trii.button_1.BackgroundTransparency = 1
trii.button_1.Position = UDim2.new(0, 0, 0.251746, 0)
trii.button_1.ImageRectOffset = Vector2.new(724, 724)
trii.button_1.Parent = trii.autoload

trii.zz.TextWrapped = true
trii.zz.BorderSizePixel = 0
trii.zz.RichText = true
trii.zz.TextScaled = true
trii.zz.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.zz.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trii.zz.TextSize = 14
trii.zz.Name = "zz"
trii.zz.Size = UDim2.new(0.592892, 0, 0.503491, 0)
trii.zz.TextColor3 = Color3.fromRGB(240, 240, 240)
trii.zz.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.zz.Text = "AutoExecute"
trii.zz.Position = UDim2.new(0.355672, 0, 0.248254, 0)
trii.zz.BackgroundTransparency = 1
trii.zz.Parent = trii.autoload

trii.UICorner_26.CornerRadius = UDim.new(0.06, 0)
trii.UICorner_26.Parent = trii.autoload

trii.delete.BorderSizePixel = 0
trii.delete.Size = UDim2.new(0.219148, 0, 1, 0)
trii.delete.Position = UDim2.new(0.780852, 0, 0, 0)
trii.delete.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.delete.Name = "delete"
trii.delete.BackgroundColor3 = Color3.fromRGB(38, 42, 53)
trii.delete.Parent = trii.Buttons

trii.UIListLayout_13.FillDirection = Enum.FillDirection.Horizontal
trii.UIListLayout_13.HorizontalAlignment = Enum.HorizontalAlignment.Center
trii.UIListLayout_13.VerticalAlignment = Enum.VerticalAlignment.Center
trii.UIListLayout_13.ItemLineAlignment = Enum.ItemLineAlignment.Center
trii.UIListLayout_13.Parent = trii.delete

trii.UICorner_27.CornerRadius = UDim.new(0.06, 0)
trii.UICorner_27.Parent = trii.delete

trii.button_2.ZIndex = 2
trii.button_2.BorderSizePixel = 0
trii.button_2.ScaleType = Enum.ScaleType.Fit
trii.button_2.Image = "rbxassetid://3926305904"
trii.button_2.ImageRectSize = Vector2.new(36, 36)
trii.button_2.Size = UDim2.new(0.5, 0, 0.5, 0)
trii.button_2.Name = "button"
trii.button_2.BackgroundTransparency = 1
trii.button_2.Position = UDim2.new(0.5, 0, 0.5, 0)
trii.button_2.ImageRectOffset = Vector2.new(644, 724)
trii.button_2.Parent = trii.delete

trii.UICorner_28.CornerRadius = UDim.new(0.06, 0)
trii.UICorner_28.Parent = trii.script_placeholder

trii.addlocalscriptsFrame.BorderSizePixel = 0
trii.addlocalscriptsFrame.CanvasSize = UDim2.new(0, 0, 1, 0)
trii.addlocalscriptsFrame.BackgroundColor3 = Color3.fromRGB(38, 42, 53)
trii.addlocalscriptsFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
trii.addlocalscriptsFrame.Size = UDim2.new(0.43768, 0, 1, 0)
trii.addlocalscriptsFrame.BackgroundTransparency = 0.35
trii.addlocalscriptsFrame.Active = true
trii.addlocalscriptsFrame.ScrollBarImageTransparency = 0.64
trii.addlocalscriptsFrame.ScrollBarThickness = 5
trii.addlocalscriptsFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.addlocalscriptsFrame.Name = "addlocalscriptsFrame"
trii.addlocalscriptsFrame.Position = UDim2.new(0.56232, 0, 0, 0)
trii.addlocalscriptsFrame.Parent = trii.homeFrame

trii.UICorner_29.CornerRadius = UDim.new(1, 0)
trii.UICorner_29.Parent = trii.addlocalscriptsFrame

trii.UIListLayout_14.HorizontalAlignment = Enum.HorizontalAlignment.Center
trii.UIListLayout_14.SortOrder = Enum.SortOrder.LayoutOrder
trii.UIListLayout_14.Padding = UDim.new(0.01, 0)
trii.UIListLayout_14.Parent = trii.addlocalscriptsFrame

trii._GameHeader_2.BorderSizePixel = 0
trii._GameHeader_2.Size = UDim2.new(1, 0, 0.157089, 0)
trii._GameHeader_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii._GameHeader_2.Name = "#GameHeader"
trii._GameHeader_2.BackgroundColor3 = Color3.fromRGB(35, 39, 49)
trii._GameHeader_2.Parent = trii.addlocalscriptsFrame

trii.Title_10.TextWrapped = true
trii.Title_10.BorderSizePixel = 0
trii.Title_10.TextScaled = true
trii.Title_10.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.Title_10.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trii.Title_10.TextSize = 14
trii.Title_10.Name = "Title"
trii.Title_10.Size = UDim2.new(0.631911, 0, 0.572671, 0)
trii.Title_10.TextColor3 = Color3.fromRGB(180, 193, 216)
trii.Title_10.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.Title_10.Text = "Local Scripts"
trii.Title_10.Position = UDim2.new(0, 0, 0.2, 0)
trii.Title_10.BackgroundTransparency = 1
trii.Title_10.Parent = trii._GameHeader_2

trii.UICorner_30.CornerRadius = UDim.new(0.1, 0)
trii.UICorner_30.Parent = trii._GameHeader_2

trii.Frame.BorderSizePixel = 0
trii.Frame.Size = UDim2.new(0.345421, 0, 0.482072, 0)
trii.Frame.Position = UDim2.new(0.63191, 0, 0.290598, 0)
trii.Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.Frame.BackgroundColor3 = Color3.fromRGB(55, 60, 76)
trii.Frame.Parent = trii._GameHeader_2

trii.TextButton_2.TextWrapped = true
trii.TextButton_2.BorderSizePixel = 0
trii.TextButton_2.RichText = true
trii.TextButton_2.TextScaled = true
trii.TextButton_2.BackgroundColor3 = Color3.fromRGB(55, 60, 76)
trii.TextButton_2.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trii.TextButton_2.Position = UDim2.new(0.0427491, 0, 0.159589, 0)
trii.TextButton_2.TextSize = 14
trii.TextButton_2.Size = UDim2.new(0.909327, 0, 0.659937, 0)
trii.TextButton_2.TextColor3 = Color3.fromRGB(255, 255, 255)
trii.TextButton_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.TextButton_2.Text = "+ Add Script"
trii.TextButton_2.BackgroundTransparency = 1
trii.TextButton_2.Parent = trii.Frame

trii.UICorner_31.CornerRadius = UDim.new(0.1, 0)
trii.UICorner_31.Parent = trii.Frame

trii.addFrame.BorderSizePixel = 0
trii.addFrame.Size = UDim2.new(1, 0, 0.529673, 0)
trii.addFrame.Position = UDim2.new(0, 0, 0.178546, 0)
trii.addFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.addFrame.Name = "addFrame"
trii.addFrame.BackgroundColor3 = Color3.fromRGB(35, 39, 49)
trii.addFrame.Parent = trii.addlocalscriptsFrame

trii.input.BorderSizePixel = 0
trii.input.Size = UDim2.new(1, 0, 0.178707, 0)
trii.input.Position = UDim2.new(0, 0, 0.491846, 0)
trii.input.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.input.Name = "input"
trii.input.BackgroundColor3 = Color3.fromRGB(55, 60, 76)
trii.input.Parent = trii.addFrame

trii.TextBox_1.TextWrapped = true
trii.TextBox_1.BorderSizePixel = 0
trii.TextBox_1.RichText = true
trii.TextBox_1.TextScaled = true
trii.TextBox_1.BackgroundColor3 = Color3.fromRGB(55, 60, 76)
trii.TextBox_1.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trii.TextBox_1.Position = UDim2.new(0.0158423, 0, 0.172555, 0)
trii.TextBox_1.PlaceholderText = "{Text and Numbers Only}"
trii.TextBox_1.TextSize = 14
trii.TextBox_1.Size = UDim2.new(0.961489, 0, 0.645422, 0)
trii.TextBox_1.TextColor3 = Color3.fromRGB(0, 0, 0)
trii.TextBox_1.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.TextBox_1.Text = ""
trii.TextBox_1.CursorPosition = -1
trii.TextBox_1.ClearTextOnFocus = false
trii.TextBox_1.Parent = trii.input

trii.Title_11.TextWrapped = true
trii.Title_11.BorderSizePixel = 0
trii.Title_11.TextScaled = true
trii.Title_11.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.Title_11.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trii.Title_11.TextSize = 14
trii.Title_11.Name = "Title"
trii.Title_11.Size = UDim2.new(0.261373, 0, 0.111787, 0)
trii.Title_11.TextColor3 = Color3.fromRGB(180, 193, 216)
trii.Title_11.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.Title_11.Text = "Script Name:"
trii.Title_11.Position = UDim2.new(0.00832818, 0, 0.361132, 0)
trii.Title_11.BackgroundTransparency = 1
trii.Title_11.Parent = trii.addFrame

trii.TextLabel_5.TextWrapped = true
trii.TextLabel_5.BorderSizePixel = 0
trii.TextLabel_5.TextScaled = true
trii.TextLabel_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.TextLabel_5.FontFace = Font.new("rbxasset://fonts/families/Inconsolata.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trii.TextLabel_5.TextSize = 14
trii.TextLabel_5.Size = UDim2.new(0.961488, 0, 0.222536, 0)
trii.TextLabel_5.TextColor3 = Color3.fromRGB(225, 225, 225)
trii.TextLabel_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.TextLabel_5.Text = "UniverseX Note: You just need to set the script name. The script will be added from your clipboard, so make sure to copy it before adding it."
trii.TextLabel_5.Position = UDim2.new(0.0158422, 0, 0.0507511, 0)
trii.TextLabel_5.BackgroundTransparency = 1
trii.TextLabel_5.TextXAlignment = Enum.TextXAlignment.Left
trii.TextLabel_5.Parent = trii.addFrame

trii.confrim_btn.BorderSizePixel = 0
trii.confrim_btn.Size = UDim2.new(0.345421, 0, 0.157611, 0)
trii.confrim_btn.Position = UDim2.new(0.542995, 0, 0.709694, 0)
trii.confrim_btn.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.confrim_btn.Name = "confrim_btn"
trii.confrim_btn.BackgroundColor3 = Color3.fromRGB(55, 60, 76)
trii.confrim_btn.Parent = trii.addFrame

trii.TextButton_3.TextWrapped = true
trii.TextButton_3.BorderSizePixel = 0
trii.TextButton_3.RichText = true
trii.TextButton_3.TextScaled = true
trii.TextButton_3.BackgroundColor3 = Color3.fromRGB(55, 60, 76)
trii.TextButton_3.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trii.TextButton_3.Position = UDim2.new(0.0427491, 0, 0.159589, 0)
trii.TextButton_3.TextSize = 14
trii.TextButton_3.Size = UDim2.new(0.909327, 0, 0.659937, 0)
trii.TextButton_3.TextColor3 = Color3.fromRGB(255, 255, 255)
trii.TextButton_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.TextButton_3.Text = "Confrim"
trii.TextButton_3.BackgroundTransparency = 1
trii.TextButton_3.Parent = trii.confrim_btn

trii.UICorner_32.CornerRadius = UDim.new(0.1, 0)
trii.UICorner_32.Parent = trii.confrim_btn

trii.cancel_btn.BorderSizePixel = 0
trii.cancel_btn.Size = UDim2.new(0.345421, 0, 0.157611, 0)
trii.cancel_btn.Position = UDim2.new(0.179819, 0, 0.709694, 0)
trii.cancel_btn.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.cancel_btn.Name = "cancel_btn"
trii.cancel_btn.BackgroundColor3 = Color3.fromRGB(55, 60, 76)
trii.cancel_btn.Parent = trii.addFrame

trii.TextButton_4.TextWrapped = true
trii.TextButton_4.BorderSizePixel = 0
trii.TextButton_4.RichText = true
trii.TextButton_4.TextScaled = true
trii.TextButton_4.BackgroundColor3 = Color3.fromRGB(55, 60, 76)
trii.TextButton_4.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trii.TextButton_4.Position = UDim2.new(0.0427491, 0, 0.159589, 0)
trii.TextButton_4.TextSize = 14
trii.TextButton_4.Size = UDim2.new(0.909327, 0, 0.659937, 0)
trii.TextButton_4.TextColor3 = Color3.fromRGB(255, 255, 255)
trii.TextButton_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.TextButton_4.Text = "Cancel"
trii.TextButton_4.BackgroundTransparency = 1
trii.TextButton_4.Parent = trii.cancel_btn

trii.UICorner_33.CornerRadius = UDim.new(0.1, 0)
trii.UICorner_33.Parent = trii.cancel_btn

trii.ExecFrame.Active = true
trii.ExecFrame.BorderSizePixel = 0
trii.ExecFrame.Size = UDim2.new(0.949745, 0, 0.649132, 0)
trii.ExecFrame.Position = UDim2.new(0.0244645, 0, 0.0897571, 0)
trii.ExecFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.ExecFrame.Visible = false
trii.ExecFrame.Name = "ExecFrame"
trii.ExecFrame.BackgroundColor3 = Color3.fromRGB(38, 42, 53)
trii.ExecFrame.Parent = trii.MainFrame

trii.Buttons_1.Active = true
trii.Buttons_1.BorderSizePixel = 0
trii.Buttons_1.Size = UDim2.new(1, 0, 0.246428, 0)
trii.Buttons_1.Position = UDim2.new(0, 0, 0.752548, 0)
trii.Buttons_1.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.Buttons_1.Name = "Buttons"
trii.Buttons_1.BackgroundColor3 = Color3.fromRGB(31, 34, 43)
trii.Buttons_1.Parent = trii.ExecFrame

trii.UIListLayout_15.FillDirection = Enum.FillDirection.Horizontal
trii.UIListLayout_15.HorizontalAlignment = Enum.HorizontalAlignment.Center
trii.UIListLayout_15.VerticalAlignment = Enum.VerticalAlignment.Center
trii.UIListLayout_15.Padding = UDim.new(0.01, 0)
trii.UIListLayout_15.Parent = trii.Buttons_1

trii.Button1.BorderSizePixel = 3
trii.Button1.ScaleType = Enum.ScaleType.Fit
trii.Button1.AutoButtonColor = false
trii.Button1.BackgroundColor3 = Color3.fromRGB(44, 48, 61)
trii.Button1.BorderMode = Enum.BorderMode.Inset
trii.Button1.Selectable = false
trii.Button1.AnchorPoint = Vector2.new(0.5, 0.5)
trii.Button1.Size = UDim2.new(0.226347, 0, 0.721644, 0)
trii.Button1.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.Button1.Name = "Button1"
trii.Button1.Position = UDim2.new(0.145479, 0, 0.454178, 0)
trii.Button1.Parent = trii.Buttons_1

trii.UIStroke_6.LineJoinMode = Enum.LineJoinMode.Miter
trii.UIStroke_6.Thickness = 3
trii.UIStroke_6.Color = Color3.fromRGB(60, 66, 83)
trii.UIStroke_6.Enabled = false
trii.UIStroke_6.Parent = trii.Button1

trii.UICorner_34.CornerRadius = UDim.new(0.08, 0)
trii.UICorner_34.Parent = trii.Button1

trii.Title_12.TextWrapped = true
trii.Title_12.BorderSizePixel = 0
trii.Title_12.TextScaled = true
trii.Title_12.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.Title_12.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trii.Title_12.AnchorPoint = Vector2.new(0.5, 0.5)
trii.Title_12.TextSize = 100
trii.Title_12.Name = "Title"
trii.Title_12.Size = UDim2.new(0.340682, 0, 0.729158, 0)
trii.Title_12.TextColor3 = Color3.fromRGB(250, 250, 250)
trii.Title_12.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.Title_12.Text = "Execute"
trii.Title_12.Position = UDim2.new(0.5, 0, 0.5, 0)
trii.Title_12.BackgroundTransparency = 1
trii.Title_12.Parent = trii.Button1

trii.Button4.BorderSizePixel = 3
trii.Button4.ScaleType = Enum.ScaleType.Fit
trii.Button4.AutoButtonColor = false
trii.Button4.BackgroundColor3 = Color3.fromRGB(44, 48, 61)
trii.Button4.BorderMode = Enum.BorderMode.Inset
trii.Button4.Selectable = false
trii.Button4.AnchorPoint = Vector2.new(0.5, 0.5)
trii.Button4.Size = UDim2.new(0.226347, 0, 0.721644, 0)
trii.Button4.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.Button4.Name = "Button4"
trii.Button4.Position = UDim2.new(0.854521, 0, 0.454178, 0)
trii.Button4.Parent = trii.Buttons_1

trii.Title_13.TextWrapped = true
trii.Title_13.BorderSizePixel = 0
trii.Title_13.TextScaled = true
trii.Title_13.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.Title_13.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trii.Title_13.AnchorPoint = Vector2.new(0.5, 0.5)
trii.Title_13.TextSize = 14
trii.Title_13.Name = "Title"
trii.Title_13.Size = UDim2.new(0.313498, 0, 0.782088, 0)
trii.Title_13.TextColor3 = Color3.fromRGB(250, 250, 250)
trii.Title_13.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.Title_13.Text = "Clear"
trii.Title_13.Position = UDim2.new(0.5, 0, 0.5, 0)
trii.Title_13.BackgroundTransparency = 1
trii.Title_13.Parent = trii.Button4

trii.UICorner_35.CornerRadius = UDim.new(0.08, 0)
trii.UICorner_35.Parent = trii.Button4

trii.UIStroke_7.LineJoinMode = Enum.LineJoinMode.Miter
trii.UIStroke_7.Thickness = 3
trii.UIStroke_7.Color = Color3.fromRGB(60, 66, 83)
trii.UIStroke_7.Enabled = false
trii.UIStroke_7.Parent = trii.Button4

trii.Button3.BorderSizePixel = 3
trii.Button3.ScaleType = Enum.ScaleType.Fit
trii.Button3.AutoButtonColor = false
trii.Button3.BackgroundColor3 = Color3.fromRGB(44, 48, 61)
trii.Button3.BorderMode = Enum.BorderMode.Inset
trii.Button3.Selectable = false
trii.Button3.AnchorPoint = Vector2.new(0.5, 0.5)
trii.Button3.Size = UDim2.new(0.226347, 0, 0.721644, 0)
trii.Button3.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.Button3.Name = "Button3"
trii.Button3.Position = UDim2.new(0.618174, 0, 0.454178, 0)
trii.Button3.Parent = trii.Buttons_1

trii.Title_14.TextWrapped = true
trii.Title_14.BorderSizePixel = 0
trii.Title_14.TextScaled = true
trii.Title_14.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.Title_14.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trii.Title_14.AnchorPoint = Vector2.new(0.5, 0.5)
trii.Title_14.TextSize = 14
trii.Title_14.Name = "Title"
trii.Title_14.Size = UDim2.new(0.347791, 0, 0.782034, 0)
trii.Title_14.TextColor3 = Color3.fromRGB(250, 250, 250)
trii.Title_14.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.Title_14.Text = "Paste"
trii.Title_14.Position = UDim2.new(0.5, 0, 0.5, 0)
trii.Title_14.BackgroundTransparency = 1
trii.Title_14.Parent = trii.Button3

trii.UICorner_36.CornerRadius = UDim.new(0.08, 0)
trii.UICorner_36.Parent = trii.Button3

trii.UIStroke_8.LineJoinMode = Enum.LineJoinMode.Miter
trii.UIStroke_8.Thickness = 3
trii.UIStroke_8.Color = Color3.fromRGB(60, 66, 83)
trii.UIStroke_8.Enabled = false
trii.UIStroke_8.Parent = trii.Button3

trii.Button2.BorderSizePixel = 3
trii.Button2.ScaleType = Enum.ScaleType.Fit
trii.Button2.AutoButtonColor = false
trii.Button2.BackgroundColor3 = Color3.fromRGB(44, 48, 61)
trii.Button2.BorderMode = Enum.BorderMode.Inset
trii.Button2.Selectable = false
trii.Button2.AnchorPoint = Vector2.new(0.5, 0.5)
trii.Button2.Size = UDim2.new(0.226347, 0, 0.721644, 0)
trii.Button2.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.Button2.Name = "Button2"
trii.Button2.Position = UDim2.new(0.381826, 0, 0.454178, 0)
trii.Button2.Parent = trii.Buttons_1

trii.Title_15.TextWrapped = true
trii.Title_15.BorderSizePixel = 0
trii.Title_15.TextScaled = true
trii.Title_15.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.Title_15.FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trii.Title_15.AnchorPoint = Vector2.new(0.5, 0.5)
trii.Title_15.TextSize = 14
trii.Title_15.Name = "Title"
trii.Title_15.Size = UDim2.new(0.730181, 0, 0.653414, 0)
trii.Title_15.TextColor3 = Color3.fromRGB(250, 250, 250)
trii.Title_15.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.Title_15.Text = "Execute from Clipboard"
trii.Title_15.Position = UDim2.new(0.5, 0, 0.5, 0)
trii.Title_15.BackgroundTransparency = 1
trii.Title_15.Parent = trii.Button2

trii.UICorner_37.CornerRadius = UDim.new(0.08, 0)
trii.UICorner_37.Parent = trii.Button2

trii.UIStroke_9.LineJoinMode = Enum.LineJoinMode.Miter
trii.UIStroke_9.Thickness = 3
trii.UIStroke_9.Color = Color3.fromRGB(60, 66, 83)
trii.UIStroke_9.Enabled = false
trii.UIStroke_9.Parent = trii.Button2

trii.UICorner_38.CornerRadius = UDim.new(0.1, 0)
trii.UICorner_38.Parent = trii.Buttons_1

trii.ScrollingFrame.BorderSizePixel = 0
trii.ScrollingFrame.CanvasSize = UDim2.new(0, 0, 1, 0)
trii.ScrollingFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
trii.ScrollingFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
trii.ScrollingFrame.Size = UDim2.new(0.975214, 0, 0.675238, 0)
trii.ScrollingFrame.BackgroundTransparency = 1
trii.ScrollingFrame.Active = true
trii.ScrollingFrame.ScrollBarImageTransparency = 0.64
trii.ScrollingFrame.ScrollBarThickness = 18
trii.ScrollingFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.ScrollingFrame.Position = UDim2.new(0.0167858, 0, 0.0257617, 0)
trii.ScrollingFrame.Parent = trii.ExecFrame

trii.LocalScript.Parent = trii.ScrollingFrame

trii.ScriptBox_1.BorderSizePixel = 0
trii.ScriptBox_1.RichText = true
trii.ScriptBox_1.TextYAlignment = Enum.TextYAlignment.Top
trii.ScriptBox_1.BackgroundColor3 = Color3.fromRGB(75, 0, 0)
trii.ScriptBox_1.FontFace = Font.new("rbxasset://fonts/families/Nunito.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
trii.ScriptBox_1.BackgroundTransparency = 1
trii.ScriptBox_1.AutomaticSize = Enum.AutomaticSize.Y
trii.ScriptBox_1.TextSize = 30
trii.ScriptBox_1.ClipsDescendants = true
trii.ScriptBox_1.Size = UDim2.new(1, 0, 1, 0)
trii.ScriptBox_1.TextColor3 = Color3.fromRGB(255, 255, 255)
trii.ScriptBox_1.BorderColor3 = Color3.fromRGB(0, 0, 0)
trii.ScriptBox_1.Text = "-- We recommend only uisng loadstrings | Trigon Mobile v0.03 {Beta}"
trii.ScriptBox_1.MultiLine = true
trii.ScriptBox_1.Name = "ScriptBox"
trii.ScriptBox_1.TextXAlignment = Enum.TextXAlignment.Left
trii.ScriptBox_1.ClearTextOnFocus = false
trii.ScriptBox_1.Parent = trii.ScrollingFrame

trii.Highlighter.Name = "Highlighter"
trii.Highlighter.Parent = trii.ScriptBox_1

trii.lexer.Name = "lexer"
trii.lexer.Parent = trii.Highlighter

trii.language.Name = "language"
trii.language.Parent = trii.lexer

trii.theme.Name = "theme"
trii.theme.Parent = trii.Highlighter

trii.types.Name = "types"
trii.types.Parent = trii.Highlighter

trii.utility.Name = "utility"
trii.utility.Parent = trii.Highlighter

trii.UICorner_39.CornerRadius = UDim.new(0.02, 0)
trii.UICorner_39.Parent = trii.ExecFrame

trii.LocalScript_1.Parent = trii.TrigonMain

trii.savescripts.Name = "savescripts"
trii.savescripts.Parent = trii.TrigonMain
 
local modules, cache = {}, {}
		
local o_require = require;
local function require(module)
	local real, cached = modules[module], cache[module]
	
	if cached then return cached end
	
	if not real then return o_require(module) end
	
	cache[module] = real()
	
	return cache[module]
end

modules[trii.FormSliderClass] = function()
	local script = trii.FormSliderClass

	--[[
	
		Copyright Â© 2023, MapleMarvel (https://www.roblox.com/users/263710410/profile). All Rights Reserved.
		
		
		FormSliderClass:
		Class that sets slider functionality.
			
	--]]
	
	
	-- Class
	local FormSliderClass = {}
	FormSliderClass.__index = FormSliderClass
	
	
	-- Constructor
	function FormSliderClass.new(paramGuiObject, paramDirection, minvalue, maxvalue)
		local self = setmetatable({}, FormSliderClass)
		
		
		-- Validate
		if paramGuiObject == nil then
			error("Required parameters missing for constructor FormSliderClass.new.")
		end
		
		-- Instance Properties
		self.GuiObject = paramGuiObject  -- The GuiObject extended by this class
		self.Direction = paramDirection or Enum.Axis.X  -- Slider direction
		self.Connections = {}  -- Event connections
		
		
		-- Initialize
		
		-- Configuration Variables
		local configuration = self.GuiObject:WaitForChild("Configuration")
		local guiObjectBarBackgroundVar = configuration:WaitForChild("ObjectBarBackground")
		local guiObjectBarForegroundVar = configuration:WaitForChild("ObjectBarForeground")
		local guiObjectThumbNormalVar = configuration:WaitForChild(("ObjectThumbNormal"))
		local guiObjectThumbPressedVar = configuration:WaitForChild(("ObjectThumbPressed"))
		local guiObjectBarBackground
		local guiObjectBarForeground
		local guiObjectThumbNormal
		local guiObjectThumbPressed
		
		-- Validate
		if guiObjectBarBackgroundVar and guiObjectBarForegroundVar and guiObjectThumbNormalVar and guiObjectThumbPressedVar then
	
			-- Wait for the objects to load
			while not guiObjectBarBackgroundVar.Value do task.wait() end
			while not guiObjectBarForegroundVar.Value do task.wait() end
			while not guiObjectThumbNormalVar.Value do task.wait() end
			while not guiObjectThumbPressedVar.Value do task.wait() end
			
			-- Get values
			guiObjectBarBackground = guiObjectBarBackgroundVar.Value
			guiObjectBarForeground = guiObjectBarForegroundVar.Value
			guiObjectThumbNormal = guiObjectThumbNormalVar.Value
			guiObjectThumbPressed = guiObjectThumbPressedVar.Value
			
		end
		
		-- Make thumb draggable
		local ExtendDraggableClass = require(script.Parent:WaitForChild("ExtendDraggableClass"))
		local draggableThumbNormal = ExtendDraggableClass.new(guiObjectThumbNormal, false, self.Direction)
		
		
		-- Local function
		local function RefreshGui()
	
			-- Get current attribute values
			local attributesParent = self.GuiObject
			
			local attributeIsEnabled = attributesParent:GetAttribute("IsEnabled")
			local attributeColorDisabled1 = attributesParent:GetAttribute("ColorDisabled1")
			local attributeColorDisabled2 = attributesParent:GetAttribute("ColorDisabled2")
			local attributeColorEnabled1 = attributesParent:GetAttribute("ColorEnabled1")
			local attributeColorEnabled2 = attributesParent:GetAttribute("ColorEnabled2")
			local attributeValueIncrement = attributesParent:GetAttribute(("ValueIncrement"))
			local attributeValuePercent = attributesParent:GetAttribute(("ValuePercent"))
			
			warn(minvalue, maxvalue)
			-- Validate
			local newValuePercent = math.clamp(attributeValuePercent, minvalue, maxvalue)
			if newValuePercent ~= attributeValuePercent then
				attributesParent:SetAttribute("ValuePercent", newValuePercent)
			end
			
			-- Update slider elements
			if self.Direction == Enum.Axis.X then
				-- Horizontal
				
				-- Thumb position
				guiObjectThumbNormal.Position = UDim2.new(newValuePercent / maxvalue, guiObjectThumbNormal.Position.X.Offset, guiObjectThumbNormal.Position.Y.Scale, guiObjectThumbNormal.Position.Y.Offset)
	
				-- Foreground bar length
				guiObjectBarForeground.Size = UDim2.new(newValuePercent / maxvalue, guiObjectBarForeground.Size.X.Offset, guiObjectBarForeground.Size.Y.Scale, guiObjectBarForeground.Size.Y.Offset)
				
			else
				-- Vertical
				
				-- Thumb position
				guiObjectThumbNormal.Position = UDim2.new(guiObjectThumbNormal.Position.X.Scale, guiObjectThumbNormal.Position.X.Offset, 1 - (newValuePercent / maxvalue), guiObjectThumbNormal.Position.Y.Offset)
	
				-- Foreground bar length
				guiObjectBarForeground.Size = UDim2.new(guiObjectBarForeground.Size.X.Scale, guiObjectBarForeground.Size.X.Offset, newValuePercent / maxvalue, guiObjectBarForeground.Size.Y.Offset)
				
			end
			
			-- Dragging settings
			draggableThumbNormal:SetDraggingEnabled(attributeIsEnabled)
			draggableThumbNormal:SetDraggingIncrement(attributeValueIncrement)
			
			-- If enabled
			if attributeIsEnabled == true then
				
				-- Enabled colors
				guiObjectBarBackground.BackgroundColor3 = attributeColorEnabled1
				guiObjectBarForeground.BackgroundColor3 = attributeColorEnabled2
				guiObjectThumbNormal.ImageColor3 = attributeColorEnabled2
				guiObjectThumbPressed.ImageColor3 = attributeColorEnabled2
							
			else
				
				-- Disabled colors
				guiObjectBarBackground.BackgroundColor3 = attributeColorDisabled1
				guiObjectBarForeground.BackgroundColor3 = attributeColorDisabled2
				guiObjectThumbNormal.ImageColor3 = attributeColorDisabled2
				guiObjectThumbPressed.ImageColor3 = attributeColorDisabled2
				
			end
	
		end
	
		-- Refresh Gui
		RefreshGui()
	
	
		-- Disconnect existing connections
		local keyConnection1 = "AttributeChanged"
		local keyConnection2 = "ThumbPosition"
		local keyConnection3 = "AttributeChangedSignal" .. "IsDragging"
		if self.Connections[keyConnection1] then self.Connections[keyConnection1]:Disconnect() end
		if self.Connections[keyConnection2] then self.Connections[keyConnection2]:Disconnect() end
		if self.Connections[keyConnection3] then self.Connections[keyConnection3]:Disconnect() end
		
		-- Events
	
		-- Attribute Event - AttributeChanged
		-- Triggered when any attribute changes
		self.Connections[keyConnection1] = self.GuiObject.AttributeChanged:Connect(function(attributeName)
	
			RefreshGui()
	
		end)
	
		
		-- Instance Event - GetPropertyChangedSignal
		-- Triggered when thumb is dragged
		self.Connections[keyConnection2] = guiObjectThumbNormal:GetPropertyChangedSignal("Position"):Connect(function()
			
			-- Get current attribute values
			local attributesParent = self.GuiObject
			local attributeValuePercent = attributesParent:GetAttribute(("ValuePercent"))
			
			-- Get new thumb position
			local thumbPositionPercent = 0
			if self.Direction == Enum.Axis.X then
				thumbPositionPercent = guiObjectThumbNormal.Position.X.Scale * maxvalue
			else
				thumbPositionPercent = (1 - guiObjectThumbNormal.Position.Y.Scale) * maxvalue  -- Zero is at the bottom
			end
			
			-- Update slider value based on thumb position
			local newValuePercent = math.clamp(thumbPositionPercent, minvalue, maxvalue)
			if newValuePercent ~= attributeValuePercent then
				attributesParent:SetAttribute("ValuePercent", newValuePercent)
			end
			
		end)
		
	
		-- Attribute Event - GetAttributeChangedSignal
		-- Triggered when specific attribute changes
		self.Connections[keyConnection3] = guiObjectThumbNormal:GetAttributeChangedSignal("IsDragging"):Connect(function()
			
			-- Show pressed thumb when dragging
			local attributeIsDragging = guiObjectThumbNormal:GetAttribute("IsDragging") or false
			guiObjectThumbPressed.Visible = attributeIsDragging
	
		end)
		
		
		return self
		
	end
	
	
	
	return FormSliderClass
	
end

modules[trii.ExtendDraggableClass] = function()
	local script = trii.ExtendDraggableClass

	--[[
	
		Copyright Â© 2023, MapleMarvel (https://www.roblox.com/users/263710410/profile). All Rights Reserved.
		
		
		ExtendDraggableClass:
		Class that extends the object so that it can be dragged.
			
	--]]
	
	
	-- Class
	local ExtendDraggableClass = {}
	ExtendDraggableClass.__index = ExtendDraggableClass
	
	
	-- Constructor
	function ExtendDraggableClass.new(paramGuiObject, paramDraggingEnabled, paramDraggingDirection)
		local self = setmetatable({}, ExtendDraggableClass)
		
		
		-- Validate
		if paramGuiObject == nil then
			error("Required parameters missing for constructor ExtendDraggableClass.new.")
		end
		
		-- Instance Properties
		self.GuiObject = paramGuiObject  -- The GuiObject extended by this class
		self.IsDragging = false  -- True when the user is dragging
		self.DraggingEnabled = paramDraggingEnabled or true  -- Enable or disable dragging
		self.DraggingDirection = paramDraggingDirection or Enum.Axis.X  -- Direction of dragging
		self.DraggingIncrement = 1  -- Dragging increment for descrete intervals
		self.Connections = {}  -- Event connections
	
		
		-- Initialize
		
		-- Local variables
		local dragInput
		local dragStartScreenPosition
		local startGuiObjectPosition
		local parentAbsoluteSize
		local cameraType
		
		-- Set attribute
		self.GuiObject:SetAttribute("IsDragging", self.IsDragging)
		
		-- Local function
		local function RoundToIncrement(paramNumber, paramMultiple)
			
			local roundedNumber = paramNumber
			
			-- Validate
			if paramMultiple ~= 0 then
				
				-- Rounds to nearest multiple
				if paramNumber > 0 then
					roundedNumber = math.ceil(paramNumber / paramMultiple) * paramMultiple
				elseif paramNumber < 0 then
					roundedNumber = math.floor(paramNumber / paramMultiple) * paramMultiple
				else
					roundedNumber = paramMultiple
				end
				
			end
			
			return roundedNumber
		end
		
		-- Local function
		local function RefreshGui(paramInput)
			
			-- Get the new position
			local deltaScreenPosition = paramInput.Position - dragStartScreenPosition
			local deltaXScale = deltaScreenPosition.X / parentAbsoluteSize.X
			local deltaYScale = deltaScreenPosition.Y / parentAbsoluteSize.Y
			local newXScale = startGuiObjectPosition.X.Scale + deltaXScale
			local newYScale = startGuiObjectPosition.Y.Scale + deltaYScale
			
			newXScale = RoundToIncrement(newXScale, self.DraggingIncrement / 100)
			newYScale = RoundToIncrement(newYScale, self.DraggingIncrement / 100)
			
			newXScale = math.round(newXScale * 10000) / 10000  -- Round to avoid roundoff errors
			newYScale = math.round(newYScale * 10000) / 10000
			
			newXScale = math.clamp(newXScale, 0, 1)
			newYScale = math.clamp(newYScale, 0, 1)
							
			-- Horizontal or vertical direction
			if self.DraggingDirection == Enum.Axis.X then
				newYScale = startGuiObjectPosition.Y.Scale  -- Ignore vertical movement
			else
				newXScale = startGuiObjectPosition.X.Scale  -- Ignore horizontal movement
			end
	
			-- Prevent camera moving on mobile during drag
			if paramInput.UserInputType == Enum.UserInputType.Touch then
				workspace.Camera.CameraType = Enum.CameraType.Scriptable
			end
	
			-- Move the gui object
			self.GuiObject.Position = UDim2.new(newXScale, startGuiObjectPosition.X.Offset, newYScale, startGuiObjectPosition.Y.Offset)
	
			-- Reset camera on mobile
			if paramInput.UserInputType == Enum.UserInputType.Touch then
				workspace.Camera.CameraType = cameraType
			end
			
		end
		
		
		-- Disconnect existing connections
		local keyConnection1 = "GuiObjectInputBegan"
		local keyConnection2 = "GuiObjectInputChanged"
		local keyConnection3 = "UserInputServiceInputChanged"
		if self.Connections[keyConnection1] then self.Connections[keyConnection1]:Disconnect() end
		if self.Connections[keyConnection2] then self.Connections[keyConnection2]:Disconnect() end
		if self.Connections[keyConnection3] then self.Connections[keyConnection3]:Disconnect() end
		
		
		-- Events
		
		-- GuiObject Event - InputBegan
		-- Triggered when input begins on the GuiObject
		self.Connections[keyConnection1] = self.GuiObject.InputBegan:Connect(function(input)
			
			-- If dragging enabled
			if self.DraggingEnabled == true then
				
				-- Initialize dragging variables
				if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
					
					self.IsDragging  = true
					self.GuiObject:SetAttribute("IsDragging", self.IsDragging)
					
					dragStartScreenPosition = input.Position
					startGuiObjectPosition = self.GuiObject.Position
					parentAbsoluteSize = self.GuiObject.Parent.AbsoluteSize
					cameraType = workspace.Camera.CameraType
					
					-- Handle when dragging ends
					input.Changed:Connect(function()
						if input.UserInputState == Enum.UserInputState.End then
							self.IsDragging  = false
							self.GuiObject:SetAttribute("IsDragging", self.IsDragging)
						end
					end)
					
				end
				
			end
			
		end)
		
		-- GuiObject Event - InputChanged
		-- Triggered when input changes on the GuiObject
		self.Connections[keyConnection2] = self.GuiObject.InputChanged:Connect(function(paramInput)
			
			-- If dragging enabled
			if self.DraggingEnabled == true then
				
				-- Update drag position
				if paramInput.UserInputType == Enum.UserInputType.MouseMovement or paramInput.UserInputType == Enum.UserInputType.Touch then
					dragInput = paramInput
				end
				
			end
			
		end)
		
		-- UserInputService Event - InputChanged
		-- Triggered when input changes by the user
		self.Connections[keyConnection3] = game:GetService("UserInputService").InputChanged:Connect(function(paramInput)
			
			-- If the user is dragging the GuiObject
			if paramInput == dragInput and self.IsDragging then
				RefreshGui(paramInput)
			end
			
		end)
		
		
		return self
		
	end
	
	
	-- Instance Methods
	
	-- SetDraggingEnabled
	function ExtendDraggableClass:SetDraggingEnabled(paramIsEnabled)
		
		-- Validate
		if paramIsEnabled ~= nil then
			
			-- Update property
			self.DraggingEnabled = paramIsEnabled
			
			-- Update property
			if not paramIsEnabled then
				self.IsDragging = false
				self.GuiObject:SetAttribute("IsDragging", self.IsDragging)
			end
			
		end
		
	end
	
	
	-- SetDraggingIncrement
	function ExtendDraggableClass:SetDraggingIncrement(paramIncrement)
		
		-- Validate
		if paramIncrement ~= nil then
			
			-- Update property
			self.DraggingIncrement = paramIncrement
			
		end
		
	end
	
	
	return ExtendDraggableClass
	
end

modules[trii.Highlighter] = function()
	local script = trii.Highlighter

	local types = require(script.types)
	local utility = require(script.utility)
	local theme = require(script.theme)
	
	local Highlighter = {
		defaultLexer = require(script.lexer) :: types.Lexer,
	
		_textObjectData = {} :: { [types.TextObject]: types.ObjectData },
		_cleanups = {} :: { [types.TextObject]: () -> () },
	}
	
	--[[
		Gathers the info that is needed in order to set up a line label.
	]]
	function Highlighter._getLabelingInfo(textObject: types.TextObject)
		local data = Highlighter._textObjectData[textObject]
		if not data then
			return
		end
	
		local src = utility.convertTabsToSpaces(utility.removeControlChars(textObject.Text))
		local numLines = #string.split(src, "\n")
		if numLines == 0 then
			return
		end
	
		local textBounds = utility.getTextBounds(textObject)
		local textHeight = textBounds.Y / numLines
	
		return {
			data = data,
			numLines = numLines,
			textBounds = textBounds,
			textHeight = textHeight,
			innerAbsoluteSize = utility.getInnerAbsoluteSize(textObject),
			textColor = theme.getColor("iden"),
			textFont = textObject.FontFace,
			textSize = textObject.TextSize,
			labelSize = UDim2.new(1, 0, 0, math.ceil(textHeight)),
		}
	end
	
	--[[
		Aligns and matches the line labels to the textObject.
	]]
	function Highlighter._alignLabels(textObject: types.TextObject)
		local labelingInfo = Highlighter._getLabelingInfo(textObject)
		if not labelingInfo then
			return
		end
	
		for lineNumber, lineLabel in labelingInfo.data.Labels do
			-- Align line label
			lineLabel.TextColor3 = labelingInfo.textColor
			lineLabel.FontFace = labelingInfo.textFont
			lineLabel.TextSize = labelingInfo.textSize
			lineLabel.Size = labelingInfo.labelSize
			lineLabel.Position =
				UDim2.fromScale(0, labelingInfo.textHeight * (lineNumber - 1) / labelingInfo.innerAbsoluteSize.Y)
		end
	end
	
	--[[
		Creates and populates the line labels with the appropriate rich text.
	]]
	function Highlighter._populateLabels(props: types.HighlightProps)
		-- Gather props
		local textObject = props.textObject
		local src = utility.convertTabsToSpaces(utility.removeControlChars(props.src or textObject.Text))
		local lexer = props.lexer or Highlighter.defaultLexer
		local customLang = props.customLang
		local forceUpdate = props.forceUpdate
	
		-- Avoid updating when unnecessary
		local data = Highlighter._textObjectData[textObject]
		if (data == nil) or (data.Text == src) then
			if forceUpdate ~= true then
				return
			end
		end
	
		-- Ensure textObject matches sanitized src
		textObject.Text = src
	
		local lineLabels = data.Labels
		local previousLines = data.Lines
	
		local lines = string.split(src, "\n")
	
		data.Lines = lines
		data.Text = src
		data.Lexer = lexer
		data.CustomLang = customLang
	
		-- Shortcut empty textObjects
		if src == "" then
			for l = 1, #lineLabels do
				if lineLabels[l].Text == "" then
					continue
				end
				lineLabels[l].Text = ""
			end
			return
		end
	
		local idenColor = theme.getColor("iden")
		local labelingInfo = Highlighter._getLabelingInfo(textObject)
	
		local richTextBuffer, bufferIndex, lineNumber = table.create(5), 0, 1
		for token: types.TokenName, content: string in lexer.scan(src) do
			local Color = if customLang and customLang[content]
				then theme.getColor("custom")
				else theme.getColor(token) or idenColor
	
			local tokenLines = string.split(utility.sanitizeRichText(content), "\n")
	
			for l, tokenLine in tokenLines do
				-- Find line label
				local lineLabel = lineLabels[lineNumber]
				if not lineLabel then
					local newLabel = Instance.new("TextLabel")
					newLabel.Name = "Line_" .. lineNumber
					newLabel.AutoLocalize = false
					newLabel.RichText = true
					newLabel.BackgroundTransparency = 1
					newLabel.Text = ""
					newLabel.TextXAlignment = Enum.TextXAlignment.Left
					newLabel.TextYAlignment = Enum.TextYAlignment.Top
					newLabel.TextColor3 = labelingInfo.textColor
					newLabel.FontFace = labelingInfo.textFont
					newLabel.TextSize = labelingInfo.textSize
					newLabel.Size = labelingInfo.labelSize
					newLabel.Position =
						UDim2.fromScale(0, labelingInfo.textHeight * (lineNumber - 1) / labelingInfo.innerAbsoluteSize.Y)
	
					newLabel.Parent = textObject.SyntaxHighlights
					lineLabels[lineNumber] = newLabel
					lineLabel = newLabel
				end
	
				-- If multiline token, then set line & move to next
				if l > 1 then
					if forceUpdate or lines[lineNumber] ~= previousLines[lineNumber] then
						-- Set line
						lineLabels[lineNumber].Text = table.concat(richTextBuffer)
					end
					-- Move to next line
					lineNumber += 1
					bufferIndex = 0
					table.clear(richTextBuffer)
				end
	
				-- If changed, add token to line
				if forceUpdate or lines[lineNumber] ~= previousLines[lineNumber] then
					bufferIndex += 1
					-- Only add RichText tags when the color is non-default and the characters are non-whitespace
					if Color ~= idenColor and string.find(tokenLine, "[%S%C]") then
						richTextBuffer[bufferIndex] = theme.getColoredRichText(Color, tokenLine)
					else
						richTextBuffer[bufferIndex] = tokenLine
					end
				end
			end
		end
	
		-- Set final line
		if richTextBuffer[1] and lineLabels[lineNumber] then
			lineLabels[lineNumber].Text = table.concat(richTextBuffer)
		end
	
		-- Clear unused line labels
		for l = lineNumber + 1, #lineLabels do
			if lineLabels[l].Text == "" then
				continue
			end
			lineLabels[l].Text = ""
		end
	end
	
	--[[
		Highlights the given textObject with the given props and returns a cleanup function.
		Highlighting will automatically update when needed, so the cleanup function will disconnect
		those connections and remove all labels.
	]]
	function Highlighter.highlight(props: types.HighlightProps): () -> ()
		-- Gather props
		local textObject = props.textObject
		local src = utility.convertTabsToSpaces(utility.removeControlChars(props.src or textObject.Text))
		local lexer = props.lexer or Highlighter.defaultLexer
		local customLang = props.customLang
	
		-- Avoid updating when unnecessary
		if Highlighter._cleanups[textObject] then
			-- Already been initialized, so just update
			Highlighter._populateLabels(props)
			Highlighter._alignLabels(textObject)
			return Highlighter._cleanups[textObject]
		end
	
		-- Ensure valid object properties
		textObject.RichText = false
		textObject.Text = src
		textObject.TextXAlignment = Enum.TextXAlignment.Left
		textObject.TextYAlignment = Enum.TextYAlignment.Top
		textObject.BackgroundColor3 = theme.getColor("background")
		textObject.TextColor3 = theme.getColor("iden")
		textObject.TextTransparency = 0.5
	
		-- Build the highlight labels
		local lineFolder = textObject:FindFirstChild("SyntaxHighlights")
		if lineFolder == nil then
			local newLineFolder = Instance.new("Folder")
			newLineFolder.Name = "SyntaxHighlights"
			newLineFolder.Parent = textObject
	
			lineFolder = newLineFolder
		end
	
		local data = {
			Text = "",
			Labels = {},
			Lines = {},
			Lexer = lexer,
			CustomLang = customLang,
		}
		Highlighter._textObjectData[textObject] = data
	
		-- Add a cleanup handler for this textObject
		local connections: { [string]: RBXScriptConnection } = {}
		local function cleanup()
			lineFolder:Destroy()
	
			Highlighter._textObjectData[textObject] = nil
			Highlighter._cleanups[textObject] = nil
	
			for _key, connection in connections do
				connection:Disconnect()
			end
			table.clear(connections)
		end
		Highlighter._cleanups[textObject] = cleanup
	
		connections["AncestryChanged"] = textObject.AncestryChanged:Connect(function()
			if textObject.Parent then
				return
			end
	
			cleanup()
		end)
		connections["TextChanged"] = textObject:GetPropertyChangedSignal("Text"):Connect(function()
			Highlighter._populateLabels(props)
		end)
		connections["TextBoundsChanged"] = textObject:GetPropertyChangedSignal("TextBounds"):Connect(function()
			Highlighter._alignLabels(textObject)
		end)
		connections["AbsoluteSizeChanged"] = textObject:GetPropertyChangedSignal("AbsoluteSize"):Connect(function()
			Highlighter._alignLabels(textObject)
		end)
		connections["FontFaceChanged"] = textObject:GetPropertyChangedSignal("FontFace"):Connect(function()
			Highlighter._alignLabels(textObject)
		end)
	
		-- Populate the labels
		Highlighter._populateLabels(props)
		Highlighter._alignLabels(textObject)
	
		return cleanup
	end
	
	--[[
		Refreshes all highlighted textObjects. Used when the theme changes.
	]]
	function Highlighter.refresh(): ()
		-- Rehighlight existing labels using latest colors
		for textObject, data in Highlighter._textObjectData do
			for _, lineLabel in data.Labels do
				lineLabel.TextColor3 = theme.getColor("iden")
			end
	
			Highlighter.highlight({
				textObject = textObject,
				forceUpdate = true,
				src = data.Text,
				lexer = data.Lexer,
				customLang = data.CustomLang,
			})
		end
	end
	
	--[[
		Sets the token colors to the given colors and refreshes all highlighted textObjects.
	]]
	function Highlighter.setTokenColors(colors: types.TokenColors): ()
		theme.setColors(colors)
	
		Highlighter.refresh()
	end
	
	--[[
		Gets a token color by name.
		Mainly useful for setting "background" token color on other UI objects behind your text.
	]]
	function Highlighter.getTokenColor(tokenName: types.TokenName): Color3
		return theme.getColor(tokenName)
	end
	
	--[[
		Matches the token colors to the Studio theme settings and refreshes all highlighted textObjects.
		Does nothing when not run in a Studio plugin.
	]]
	function Highlighter.matchStudioSettings(): ()
		local applied = theme.matchStudioSettings(Highlighter.refresh)
		if applied then
			Highlighter.refresh()
		end
	end
	
	return Highlighter
	
end

modules[trii.lexer] = function()
	local script = trii.lexer

	--[=[
		Lexical scanner for creating a sequence of tokens from Lua source code.
		This is a heavily modified and Roblox-optimized version of
		the original Penlight Lexer module:
			https://github.com/stevedonovan/Penlight
		Authors:
			stevedonovan <https://github.com/stevedonovan> ----------- Original Penlight lexer author
			ryanjmulder <https://github.com/ryanjmulder> ------------- Penlight lexer contributer
			mpeterv <https://github.com/mpeterv> --------------------- Penlight lexer contributer
			Tieske <https://github.com/Tieske> ----------------------- Penlight lexer contributer
			boatbomber <https://github.com/boatbomber> --------------- Roblox port, added builtin token,
			                                                           added patterns for incomplete syntax, bug fixes,
			                                                           behavior changes, token optimization, thread optimization
			                                                           Added lexer.navigator() for non-sequential reads
			Sleitnick <https://github.com/Sleitnick> ----------------- Roblox optimizations
			howmanysmall <https://github.com/howmanysmall> ----------- Lua + Roblox optimizations
	
		List of possible tokens:
			- iden
			- keyword
			- builtin
			- string
			- number
			- comment
			- operator
	--]=]
	
	local lexer = {}
	
	local Prefix, Suffix, Cleaner = "^[%c%s]*", "[%c%s]*", "[%c%s]+"
	local UNICODE = "[%z\x01-\x7F\xC2-\xF4][\x80-\xBF]+"
	local NUMBER_A = "0[xX][%da-fA-F_]+"
	local NUMBER_B = "0[bB][01_]+"
	local NUMBER_C = "%d+%.?%d*[eE][%+%-]?%d+"
	local NUMBER_D = "%d+[%._]?[%d_eE]*"
	local OPERATORS = "[:;<>/~%*%(%)%-={},%.#%^%+%%]+"
	local BRACKETS = "[%[%]]+" -- needs to be separate pattern from other operators or it'll mess up multiline strings
	local IDEN = "[%a_][%w_]*"
	local STRING_EMPTY = "(['\"])%1" --Empty String
	local STRING_PLAIN = "(['\"])[^\n]-([^\\]%1)" --TODO: Handle escaping escapes
	local STRING_INTER = "`[^\n]-`"
	local STRING_INCOMP_A = "(['\"]).-\n" --Incompleted String with next line
	local STRING_INCOMP_B = "(['\"])[^\n]*" --Incompleted String without next line
	local STRING_MULTI = "%[(=*)%[.-%]%1%]" --Multiline-String
	local STRING_MULTI_INCOMP = "%[=*%[.-.*" --Incompleted Multiline-String
	local COMMENT_MULTI = "%-%-%[(=*)%[.-%]%1%]" --Completed Multiline-Comment
	local COMMENT_MULTI_INCOMP = "%-%-%[=*%[.-.*" --Incompleted Multiline-Comment
	local COMMENT_PLAIN = "%-%-.-\n" --Completed Singleline-Comment
	local COMMENT_INCOMP = "%-%-.*" --Incompleted Singleline-Comment
	-- local TYPED_VAR = ":%s*([%w%?%| \t]+%s*)" --Typed variable, parameter, function
	
	local lang = require(script.language)
	local lua_keyword = lang.keyword
	local lua_builtin = lang.builtin
	local lua_libraries = lang.libraries
	
	lexer.language = lang
	
	local lua_matches = {
		-- Indentifiers
		{ Prefix .. IDEN .. Suffix, "var" },
	
		-- Numbers
		{ Prefix .. NUMBER_A .. Suffix, "number" },
		{ Prefix .. NUMBER_B .. Suffix, "number" },
		{ Prefix .. NUMBER_C .. Suffix, "number" },
		{ Prefix .. NUMBER_D .. Suffix, "number" },
	
		-- Strings
		{ Prefix .. STRING_EMPTY .. Suffix, "string" },
		{ Prefix .. STRING_PLAIN .. Suffix, "string" },
		{ Prefix .. STRING_INCOMP_A .. Suffix, "string" },
		{ Prefix .. STRING_INCOMP_B .. Suffix, "string" },
		{ Prefix .. STRING_MULTI .. Suffix, "string" },
		{ Prefix .. STRING_MULTI_INCOMP .. Suffix, "string" },
		{ Prefix .. STRING_INTER .. Suffix, "string_inter" },
	
		-- Comments
		{ Prefix .. COMMENT_MULTI .. Suffix, "comment" },
		{ Prefix .. COMMENT_MULTI_INCOMP .. Suffix, "comment" },
		{ Prefix .. COMMENT_PLAIN .. Suffix, "comment" },
		{ Prefix .. COMMENT_INCOMP .. Suffix, "comment" },
	
		-- Operators
		{ Prefix .. OPERATORS .. Suffix, "operator" },
		{ Prefix .. BRACKETS .. Suffix, "operator" },
	
		-- Unicode
		{ Prefix .. UNICODE .. Suffix, "iden" },
	
		-- Unknown
		{ "^.", "iden" },
	}
	
	-- To reduce the amount of table indexing during lexing, we separate the matches now
	local PATTERNS, TOKENS = {}, {}
	for i, m in lua_matches do
		PATTERNS[i] = m[1]
		TOKENS[i] = m[2]
	end
	
	--- Create a plain token iterator from a string.
	-- @tparam string s a string.
	
	function lexer.scan(s: string)
		local index = 1
		local size = #s
		local previousContent1, previousContent2, previousContent3, previousToken = "", "", "", ""
	
		local thread = coroutine.create(function()
			while index <= size do
				local matched = false
				for tokenType, pattern in ipairs(PATTERNS) do
					-- Find match
					local start, finish = string.find(s, pattern, index)
					if start == nil then
						continue
					end
	
					-- Move head
					index = finish + 1
					matched = true
	
					-- Gather results
					local content = string.sub(s, start, finish)
					local rawToken = TOKENS[tokenType]
					local processedToken = rawToken
	
					-- Process token
					if rawToken == "var" then
						-- Since we merge spaces into the tok, we need to remove them
						-- in order to check the actual word it contains
						local cleanContent = string.gsub(content, Cleaner, "")
	
						if lua_keyword[cleanContent] then
							processedToken = "keyword"
						elseif lua_builtin[cleanContent] then
							processedToken = "builtin"
						elseif string.find(previousContent1, "%.[%s%c]*$") and previousToken ~= "comment" then
							-- The previous was a . so we need to special case indexing things
							local parent = string.gsub(previousContent2, Cleaner, "")
							local lib = lua_libraries[parent]
							if lib and lib[cleanContent] and not string.find(previousContent3, "%.[%s%c]*$") then
								-- Indexing a builtin lib with existing item, treat as a builtin
								processedToken = "builtin"
							else
								-- Indexing a non builtin, can't be treated as a keyword/builtin
								processedToken = "iden"
							end
							-- print("indexing",parent,"with",cleanTok,"as",t2)
						else
							processedToken = "iden"
						end
					elseif rawToken == "string_inter" then
						if not string.find(content, "[^\\]{") then
							-- This inter string doesnt actually have any inters
							processedToken = "string"
						else
							-- We're gonna do our own yields, so the main loop won't need to
							-- Our yields will be a mix of string and whatever is inside the inters
							processedToken = nil
	
							local isString = true
							local subIndex = 1
							local subSize = #content
							while subIndex <= subSize do
								-- Find next brace
								local subStart, subFinish = string.find(content, "^.-[^\\][{}]", subIndex)
								if subStart == nil then
									-- No more braces, all string
									coroutine.yield("string", string.sub(content, subIndex))
									break
								end
	
								if isString then
									-- We are currently a string
									subIndex = subFinish + 1
									coroutine.yield("string", string.sub(content, subStart, subFinish))
	
									-- This brace opens code
									isString = false
								else
									-- We are currently in code
									subIndex = subFinish
									local subContent = string.sub(content, subStart, subFinish - 1)
									for innerToken, innerContent in lexer.scan(subContent) do
										coroutine.yield(innerToken, innerContent)
									end
	
									-- This brace opens string/closes code
									isString = true
								end
							end
						end
					end
	
					-- Record last 3 tokens for the indexing context check
					previousContent3 = previousContent2
					previousContent2 = previousContent1
					previousContent1 = content
					previousToken = processedToken or rawToken
					if processedToken then
						coroutine.yield(processedToken, content)
					end
					break
				end
	
				-- No matches found
				if not matched then
					return
				end
			end
	
			-- Completed the scan
			return
		end)
	
		return function()
			if coroutine.status(thread) == "dead" then
				return
			end
	
			local success, token, content = coroutine.resume(thread)
			if success and token then
				return token, content
			end
	
			return
		end
	end
	
	function lexer.navigator()
		local nav = {
			Source = "",
			TokenCache = table.create(50),
	
			_RealIndex = 0,
			_UserIndex = 0,
			_ScanThread = nil,
		}
	
		function nav:Destroy()
			self.Source = nil
			self._RealIndex = nil
			self._UserIndex = nil
			self.TokenCache = nil
			self._ScanThread = nil
		end
	
		function nav:SetSource(SourceString)
			self.Source = SourceString
	
			self._RealIndex = 0
			self._UserIndex = 0
			table.clear(self.TokenCache)
	
			self._ScanThread = coroutine.create(function()
				for Token, Src in lexer.scan(self.Source) do
					self._RealIndex += 1
					self.TokenCache[self._RealIndex] = { Token, Src }
					coroutine.yield(Token, Src)
				end
			end)
		end
	
		function nav.Next()
			nav._UserIndex += 1
	
			if nav._RealIndex >= nav._UserIndex then
				-- Already scanned, return cached
				return table.unpack(nav.TokenCache[nav._UserIndex])
			else
				if coroutine.status(nav._ScanThread) == "dead" then
					-- Scan thread dead
					return
				else
					local success, token, src = coroutine.resume(nav._ScanThread)
					if success and token then
						-- Scanned new data
						return token, src
					else
						-- Lex completed
						return
					end
				end
			end
		end
	
		function nav.Peek(PeekAmount)
			local GoalIndex = nav._UserIndex + PeekAmount
	
			if nav._RealIndex >= GoalIndex then
				-- Already scanned, return cached
				if GoalIndex > 0 then
					return table.unpack(nav.TokenCache[GoalIndex])
				else
					-- Invalid peek
					return
				end
			else
				if coroutine.status(nav._ScanThread) == "dead" then
					-- Scan thread dead
					return
				else
					local IterationsAway = GoalIndex - nav._RealIndex
	
					local success, token, src = nil, nil, nil
	
					for _ = 1, IterationsAway do
						success, token, src = coroutine.resume(nav._ScanThread)
						if not (success or token) then
							-- Lex completed
							break
						end
					end
	
					return token, src
				end
			end
		end
	
		return nav
	end
	
	return lexer
	
end

modules[trii.language] = function()
	local script = trii.language

	local language = {
		keyword = {
			["and"] = "keyword",
			["break"] = "keyword",
			["continue"] = "keyword",
			["do"] = "keyword",
			["else"] = "keyword",
			["elseif"] = "keyword",
			["end"] = "keyword",
			["export"] = "keyword",
			["false"] = "keyword",
			["for"] = "keyword",
			["function"] = "keyword",
			["if"] = "keyword",
			["in"] = "keyword",
			["local"] = "keyword",
			["nil"] = "keyword",
			["not"] = "keyword",
			["or"] = "keyword",
			["repeat"] = "keyword",
			["return"] = "keyword",
			["self"] = "keyword",
			["then"] = "keyword",
			["true"] = "keyword",
			["type"] = "keyword",
			["typeof"] = "keyword",
			["until"] = "keyword",
			["while"] = "keyword",
		},
	
		builtin = {
			-- Luau Functions
			["assert"] = "function",
			["error"] = "function",
			["getfenv"] = "function",
			["getmetatable"] = "function",
			["ipairs"] = "function",
			["loadstring"] = "function",
			["newproxy"] = "function",
			["next"] = "function",
			["pairs"] = "function",
			["pcall"] = "function",
			["print"] = "function",
			["rawequal"] = "function",
			["rawget"] = "function",
			["rawlen"] = "function",
			["rawset"] = "function",
			["select"] = "function",
			["setfenv"] = "function",
			["setmetatable"] = "function",
			["tonumber"] = "function",
			["tostring"] = "function",
			["unpack"] = "function",
			["xpcall"] = "function",
	
			-- Luau Functions (Deprecated)
			["collectgarbage"] = "function",
	
			-- Luau Variables
			["_G"] = "table",
			["_VERSION"] = "string",
	
			-- Luau Tables
			["bit32"] = "table",
			["coroutine"] = "table",
			["debug"] = "table",
			["math"] = "table",
			["os"] = "table",
			["string"] = "table",
			["table"] = "table",
			["utf8"] = "table",
	
			-- Roblox Functions
			["DebuggerManager"] = "function",
			["delay"] = "function",
			["gcinfo"] = "function",
			["PluginManager"] = "function",
			["require"] = "function",
			["settings"] = "function",
			["spawn"] = "function",
			["tick"] = "function",
			["time"] = "function",
			["UserSettings"] = "function",
			["wait"] = "function",
			["warn"] = "function",
	
			-- Roblox Functions (Deprecated)
			["Delay"] = "function",
			["ElapsedTime"] = "function",
			["elapsedTime"] = "function",
			["printidentity"] = "function",
			["Spawn"] = "function",
			["Stats"] = "function",
			["stats"] = "function",
			["Version"] = "function",
			["version"] = "function",
			["Wait"] = "function",
			["ypcall"] = "function",
	
			-- Roblox Variables
			["game"] = "Instance",
			["plugin"] = "Instance",
			["script"] = "Instance",
			["shared"] = "Instance",
			["workspace"] = "Instance",
	
			-- Roblox Variables (Deprecated)
			["Game"] = "Instance",
			["Workspace"] = "Instance",
	
			-- Roblox Tables
			["Axes"] = "table",
			["BrickColor"] = "table",
			["CatalogSearchParams"] = "table",
			["CFrame"] = "table",
			["Color3"] = "table",
			["ColorSequence"] = "table",
			["ColorSequenceKeypoint"] = "table",
			["DateTime"] = "table",
			["DockWidgetPluginGuiInfo"] = "table",
			["Enum"] = "table",
			["Faces"] = "table",
			["FloatCurveKey"] = "table",
			["Font"] = "table",
			["Instance"] = "table",
			["NumberRange"] = "table",
			["NumberSequence"] = "table",
			["NumberSequenceKeypoint"] = "table",
			["OverlapParams"] = "table",
			["PathWaypoint"] = "table",
			["PhysicalProperties"] = "table",
			["Random"] = "table",
			["Ray"] = "table",
			["RaycastParams"] = "table",
			["Rect"] = "table",
			["Region3"] = "table",
			["Region3int16"] = "table",
			["RotationCurveKey"] = "table",
			["SharedTable"] = "table",
			["task"] = "table",
			["TweenInfo"] = "table",
			["UDim"] = "table",
			["UDim2"] = "table",
			["Vector2"] = "table",
			["Vector2int16"] = "table",
			["Vector3"] = "table",
			["Vector3int16"] = "table",
		},
	
		libraries = {
	
			-- Luau Libraries
			bit32 = {
				arshift = "function",
				band = "function",
				bnot = "function",
				bor = "function",
				btest = "function",
				bxor = "function",
				countlz = "function",
				countrz = "function",
				extract = "function",
				lrotate = "function",
				lshift = "function",
				replace = "function",
				rrotate = "function",
				rshift = "function",
			},
	
			coroutine = {
				close = "function",
				create = "function",
				isyieldable = "function",
				resume = "function",
				running = "function",
				status = "function",
				wrap = "function",
				yield = "function",
			},
	
			debug = {
				dumpheap = "function",
				getmemorycategory = "function",
				info = "function",
				loadmodule = "function",
				profilebegin = "function",
				profileend = "function",
				resetmemorycategory = "function",
				setmemorycategory = "function",
				traceback = "function",
			},
	
			math = {
				abs = "function",
				acos = "function",
				asin = "function",
				atan2 = "function",
				atan = "function",
				ceil = "function",
				clamp = "function",
				cos = "function",
				cosh = "function",
				deg = "function",
				exp = "function",
				floor = "function",
				fmod = "function",
				frexp = "function",
				ldexp = "function",
				log10 = "function",
				log = "function",
				max = "function",
				min = "function",
				modf = "function",
				noise = "function",
				pow = "function",
				rad = "function",
				random = "function",
				randomseed = "function",
				round = "function",
				sign = "function",
				sin = "function",
				sinh = "function",
				sqrt = "function",
				tan = "function",
				tanh = "function",
	
				huge = "number",
				pi = "number",
			},
	
			os = {
				clock = "function",
				date = "function",
				difftime = "function",
				time = "function",
			},
	
			string = {
				byte = "function",
				char = "function",
				find = "function",
				format = "function",
				gmatch = "function",
				gsub = "function",
				len = "function",
				lower = "function",
				match = "function",
				pack = "function",
				packsize = "function",
				rep = "function",
				reverse = "function",
				split = "function",
				sub = "function",
				unpack = "function",
				upper = "function",
			},
	
			table = {
				clear = "function",
				clone = "function",
				concat = "function",
				create = "function",
				find = "function",
				foreach = "function",
				foreachi = "function",
				freeze = "function",
				getn = "function",
				insert = "function",
				isfrozen = "function",
				maxn = "function",
				move = "function",
				pack = "function",
				remove = "function",
				sort = "function",
				unpack = "function",
			},
	
			utf8 = {
				char = "function",
				codepoint = "function",
				codes = "function",
				graphemes = "function",
				len = "function",
				nfcnormalize = "function",
				nfdnormalize = "function",
				offset = "function",
	
				charpattern = "string",
			},
	
			-- Roblox Libraries
			Axes = {
				new = "function",
			},
	
			BrickColor = {
				Black = "function",
				Blue = "function",
				DarkGray = "function",
				Gray = "function",
				Green = "function",
				new = "function",
				New = "function",
				palette = "function",
				Random = "function",
				random = "function",
				Red = "function",
				White = "function",
				Yellow = "function",
			},
	
			CatalogSearchParams = {
				new = "function",
			},
	
			CFrame = {
				Angles = "function",
				fromAxisAngle = "function",
				fromEulerAngles = "function",
				fromEulerAnglesXYZ = "function",
				fromEulerAnglesYXZ = "function",
				fromMatrix = "function",
				fromOrientation = "function",
				lookAt = "function",
				new = "function",
	
				identity = "CFrame",
			},
	
			Color3 = {
				fromHex = "function",
				fromHSV = "function",
				fromRGB = "function",
				new = "function",
				toHSV = "function",
			},
	
			ColorSequence = {
				new = "function",
			},
	
			ColorSequenceKeypoint = {
				new = "function",
			},
	
			DateTime = {
				fromIsoDate = "function",
				fromLocalTime = "function",
				fromUniversalTime = "function",
				fromUnixTimestamp = "function",
				fromUnixTimestampMillis = "function",
				now = "function",
			},
	
			DockWidgetPluginGuiInfo = {
				new = "function",
			},
	
			Enum = {},
	
			Faces = {
				new = "function",
			},
	
			FloatCurveKey = {
				new = "function",
			},
	
			Font = {
				fromEnum = "function",
				fromId = "function",
				fromName = "function",
				new = "function",
			},
	
			Instance = {
				new = "function",
			},
	
			NumberRange = {
				new = "function",
			},
	
			NumberSequence = {
				new = "function",
			},
	
			NumberSequenceKeypoint = {
				new = "function",
			},
	
			OverlapParams = {
				new = "function",
			},
	
			PathWaypoint = {
				new = "function",
			},
	
			PhysicalProperties = {
				new = "function",
			},
	
			Random = {
				new = "function",
			},
	
			Ray = {
				new = "function",
			},
	
			RaycastParams = {
				new = "function",
			},
	
			Rect = {
				new = "function",
			},
	
			Region3 = {
				new = "function",
			},
	
			Region3int16 = {
				new = "function",
			},
	
			RotationCurveKey = {
				new = "function",
			},
	
			SharedTable = {
				clear = "function",
				clone = "function",
				cloneAndFreeze = "function",
				increment = "function",
				isFrozen = "function",
				new = "function",
				size = "function",
				update = "function",
			},
	
			task = {
				cancel = "function",
				defer = "function",
				delay = "function",
				desynchronize = "function",
				spawn = "function",
				synchronize = "function",
				wait = "function",
			},
	
			TweenInfo = {
				new = "function",
			},
	
			UDim = {
				new = "function",
			},
	
			UDim2 = {
				fromOffset = "function",
				fromScale = "function",
				new = "function",
			},
	
			Vector2 = {
				new = "function",
	
				one = "Vector2",
				xAxis = "Vector2",
				yAxis = "Vector2",
				zero = "Vector2",
			},
	
			Vector2int16 = {
				new = "function",
			},
	
			Vector3 = {
				fromAxis = "function",
				FromAxis = "function",
				fromNormalId = "function",
				FromNormalId = "function",
				new = "function",
	
				one = "Vector3",
				xAxis = "Vector3",
				yAxis = "Vector3",
				zAxis = "Vector3",
				zero = "Vector3",
			},
	
			Vector3int16 = {
				new = "function",
			},
		},
	}
	
	-- Filling up language.libraries.Enum table
	local enumLibraryTable = language.libraries.Enum
	
	for _, enum in ipairs(Enum:GetEnums()) do
		--TODO: Remove tostring from here once there is a better way to get the name of an Enum
		enumLibraryTable[tostring(enum)] = "Enum"
	end
	
	return language
	
end

modules[trii.theme] = function()
	local script = trii.theme

	local DEFAULT_TOKEN_COLORS = {
		["background"] = Color3.fromRGB(47, 47, 47),
		["iden"] = Color3.fromRGB(234, 234, 234),
		["keyword"] = Color3.fromRGB(215, 174, 255),
		["builtin"] = Color3.fromRGB(131, 206, 255),
		["string"] = Color3.fromRGB(196, 255, 193),
		["number"] = Color3.fromRGB(255, 125, 125),
		["comment"] = Color3.fromRGB(140, 140, 155),
		["operator"] = Color3.fromRGB(255, 239, 148),
		["custom"] = Color3.fromRGB(119, 122, 255),
	}
	
	local types = require(script.Parent.types)
	
	local Theme = {
		tokenColors = {},
		tokenRichTextFormatter = {},
	}
	
	function Theme.setColors(tokenColors: types.TokenColors)
		assert(type(tokenColors) == "table", "Theme.updateColors expects a table")
	
		for tokenName, color in tokenColors do
			Theme.tokenColors[tokenName] = color
		end
	end
	
	function Theme.getColoredRichText(color: Color3, text: string): string
		return '<font color="#' .. color:ToHex() .. '">' .. text .. "</font>"
	end
	
	function Theme.getColor(tokenName: types.TokenName): Color3
		return Theme.tokenColors[tokenName]
	end
	
	function Theme.matchStudioSettings(refreshCallback: () -> ()): boolean
		local success = pcall(function()
			-- When not used in a Studio plugin, this will error
			-- and the pcall will just silently return
			local studio = settings().Studio
			local studioTheme = studio.Theme
	
			local function getTokens()
				return {
					["background"] = studioTheme:GetColor(Enum.StudioStyleGuideColor.ScriptBackground),
					["iden"] = studioTheme:GetColor(Enum.StudioStyleGuideColor.ScriptText),
					["keyword"] = studioTheme:GetColor(Enum.StudioStyleGuideColor.ScriptKeyword),
					["builtin"] = studioTheme:GetColor(Enum.StudioStyleGuideColor.ScriptBuiltInFunction),
					["string"] = studioTheme:GetColor(Enum.StudioStyleGuideColor.ScriptString),
					["number"] = studioTheme:GetColor(Enum.StudioStyleGuideColor.ScriptNumber),
					["comment"] = studioTheme:GetColor(Enum.StudioStyleGuideColor.ScriptComment),
					["operator"] = studioTheme:GetColor(Enum.StudioStyleGuideColor.ScriptOperator),
					["custom"] = studioTheme:GetColor(Enum.StudioStyleGuideColor.ScriptBool),
				}
			end
	
			Theme.setColors(getTokens())
			studio.ThemeChanged:Connect(function()
				studioTheme = studio.Theme
				Theme.setColors(getTokens())
	            refreshCallback()
			end)
		end)
		return success
	end
	
	-- Initialize
	Theme.setColors(DEFAULT_TOKEN_COLORS)
	
	return Theme
	
end

modules[trii.types] = function()
	local script = trii.types

	export type TextObject = TextLabel | TextBox
	
	export type TokenName =
		"background"
		| "iden"
		| "keyword"
		| "builtin"
		| "string"
		| "number"
		| "comment"
		| "operator"
		| "custom"
	
	export type TokenColors = {
		["background"]: Color3?,
		["iden"]: Color3?,
		["keyword"]: Color3?,
		["builtin"]: Color3?,
		["string"]: Color3?,
		["number"]: Color3?,
		["comment"]: Color3?,
		["operator"]: Color3?,
		["custom"]: Color3?,
	}
	
	export type HighlightProps = {
		textObject: TextObject,
		src: string?,
		forceUpdate: boolean?,
		lexer: Lexer?,
		customLang: { [string]: string }?,
	}
	
	export type Lexer = {
		scan: (src: string) -> () -> (string, string),
		navigator: () -> any,
		finished: boolean?,
	}
	
	export type ObjectData = {
		Text: string,
		Labels: { TextLabel },
		Lines: { string },
		Lexer: Lexer?,
		CustomLang: { [string]: string }?,
	}
	
	return nil
	
end

modules[trii.utility] = function()
	local script = trii.utility

	local types = require(script.Parent.types)
	
	local Utility = {}
	
	function Utility.sanitizeRichText(s: string): string
		return string.gsub(
			string.gsub(string.gsub(string.gsub(string.gsub(s, "&", "&amp;"), "<", "&lt;"), ">", "&gt;"), '"', "&quot;"),
			"'",
			"&apos;"
		)
	end
	
	function Utility.convertTabsToSpaces(s: string): string
		return string.gsub(s, "\t", "    ")
	end
	
	function Utility.removeControlChars(s: string): string
		return string.gsub(s, "[\0\1\2\3\4\5\6\7\8\11\12\13\14\15\16\17\18\19\20\21\22\23\24\25\26\27\28\29\30\31]+", "")
	end
	
	function Utility.getInnerAbsoluteSize(textObject: types.TextObject): Vector2
		local fullSize = textObject.AbsoluteSize
	
		local padding: UIPadding? = textObject:FindFirstChildWhichIsA("UIPadding")
		if padding then
			local offsetX = padding.PaddingLeft.Offset + padding.PaddingRight.Offset
			local scaleX = (fullSize.X * padding.PaddingLeft.Scale) + (fullSize.X * padding.PaddingRight.Scale)
			local offsetY = padding.PaddingTop.Offset + padding.PaddingBottom.Offset
			local scaleY = (fullSize.Y * padding.PaddingTop.Scale) + (fullSize.Y * padding.PaddingBottom.Scale)
			return Vector2.new(fullSize.X - (scaleX + offsetX), fullSize.Y - (scaleY + offsetY))
		else
			return fullSize
		end
	end
	
	function Utility.getTextBounds(textObject: types.TextObject): Vector2
		if textObject.ContentText == "" then
			return Vector2.zero
		end
	
		local textBounds = textObject.TextBounds
	
		-- Wait for TextBounds to be non-NaN and non-zero because Roblox
		while (textBounds.Y ~= textBounds.Y) or (textBounds.Y < 1) do
			task.wait()
			textBounds = textObject.TextBounds
		end
		return textBounds
	end
	
	return Utility
	
end

task.spawn(function()
	local script = trii.GlobalLog

	_G.logPrint = true  
	_G.logWarn = true  
	_G.logError = true  
	_G.logInfo = false  
	
	local TextService = game:GetService("TextService")
	local LogService = game:GetService("LogService")
	local frame = script.Parent
	local messageBox = frame:WaitForChild("TextBox")
	
	messageBox.RichText = true
	messageBox.Selectable = false
	messageBox.Active = false
	
	local function formatMessage(message, messageType)
	    local color = ""
	    local formattedType = ""
	
	    if messageType == Enum.MessageType.MessageOutput then
	        color = "#cffeff" 
	        formattedType = "Print"
	    elseif messageType == Enum.MessageType.MessageWarning then
	        color = "#ffa73b" 
	        formattedType = "Warn"
	    elseif messageType == Enum.MessageType.MessageError then
	        color = "#FF005D" 
	        formattedType = "Error"
	    elseif messageType == Enum.MessageType.MessageInfo then
	        color = "#5cb0ff" 
	        formattedType = "Info"
	    else
	        color = "#FFFFFF" 
	        formattedType = "Other"
	    end
	
	    return string.format('<font color="%s"><b>[%s]</b></font> %s', color, formattedType, message)
	end
	
	local function formatMessage2(message, messageType)
		local formattedType = ""
	
		if messageType == Enum.MessageType.MessageOutput then
			formattedType = "Print"
		elseif messageType == Enum.MessageType.MessageWarning then
			formattedType = "Warn"
		elseif messageType == Enum.MessageType.MessageError then
			formattedType = "Error"
		elseif messageType == Enum.MessageType.MessageInfo then
			formattedType = "Info"
		else
			formattedType = "Other"
		end
	
		return string.format('[%s] %s', formattedType, message)
	end
	

	local function updateMessageBoxSize()
	    local textSize = TextService:GetTextSize(
	        messageBox.Text, 
	        messageBox.TextSize, 
	        messageBox.Font, 
	        Vector2.new(messageBox.AbsoluteSize.X, 20000)
	    )
	
	    messageBox.Size = UDim2.new(messageBox.Size.X.Scale, messageBox.Size.X.Offset, 0, textSize.Y)
	end
	
	
	local function onMessageOut(message, messageType)
	    if not _G.logInfo then return end
	    if (messageType == Enum.MessageType.MessageOutput and not _G.logPrint) or
	        (messageType == Enum.MessageType.MessageWarning and not _G.logWarn) or
	        (messageType == Enum.MessageType.MessageError and not _G.logError)then
	        return 
	    end
	
	    local timeStamp = os.date("%X")
	    local formattedMessage = formatMessage(message, messageType)
	    local formattedMessage2 = formatMessage2(message, messageType)
		
		local logmsg =  messageBox.Text .. timeStamp .. " - " .. formattedMessage .. "\n"
		local logmsg2 = formattedMessage2
	    messageBox.Text = logmsg
		if _G.wsConnection then
			task.wait()
			local success, err = pcall(function()
				_G.ws:Send(tostring(logmsg2))
			end)
			if not success then
				print("Error sending message, ws:Send")
			end
		end
	    updateMessageBoxSize()
	
	    frame.CanvasPosition = Vector2.new(0, messageBox.TextBounds.Y)
	end
	
	LogService.MessageOut:Connect(onMessageOut)
	
end)

task.spawn(function()
	local script = trii.LocalPlayerHandle

	-- Services
	local Players = game:GetService("Players")
	
	--local plr property
	local lplayer = Players.LocalPlayer
	local character = lplayer.Character or lplayer.CharacterAdded:Wait()
	
	-- Modules
	local FormSliderClass = require(script.Parent:WaitForChild("FormSliderClass"))
	
	-- GUI Variables
	local WalKSpeedSlider = script.Parent:WaitForChild("walkspeed"):WaitForChild("Slider")
	local JumpSpeedSlider = script.Parent:WaitForChild("jumspeed"):WaitForChild("Slider")
	local curpos = script.Parent:WaitForChild("CurPos")
	-- Add slider functionality
	local WalKSpeedSliderSet = FormSliderClass.new(WalKSpeedSlider, Enum.Axis.X, 0, 50)  -- Horizontal, -> paramGuiObject, paramDirection, minvalue, maxvalue slider
	
	-- Meow
	WalKSpeedSlider:GetAttributeChangedSignal("ValuePercent"):Connect(function()
		--print(WalKSpeedSlider:GetAttribute("ValuePercent"), WalKSpeedSlider:GetAttribute("ValueIncrement"))
		WalKSpeedSlider.Parent.Title.Text = "Player Walk Speed: "..math.floor(WalKSpeedSlider:GetAttribute("ValuePercent"))
		character.Humanoid.WalkSpeed = math.floor(WalKSpeedSlider:GetAttribute("ValuePercent"))
	end)
	
	
	
	coroutine.resume(coroutine.create(function()
		while wait() do
			if character then
				local vector = character.HumanoidRootPart.Position
				local pos = Vector3.new(math.floor(vector.X), math.floor(vector.Y), math.floor(vector.Z))
				curpos.Text = "Current Position: "..tostring(pos)
			end
		end
	end))
	
	
	
end)

task.spawn(function()
	local script = trii.LocalScript

	local Highlighter = require(script.Parent.ScriptBox.Highlighter)
	local myTextLabel = script.Parent.ScriptBox
	
	Highlighter.highlight({
	    textObject = myTextLabel,
	})
	
end)

task.spawn(function()
	local script = trii.LocalScript_1

	
	local plr = game.Players.LocalPlayer
	local MainFrame = script.Parent.MainFrame
	local buttons = MainFrame.BottomMenuFrame.MenuList
	
	local execBtn = buttons:WaitForChild("ExecBtn")
	local cloudBtn = buttons:WaitForChild("CloudBtn")
	local HBtn = buttons:WaitForChild("HBtn")
	local settingsBtn = buttons:WaitForChild("SettingsBtn")
	
	local execFrame = MainFrame:WaitForChild("ExecFrame")
	local logFrame = MainFrame:WaitForChild("logFrame")
	local homeFrame = MainFrame:WaitForChild("homeFrame")
	local settingsFrame = MainFrame:WaitForChild("SettingsFrame")
	
	local excbtn = execFrame.Buttons.Button1
	local execlipbtn = execFrame.Buttons.Button2
	local pastebtn = execFrame.Buttons.Button3
	local clearbtn = execFrame.Buttons.Button4
	
	local ScriptBox = execFrame.ScrollingFrame.ScriptBox
	
	local ExitBtn = MainFrame.BottomMenuFrame.LeftFrame.ExitBtn
	
	----//////////////////----
	----/// Menu Buttons
	----//////////////////----
	
	local function hideAllFrames()
	    execFrame.Visible = false
	    logFrame.Visible = false
	    homeFrame.Visible = false
	    settingsFrame.Visible = false
	    execBtn.UIStroke.Enabled = false    
	    HBtn.UIStroke.Enabled = false    
	    cloudBtn.UIStroke.Enabled = false    
	    settingsBtn.UIStroke.Enabled = false    
	end
	
	local function showFrame(frame, btn)
	    hideAllFrames()
	    task.wait()
	    frame.Visible = true
	    btn.UIStroke.Enabled = true
	end
	
	execBtn.Activated:Connect(function()
	    showFrame(execFrame, execBtn)
	end)
	
	cloudBtn.Activated:Connect(function()
	    showFrame(logFrame, cloudBtn)
	end)
	
	HBtn.Activated:Connect(function()
	    showFrame(homeFrame, HBtn)
	end)
	
	settingsBtn.Activated:Connect(function()
	    showFrame(settingsFrame, settingsBtn)
	end)
	
	hideAllFrames()
	
	homeFrame.Visible = true
	
	----//////////////////----
	----/// Exec Buttons
	----//////////////////----
	
	excbtn.Activated:Connect(function()
	    excbtn.UIStroke.Enabled = true
	    executecode(ScriptBox.Text)
	    wait(0.1)
	    excbtn.UIStroke.Enabled = false
	end) 
	
	execlipbtn.Activated:Connect(function()
	    execlipbtn.UIStroke.Enabled = true
	    executecode(getclipboard())
	    wait(0.1)
	    execlipbtn.UIStroke.Enabled = false
	end)  
	
	pastebtn.Activated:Connect(function()
	    pastebtn.UIStroke.Enabled = true
	    ScriptBox.Text = getclipboard()
	    wait(0.1)
	    pastebtn.UIStroke.Enabled = false
	end) 
	
	clearbtn.Activated:Connect(function()
	    clearbtn.UIStroke.Enabled = true
	    ScriptBox.Text = ""
	    wait(0.1)
	    clearbtn.UIStroke.Enabled = false
	end)  
	
	
	----//////////////////----
	----/// Other
	----//////////////////----
	
	ExitBtn.Activated:Connect(function()
	    script.Parent.Enabled = not script.Parent.Enabled
	end)
	
	ScriptBox.Focused:Connect(function()
	    for _, item in pairs(ScriptBox.SyntaxHighlights:GetChildren()) do
	       item.Visible = false
	    end
	end)
	
	ScriptBox.FocusLost:Connect(function()
	    for _, item in pairs(ScriptBox.SyntaxHighlights:GetChildren()) do
	        item.Visible = true
	    end
	end)
	
	
	
	
	----//////////////////----
	----/// Default Page
	----//////////////////----
	
	local HttpService = game:GetService("HttpService")
	
	local jsonString = [[
	{
	  "15842384180x": {
	    "_scripts": [
	      {"scriptName": "Script 1", "text": "script executed"},
	      {"scriptName": "script 2", "text": "script executed"}
	    ]
	  },
	  "987654321": {
	    "_scripts": [
	      {"scriptName": "scriptName 3", "text": "Quote 1 from scriptName 3 in Game 987654321"}
	    ]
	  },
	  "global": {
	    "_scripts": [
	      {"scriptName": "Infinite Yield", "text": "loadstring(game:HttpGet(\"https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source\",true))()"},
	      {"scriptName": "Dark Dex v4", "text": "getgenv().Key = \"Bash\" loadstring(game:HttpGet(\"https://raw.githubusercontent.com/Hosvile/Refinement/main/MC%3AIY%20Dex\",true))()"},
	      {"scriptName": "Bypassed Dark Dex v3", "text": "loadstring(game:HttpGet('https://raw.githubusercontent.com/Babyhamsta/RBLX_Scripts/main/Universal/BypassedDarkDexV3.lua', true))()"}
	    ]
	  }
	}
	]]
	
	
	
	local scriptList = HttpService:JSONDecode(jsonString)
	local scriptsFrame = MainFrame.homeFrame.scriptsFrame
	local scriptButton = scriptsFrame.TextButton
	local currentPlaceId = tostring(game.PlaceId) 
	
	
	scriptsFrame["#GameHeader"].Title.Text = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name
	
	local function createscriptButtons(_scripts)
	    local yPos = 0
	    for i, scriptData in ipairs(_scripts) do
	        local newButton = scriptButton:Clone()
	        newButton.Parent = scriptsFrame
	        newButton.Text = scriptData.scriptName
	        newButton.Position = UDim2.new(newButton.Position.X.Scale, newButton.Position.X.Offset, newButton.Position.Y.Scale, yPos)
	        yPos = yPos + newButton.Size.Y.Offset + 5
	        newButton.Visible = true
	
	        newButton.MouseButton1Click:Connect(function()
	            --print(scriptData.text)
	            executecode(scriptData.text)
	        end)
	    end
	end
	
	local scriptToUse
	if scriptList[currentPlaceId] and scriptList[currentPlaceId]._scripts then
	    scriptToUse = scriptList[currentPlaceId]._scripts
	elseif scriptList["global"] and scriptList["global"]._scripts then
	    scriptToUse = scriptList["global"]._scripts
	end
	
	if scriptToUse then
	    createscriptButtons(scriptToUse)
	else
	    print("No _scripts available.")
	end
	
	scriptButton.Visible = false
	
	
	----//////////////////----
	----/// Console Log Page
	----//////////////////----
	
	logButtons = logFrame.logButtons
	consoleFrame = logFrame.consoleFrame
	
	outputCBX = logButtons.logOutput.Button
	warningCBX = logButtons.logWarning.Button
	errorCBX = logButtons.logError.Button
	infoCBX = logButtons.logInfo.Button
	consoleclrbtn = logButtons.cclrbtn
	consoleexebtn = logButtons.excp 
	
	local function ccupdt(value, button)
	    if _G[value] then
	        button.Image = "rbxassetid://3926305904"
	        button.ImageRectSize = Vector2.new(36, 36) 
	        button.ImageRectOffset = Vector2.new(724, 724) 
	    else
	        button.Image = "rbxassetid://3926311105"        
	        button.ImageRectSize = Vector2.new(48, 48) 
	        button.ImageRectOffset = Vector2.new(4, 836) 
	    end
	end
	
	consoleexebtn.Activated:Connect(function()
	    executecode(getclipboard())
	end)
	
	outputCBX.Activated:Connect(function()
	    ccupdt("logPrint",outputCBX)
	    _G.logPrint = not _G.logPrint
	    print(_G.logPrint)
	end)
	
	warningCBX.Activated:Connect(function()
	    ccupdt("logWarn",warningCBX)
	    _G.logWarn = not _G.logWarn
	end)
	
	errorCBX.Activated:Connect(function()
	    ccupdt("logError",errorCBX)
	    _G.logError = not _G.logError
	end)
	
	infoCBX.Activated:Connect(function()
	    ccupdt("logInfo",infoCBX)
	    _G.logInfo = not _G.logInfo
	end)
	
	consoleclrbtn.Activated:Connect(function()
	    consoleFrame.TextBox.Text = ""
	end)
end)

task.spawn(function()
	local script = trii.savescripts

	HttpService = game:GetService("HttpService")
	folderName = 'Local_Scripts'
	fileName = 'list.json'
	filePath = folderName .. '/' .. fileName
	
	lsf = script.Parent.MainFrame.homeFrame.localscriptsFrame
	alsf = script.Parent.MainFrame.homeFrame.addlocalscriptsFrame
	
	add_btn = lsf["#GameHeader"].Add_btn.TextButton
	script_placeholder = lsf.script_placeholder
	script_placeholder.Visible = false
	title = script_placeholder.scriptTitle
	buttons = script_placeholder.Buttons
	run = buttons.run.button
	autoload = buttons.autoload.button
	delete = buttons.delete.button
	
	scriptNameinput = alsf.addFrame.input.TextBox
	confirm_btn = alsf.addFrame.confrim_btn.TextButton
	cancel_btn = alsf.addFrame.cancel_btn.TextButton
	
	
	local default_scripts = {
	    localscripts = {
	        script_name = {
	            name = "print epic!",
	            script = "print(\"epic\")",
	            auto_load = false
	        }
	    }
	}
	
	local _scripts = {}
	
	local function merge_scripts(defaults, loaded_scripts)
	    for key, value in pairs(defaults) do
	        if type(value) == "table" then
	            loaded_scripts[key] = loaded_scripts[key] or {}
	            merge_scripts(value, loaded_scripts[key])
	        else
	            loaded_scripts[key] = loaded_scripts[key] or value
	        end
	    end
	end
	
	local function read_scripts()
	    if not isfolder(folderName) then
	        makefolder(folderName)
	    end
	
	    if isfile(filePath) then
	        local fileContents = readfile(filePath)
	        local success, decoded = pcall(function()
	            return HttpService:JSONDecode(fileContents)
	        end)
	        if success then
	            merge_scripts(default_scripts, decoded)
	            return decoded
	        end
	    end
	
	    return default_scripts
	end
	
	
	local function save_scripts()
	    local encoded = HttpService:JSONEncode(_scripts)
	    writefile(filePath, encoded)
	    print("_scripts saved.")
	end
	
	
	
	
	local function deleteScript(scriptName)
	    if _scripts.localscripts[scriptName] then
	        _scripts.localscripts[scriptName] = nil
	        warn("Deleted: " .. scriptName)
	        save_scripts()
	    else
	        warn("Script not found: " .. scriptName)
	    end
	end
	
	_scripts = read_scripts()
	
	
	local function execute_(scriptName)
	    if isfile(filePath) then
	        local fileContents = readfile(filePath)
	        local success, decoded = pcall(function()
	            return HttpService:JSONDecode(fileContents)
	        end)
	
	        if success and decoded.localscripts then
	            local scriptData = decoded.localscripts[scriptName]
	            if scriptData then
	                executecode(scriptData.script)
	            else
	                warn("Script not found:", scriptName)
	            end
	        else
	            warn("Failed to decode _scripts or 'localscripts' not found.")
	        end
	    else
	        print(filePath)
	        warn("_scripts file does not exist.")
	    end
	end
	
	
	local function updateAutoLoad(scriptName, autoLoadValue, btn)
	    if _scripts.localscripts and _scripts.localscripts[scriptName] then
	        _scripts.localscripts[scriptName].auto_load = autoLoadValue
	        save_scripts()
	        print("Updated auto_load for", _scripts.localscripts[scriptName].name, "to", autoLoadValue)
	        
	        if not autoLoadValue then
	            btn.Image = "rbxassetid://3926305904"
	            btn.ImageRectSize = Vector2.new(36, 36) 
	            btn.ImageRectOffset = Vector2.new(724, 724) 
	        else
	            btn.Image = "rbxassetid://3926311105"        
	            btn.ImageRectSize = Vector2.new(48, 48) 
	            btn.ImageRectOffset = Vector2.new(4, 836) 
	        end
	    else
	        warn("Failed to update auto_load. Script not found or error in _scripts.")
	    end
	end
	
	
	
	local function convertScriptName(name)
	    local convertedName = name:gsub("%s+", "_") 
	    convertedName = convertedName:gsub("%W", "") 
	    return convertedName
	end
	
    local function setupScriptUI(scriptName, scriptData)
        local scriptUI = script_placeholder:Clone()
        scriptUI.Visible = true
        scriptUI.scriptTitle.Text = scriptData.name
    
        scriptUI.Buttons.run.button.Activated:Connect(function()
            execute_(scriptName)
        end)
    
        scriptUI.Buttons.autoload.button.Activated:Connect(function()
            local newAutoLoadValue = not scriptData.auto_load
            updateAutoLoad(scriptName, newAutoLoadValue, scriptUI.Buttons.autoload.button)
            scriptData.auto_load = newAutoLoadValue
        end)
    
        scriptUI.Buttons.delete.button.Activated:Connect(function()
            deleteScript(scriptName)
            scriptUI:Destroy()
        end)
    
        scriptUI.Parent = lsf
    
        if scriptData.auto_load then
            scriptUI.Buttons.autoload.button.Image = "rbxassetid://3926311105"        
            scriptUI.Buttons.autoload.button.ImageRectSize = Vector2.new(48, 48) 
            scriptUI.Buttons.autoload.button.ImageRectOffset = Vector2.new(4, 836) 
            execute_(scriptName)        
        end 
    end
    

	local function setupAllScriptsUI()
	    for scriptName, scriptData in pairs(_scripts.localscripts) do
	        setupScriptUI(scriptName, scriptData)
	    end
	end
	
	local function add_update(scriptName, name, scriptContent, autoLoad)
	    print("adding")
	    local isNewScript = not _scripts.localscripts[tostring(scriptName)]
	    _scripts.localscripts[tostring(scriptName)] = {
	        name = tostring(name),
	        script = tostring(scriptContent),
	        auto_load = autoLoad
	    }
	    save_scripts()
	
	    if isNewScript then
	        setupScriptUI(tostring(scriptName), _scripts.localscripts[tostring(scriptName)])
	    end
	end
	
	confirm_btn.Activated:Connect(function()
	
	    local scriptName = scriptNameinput.Text
	    local convertedName = convertScriptName(scriptName)
        local xscript = getclipboard()
	    
	    warn(scriptName, convertedName, xscript)
	    task.wait()
	    if convertedName ~= "" then
	        print("correct")        
	        lsf.Visible = true
	        add_update(convertedName, scriptName, xscript, false)
	        scriptNameinput.Text = ""
	    else
	        scriptNameinput.Parent.Parent.Title.Text =  "Script Name: Invalid script name"
	        wait(2)
	        scriptNameinput.Parent.Parent.Title.Text =  "Script Name:"
	        warn("Invalid script name")
	    end
	
	
	end)
	
	add_btn.Activated:Connect(function()
	    lsf.Visible = false
	end)
	cancel_btn.Activated:Connect(function()
	    lsf.Visible = true
	end)
	
	setupAllScriptsUI()
	
end)

end
wait(2)
main()

loader()

print("---><---")

pcall(function()
	for i,v in pairs(arceus.listarceusfiles("Autoexec")) do
		executecode(arceus.readarceusfile(v))
	end	
end)
end)
tab3.newButton("Unknown", "Executor script", function()
    local screenGui = Instance.new("ScreenGui")
local frame = Instance.new("Frame")
local executeButton = Instance.new("TextButton")
local clearButton = Instance.new("TextButton")
local minimizeButton = Instance.new("TextButton")
local closeButton = Instance.new("TextButton")
local recommendButton = Instance.new("TextButton")
local scriptInput = Instance.new("TextBox")
local label = Instance.new("TextLabel")
local uiCorner = Instance.new("UICorner")

local recommendGui = Instance.new("Frame")
local recommendLabel = Instance.new("TextLabel")
local executeRecommendButton1 = Instance.new("TextButton")
local executeRecommendButton2 = Instance.new("TextButton")
local closeRecommendButton = Instance.new("TextButton")

screenGui.Parent = game.CoreGui

frame.Size = UDim2.new(0, 500, 0, 350)
frame.Position = UDim2.new(0.5, -250, 0.5, -175)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BorderSizePixel = 0
frame.Parent = screenGui
uiCorner.CornerRadius = UDim.new(0, 10)
uiCorner.Parent = frame

executeButton.Size = UDim2.new(0, 123, 0, 34)
executeButton.Position = UDim2.new(0, 20, 0, 310)
executeButton.Text = "Execute"
executeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
executeButton.BackgroundColor3 = Color3.fromRGB(0, 170, 0)
executeButton.BorderSizePixel = 0
executeButton.Parent = frame
uiCorner:Clone().Parent = executeButton

clearButton.Size = UDim2.new(0, 123, 0, 34)
clearButton.Position = UDim2.new(0, 145, 0, 310)
clearButton.Text = "Clear"
clearButton.TextColor3 = Color3.fromRGB(255, 255, 255)
clearButton.BackgroundColor3 = Color3.fromRGB(170, 0, 0)
clearButton.BorderSizePixel = 0
clearButton.Parent = frame
uiCorner:Clone().Parent = clearButton

minimizeButton.Size = UDim2.new(0, 40, 0, 30)
minimizeButton.Position = UDim2.new(0, 420, 0, 0)
minimizeButton.Text = "-"
minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizeButton.BackgroundColor3 = Color3.fromRGB(255, 165, 0)
minimizeButton.BorderSizePixel = 0
minimizeButton.Parent = frame
uiCorner:Clone().Parent = minimizeButton

closeButton.Size = UDim2.new(0, 40, 0, 30)
closeButton.Position = UDim2.new(0, 460, 0, 0)
closeButton.Text = "X"
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.BackgroundColor3 = Color3.fromRGB(128, 0, 0)
closeButton.BorderSizePixel = 0
closeButton.Parent = frame
uiCorner:Clone().Parent = closeButton

recommendButton.Size = UDim2.new(0, 123, 0, 34)
recommendButton.Position = UDim2.new(0, 370, 0, 310)
recommendButton.Text = "Recommend"
recommendButton.TextColor3 = Color3.fromRGB(255, 255, 255)
recommendButton.BackgroundColor3 = Color3.fromRGB(0, 0, 170)
recommendButton.BorderSizePixel = 0
recommendButton.Parent = frame
uiCorner:Clone().Parent = recommendButton

scriptInput.Size = UDim2.new(0, 480, 0, 250)
scriptInput.Position = UDim2.new(0, 10, 0, 40)
scriptInput.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
scriptInput.TextColor3 = Color3.fromRGB(255, 255, 255)
scriptInput.Font = Enum.Font.SourceSans
scriptInput.PlaceholderText = "Enter your script here..."
scriptInput.TextSize = 16
scriptInput.BorderSizePixel = 0
scriptInput.ClearTextOnFocus = false
scriptInput.MultiLine = true
scriptInput.Parent = frame
uiCorner:Clone().Parent = scriptInput

label.Size = UDim2.new(0, 410, 0, 30)
label.Position = UDim2.new(0, 10, 0, 0)
label.Text = "Enhanced Script Executor"
label.TextColor3 = Color3.fromRGB(255, 255, 255)
label.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
label.Font = Enum.Font.SourceSansBold
label.TextSize = 20
label.BorderSizePixel = 0
label.Parent = frame
uiCorner:Clone().Parent = label

-- Recommend GUI elements
recommendGui.Size = UDim2.new(0, 200, 0, 200)
recommendGui.Position = UDim2.new(0.5, -100, 0.5, -100)
recommendGui.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
recommendGui.BorderSizePixel = 0
recommendGui.Visible = false
recommendGui.Parent = screenGui
uiCorner:Clone().Parent = recommendGui

recommendLabel.Size = UDim2.new(0, 180, 0, 30)
recommendLabel.Position = UDim2.new(0, 10, 0, 10)
recommendLabel.Text = "Recommended Scripts"
recommendLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
recommendLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
recommendLabel.Font = Enum.Font.SourceSansBold
recommendLabel.TextSize = 18
recommendLabel.BorderSizePixel = 0
recommendLabel.Parent = recommendGui

executeRecommendButton1.Size = UDim2.new(0, 180, 0, 30)
executeRecommendButton1.Position = UDim2.new(0, 10, 0, 50)
executeRecommendButton1.Text = "Soon"
executeRecommendButton1.TextColor3 = Color3.fromRGB(255, 255, 255)
executeRecommendButton1.BackgroundColor3 = Color3.fromRGB(0, 170, 0)
executeRecommendButton1.BorderSizePixel = 0
executeRecommendButton1.Parent = recommendGui
uiCorner:Clone().Parent = executeRecommendButton1

executeRecommendButton2.Size = UDim2.new(0, 180, 0, 30)
executeRecommendButton2.Position = UDim2.new(0, 10, 0, 90)
executeRecommendButton2.Text = "Infinite Yield"
executeRecommendButton2.TextColor3 = Color3.fromRGB(255, 255, 255)
executeRecommendButton2.BackgroundColor3 = Color3.fromRGB(0, 170, 0)
executeRecommendButton2.BorderSizePixel = 0
executeRecommendButton2.Parent = recommendGui
uiCorner:Clone().Parent = executeRecommendButton2

closeRecommendButton.Size = UDim2.new(0, 180, 0, 30)
closeRecommendButton.Position = UDim2.new(0, 10, 0, 130)
closeRecommendButton.Text = "Close"
closeRecommendButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeRecommendButton.BackgroundColor3 = Color3.fromRGB(170, 0, 0)
closeRecommendButton.BorderSizePixel = 0
closeRecommendButton.Parent = recommendGui
uiCorner:Clone().Parent = closeRecommendButton

-- Close main GUI button function
closeButton.MouseButton1Click:Connect(function()
screenGui:Destroy()
end)

-- Recommend button function to show recommend GUI
recommendButton.MouseButton1Click:Connect(function()
recommendGui.Visible = true
end)

-- Execute recommend button functions
executeRecommendButton1.MouseButton1Click:Connect(function()
local scriptUrl = ""
local script = game:HttpGet(scriptUrl)
local func = loadstring(script)
if func then func() end
end)

executeRecommendButton2.MouseButton1Click:Connect(function()
local scriptUrl = "https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"
local script = game:HttpGet(scriptUrl)
local func = loadstring(script)
if func then func() end
end)

-- Close recommend GUI button function
closeRecommendButton.MouseButton1Click:Connect(function()
recommendGui.Visible = false
end)

-- Execute button function
executeButton.MouseButton1Click:Connect(function()
local script = scriptInput.Text
local func = loadstring(script)
if func then func() end
end)

-- Clear button function
clearButton.MouseButton1Click:Connect(function()
scriptInput.Text = ""
end)

-- Minimize button function
local isMinimized = false
minimizeButton.MouseButton1Click:Connect(function()
isMinimized = not isMinimized
if isMinimized then
scriptInput.Visible = false
executeButton.Visible = false
clearButton.Visible = false
recommendButton.Visible = false
frame.Size = UDim2.new(0, 500, 0, 35)
minimizeButton.Text = "+"
else
scriptInput.Visible = true
executeButton.Visible = true
clearButton.Visible = true
recommendButton.Visible = true
frame.Size = UDim2.new(0, 500, 0, 350)
minimizeButton.Text = "-"
end
end)

-- Draggable frame
local dragging
local dragInput
local dragStart
local startPos

local function updateInput(input)
local delta = input.Position - dragStart
frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

frame.InputBegan:Connect(function(input)
if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
dragging = true
dragStart = input.Position
startPos = frame.Position

input.Changed:Connect(function()
if input.UserInputState == Enum.UserInputState.End then
dragging = false
end
end)
end
end)

frame.InputChanged:Connect(function(input)
if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
dragInput = input
end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
if input == dragInput and dragging then
updateInput(input)
end
end)
end)
tab3.newButton("Fluxus", "Execute script.", function()
    -- Gui to Lua

-- Version: 3.2



-- Instances:



local Newfluxsos = Instance.new("ScreenGui")

local main = Instance.new("Frame")

local left = Instance.new("Frame")

local executebutton = Instance.new("Frame")

local UICorner = Instance.new("UICorner")

local run = Instance.new("TextButton")

local UICorner_2 = Instance.new("UICorner")

local TextLabel = Instance.new("TextLabel")

local UITextSizeConstraint = Instance.new("UITextSizeConstraint")

local UITextSizeConstraint_2 = Instance.new("UITextSizeConstraint")

local back = Instance.new("TextButton")

local UICorner_3 = Instance.new("UICorner")

local UITextSizeConstraint_3 = Instance.new("UITextSizeConstraint")

local Loadeditor = Instance.new("TextButton")

local UICorner_4 = Instance.new("UICorner")

local UITextSizeConstraint_4 = Instance.new("UITextSizeConstraint")

local Execute = Instance.new("TextButton")

local UICorner_5 = Instance.new("UICorner")

local TextLabel_2 = Instance.new("TextLabel")

local UITextSizeConstraint_5 = Instance.new("UITextSizeConstraint")

local UITextSizeConstraint_6 = Instance.new("UITextSizeConstraint")

local Clear = Instance.new("TextButton")

local UICorner_6 = Instance.new("UICorner")

local UITextSizeConstraint_7 = Instance.new("UITextSizeConstraint")

local executorframe = Instance.new("Frame")

local text1 = Instance.new("TextBox")

local UITextSizeConstraint_8 = Instance.new("UITextSizeConstraint")

local TextBox = Instance.new("TextBox")

local UICorner_7 = Instance.new("UICorner")

local UITextSizeConstraint_9 = Instance.new("UITextSizeConstraint")

local plus = Instance.new("TextButton")

local UICorner_8 = Instance.new("UICorner")

local UITextSizeConstraint_10 = Instance.new("UITextSizeConstraint")

local Frame = Instance.new("Frame")

local UIListLayout = Instance.new("UIListLayout")

local Folder = Instance.new("Folder")

local Frame_2 = Instance.new("Frame")

local TextLabel_3 = Instance.new("TextLabel")

local TextButton = Instance.new("TextButton")

local UICorner_9 = Instance.new("UICorner")

local del = Instance.new("TextButton")

local UICorner_10 = Instance.new("UICorner")

local UICorner_11 = Instance.new("UICorner")

local consolebutton = Instance.new("Frame")

local back_2 = Instance.new("TextButton")

local UICorner_12 = Instance.new("UICorner")

local Copy = Instance.new("TextButton")

local UICorner_13 = Instance.new("UICorner")

local TextLabel_4 = Instance.new("TextLabel")

local Clear_2 = Instance.new("TextButton")

local UICorner_14 = Instance.new("UICorner")

local UITextSizeConstraint_11 = Instance.new("UITextSizeConstraint")

local mainbutton = Instance.new("Frame")

local Settings = Instance.new("TextButton")

local UICorner_15 = Instance.new("UICorner")

local UITextSizeConstraint_12 = Instance.new("UITextSizeConstraint")

local Executor = Instance.new("TextButton")

local UICorner_16 = Instance.new("UICorner")

local UITextSizeConstraint_13 = Instance.new("UITextSizeConstraint")

local Console = Instance.new("TextButton")

local UICorner_17 = Instance.new("UICorner")

local UITextSizeConstraint_14 = Instance.new("UITextSizeConstraint")

local Cloud = Instance.new("TextButton")

local UITextSizeConstraint_15 = Instance.new("UITextSizeConstraint")

local UICorner_18 = Instance.new("UICorner")

local close = Instance.new("ImageButton")

local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")

local cloudbutton = Instance.new("Frame")

local back_3 = Instance.new("TextButton")

local UICorner_19 = Instance.new("UICorner")

local UITextSizeConstraint_16 = Instance.new("UITextSizeConstraint")

local Clear_3 = Instance.new("TextButton")

local UICorner_20 = Instance.new("UICorner")

local UITextSizeConstraint_17 = Instance.new("UITextSizeConstraint")

local TextBox_2 = Instance.new("TextBox")

local UICorner_21 = Instance.new("UICorner")

local UITextSizeConstraint_18 = Instance.new("UITextSizeConstraint")

local ScrollingFrame = Instance.new("ScrollingFrame")

local UIGridLayout = Instance.new("UIGridLayout")

local Folder_2 = Instance.new("Folder")

local Frame_3 = Instance.new("Frame")

local UICorner_22 = Instance.new("UICorner")

local ImageLabel = Instance.new("ImageLabel")

local load = Instance.new("TextButton")

local UICorner_23 = Instance.new("UICorner")

local UITextSizeConstraint_19 = Instance.new("UITextSizeConstraint")

local TextLabel_5 = Instance.new("TextLabel")

local open = Instance.new("Frame")

local UICorner_24 = Instance.new("UICorner")

local ImageButton = Instance.new("ImageButton")

local UICorner_25 = Instance.new("UICorner")



--Properties:



Newfluxsos.Name = "Newfluxsos"

Newfluxsos.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

Newfluxsos.ZIndexBehavior = Enum.ZIndexBehavior.Sibling



main.Name = "main"

main.Parent = Newfluxsos

main.Active = true

main.BackgroundColor3 = Color3.fromRGB(17, 16, 17)

main.BackgroundTransparency = 0.600

main.BorderColor3 = Color3.fromRGB(0, 0, 0)

main.BorderSizePixel = 0

main.Position = UDim2.new(-5, 0, 0, 0)

main.Size = UDim2.new(1.03412247, 0, 0.998622596, 0)



left.Name = "left"

left.Parent = main

left.BackgroundColor3 = Color3.fromRGB(44, 48, 51)

left.BorderColor3 = Color3.fromRGB(0, 0, 0)

left.BorderSizePixel = 0

left.Size = UDim2.new(0.206228957, 0, 1.11295903, 0)



executebutton.Name = "executebutton"

executebutton.Parent = left

executebutton.BackgroundColor3 = Color3.fromRGB(44, 48, 51)

executebutton.BorderColor3 = Color3.fromRGB(0, 0, 0)

executebutton.BorderSizePixel = 0

executebutton.Position = UDim2.new(0.0326530598, 0, 0.214700207, 0)

executebutton.Size = UDim2.new(0.930612266, 0, 0.704862237, 0)

executebutton.Visible = false



UICorner.Parent = executebutton



run.Name = "run"

run.Parent = executebutton

run.BackgroundColor3 = Color3.fromRGB(102, 60, 232)

run.BorderColor3 = Color3.fromRGB(0, 0, 0)

run.BorderSizePixel = 0

run.Position = UDim2.new(0.0592503995, 0, 0.482420385, 0)

run.Size = UDim2.new(0.877192974, 0, 0.0879120827, 0)

run.Font = Enum.Font.SourceSansBold

run.Text = "Run"

run.TextColor3 = Color3.fromRGB(255, 255, 255)

run.TextScaled = true

run.TextSize = 25.000

run.TextWrapped = true



UICorner_2.Parent = run



TextLabel.Parent = run

TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)

TextLabel.BackgroundTransparency = 1.000

TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)

TextLabel.BorderSizePixel = 0

TextLabel.Position = UDim2.new(0, 0, -0.774999976, 0)

TextLabel.Size = UDim2.new(0, 200, 0, 21)

TextLabel.Font = Enum.Font.SourceSansBold

TextLabel.Text = "Script Editor"

TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)

TextLabel.TextScaled = true

TextLabel.TextSize = 20.000

TextLabel.TextWrapped = true

TextLabel.TextXAlignment = Enum.TextXAlignment.Left



UITextSizeConstraint.Parent = TextLabel

UITextSizeConstraint.MaxTextSize = 20



UITextSizeConstraint_2.Parent = run

UITextSizeConstraint_2.MaxTextSize = 25



back.Name = "back"

back.Parent = executebutton

back.BackgroundColor3 = Color3.fromRGB(26, 26, 26)

back.BorderColor3 = Color3.fromRGB(0, 0, 0)

back.BorderSizePixel = 0

back.Position = UDim2.new(0.0592503995, 0, 0, 0)

back.Size = UDim2.new(0.877192974, 0, 0.0879120827, 0)

back.Font = Enum.Font.SourceSansBold

back.Text = "< Back"

back.TextColor3 = Color3.fromRGB(255, 255, 255)

back.TextScaled = true

back.TextSize = 25.000

back.TextWrapped = true



UICorner_3.Parent = back



UITextSizeConstraint_3.Parent = back

UITextSizeConstraint_3.MaxTextSize = 25



Loadeditor.Name = "Loadeditor"

Loadeditor.Parent = executebutton

Loadeditor.BackgroundColor3 = Color3.fromRGB(102, 60, 232)

Loadeditor.BorderColor3 = Color3.fromRGB(0, 0, 0)

Loadeditor.BorderSizePixel = 0

Loadeditor.Position = UDim2.new(0.0570175648, 0, 0.593406618, 0)

Loadeditor.Size = UDim2.new(0.877192974, 0, 0.0879120827, 0)

Loadeditor.Font = Enum.Font.SourceSansBold

Loadeditor.Text = "Load Into Editor"

Loadeditor.TextColor3 = Color3.fromRGB(255, 255, 255)

Loadeditor.TextScaled = true

Loadeditor.TextSize = 25.000

Loadeditor.TextWrapped = true



UICorner_4.Parent = Loadeditor



UITextSizeConstraint_4.Parent = Loadeditor

UITextSizeConstraint_4.MaxTextSize = 25



Execute.Name = "Execute"

Execute.Parent = executebutton

Execute.BackgroundColor3 = Color3.fromRGB(102, 60, 232)

Execute.BorderColor3 = Color3.fromRGB(0, 0, 0)

Execute.BorderSizePixel = 0

Execute.Position = UDim2.new(0.0592503995, 0, 0.190400541, 0)

Execute.Size = UDim2.new(0.877192974, 0, 0.0879120827, 0)

Execute.Font = Enum.Font.SourceSansBold

Execute.Text = "Execute"

Execute.TextColor3 = Color3.fromRGB(255, 255, 255)

Execute.TextScaled = true

Execute.TextSize = 25.000

Execute.TextWrapped = true



UICorner_5.Parent = Execute



TextLabel_2.Parent = Execute

TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)

TextLabel_2.BackgroundTransparency = 1.000

TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)

TextLabel_2.BorderSizePixel = 0

TextLabel_2.Position = UDim2.new(0, 0, -0.774999976, 0)

TextLabel_2.Size = UDim2.new(0, 200, 0, 21)

TextLabel_2.Font = Enum.Font.SourceSansBold

TextLabel_2.Text = "Script Editor"

TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)

TextLabel_2.TextScaled = true

TextLabel_2.TextSize = 20.000

TextLabel_2.TextWrapped = true

TextLabel_2.TextXAlignment = Enum.TextXAlignment.Left



UITextSizeConstraint_5.Parent = TextLabel_2

UITextSizeConstraint_5.MaxTextSize = 20



UITextSizeConstraint_6.Parent = Execute

UITextSizeConstraint_6.MaxTextSize = 25



Clear.Name = "Clear"

Clear.Parent = executebutton

Clear.BackgroundColor3 = Color3.fromRGB(102, 60, 232)

Clear.BorderColor3 = Color3.fromRGB(0, 0, 0)

Clear.BorderSizePixel = 0

Clear.Position = UDim2.new(0.0592503995, 0, 0.305677205, 0)

Clear.Size = UDim2.new(0.877192974, 0, 0.0879120827, 0)

Clear.Font = Enum.Font.SourceSansBold

Clear.Text = "Clear"

Clear.TextColor3 = Color3.fromRGB(255, 255, 255)

Clear.TextScaled = true

Clear.TextSize = 25.000

Clear.TextWrapped = true



UICorner_6.Parent = Clear



UITextSizeConstraint_7.Parent = Clear

UITextSizeConstraint_7.MaxTextSize = 25



executorframe.Name = "executorframe"

executorframe.Parent = executebutton

executorframe.BackgroundColor3 = Color3.fromRGB(255, 255, 255)

executorframe.BackgroundTransparency = 1.000

executorframe.BorderColor3 = Color3.fromRGB(0, 0, 0)

executorframe.BorderSizePixel = 0

executorframe.Position = UDim2.new(1.09649122, 0, -0.21758242, 0)

executorframe.Size = UDim2.new(3.89912271, 0, 1.19999993, 0)



text1.Name = "text1"

text1.Parent = executorframe

text1.BackgroundColor3 = Color3.fromRGB(17, 16, 17)

text1.BackgroundTransparency = 0.990

text1.BorderColor3 = Color3.fromRGB(0, 0, 0)

text1.BorderSizePixel = 0

text1.ClipsDescendants = true

text1.Position = UDim2.new(0, 0, 0.125410035, 0)

text1.Size = UDim2.new(0.977502823, 0, 0.866300344, 0)

text1.Font = Enum.Font.SourceSans

text1.MultiLine = true

text1.PlaceholderText = "--[[\\nscript 1\\n UniverseX FIXED remaked!\\n]]--"

text1.Text = ""

text1.TextColor3 = Color3.fromRGB(255, 255, 255)

text1.TextScaled = true

text1.TextSize = 20.000

text1.TextWrapped = true

text1.TextXAlignment = Enum.TextXAlignment.Left

text1.TextYAlignment = Enum.TextYAlignment.Top



UITextSizeConstraint_8.Parent = text1

UITextSizeConstraint_8.MaxTextSize = 20



TextBox.Parent = executorframe

TextBox.BackgroundColor3 = Color3.fromRGB(102, 60, 232)

TextBox.BorderColor3 = Color3.fromRGB(102, 60, 232)

TextBox.BorderSizePixel = 0

TextBox.Size = UDim2.new(0.129999995, 0, 0.0710000023, 0)

TextBox.Font = Enum.Font.SourceSansBold

TextBox.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)

TextBox.PlaceholderText = "script1"

TextBox.ShowNativeInput = false

TextBox.Text = ""

TextBox.TextColor3 = Color3.fromRGB(0, 0, 0)

TextBox.TextSize = 20.000



UICorner_7.Parent = TextBox



UITextSizeConstraint_9.Parent = TextBox

UITextSizeConstraint_9.MaxTextSize = 22



plus.Name = "plus"

plus.Parent = TextBox

plus.BackgroundColor3 = Color3.fromRGB(45, 46, 51)

plus.BorderColor3 = Color3.fromRGB(0, 0, 0)

plus.BorderSizePixel = 0

plus.Position = UDim2.new(1.06077147, 0, 0, 0)

plus.Size = UDim2.new(0.336206883, 0, 1, 0)

plus.Font = Enum.Font.SourceSansBold

plus.Text = "+"

plus.TextColor3 = Color3.fromRGB(255, 255, 255)

plus.TextScaled = true

plus.TextSize = 22.000

plus.TextWrapped = true



UICorner_8.Parent = plus



UITextSizeConstraint_10.Parent = plus

UITextSizeConstraint_10.MaxTextSize = 38



Frame.Parent = executorframe

Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)

Frame.BackgroundTransparency = 0.990

Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)

Frame.BorderSizePixel = 0

Frame.Position = UDim2.new(0.824521959, 0, -5.58930005e-08, 0)

Frame.Size = UDim2.new(0.152980879, 0, 0.98901099, 0)



UIListLayout.Parent = Frame

UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

UIListLayout.Padding = UDim.new(0, 5)



Folder.Parent = Frame



Frame_2.Parent = Folder

Frame_2.BackgroundColor3 = Color3.fromRGB(45, 46, 51)

Frame_2.BorderColor3 = Color3.fromRGB(0, 0, 0)

Frame_2.BorderSizePixel = 0

Frame_2.Size = UDim2.new(1, 0, 0.118518516, 0)

Frame_2.Visible = false



TextLabel_3.Parent = Frame_2

TextLabel_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)

TextLabel_3.BackgroundTransparency = 1.000

TextLabel_3.BorderColor3 = Color3.fromRGB(0, 0, 0)

TextLabel_3.BorderSizePixel = 0

TextLabel_3.Position = UDim2.new(0.338235319, 0, -0.0118055344, 0)

TextLabel_3.Size = UDim2.new(0, 43, 0, 13)

TextLabel_3.Font = Enum.Font.SourceSans

TextLabel_3.Text = "script"

TextLabel_3.TextColor3 = Color3.fromRGB(255, 255, 255)

TextLabel_3.TextSize = 20.000



TextButton.Parent = Frame_2

TextButton.BackgroundColor3 = Color3.fromRGB(102, 60, 232)

TextButton.BorderColor3 = Color3.fromRGB(0, 0, 0)

TextButton.BorderSizePixel = 0

TextButton.Position = UDim2.new(0.58088237, 0, 0.484375, 0)

TextButton.Size = UDim2.new(0, 40, 0, 33)

TextButton.Font = Enum.Font.SourceSansBold

TextButton.Text = "Load"

TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)

TextButton.TextSize = 14.000



UICorner_9.Parent = TextButton



del.Name = "del"

del.Parent = Frame_2

del.BackgroundColor3 = Color3.fromRGB(102, 60, 232)

del.BorderColor3 = Color3.fromRGB(0, 0, 0)

del.BorderSizePixel = 0

del.Position = UDim2.new(0.139705911, 0, 0.484375, 0)

del.Size = UDim2.new(0, 40, 0, 33)

del.Font = Enum.Font.SourceSansBold

del.Text = "delete"

del.TextColor3 = Color3.fromRGB(255, 255, 255)

del.TextSize = 14.000



UICorner_10.Parent = del



UICorner_11.Parent = Frame_2



consolebutton.Name = "consolebutton"

consolebutton.Parent = left

consolebutton.BackgroundColor3 = Color3.fromRGB(44, 48, 51)

consolebutton.BorderColor3 = Color3.fromRGB(0, 0, 0)

consolebutton.BorderSizePixel = 0

consolebutton.Position = UDim2.new(0.0326530598, 0, 0.214700192, 0)

consolebutton.Size = UDim2.new(0.930612266, 0, 0.615011632, 0)

consolebutton.Visible = false



back_2.Name = "back"

back_2.Parent = consolebutton

back_2.BackgroundColor3 = Color3.fromRGB(26, 26, 26)

back_2.BorderColor3 = Color3.fromRGB(0, 0, 0)

back_2.BorderSizePixel = 0

back_2.Position = UDim2.new(0.0592503995, 0, 0, 0)

back_2.Size = UDim2.new(0.877192974, 0, 0.100755669, 0)

back_2.Font = Enum.Font.SourceSansBold

back_2.Text = "< Back"

back_2.TextColor3 = Color3.fromRGB(255, 255, 255)

back_2.TextSize = 25.000



UICorner_12.Parent = back_2



Copy.Name = "Copy"

Copy.Parent = consolebutton

Copy.BackgroundColor3 = Color3.fromRGB(102, 60, 232)

Copy.BorderColor3 = Color3.fromRGB(0, 0, 0)

Copy.BorderSizePixel = 0

Copy.Position = UDim2.new(0.0592503995, 0, 0.319899261, 0)

Copy.Size = UDim2.new(0.877192974, 0, 0.100755669, 0)

Copy.Font = Enum.Font.SourceSansBold

Copy.Text = "Copy"

Copy.TextColor3 = Color3.fromRGB(255, 255, 255)

Copy.TextSize = 25.000



UICorner_13.Parent = Copy



TextLabel_4.Parent = Copy

TextLabel_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)

TextLabel_4.BackgroundTransparency = 1.000

TextLabel_4.BorderColor3 = Color3.fromRGB(0, 0, 0)

TextLabel_4.BorderSizePixel = 0

TextLabel_4.Position = UDim2.new(0, 0, -0.875, 0)

TextLabel_4.Size = UDim2.new(1, 0, 0.725000024, 0)

TextLabel_4.Font = Enum.Font.SourceSansBold

TextLabel_4.Text = "Console settings"

TextLabel_4.TextColor3 = Color3.fromRGB(255, 255, 255)

TextLabel_4.TextScaled = true

TextLabel_4.TextSize = 22.000

TextLabel_4.TextWrapped = true

TextLabel_4.TextXAlignment = Enum.TextXAlignment.Left



Clear_2.Name = "Clear"

Clear_2.Parent = consolebutton

Clear_2.BackgroundColor3 = Color3.fromRGB(102, 60, 232)

Clear_2.BorderColor3 = Color3.fromRGB(0, 0, 0)

Clear_2.BorderSizePixel = 0

Clear_2.Position = UDim2.new(0.0592503995, 0, 0.448362738, 0)

Clear_2.Size = UDim2.new(0.877192974, 0, 0.100755669, 0)

Clear_2.Font = Enum.Font.SourceSansBold

Clear_2.Text = "Clear"

Clear_2.TextColor3 = Color3.fromRGB(255, 255, 255)

Clear_2.TextSize = 25.000



UICorner_14.Parent = Clear_2



UITextSizeConstraint_11.Parent = Clear_2

UITextSizeConstraint_11.MaxTextSize = 25



mainbutton.Name = "mainbutton"

mainbutton.Parent = left

mainbutton.BackgroundColor3 = Color3.fromRGB(44, 48, 51)

mainbutton.BorderColor3 = Color3.fromRGB(0, 0, 0)

mainbutton.BorderSizePixel = 0

mainbutton.Position = UDim2.new(0.0326530598, 0, 0.214700192, 0)

mainbutton.Size = UDim2.new(0.930612266, 0, 0.684482753, 0)



Settings.Name = "Settings"

Settings.Parent = mainbutton

Settings.BackgroundColor3 = Color3.fromRGB(71, 69, 73)

Settings.BorderColor3 = Color3.fromRGB(0, 0, 0)

Settings.BorderSizePixel = 0

Settings.Position = UDim2.new(0.0219298247, 0, 0.365239292, 0)

Settings.Size = UDim2.new(0.973684192, 0, 0.100755669, 0)

Settings.Font = Enum.Font.SourceSansBold

Settings.Text = "Settings (soon)"

Settings.TextColor3 = Color3.fromRGB(255, 255, 255)

Settings.TextScaled = true

Settings.TextSize = 20.000

Settings.TextWrapped = true



UICorner_15.Parent = Settings



UITextSizeConstraint_12.Parent = Settings

UITextSizeConstraint_12.MaxTextSize = 20



Executor.Name = "Executor"

Executor.Parent = mainbutton

Executor.BackgroundColor3 = Color3.fromRGB(71, 69, 73)

Executor.BorderColor3 = Color3.fromRGB(0, 0, 0)

Executor.BorderSizePixel = 0

Executor.Position = UDim2.new(0.0219298247, 0, 0, 0)

Executor.Size = UDim2.new(0.973684192, 0, 0.100755669, 0)

Executor.Font = Enum.Font.SourceSansBold

Executor.Text = "Executor"

Executor.TextColor3 = Color3.fromRGB(255, 255, 255)

Executor.TextScaled = true

Executor.TextSize = 20.000

Executor.TextWrapped = true



UICorner_16.Parent = Executor



UITextSizeConstraint_13.Parent = Executor

UITextSizeConstraint_13.MaxTextSize = 20



Console.Name = "Console"

Console.Parent = mainbutton

Console.BackgroundColor3 = Color3.fromRGB(71, 69, 73)

Console.BorderColor3 = Color3.fromRGB(0, 0, 0)

Console.BorderSizePixel = 0

Console.Position = UDim2.new(0.0219298247, 0, 0.246851385, 0)

Console.Size = UDim2.new(0.973684192, 0, 0.100755669, 0)

Console.Font = Enum.Font.SourceSansBold

Console.Text = "Console"

Console.TextColor3 = Color3.fromRGB(255, 255, 255)

Console.TextScaled = true

Console.TextSize = 20.000

Console.TextWrapped = true



UICorner_17.Parent = Console



UITextSizeConstraint_14.Parent = Console

UITextSizeConstraint_14.MaxTextSize = 20



Cloud.Name = "Cloud"

Cloud.Parent = mainbutton

Cloud.BackgroundColor3 = Color3.fromRGB(71, 69, 73)

Cloud.BorderColor3 = Color3.fromRGB(0, 0, 0)

Cloud.BorderSizePixel = 0

Cloud.Position = UDim2.new(0.0219298247, 0, 0.123425692, 0)

Cloud.Size = UDim2.new(0.973684192, 0, 0.100755669, 0)

Cloud.Font = Enum.Font.SourceSansBold

Cloud.Text = "Cloud"

Cloud.TextColor3 = Color3.fromRGB(255, 255, 255)

Cloud.TextScaled = true

Cloud.TextSize = 20.000

Cloud.TextWrapped = true



UITextSizeConstraint_15.Parent = Cloud

UITextSizeConstraint_15.MaxTextSize = 20



UICorner_18.Parent = Cloud



close.Name = "close"

close.Parent = left

close.BackgroundColor3 = Color3.fromRGB(44, 48, 51)

close.BorderColor3 = Color3.fromRGB(44, 48, 51)

close.Position = UDim2.new(0.326163262, 0, 0.0304482765, 0)

close.Size = UDim2.new(0.342857152, 0, 0.131034479, 0)

close.Image = "rbxassetid://13945092962"



UIAspectRatioConstraint.Parent = close

UIAspectRatioConstraint.AspectRatio = 0.993



cloudbutton.Name = "cloudbutton"

cloudbutton.Parent = left

cloudbutton.BackgroundColor3 = Color3.fromRGB(44, 48, 51)

cloudbutton.BorderColor3 = Color3.fromRGB(0, 0, 0)

cloudbutton.BorderSizePixel = 0

cloudbutton.Position = UDim2.new(0.0326530598, 0, 0.214700192, 0)

cloudbutton.Size = UDim2.new(0.930612266, 0, 0.615011632, 0)

cloudbutton.Visible = false



back_3.Name = "back"

back_3.Parent = cloudbutton

back_3.BackgroundColor3 = Color3.fromRGB(26, 26, 26)

back_3.BorderColor3 = Color3.fromRGB(0, 0, 0)

back_3.BorderSizePixel = 0

back_3.Position = UDim2.new(0.0592503995, 0, 0, 0)

back_3.Size = UDim2.new(0.877192974, 0, 0.100755669, 0)

back_3.Font = Enum.Font.SourceSansBold

back_3.Text = "< Back"

back_3.TextColor3 = Color3.fromRGB(255, 255, 255)

back_3.TextScaled = true

back_3.TextSize = 25.000

back_3.TextWrapped = true



UICorner_19.Parent = back_3



UITextSizeConstraint_16.Parent = back_3

UITextSizeConstraint_16.MaxTextSize = 25



Clear_3.Name = "Clear"

Clear_3.Parent = cloudbutton

Clear_3.BackgroundColor3 = Color3.fromRGB(102, 60, 232)

Clear_3.BorderColor3 = Color3.fromRGB(0, 0, 0)

Clear_3.BorderSizePixel = 0

Clear_3.Position = UDim2.new(0.0592503995, 0, 0.314861476, 0)

Clear_3.Size = UDim2.new(0.877192974, 0, 0.100755669, 0)

Clear_3.Font = Enum.Font.SourceSansBold

Clear_3.Text = "Search"

Clear_3.TextColor3 = Color3.fromRGB(255, 255, 255)

Clear_3.TextSize = 25.000



UICorner_20.Parent = Clear_3



UITextSizeConstraint_17.Parent = Clear_3

UITextSizeConstraint_17.MaxTextSize = 25



TextBox_2.Parent = cloudbutton

TextBox_2.BackgroundColor3 = Color3.fromRGB(70, 70, 70)

TextBox_2.BorderColor3 = Color3.fromRGB(0, 0, 0)

TextBox_2.BorderSizePixel = 0

TextBox_2.Position = UDim2.new(0.0614035092, 0, 0.193954661, 0)

TextBox_2.Size = UDim2.new(0.877192974, 0, 0.0982367769, 0)

TextBox_2.Font = Enum.Font.SourceSans

TextBox_2.PlaceholderText = "FINDER"

TextBox_2.Text = ""

TextBox_2.TextColor3 = Color3.fromRGB(255, 255, 255)

TextBox_2.TextScaled = true

TextBox_2.TextSize = 14.000

TextBox_2.TextWrapped = true



UICorner_21.Parent = TextBox_2



UITextSizeConstraint_18.Parent = TextBox_2

UITextSizeConstraint_18.MaxTextSize = 14



ScrollingFrame.Parent = cloudbutton

ScrollingFrame.Active = true

ScrollingFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)

ScrollingFrame.BackgroundTransparency = 0.990

ScrollingFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)

ScrollingFrame.BorderSizePixel = 0

ScrollingFrame.Position = UDim2.new(1.22368419, 0, -0.261964738, 0)

ScrollingFrame.Size = UDim2.new(3.60087729, 0, 1.28463471, 0)

ScrollingFrame.CanvasSize = UDim2.new(0, 0, 3.9000001, 0)



UIGridLayout.Parent = ScrollingFrame

UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder

UIGridLayout.CellPadding = UDim2.new(0, 10, 0, 10)

UIGridLayout.CellSize = UDim2.new(0, 262, 0, 218)



Folder_2.Parent = ScrollingFrame



Frame_3.Parent = Folder_2

Frame_3.BackgroundColor3 = Color3.fromRGB(44, 48, 51)

Frame_3.BorderColor3 = Color3.fromRGB(0, 0, 0)

Frame_3.BorderSizePixel = 0

Frame_3.Position = UDim2.new(0, 0, 0.0142092062, 0)

Frame_3.Size = UDim2.new(0.31912303, 0, 0.427451015, 0)

Frame_3.Visible = false



UICorner_22.Parent = Frame_3



ImageLabel.Parent = Frame_3

ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)

ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)

ImageLabel.BorderSizePixel = 0

ImageLabel.Position = UDim2.new(0.236641213, 0, 0.114678897, 0)

ImageLabel.Size = UDim2.new(0.52290076, 0, 0.17980653, 0)

ImageLabel.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"



load.Name = "load"

load.Parent = Frame_3

load.BackgroundColor3 = Color3.fromRGB(102, 60, 232)

load.BorderColor3 = Color3.fromRGB(0, 0, 0)

load.BorderSizePixel = 0

load.Position = UDim2.new(0.385496199, 0, 0.700182319, 0)

load.Size = UDim2.new(0.218886033, 0, 0.247544661, 0)

load.Font = Enum.Font.SourceSansBold

load.Text = "Load"

load.TextColor3 = Color3.fromRGB(255, 255, 255)

load.TextSize = 25.000



UICorner_23.Parent = load



UITextSizeConstraint_19.Parent = load

UITextSizeConstraint_19.MaxTextSize = 25



TextLabel_5.Parent = Frame_3

TextLabel_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)

TextLabel_5.BackgroundTransparency = 1.000

TextLabel_5.BorderColor3 = Color3.fromRGB(0, 0, 0)

TextLabel_5.BorderSizePixel = 0

TextLabel_5.ClipsDescendants = true

TextLabel_5.Position = UDim2.new(0.114503816, 0, 0, 0)

TextLabel_5.Size = UDim2.new(0.763358772, 0, 0.0377744809, 0)

TextLabel_5.Font = Enum.Font.SourceSansBold

TextLabel_5.TextColor3 = Color3.fromRGB(255, 255, 255)

TextLabel_5.TextSize = 20.000



open.Name = "open"

open.Parent = Newfluxsos

open.BackgroundColor3 = Color3.fromRGB(29, 31, 44)

open.BorderColor3 = Color3.fromRGB(0, 0, 0)

open.BorderSizePixel = 0

open.Position = UDim2.new(0.00680735242, 0, 0.0464876071, 0)

open.Size = UDim2.new(0, 59, 0, 57)

open.Visible = false



UICorner_24.CornerRadius = UDim.new(1, 8)

UICorner_24.Parent = open



ImageButton.Parent = open

ImageButton.BackgroundColor3 = Color3.fromRGB(38, 40, 61)

ImageButton.BorderColor3 = Color3.fromRGB(0, 0, 0)

ImageButton.BorderSizePixel = 0

ImageButton.Position = UDim2.new(0.0847457647, 0, 0.0701754391, 0)

ImageButton.Size = UDim2.new(0, 48, 0, 49)

ImageButton.Image = "rbxassetid://13945092962"



UICorner_25.CornerRadius = UDim.new(1, 8)

UICorner_25.Parent = ImageButton



-- Scripts:



local function ICPR_fake_script() -- run.LocalScript 

	local script = Instance.new('LocalScript', run)



	script.Parent.MouseButton1Click:Connect(function()

		loadstring(getclipboard())

	end)

end

coroutine.wrap(ICPR_fake_script)()

local function FXTQKOR_fake_script() -- back.LocalScript 

	local script = Instance.new('LocalScript', back)



	script.Parent.MouseButton1Down:Connect(function()

		script.Parent.Parent.Parent.mainbutton.Visible = true

		script.Parent.Parent.Parent.executebutton.Visible = false

		script.Parent.Parent.Parent.Parent.Parent.main.Transparency = 1

	end)

	

end

coroutine.wrap(FXTQKOR_fake_script)()

local function NIEI_fake_script() -- Loadeditor.LocalScript 

	local script = Instance.new('LocalScript', Loadeditor)



	script.Parent.MouseButton1Click:Connect(function()

		script.Parent.Parent.executorframe.text1.Text = getclipboard()

	end)

end

coroutine.wrap(NIEI_fake_script)()

local function XGCIHQU_fake_script() -- Execute.LocalScript 

	local script = Instance.new('LocalScript', Execute)



	local executeframe = script.Parent.Parent.Parent.executebutton.executorframe

	

	script.Parent.MouseButton1Down:Connect(function()

			loadstring(executeframe.text1.Text)() 

	end)

end

coroutine.wrap(XGCIHQU_fake_script)()

local function SYBGR_fake_script() -- Clear.LocalScript 

	local script = Instance.new('LocalScript', Clear)



	local executeframe = script.Parent.Parent.Parent.executebutton.executorframe

	

	script.Parent.MouseButton1Down:Connect(function()

		executeframe.text1.Text = ""

	end)

end

coroutine.wrap(SYBGR_fake_script)()

local function LZGB_fake_script() -- plus.LocalScript 

	local script = Instance.new('LocalScript', plus)



	local btn = script.Parent

	

	local function AddScript(name, source)

		makefolder("fluxsus")

		writefile("fluxsus/" .. name, source)

	

		local parent = script.Parent.Parent.Parent.Frame

		local hub = parent.Folder.Frame

		local newhub = hub:Clone()

	

		local scriptname = newhub.TextLabel

		local execbutton = newhub.TextButton

		local delbutton = newhub.del

	

		newhub.Parent = parent

		newhub.Visible = true

		scriptname.Text = "script.txt"

		execbutton.MouseButton1Click:Connect(function()

			loadstring(source)()

		end)

		delbutton.MouseButton1Click:Connect(function()

			newhub:Destroy()

			delfile("fluxsus/"..name)

		end)

	end

	

	btn.MouseButton1Click:Connect(function()

		AddScript(script.Parent.Parent.sname.Text, script.Parent.Parent.code.Text, false)

		script.Parent.Parent.code.Text = ""

		script.Parent.Parent.sname.Text = ""

	end)	

end

coroutine.wrap(LZGB_fake_script)()

local function IGZXD_fake_script() -- back_2.LocalScript 

	local script = Instance.new('LocalScript', back_2)



	script.Parent.MouseButton1Down:Connect(function()

		script.Parent.Parent.Parent.consolebutton.Visible = false

		script.Parent.Parent.Parent.mainbutton.Visible = true

		script.Parent.Parent.Parent.Parent.Parent.main.Transparency = 1

	end)

end

coroutine.wrap(IGZXD_fake_script)()

local function GFYUQX_fake_script() -- Executor.LocalScript 

	local script = Instance.new('LocalScript', Executor)



	script.Parent.MouseButton1Down:Connect(function()

		script.Parent.Parent.Visible = false

		script.Parent.Parent.Parent.executebutton.Visible = true

		script.Parent.Parent.Parent.Parent.Parent.main.Transparency = 0.6

	

	end)

end

coroutine.wrap(GFYUQX_fake_script)()

local function DMERJN_fake_script() -- Console.LocalScript 

	local script = Instance.new('LocalScript', Console)



	script.Parent.MouseButton1Down:Connect(function()

		script.Parent.Parent.Visible = false

		script.Parent.Parent.Parent.consolebutton.Visible = true

		script.Parent.Parent.Parent.Parent.Parent.main.Transparency = 0.6

	end)

end

coroutine.wrap(DMERJN_fake_script)()

local function LQPPZ_fake_script() -- Cloud.LocalScript 

	local script = Instance.new('LocalScript', Cloud)



	script.Parent.MouseButton1Down:Connect(function()

		script.Parent.Parent.Visible = false

		script.Parent.Parent.Parent.cloudbutton.Visible = true

		script.Parent.Parent.Parent.Parent.Parent.main.Transparency = 0.6

	end)

end

coroutine.wrap(LQPPZ_fake_script)()

local function YIUYHUL_fake_script() -- close.LocalScript 

	local script = Instance.new('LocalScript', close)



	script.Parent.MouseButton1Down:Connect(function()

	local maim = script.Parent.Parent.Parent.Parent.main

	local open = script.Parent.Parent.Parent.Parent.open

		script.Parent.Parent.mainbutton.Visible = true

		script.Parent.Parent.consolebutton.Visible = false

		script.Parent.Parent.executebutton.Visible = false

		script.Parent.Parent.cloudbutton.Visible = false

	game:GetService("TweenService"):Create(open,TweenInfo.new(2),{Position=UDim2.new(0.007, 0,0.046, 0)}):Play()

	game:GetService("TweenService"):Create(maim,TweenInfo.new(2),{Position=UDim2.new(-5,0,0,0)}):Play()

	end)

end

coroutine.wrap(YIUYHUL_fake_script)()

local function EYNE_fake_script() -- back_3.LocalScript 

	local script = Instance.new('LocalScript', back_3)



	script.Parent.MouseButton1Down:Connect(function()

		script.Parent.Parent.Parent.cloudbutton.Visible = false

		script.Parent.Parent.Parent.mainbutton.Visible = true

		script.Parent.Parent.Parent.Parent.Parent.main.Transparency = 1

	end)

end

coroutine.wrap(EYNE_fake_script)()

local function FIOL_fake_script() -- Clear_3.LocalScript 

	local script = Instance.new('LocalScript', Clear_3)



	local btn = script.Parent

	

	local function AddTab(imageTab, scriptname, source)

		local scriptFrame = script.Parent.Parent.ScrollingFrame

		local newList = scriptFrame.Folder.Frame:Clone()

	

		local execute = newList.load

	

		local scname = newList.TextLabel

		local img = newList.ImageLabel

	

		newList.Name = scriptname

		newList.Parent = scriptFrame

		newList.Visible = true

	

		img.Image = imageTab

	

		scname.Text = scriptname

	

		execute.MouseButton1Click:Connect(function()

			loadstring(source)()

		end)

	end

	

	

	local http = game:GetService("HttpService")

	btn.MouseButton1Click:Connect(function()

		for _, child in ipairs(script.Parent.Parent.ScrollingFrame:GetChildren()) do

			if child:IsA("Frame") then

				child:Destroy()

			end

		end

	

	

		local url = "https://scriptblox.com/api/script/search?filters=free&q="..script.Parent.Parent.TextBox.Text

		local response = game:HttpGetAsync(url)

		local decoded = http:JSONDecode(response)

		for _, script in pairs(decoded.result.scripts) do

			if(script.isUniversal == true) then

				AddTab("rbxassetid://13945092962", script.title, script.script)

			else

				AddTab("https://assetgame.roblox.com/Game/Tools/ThumbnailAsset.ashx?aid="..script.game.gameId.."&fmt=png&wd=420&ht=420", script.title, script.script)

			end

	

		end

	

	end)

	

	

	

end

coroutine.wrap(FIOL_fake_script)()

local function OCOAJQ_fake_script() -- ImageButton.LocalScript 

	local script = Instance.new('LocalScript', ImageButton)



	script.Parent.MouseButton1Down:Connect(function()

	local maim = script.Parent.Parent.Parent.main

		script.Parent.Parent.Parent.main.Transparency = 1

		local open = script.Parent.Parent

		game:GetService("TweenService"):Create(open,TweenInfo.new(2),{Position=UDim2.new(-1, 0, 0, 0)}):Play()

		game:GetService("TweenService"):Create(maim,TweenInfo.new(0.8),{Position=UDim2.new(0,0,0,0)}):Play()

	end)

end

coroutine.wrap(OCOAJQ_fake_script)()

local function KUUPKPY_fake_script() -- Newfluxsos.LocalScript 

	local script = Instance.new('LocalScript', Newfluxsos)



	--[[

	    made by: dak#1111

	    thanks for using!

	--]]

	

	local function tween(...)

		game:GetService("TweenService"):Create(...):Play()

	end

	

	game:GetService("ReplicatedFirst"):RemoveDefaultLoadingScreen()

	local loading = Instance.new("ScreenGui")

	local background = Instance.new("Frame")

	local gradient = Instance.new("UIGradient")

	local status = Instance.new("TextLabel")

	local ImageLabel = Instance.new("ImageLabel")

	local UICorner = Instance.new("UICorner")

	

	

	loading.Name = "loading"

	loading.Parent = game.Players.LocalPlayer.PlayerGui

	loading.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

	

	background.Name = "background"

	background.Parent = loading

	background.BackgroundColor3 = Color3.fromRGB(57, 57, 57)

	background.Position = UDim2.new(0, 0, -0.100000001, 0)

	background.Size = UDim2.new(1, 0, 1.10000002, 0)

	

	gradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.45, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(76, 76, 76))}

	gradient.Rotation = 90

	gradient.Name = "gradient"

	gradient.Parent = background

	

	ImageLabel.Parent = loading

	ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)

	ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)

	ImageLabel.BorderSizePixel = 0

	ImageLabel.BackgroundTransparency = 1

	ImageLabel.Position = UDim2.new(0.456943512, 0, 0.359848499, 0)

	ImageLabel.Size = UDim2.new(0, 100, 0, 100)

	ImageLabel.Image = "rbxassetid://13945092962"

	

	UICorner.CornerRadius = UDim.new(1, 8)

	UICorner.Parent = ImageLabel

	

	status.Name = "status"

	status.Parent = loading

	status.BackgroundColor3 = Color3.fromRGB(255, 255, 255)

	status.BackgroundTransparency = 1.000

	status.Position = UDim2.new(0, 0, 0.893442631, 0)

	status.Size = UDim2.new(1, 0, 0.0355480109, 0)

	status.Font = Enum.Font.SourceSansItalic

	status.Text = "Thanks for using my scripts / anya in here"

	status.TextColor3 = Color3.fromRGB(255, 255, 255)

	status.TextScaled = true

	status.TextSize = 14.000

	status.TextStrokeColor3 = Color3.fromRGB(52, 52, 52)

	status.TextStrokeTransparency = 0.000

	status.TextWrapped = true

	

	repeat wait() until game:GetService("Players").LocalPlayer

	status.Text = "Fixed by UXteam"

	wait(3)

	status.Text = "Please wait, UX is handling.."

	wait(2)

	status.Text = "UniverseX is on top!"

	if not game:IsLoaded() then

		game.Loaded:wait()

	end

	

	wait(5.66)

	

	tween(background, TweenInfo.new(3.55), {BackgroundTransparency = 1})

	tween(status, TweenInfo.new(3.55), {TextTransparency = 1, TextStrokeTransparency = 1})

	tween(ImageLabel, TweenInfo.new(3.55), {ImageTransparency = 1})

	

	wait(2.55)

	loading:Destroy()

	script.Parent.open.Visible = true

end

coroutine.wrap(KUUPKPY_fake_script)()



for _, file in ipairs(listfiles("fluxsus")) do

	AddScript(file:sub(1, #file), readfile(file), true)

end
end)
tab3.newButton("Fluxus 2.0", "Executor script", function()
    -- Gui to Lua
-- Version: 3.2

-- Instances:

local FLuxusMobile = {
	FLuxusMobile = Instance.new("ScreenGui"),
	KeyPage = Instance.new("Frame"),
	UP = Instance.new("Frame"),
	ImageLabel = Instance.new("ImageLabel"),
	TextButton = Instance.new("TextButton"),
	UICorner = Instance.new("UICorner"),
	ImageButton = Instance.new("ImageButton"),
	Down = Instance.new("Frame"),
	GetKey = Instance.new("Frame"),
	TextButton_2 = Instance.new("TextButton"),
	UICorner_2 = Instance.new("UICorner"),
	UICorner_3 = Instance.new("UICorner"),
	Help = Instance.new("Frame"),
	UICorner_4 = Instance.new("UICorner"),
	Help_2 = Instance.new("TextButton"),
	UICorner_5 = Instance.new("UICorner"),
	Enter = Instance.new("TextButton"),
	UICorner_6 = Instance.new("UICorner"),
	TextLabel = Instance.new("TextLabel"),
	inputkey = Instance.new("Frame"),
	TextBox = Instance.new("TextBox"),
	UICorner_7 = Instance.new("UICorner"),
	UICorner_8 = Instance.new("UICorner"),
	TextLabel_2 = Instance.new("TextLabel"),
	HelpFrame = Instance.new("Frame"),
	UP_2 = Instance.new("Frame"),
	UICorner_9 = Instance.new("UICorner"),
	ImageButton_2 = Instance.new("ImageButton"),
	TextLabel_3 = Instance.new("TextLabel"),
	TextLabel_4 = Instance.new("TextLabel"),
	TextLabel_5 = Instance.new("TextLabel"),
	TextLabel_6 = Instance.new("TextLabel"),
	UICorner_10 = Instance.new("UICorner"),
	ImageLabel_2 = Instance.new("ImageLabel"),
	Down_2 = Instance.new("Frame"),
	UICorner_11 = Instance.new("UICorner"),
	TextButton_3 = Instance.new("TextButton"),
	UICorner_12 = Instance.new("UICorner"),
	UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint"),
	MainPage = Instance.new("Frame"),
	UP_3 = Instance.new("Frame"),
	ImageLabel_3 = Instance.new("ImageLabel"),
	ImageButton_3 = Instance.new("ImageButton"),
	TextButton_4 = Instance.new("TextButton"),
	UICorner_13 = Instance.new("UICorner"),
	Tabs = Instance.new("Frame"),
	executor = Instance.new("ImageButton"),
	UICorner_14 = Instance.new("UICorner"),
	settings = Instance.new("ImageButton"),
	UICorner_15 = Instance.new("UICorner"),
	player = Instance.new("ImageButton"),
	UICorner_16 = Instance.new("UICorner"),
	executor_2 = Instance.new("Frame"),
	script1 = Instance.new("TextBox"),
	script2 = Instance.new("TextBox"),
	script3 = Instance.new("TextBox"),
	script4 = Instance.new("TextBox"),
	buttons1 = Instance.new("Frame"),
	Execute = Instance.new("TextButton"),
	UICorner_17 = Instance.new("UICorner"),
	clear = Instance.new("TextButton"),
	UICorner_18 = Instance.new("UICorner"),
	copy = Instance.new("TextButton"),
	UICorner_19 = Instance.new("UICorner"),
	paste = Instance.new("TextButton"),
	UICorner_20 = Instance.new("UICorner"),
	buttons2 = Instance.new("Frame"),
	Execute_2 = Instance.new("TextButton"),
	UICorner_21 = Instance.new("UICorner"),
	clear_2 = Instance.new("TextButton"),
	UICorner_22 = Instance.new("UICorner"),
	copy_2 = Instance.new("TextButton"),
	UICorner_23 = Instance.new("UICorner"),
	paste_2 = Instance.new("TextButton"),
	UICorner_24 = Instance.new("UICorner"),
	buttons3 = Instance.new("Frame"),
	Execute_3 = Instance.new("TextButton"),
	UICorner_25 = Instance.new("UICorner"),
	clear_3 = Instance.new("TextButton"),
	UICorner_26 = Instance.new("UICorner"),
	copy_3 = Instance.new("TextButton"),
	UICorner_27 = Instance.new("UICorner"),
	paste_3 = Instance.new("TextButton"),
	UICorner_28 = Instance.new("UICorner"),
	buttons4 = Instance.new("Frame"),
	Execute_4 = Instance.new("TextButton"),
	UICorner_29 = Instance.new("UICorner"),
	clear_4 = Instance.new("TextButton"),
	UICorner_30 = Instance.new("UICorner"),
	copy_4 = Instance.new("TextButton"),
	UICorner_31 = Instance.new("UICorner"),
	paste_4 = Instance.new("TextButton"),
	UICorner_32 = Instance.new("UICorner"),
	console = Instance.new("Frame"),
	lines = Instance.new("Frame"),
	TextLabel_7 = Instance.new("TextLabel"),
	Scripts = Instance.new("Frame"),
	TextLabel_8 = Instance.new("TextLabel"),
	TextLabel_9 = Instance.new("TextLabel"),
	TextLabel_10 = Instance.new("TextLabel"),
	TextLabel_11 = Instance.new("TextLabel"),
	TextLabel_12 = Instance.new("TextLabel"),
	scriptsbuttons = Instance.new("Frame"),
	TextButton_5 = Instance.new("TextButton"),
	TextButton_6 = Instance.new("TextButton"),
	TextButton_7 = Instance.new("TextButton"),
	TextButton_8 = Instance.new("TextButton"),
	Scriptname = Instance.new("Frame"),
	TextLabel_13 = Instance.new("TextLabel"),
	TextLabel_14 = Instance.new("TextLabel"),
	Devlopers = Instance.new("Frame"),
	devloperframe = Instance.new("Frame"),
	TextLabel_15 = Instance.new("TextLabel"),
	ImageLabel_4 = Instance.new("ImageLabel"),
	TextLabel_16 = Instance.new("TextLabel"),
	ImageLabel_5 = Instance.new("ImageLabel"),
	ImageLabel_6 = Instance.new("ImageLabel"),
	devloperframe_2 = Instance.new("Frame"),
	ImageLabel_7 = Instance.new("ImageLabel"),
	TextLabel_17 = Instance.new("TextLabel"),
	ImageLabel_8 = Instance.new("ImageLabel"),
	TextLabel_18 = Instance.new("TextLabel"),
	ImageLabel_9 = Instance.new("ImageLabel"),
	devloperframe_3 = Instance.new("Frame"),
	ImageLabel_10 = Instance.new("ImageLabel"),
	TextLabel_19 = Instance.new("TextLabel"),
	ImageLabel_11 = Instance.new("ImageLabel"),
	TextLabel_20 = Instance.new("TextLabel"),
	ImageLabel_12 = Instance.new("ImageLabel"),
	devloperframe_4 = Instance.new("Frame"),
	ImageLabel_13 = Instance.new("ImageLabel"),
	TextLabel_21 = Instance.new("TextLabel"),
	ImageLabel_14 = Instance.new("ImageLabel"),
	TextLabel_22 = Instance.new("TextLabel"),
	ImageLabel_15 = Instance.new("ImageLabel"),
	devloperframe_5 = Instance.new("Frame"),
	ImageLabel_16 = Instance.new("ImageLabel"),
	devloperframe_6 = Instance.new("Frame"),
	ImageLabel_17 = Instance.new("ImageLabel"),
	TextLabel_23 = Instance.new("TextLabel"),
	ImageLabel_18 = Instance.new("ImageLabel"),
	TextLabel_24 = Instance.new("TextLabel"),
	TextLabel_25 = Instance.new("TextLabel"),
	TextLabel_26 = Instance.new("TextLabel"),
	TextLabel_27 = Instance.new("TextLabel"),
	Frame = Instance.new("Frame"),
	ImageLabel_19 = Instance.new("ImageLabel"),
	TextLabel_28 = Instance.new("TextLabel"),
	ImageLabel_20 = Instance.new("ImageLabel"),
	TextLabel_29 = Instance.new("TextLabel"),
	ImageLabel_21 = Instance.new("ImageLabel"),
	Frame_2 = Instance.new("Frame"),
	ImageLabel_22 = Instance.new("ImageLabel"),
	TextLabel_30 = Instance.new("TextLabel"),
	ImageLabel_23 = Instance.new("ImageLabel"),
	TextLabel_31 = Instance.new("TextLabel"),
	ImageLabel_24 = Instance.new("ImageLabel"),
	Frame_3 = Instance.new("Frame"),
	ImageLabel_25 = Instance.new("ImageLabel"),
	TextLabel_32 = Instance.new("TextLabel"),
	ImageLabel_26 = Instance.new("ImageLabel"),
	TextLabel_33 = Instance.new("TextLabel"),
	ImageLabel_27 = Instance.new("ImageLabel"),
	Frame_4 = Instance.new("Frame"),
	ImageLabel_28 = Instance.new("ImageLabel"),
	TextLabel_34 = Instance.new("TextLabel"),
	ImageLabel_29 = Instance.new("ImageLabel"),
	TextLabel_35 = Instance.new("TextLabel"),
	ImageLabel_30 = Instance.new("ImageLabel"),
	Settings = Instance.new("Frame"),
	setting1 = Instance.new("Frame"),
	TextLabel_36 = Instance.new("TextLabel"),
	setting1_2 = Instance.new("Frame"),
	setting1_3 = Instance.new("Frame"),
	UICorner_33 = Instance.new("UICorner"),
	TextButton_9 = Instance.new("TextButton"),
	UICorner_34 = Instance.new("UICorner"),
	TextLabel_37 = Instance.new("TextLabel"),
	setting1_4 = Instance.new("Frame"),
	TextLabel_38 = Instance.new("TextLabel"),
	setting1_5 = Instance.new("Frame"),
	setting1_6 = Instance.new("Frame"),
	UICorner_35 = Instance.new("UICorner"),
	TextButton_10 = Instance.new("TextButton"),
	UICorner_36 = Instance.new("UICorner"),
	TextLabel_39 = Instance.new("TextLabel"),
	setting1_7 = Instance.new("Frame"),
	TextLabel_40 = Instance.new("TextLabel"),
	setting1_8 = Instance.new("Frame"),
	setting1_9 = Instance.new("Frame"),
	UICorner_37 = Instance.new("UICorner"),
	TextButton_11 = Instance.new("TextButton"),
	UICorner_38 = Instance.new("UICorner"),
	TextLabel_41 = Instance.new("TextLabel"),
	setting1_10 = Instance.new("Frame"),
	TextLabel_42 = Instance.new("TextLabel"),
	setting1_11 = Instance.new("Frame"),
	setting1_12 = Instance.new("Frame"),
	UICorner_39 = Instance.new("UICorner"),
	TextButton_12 = Instance.new("TextButton"),
	UICorner_40 = Instance.new("UICorner"),
	TextLabel_43 = Instance.new("TextLabel"),
	TextLabel_44 = Instance.new("TextLabel"),
	LoginPage = Instance.new("Frame"),
	UP_4 = Instance.new("Frame"),
	ImageLabel_31 = Instance.new("ImageLabel"),
	TextButton_13 = Instance.new("TextButton"),
	UICorner_41 = Instance.new("UICorner"),
	Down_3 = Instance.new("Frame"),
	GetKey_2 = Instance.new("Frame"),
	TextButton_14 = Instance.new("TextButton"),
	UICorner_42 = Instance.new("UICorner"),
	UICorner_43 = Instance.new("UICorner"),
	Help_3 = Instance.new("Frame"),
	UICorner_44 = Instance.new("UICorner"),
	Help_4 = Instance.new("TextButton"),
	UICorner_45 = Instance.new("UICorner"),
	Enter_2 = Instance.new("TextButton"),
	UICorner_46 = Instance.new("UICorner"),
	inputusername = Instance.new("Frame"),
	TextBox_2 = Instance.new("TextBox"),
	UICorner_47 = Instance.new("UICorner"),
	UICorner_48 = Instance.new("UICorner"),
	TextLabel_45 = Instance.new("TextLabel"),
	TextLabel_46 = Instance.new("TextLabel"),
	inputPass = Instance.new("Frame"),
	UICorner_49 = Instance.new("UICorner"),
	TextBox_3 = Instance.new("TextBox"),
	UICorner_50 = Instance.new("UICorner"),
	HelpFrame_2 = Instance.new("Frame"),
	UP_5 = Instance.new("Frame"),
	UICorner_51 = Instance.new("UICorner"),
	ImageButton_4 = Instance.new("ImageButton"),
	TextLabel_47 = Instance.new("TextLabel"),
	TextLabel_48 = Instance.new("TextLabel"),
	TextLabel_49 = Instance.new("TextLabel"),
	TextLabel_50 = Instance.new("TextLabel"),
	UICorner_52 = Instance.new("UICorner"),
	ImageLabel_32 = Instance.new("ImageLabel"),
	Down_4 = Instance.new("Frame"),
	UICorner_53 = Instance.new("UICorner"),
	TextButton_15 = Instance.new("TextButton"),
	UICorner_54 = Instance.new("UICorner"),
	UIAspectRatioConstraint_2 = Instance.new("UIAspectRatioConstraint"),
	ImageButton_5 = Instance.new("ImageButton"),
}

--Properties:

FLuxusMobile.FLuxusMobile.Name = "FLuxusMobile"
FLuxusMobile.FLuxusMobile.Parent = game.CoreGui
FLuxusMobile.FLuxusMobile.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

FLuxusMobile.KeyPage.Name = "KeyPage"
FLuxusMobile.KeyPage.Parent = FLuxusMobile.FLuxusMobile
FLuxusMobile.KeyPage.BackgroundColor3 = Color3.fromRGB(23, 23, 25)
FLuxusMobile.KeyPage.BackgroundTransparency = 1.000
FLuxusMobile.KeyPage.BorderColor3 = Color3.fromRGB(20, 20, 23)
FLuxusMobile.KeyPage.Position = UDim2.new(0.33065027, 0, 0.290977955, 0)
FLuxusMobile.KeyPage.Size = UDim2.new(0, 404, 0, 232)
FLuxusMobile.KeyPage.Draggable = true
FLuxusMobile.KeyPage.Active = true

FLuxusMobile.UP.Name = "UP"
FLuxusMobile.UP.Parent = FLuxusMobile.KeyPage
FLuxusMobile.UP.BackgroundColor3 = Color3.fromRGB(20, 20, 23)
FLuxusMobile.UP.BorderColor3 = Color3.fromRGB(19, 19, 21)
FLuxusMobile.UP.Position = UDim2.new(-0.00247524749, 0, 0, 0)
FLuxusMobile.UP.Size = UDim2.new(0, 403, 0, 48)

FLuxusMobile.ImageLabel.Parent = FLuxusMobile.UP
FLuxusMobile.ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.ImageLabel.BackgroundTransparency = 1.000
FLuxusMobile.ImageLabel.Position = UDim2.new(0.0148883378, 0, 0.185185179, 0)
FLuxusMobile.ImageLabel.Size = UDim2.new(0, 27, 0, 25)
FLuxusMobile.ImageLabel.Image = "rbxassetid://13818219807"
FLuxusMobile.ImageLabel.ImageTransparency = 0.300

FLuxusMobile.TextButton.Parent = FLuxusMobile.UP
FLuxusMobile.TextButton.BackgroundColor3 = Color3.fromRGB(23, 23, 25)
FLuxusMobile.TextButton.BorderColor3 = Color3.fromRGB(14, 14, 15)
FLuxusMobile.TextButton.Position = UDim2.new(0.746898234, 0, 0.233796299, 0)
FLuxusMobile.TextButton.Size = UDim2.new(0, 60, 0, 25)
FLuxusMobile.TextButton.Font = Enum.Font.SourceSans
FLuxusMobile.TextButton.Text = "Login"
FLuxusMobile.TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextButton.TextSize = 18.000
FLuxusMobile.TextButton.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextButton.TextStrokeTransparency = 0.800

FLuxusMobile.UICorner.CornerRadius = UDim.new(0, 5)
FLuxusMobile.UICorner.Parent = FLuxusMobile.TextButton

FLuxusMobile.ImageButton.Parent = FLuxusMobile.UP
FLuxusMobile.ImageButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.ImageButton.BackgroundTransparency = 1.000
FLuxusMobile.ImageButton.BorderColor3 = Color3.fromRGB(50, 50, 50)
FLuxusMobile.ImageButton.Position = UDim2.new(0.913073003, 0, 0.287970424, 0)
FLuxusMobile.ImageButton.Size = UDim2.new(0, 21, 0, 20)
FLuxusMobile.ImageButton.Image = "rbxassetid://13806606582"

FLuxusMobile.Down.Name = "Down"
FLuxusMobile.Down.Parent = FLuxusMobile.KeyPage
FLuxusMobile.Down.BackgroundColor3 = Color3.fromRGB(23, 23, 25)
FLuxusMobile.Down.BorderColor3 = Color3.fromRGB(20, 20, 23)
FLuxusMobile.Down.Position = UDim2.new(-0.00247524749, 0, 0.18534483, 0)
FLuxusMobile.Down.Size = UDim2.new(0, 403, 0, 189)

FLuxusMobile.GetKey.Name = "GetKey"
FLuxusMobile.GetKey.Parent = FLuxusMobile.Down
FLuxusMobile.GetKey.BackgroundColor3 = Color3.fromRGB(14, 14, 15)
FLuxusMobile.GetKey.BorderColor3 = Color3.fromRGB(14, 14, 15)
FLuxusMobile.GetKey.Position = UDim2.new(0.0420792066, 0, 0.576719582, 0)
FLuxusMobile.GetKey.Size = UDim2.new(0, 94, 0, 42)

FLuxusMobile.TextButton_2.Parent = FLuxusMobile.GetKey
FLuxusMobile.TextButton_2.BackgroundColor3 = Color3.fromRGB(23, 23, 25)
FLuxusMobile.TextButton_2.BorderColor3 = Color3.fromRGB(14, 14, 15)
FLuxusMobile.TextButton_2.Position = UDim2.new(0.0469999984, 0, 0.0599999987, 0)
FLuxusMobile.TextButton_2.Size = UDim2.new(0, 85, 0, 37)
FLuxusMobile.TextButton_2.Font = Enum.Font.SourceSansBold
FLuxusMobile.TextButton_2.Text = "GetKey"
FLuxusMobile.TextButton_2.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextButton_2.TextSize = 18.000
FLuxusMobile.TextButton_2.TextStrokeColor3 = Color3.fromRGB(225, 225, 225)
FLuxusMobile.TextButton_2.TextStrokeTransparency = 0.800

FLuxusMobile.UICorner_2.CornerRadius = UDim.new(0, 5)
FLuxusMobile.UICorner_2.Parent = FLuxusMobile.TextButton_2

FLuxusMobile.UICorner_3.CornerRadius = UDim.new(0, 5)
FLuxusMobile.UICorner_3.Parent = FLuxusMobile.GetKey

FLuxusMobile.Help.Name = "Help"
FLuxusMobile.Help.Parent = FLuxusMobile.Down
FLuxusMobile.Help.BackgroundColor3 = Color3.fromRGB(14, 14, 15)
FLuxusMobile.Help.BorderColor3 = Color3.fromRGB(14, 14, 15)
FLuxusMobile.Help.Position = UDim2.new(0.680762231, 0, 0.57400012, 0)
FLuxusMobile.Help.Size = UDim2.new(0, 94, 0, 42)

FLuxusMobile.UICorner_4.CornerRadius = UDim.new(0, 5)
FLuxusMobile.UICorner_4.Parent = FLuxusMobile.Help

FLuxusMobile.Help_2.Name = "Help"
FLuxusMobile.Help_2.Parent = FLuxusMobile.Help
FLuxusMobile.Help_2.BackgroundColor3 = Color3.fromRGB(23, 23, 25)
FLuxusMobile.Help_2.BorderColor3 = Color3.fromRGB(14, 14, 15)
FLuxusMobile.Help_2.Position = UDim2.new(0.0466382951, 0, 0.0599999987, 0)
FLuxusMobile.Help_2.Size = UDim2.new(0, 85, 0, 37)
FLuxusMobile.Help_2.Font = Enum.Font.SourceSansBold
FLuxusMobile.Help_2.Text = "Help"
FLuxusMobile.Help_2.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.Help_2.TextSize = 18.000
FLuxusMobile.Help_2.TextStrokeColor3 = Color3.fromRGB(225, 225, 225)
FLuxusMobile.Help_2.TextStrokeTransparency = 0.800

FLuxusMobile.UICorner_5.CornerRadius = UDim.new(0, 5)
FLuxusMobile.UICorner_5.Parent = FLuxusMobile.Help_2

FLuxusMobile.Enter.Name = "Enter"
FLuxusMobile.Enter.Parent = FLuxusMobile.Down
FLuxusMobile.Enter.BackgroundColor3 = Color3.fromRGB(88, 69, 174)
FLuxusMobile.Enter.Position = UDim2.new(0.347881198, 0, 0.57851845, 0)
FLuxusMobile.Enter.Size = UDim2.new(0, 94, 0, 42)
FLuxusMobile.Enter.Font = Enum.Font.SourceSans
FLuxusMobile.Enter.Text = "Enter Key"
FLuxusMobile.Enter.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.Enter.TextSize = 18.000
FLuxusMobile.Enter.TextStrokeColor3 = Color3.fromRGB(225, 225, 225)
FLuxusMobile.Enter.TextStrokeTransparency = 0.800

FLuxusMobile.UICorner_6.CornerRadius = UDim.new(0, 5)
FLuxusMobile.UICorner_6.Parent = FLuxusMobile.Enter

FLuxusMobile.TextLabel.Parent = FLuxusMobile.Down
FLuxusMobile.TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel.Position = UDim2.new(0.0668316856, 0, 0.835978806, 0)
FLuxusMobile.TextLabel.Size = UDim2.new(0, 334, 0, 13)
FLuxusMobile.TextLabel.Font = Enum.Font.SourceSans
FLuxusMobile.TextLabel.Text = "You can also purchase permanent key at www.UXteam.net!"
FLuxusMobile.TextLabel.TextColor3 = Color3.fromRGB(155, 155, 155)
FLuxusMobile.TextLabel.TextSize = 16.000
FLuxusMobile.TextLabel.TextStrokeColor3 = Color3.fromRGB(65, 65, 66)
FLuxusMobile.TextLabel.TextXAlignment = Enum.TextXAlignment.Left

FLuxusMobile.inputkey.Name = "inputkey"
FLuxusMobile.inputkey.Parent = FLuxusMobile.Down
FLuxusMobile.inputkey.BackgroundColor3 = Color3.fromRGB(17, 17, 18)
FLuxusMobile.inputkey.BorderColor3 = Color3.fromRGB(17, 17, 18)
FLuxusMobile.inputkey.Position = UDim2.new(0.0420792066, 0, 0.185185179, 0)
FLuxusMobile.inputkey.Size = UDim2.new(0, 353, 0, 31)

FLuxusMobile.TextBox.Parent = FLuxusMobile.inputkey
FLuxusMobile.TextBox.BackgroundColor3 = Color3.fromRGB(23, 23, 25)
FLuxusMobile.TextBox.BorderColor3 = Color3.fromRGB(23, 23, 25)
FLuxusMobile.TextBox.Position = UDim2.new(0.0226628892, 0, 0.0967741609, 0)
FLuxusMobile.TextBox.Size = UDim2.new(0, 343, 0, 25)
FLuxusMobile.TextBox.Font = Enum.Font.SourceSans
FLuxusMobile.TextBox.Text = ""
FLuxusMobile.TextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextBox.TextSize = 14.000

FLuxusMobile.UICorner_7.CornerRadius = UDim.new(0, 5)
FLuxusMobile.UICorner_7.Parent = FLuxusMobile.TextBox

FLuxusMobile.UICorner_8.CornerRadius = UDim.new(0, 5)
FLuxusMobile.UICorner_8.Parent = FLuxusMobile.inputkey

FLuxusMobile.TextLabel_2.Parent = FLuxusMobile.Down
FLuxusMobile.TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_2.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_2.Position = UDim2.new(0.0519802012, 0, 0.0687830597, 0)
FLuxusMobile.TextLabel_2.Size = UDim2.new(0, 334, 0, 13)
FLuxusMobile.TextLabel_2.Font = Enum.Font.SourceSans
FLuxusMobile.TextLabel_2.Text = "Input Key:"
FLuxusMobile.TextLabel_2.TextColor3 = Color3.fromRGB(155, 155, 155)
FLuxusMobile.TextLabel_2.TextSize = 16.000
FLuxusMobile.TextLabel_2.TextStrokeColor3 = Color3.fromRGB(65, 65, 66)
FLuxusMobile.TextLabel_2.TextXAlignment = Enum.TextXAlignment.Left

FLuxusMobile.HelpFrame.Name = "HelpFrame"
FLuxusMobile.HelpFrame.Parent = FLuxusMobile.KeyPage
FLuxusMobile.HelpFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.HelpFrame.Position = UDim2.new(-0.0618811883, 0, 0.237068951, 0)
FLuxusMobile.HelpFrame.Size = UDim2.new(0, 451, 0, 165)
FLuxusMobile.HelpFrame.Visible = false

FLuxusMobile.UP_2.Name = "UP"
FLuxusMobile.UP_2.Parent = FLuxusMobile.HelpFrame
FLuxusMobile.UP_2.BackgroundColor3 = Color3.fromRGB(235, 246, 249)
FLuxusMobile.UP_2.Position = UDim2.new(0, 0, -0.163636357, 0)
FLuxusMobile.UP_2.Size = UDim2.new(0, 451, 0, 27)

FLuxusMobile.UICorner_9.CornerRadius = UDim.new(0, 5)
FLuxusMobile.UICorner_9.Parent = FLuxusMobile.UP_2

FLuxusMobile.ImageButton_2.Parent = FLuxusMobile.UP_2
FLuxusMobile.ImageButton_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.ImageButton_2.BackgroundTransparency = 1.000
FLuxusMobile.ImageButton_2.BorderColor3 = Color3.fromRGB(50, 50, 50)
FLuxusMobile.ImageButton_2.Position = UDim2.new(0.946860731, 0, 0.169915095, 0)
FLuxusMobile.ImageButton_2.Size = UDim2.new(0, 21, 0, 18)
FLuxusMobile.ImageButton_2.Image = "rbxassetid://13806606582"

FLuxusMobile.TextLabel_3.Parent = FLuxusMobile.UP_2
FLuxusMobile.TextLabel_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_3.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_3.Position = UDim2.new(0.0165035818, 0, 0.179894343, 0)
FLuxusMobile.TextLabel_3.Size = UDim2.new(0, 334, 0, 16)
FLuxusMobile.TextLabel_3.Font = Enum.Font.SourceSans
FLuxusMobile.TextLabel_3.Text = "Help"
FLuxusMobile.TextLabel_3.TextColor3 = Color3.fromRGB(0, 0, 0)
FLuxusMobile.TextLabel_3.TextSize = 16.000
FLuxusMobile.TextLabel_3.TextStrokeColor3 = Color3.fromRGB(251, 251, 255)
FLuxusMobile.TextLabel_3.TextXAlignment = Enum.TextXAlignment.Left

FLuxusMobile.TextLabel_4.Parent = FLuxusMobile.UP_2
FLuxusMobile.TextLabel_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_4.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_4.Position = UDim2.new(0.169496924, 0, 2.21693134, 0)
FLuxusMobile.TextLabel_4.Size = UDim2.new(0, 334, 0, 16)
FLuxusMobile.TextLabel_4.Font = Enum.Font.SourceSans
FLuxusMobile.TextLabel_4.Text = "For Help With KeySystem, Please go to www.UXteam.net/feq"
FLuxusMobile.TextLabel_4.TextColor3 = Color3.fromRGB(0, 0, 0)
FLuxusMobile.TextLabel_4.TextSize = 16.000
FLuxusMobile.TextLabel_4.TextStrokeColor3 = Color3.fromRGB(251, 251, 255)
FLuxusMobile.TextLabel_4.TextXAlignment = Enum.TextXAlignment.Left

FLuxusMobile.TextLabel_5.Parent = FLuxusMobile.UP_2
FLuxusMobile.TextLabel_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_5.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_5.Position = UDim2.new(0.169496924, 0, 2.99470925, 0)
FLuxusMobile.TextLabel_5.Size = UDim2.new(0, 334, 0, 16)
FLuxusMobile.TextLabel_5.Font = Enum.Font.SourceSans
FLuxusMobile.TextLabel_5.Text = "**OR*"
FLuxusMobile.TextLabel_5.TextColor3 = Color3.fromRGB(0, 0, 0)
FLuxusMobile.TextLabel_5.TextSize = 16.000
FLuxusMobile.TextLabel_5.TextStrokeColor3 = Color3.fromRGB(251, 251, 255)
FLuxusMobile.TextLabel_5.TextXAlignment = Enum.TextXAlignment.Left

FLuxusMobile.TextLabel_6.Parent = FLuxusMobile.UP_2
FLuxusMobile.TextLabel_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_6.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_6.Position = UDim2.new(0.169496924, 0, 3.58730173, 0)
FLuxusMobile.TextLabel_6.Size = UDim2.new(0, 334, 0, 16)
FLuxusMobile.TextLabel_6.Font = Enum.Font.SourceSans
FLuxusMobile.TextLabel_6.Text = "Join our support server at https://discord.gg/nHhKdD5VuA "
FLuxusMobile.TextLabel_6.TextColor3 = Color3.fromRGB(0, 0, 0)
FLuxusMobile.TextLabel_6.TextSize = 16.000
FLuxusMobile.TextLabel_6.TextStrokeColor3 = Color3.fromRGB(251, 251, 255)
FLuxusMobile.TextLabel_6.TextXAlignment = Enum.TextXAlignment.Left

FLuxusMobile.UICorner_10.Parent = FLuxusMobile.HelpFrame

FLuxusMobile.ImageLabel_2.Parent = FLuxusMobile.HelpFrame
FLuxusMobile.ImageLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.ImageLabel_2.BackgroundTransparency = 1.000
FLuxusMobile.ImageLabel_2.Position = UDim2.new(0.0155210644, 0, 0.206060588, 0)
FLuxusMobile.ImageLabel_2.Size = UDim2.new(0, 61, 0, 50)
FLuxusMobile.ImageLabel_2.Image = "rbxassetid://13828251068"

FLuxusMobile.Down_2.Name = "Down"
FLuxusMobile.Down_2.Parent = FLuxusMobile.HelpFrame
FLuxusMobile.Down_2.BackgroundColor3 = Color3.fromRGB(240, 240, 240)
FLuxusMobile.Down_2.Position = UDim2.new(0, 0, 0.800000012, 0)
FLuxusMobile.Down_2.Size = UDim2.new(0, 451, 0, 33)

FLuxusMobile.UICorner_11.CornerRadius = UDim.new(0, 5)
FLuxusMobile.UICorner_11.Parent = FLuxusMobile.Down_2

FLuxusMobile.TextButton_3.Parent = FLuxusMobile.Down_2
FLuxusMobile.TextButton_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextButton_3.Position = UDim2.new(0.849223912, 0, 0.0936029553, 0)
FLuxusMobile.TextButton_3.Size = UDim2.new(0, 60, 0, 25)
FLuxusMobile.TextButton_3.Font = Enum.Font.SourceSans
FLuxusMobile.TextButton_3.Text = "Okay!"
FLuxusMobile.TextButton_3.TextColor3 = Color3.fromRGB(0, 0, 0)
FLuxusMobile.TextButton_3.TextSize = 14.000

FLuxusMobile.UICorner_12.CornerRadius = UDim.new(0, 5)
FLuxusMobile.UICorner_12.Parent = FLuxusMobile.TextButton_3

FLuxusMobile.UIAspectRatioConstraint.Parent = FLuxusMobile.KeyPage
FLuxusMobile.UIAspectRatioConstraint.AspectRatio = 1.741

FLuxusMobile.MainPage.Name = "MainPage"
FLuxusMobile.MainPage.Parent = FLuxusMobile.FLuxusMobile
FLuxusMobile.MainPage.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.MainPage.Position = UDim2.new(0.164392054, 0, 0.199724525, 0)
FLuxusMobile.MainPage.Size = UDim2.new(0, 691, 0, 385)
FLuxusMobile.MainPage.Visible = false
FLuxusMobile.MainPage.Draggable = true
FLuxusMobile.MainPage.Active = true

FLuxusMobile.UP_3.Name = "UP"
FLuxusMobile.UP_3.Parent = FLuxusMobile.MainPage
FLuxusMobile.UP_3.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.UP_3.BorderColor3 = Color3.fromRGB(35, 35, 35)
FLuxusMobile.UP_3.Size = UDim2.new(0, 691, 0, 37)

FLuxusMobile.ImageLabel_3.Parent = FLuxusMobile.UP_3
FLuxusMobile.ImageLabel_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.ImageLabel_3.BackgroundTransparency = 1.000
FLuxusMobile.ImageLabel_3.Position = UDim2.new(0.00909962505, 0, 0.158158153, 0)
FLuxusMobile.ImageLabel_3.Size = UDim2.new(0, 27, 0, 25)
FLuxusMobile.ImageLabel_3.Image = "rbxassetid://13818219807"
FLuxusMobile.ImageLabel_3.ImageTransparency = 0.300

FLuxusMobile.ImageButton_3.Parent = FLuxusMobile.UP_3
FLuxusMobile.ImageButton_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.ImageButton_3.BackgroundTransparency = 1.000
FLuxusMobile.ImageButton_3.BorderColor3 = Color3.fromRGB(50, 50, 50)
FLuxusMobile.ImageButton_3.Position = UDim2.new(0.957935512, 0, 0.206889346, 0)
FLuxusMobile.ImageButton_3.Size = UDim2.new(0, 21, 0, 20)
FLuxusMobile.ImageButton_3.Image = "rbxassetid://13806606582"

FLuxusMobile.TextButton_4.Parent = FLuxusMobile.UP_3
FLuxusMobile.TextButton_4.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.TextButton_4.BorderColor3 = Color3.fromRGB(14, 14, 15)
FLuxusMobile.TextButton_4.Position = UDim2.new(0.843859136, 0, 0.0986612663, 0)
FLuxusMobile.TextButton_4.Size = UDim2.new(0, 45, 0, 29)
FLuxusMobile.TextButton_4.Font = Enum.Font.SourceSans
FLuxusMobile.TextButton_4.Text = "Discord"
FLuxusMobile.TextButton_4.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextButton_4.TextSize = 18.000
FLuxusMobile.TextButton_4.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextButton_4.TextStrokeTransparency = 0.800

FLuxusMobile.UICorner_13.CornerRadius = UDim.new(0, 5)
FLuxusMobile.UICorner_13.Parent = FLuxusMobile.TextButton_4

FLuxusMobile.Tabs.Name = "Tabs"
FLuxusMobile.Tabs.Parent = FLuxusMobile.MainPage
FLuxusMobile.Tabs.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.Tabs.BorderColor3 = Color3.fromRGB(35, 35, 35)
FLuxusMobile.Tabs.Position = UDim2.new(0, 0, 0.0961038992, 0)
FLuxusMobile.Tabs.Size = UDim2.new(0, 52, 0, 348)

FLuxusMobile.executor.Name = "executor"
FLuxusMobile.executor.Parent = FLuxusMobile.Tabs
FLuxusMobile.executor.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.executor.Position = UDim2.new(0.134615391, 0, 0.040229883, 0)
FLuxusMobile.executor.Size = UDim2.new(0, 38, 0, 38)
FLuxusMobile.executor.Image = "rbxassetid://13820121353"

FLuxusMobile.UICorner_14.CornerRadius = UDim.new(2, 8)
FLuxusMobile.UICorner_14.Parent = FLuxusMobile.executor

FLuxusMobile.settings.Name = "settings"
FLuxusMobile.settings.Parent = FLuxusMobile.Tabs
FLuxusMobile.settings.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.settings.Position = UDim2.new(0.134615391, 0, 0.729885101, 0)
FLuxusMobile.settings.Size = UDim2.new(0, 38, 0, 38)
FLuxusMobile.settings.Image = "rbxassetid://13806744100"

FLuxusMobile.UICorner_15.CornerRadius = UDim.new(2, 8)
FLuxusMobile.UICorner_15.Parent = FLuxusMobile.settings

FLuxusMobile.player.Name = "player"
FLuxusMobile.player.Parent = FLuxusMobile.Tabs
FLuxusMobile.player.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.player.Position = UDim2.new(0.134615391, 0, 0.870689631, 0)
FLuxusMobile.player.Size = UDim2.new(0, 38, 0, 38)
FLuxusMobile.player.Image = "rbxassetid://13818536229"

FLuxusMobile.UICorner_16.CornerRadius = UDim.new(2, 8)
FLuxusMobile.UICorner_16.Parent = FLuxusMobile.player

FLuxusMobile.executor_2.Name = "executor"
FLuxusMobile.executor_2.Parent = FLuxusMobile.MainPage
FLuxusMobile.executor_2.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.executor_2.BorderColor3 = Color3.fromRGB(35, 35, 35)
FLuxusMobile.executor_2.Position = UDim2.new(0.287988424, 0, 0.231168836, 0)
FLuxusMobile.executor_2.Size = UDim2.new(0, 492, 0, 240)

FLuxusMobile.script1.Name = "script1"
FLuxusMobile.script1.Parent = FLuxusMobile.executor_2
FLuxusMobile.script1.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.script1.BorderColor3 = Color3.fromRGB(35, 35, 35)
FLuxusMobile.script1.Size = UDim2.new(0, 487, 0, 240)
FLuxusMobile.script1.Font = Enum.Font.SourceSans
FLuxusMobile.script1.PlaceholderText = "--script1"
FLuxusMobile.script1.Text = ""
FLuxusMobile.script1.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.script1.TextSize = 14.000
FLuxusMobile.script1.TextStrokeColor3 = Color3.fromRGB(236, 236, 236)
FLuxusMobile.script1.TextStrokeTransparency = 0.900
FLuxusMobile.script1.TextXAlignment = Enum.TextXAlignment.Left
FLuxusMobile.script1.TextYAlignment = Enum.TextYAlignment.Top

FLuxusMobile.script2.Name = "script2"
FLuxusMobile.script2.Parent = FLuxusMobile.executor_2
FLuxusMobile.script2.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.script2.BorderColor3 = Color3.fromRGB(35, 35, 35)
FLuxusMobile.script2.Size = UDim2.new(0, 487, 0, 240)
FLuxusMobile.script2.Visible = false
FLuxusMobile.script2.Font = Enum.Font.SourceSans
FLuxusMobile.script2.PlaceholderText = "--script2"
FLuxusMobile.script2.Text = ""
FLuxusMobile.script2.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.script2.TextSize = 14.000
FLuxusMobile.script2.TextStrokeColor3 = Color3.fromRGB(236, 236, 236)
FLuxusMobile.script2.TextStrokeTransparency = 0.900
FLuxusMobile.script2.TextXAlignment = Enum.TextXAlignment.Left
FLuxusMobile.script2.TextYAlignment = Enum.TextYAlignment.Top

FLuxusMobile.script3.Name = "script3"
FLuxusMobile.script3.Parent = FLuxusMobile.executor_2
FLuxusMobile.script3.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.script3.BorderColor3 = Color3.fromRGB(35, 35, 35)
FLuxusMobile.script3.Size = UDim2.new(0, 487, 0, 240)
FLuxusMobile.script3.Visible = false
FLuxusMobile.script3.Font = Enum.Font.SourceSans
FLuxusMobile.script3.PlaceholderText = "--script3"
FLuxusMobile.script3.Text = ""
FLuxusMobile.script3.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.script3.TextSize = 14.000
FLuxusMobile.script3.TextStrokeColor3 = Color3.fromRGB(236, 236, 236)
FLuxusMobile.script3.TextStrokeTransparency = 0.900
FLuxusMobile.script3.TextXAlignment = Enum.TextXAlignment.Left
FLuxusMobile.script3.TextYAlignment = Enum.TextYAlignment.Top

FLuxusMobile.script4.Name = "script4"
FLuxusMobile.script4.Parent = FLuxusMobile.executor_2
FLuxusMobile.script4.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.script4.BorderColor3 = Color3.fromRGB(35, 35, 35)
FLuxusMobile.script4.Size = UDim2.new(0, 487, 0, 240)
FLuxusMobile.script4.Visible = false
FLuxusMobile.script4.Font = Enum.Font.SourceSans
FLuxusMobile.script4.PlaceholderText = "--script4"
FLuxusMobile.script4.Text = ""
FLuxusMobile.script4.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.script4.TextSize = 14.000
FLuxusMobile.script4.TextStrokeColor3 = Color3.fromRGB(236, 236, 236)
FLuxusMobile.script4.TextStrokeTransparency = 0.900
FLuxusMobile.script4.TextXAlignment = Enum.TextXAlignment.Left
FLuxusMobile.script4.TextYAlignment = Enum.TextYAlignment.Top

FLuxusMobile.buttons1.Name = "buttons1"
FLuxusMobile.buttons1.Parent = FLuxusMobile.executor_2
FLuxusMobile.buttons1.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.buttons1.BorderColor3 = Color3.fromRGB(35, 35, 35)
FLuxusMobile.buttons1.Position = UDim2.new(-0.0603049695, 0, -0.212229431, 0)
FLuxusMobile.buttons1.Size = UDim2.new(0, 521, 0, 29)

FLuxusMobile.Execute.Name = "Execute"
FLuxusMobile.Execute.Parent = FLuxusMobile.buttons1
FLuxusMobile.Execute.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.Execute.BorderColor3 = Color3.fromRGB(14, 14, 15)
FLuxusMobile.Execute.Position = UDim2.new(0.565999985, 0, -0.0390000008, 0)
FLuxusMobile.Execute.Size = UDim2.new(0, 74, 0, 29)
FLuxusMobile.Execute.Font = Enum.Font.SourceSans
FLuxusMobile.Execute.Text = "Execute"
FLuxusMobile.Execute.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.Execute.TextSize = 18.000
FLuxusMobile.Execute.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.Execute.TextStrokeTransparency = 0.800

FLuxusMobile.UICorner_17.CornerRadius = UDim.new(0, 5)
FLuxusMobile.UICorner_17.Parent = FLuxusMobile.Execute

FLuxusMobile.clear.Name = "clear"
FLuxusMobile.clear.Parent = FLuxusMobile.buttons1
FLuxusMobile.clear.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.clear.BorderColor3 = Color3.fromRGB(14, 14, 15)
FLuxusMobile.clear.Position = UDim2.new(-0.000670611858, 0, 0.0296957083, 0)
FLuxusMobile.clear.Size = UDim2.new(0, 54, 0, 29)
FLuxusMobile.clear.Font = Enum.Font.SourceSans
FLuxusMobile.clear.Text = "Clear"
FLuxusMobile.clear.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.clear.TextSize = 18.000
FLuxusMobile.clear.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.clear.TextStrokeTransparency = 0.800

FLuxusMobile.UICorner_18.CornerRadius = UDim.new(0, 5)
FLuxusMobile.UICorner_18.Parent = FLuxusMobile.clear

FLuxusMobile.copy.Name = "copy"
FLuxusMobile.copy.Parent = FLuxusMobile.buttons1
FLuxusMobile.copy.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.copy.BorderColor3 = Color3.fromRGB(14, 14, 15)
FLuxusMobile.copy.Position = UDim2.new(0.102976158, 0, -0.00478705019, 0)
FLuxusMobile.copy.Size = UDim2.new(0, 55, 0, 29)
FLuxusMobile.copy.Font = Enum.Font.SourceSans
FLuxusMobile.copy.Text = "Copy"
FLuxusMobile.copy.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.copy.TextSize = 18.000
FLuxusMobile.copy.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.copy.TextStrokeTransparency = 0.800

FLuxusMobile.UICorner_19.CornerRadius = UDim.new(0, 5)
FLuxusMobile.UICorner_19.Parent = FLuxusMobile.copy

FLuxusMobile.paste.Name = "paste"
FLuxusMobile.paste.Parent = FLuxusMobile.buttons1
FLuxusMobile.paste.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.paste.BorderColor3 = Color3.fromRGB(14, 14, 15)
FLuxusMobile.paste.Position = UDim2.new(0.208542377, 0, 0.0296957083, 0)
FLuxusMobile.paste.Size = UDim2.new(0, 55, 0, 29)
FLuxusMobile.paste.Font = Enum.Font.SourceSans
FLuxusMobile.paste.Text = "Paste"
FLuxusMobile.paste.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.paste.TextSize = 18.000
FLuxusMobile.paste.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.paste.TextStrokeTransparency = 0.800

FLuxusMobile.UICorner_20.CornerRadius = UDim.new(0, 5)
FLuxusMobile.UICorner_20.Parent = FLuxusMobile.paste

FLuxusMobile.buttons2.Name = "buttons2"
FLuxusMobile.buttons2.Parent = FLuxusMobile.executor_2
FLuxusMobile.buttons2.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.buttons2.BorderColor3 = Color3.fromRGB(35, 35, 35)
FLuxusMobile.buttons2.Position = UDim2.new(-0.0603049695, 0, -0.212229431, 0)
FLuxusMobile.buttons2.Size = UDim2.new(0, 521, 0, 29)
FLuxusMobile.buttons2.Visible = false

FLuxusMobile.Execute_2.Name = "Execute"
FLuxusMobile.Execute_2.Parent = FLuxusMobile.buttons2
FLuxusMobile.Execute_2.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.Execute_2.BorderColor3 = Color3.fromRGB(14, 14, 15)
FLuxusMobile.Execute_2.Position = UDim2.new(0.565999985, 0, -0.0390000008, 0)
FLuxusMobile.Execute_2.Size = UDim2.new(0, 74, 0, 29)
FLuxusMobile.Execute_2.Font = Enum.Font.SourceSans
FLuxusMobile.Execute_2.Text = "Execute"
FLuxusMobile.Execute_2.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.Execute_2.TextSize = 18.000
FLuxusMobile.Execute_2.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.Execute_2.TextStrokeTransparency = 0.800

FLuxusMobile.UICorner_21.CornerRadius = UDim.new(0, 5)
FLuxusMobile.UICorner_21.Parent = FLuxusMobile.Execute_2

FLuxusMobile.clear_2.Name = "clear"
FLuxusMobile.clear_2.Parent = FLuxusMobile.buttons2
FLuxusMobile.clear_2.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.clear_2.BorderColor3 = Color3.fromRGB(14, 14, 15)
FLuxusMobile.clear_2.Position = UDim2.new(-0.000670611858, 0, 0.0296957083, 0)
FLuxusMobile.clear_2.Size = UDim2.new(0, 54, 0, 29)
FLuxusMobile.clear_2.Font = Enum.Font.SourceSans
FLuxusMobile.clear_2.Text = "Clear"
FLuxusMobile.clear_2.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.clear_2.TextSize = 18.000
FLuxusMobile.clear_2.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.clear_2.TextStrokeTransparency = 0.800

FLuxusMobile.UICorner_22.CornerRadius = UDim.new(0, 5)
FLuxusMobile.UICorner_22.Parent = FLuxusMobile.clear_2

FLuxusMobile.copy_2.Name = "copy"
FLuxusMobile.copy_2.Parent = FLuxusMobile.buttons2
FLuxusMobile.copy_2.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.copy_2.BorderColor3 = Color3.fromRGB(14, 14, 15)
FLuxusMobile.copy_2.Position = UDim2.new(0.102976158, 0, -0.00478705019, 0)
FLuxusMobile.copy_2.Size = UDim2.new(0, 55, 0, 29)
FLuxusMobile.copy_2.Font = Enum.Font.SourceSans
FLuxusMobile.copy_2.Text = "Copy"
FLuxusMobile.copy_2.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.copy_2.TextSize = 18.000
FLuxusMobile.copy_2.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.copy_2.TextStrokeTransparency = 0.800

FLuxusMobile.UICorner_23.CornerRadius = UDim.new(0, 5)
FLuxusMobile.UICorner_23.Parent = FLuxusMobile.copy_2

FLuxusMobile.paste_2.Name = "paste"
FLuxusMobile.paste_2.Parent = FLuxusMobile.buttons2
FLuxusMobile.paste_2.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.paste_2.BorderColor3 = Color3.fromRGB(14, 14, 15)
FLuxusMobile.paste_2.Position = UDim2.new(0.208542377, 0, 0.0296957083, 0)
FLuxusMobile.paste_2.Size = UDim2.new(0, 55, 0, 29)
FLuxusMobile.paste_2.Font = Enum.Font.SourceSans
FLuxusMobile.paste_2.Text = "Paste"
FLuxusMobile.paste_2.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.paste_2.TextSize = 18.000
FLuxusMobile.paste_2.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.paste_2.TextStrokeTransparency = 0.800

FLuxusMobile.UICorner_24.CornerRadius = UDim.new(0, 5)
FLuxusMobile.UICorner_24.Parent = FLuxusMobile.paste_2

FLuxusMobile.buttons3.Name = "buttons3"
FLuxusMobile.buttons3.Parent = FLuxusMobile.executor_2
FLuxusMobile.buttons3.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.buttons3.BorderColor3 = Color3.fromRGB(35, 35, 35)
FLuxusMobile.buttons3.Position = UDim2.new(-0.0603049695, 0, -0.212229431, 0)
FLuxusMobile.buttons3.Size = UDim2.new(0, 521, 0, 29)
FLuxusMobile.buttons3.Visible = false

FLuxusMobile.Execute_3.Name = "Execute"
FLuxusMobile.Execute_3.Parent = FLuxusMobile.buttons3
FLuxusMobile.Execute_3.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.Execute_3.BorderColor3 = Color3.fromRGB(14, 14, 15)
FLuxusMobile.Execute_3.Position = UDim2.new(0.565999985, 0, -0.0390000008, 0)
FLuxusMobile.Execute_3.Size = UDim2.new(0, 74, 0, 29)
FLuxusMobile.Execute_3.Font = Enum.Font.SourceSans
FLuxusMobile.Execute_3.Text = "Execute"
FLuxusMobile.Execute_3.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.Execute_3.TextSize = 18.000
FLuxusMobile.Execute_3.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.Execute_3.TextStrokeTransparency = 0.800

FLuxusMobile.UICorner_25.CornerRadius = UDim.new(0, 5)
FLuxusMobile.UICorner_25.Parent = FLuxusMobile.Execute_3

FLuxusMobile.clear_3.Name = "clear"
FLuxusMobile.clear_3.Parent = FLuxusMobile.buttons3
FLuxusMobile.clear_3.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.clear_3.BorderColor3 = Color3.fromRGB(14, 14, 15)
FLuxusMobile.clear_3.Position = UDim2.new(-0.000670611858, 0, 0.0296957083, 0)
FLuxusMobile.clear_3.Size = UDim2.new(0, 54, 0, 29)
FLuxusMobile.clear_3.Font = Enum.Font.SourceSans
FLuxusMobile.clear_3.Text = "Clear"
FLuxusMobile.clear_3.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.clear_3.TextSize = 18.000
FLuxusMobile.clear_3.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.clear_3.TextStrokeTransparency = 0.800

FLuxusMobile.UICorner_26.CornerRadius = UDim.new(0, 5)
FLuxusMobile.UICorner_26.Parent = FLuxusMobile.clear_3

FLuxusMobile.copy_3.Name = "copy"
FLuxusMobile.copy_3.Parent = FLuxusMobile.buttons3
FLuxusMobile.copy_3.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.copy_3.BorderColor3 = Color3.fromRGB(14, 14, 15)
FLuxusMobile.copy_3.Position = UDim2.new(0.102976158, 0, -0.00478705019, 0)
FLuxusMobile.copy_3.Size = UDim2.new(0, 55, 0, 29)
FLuxusMobile.copy_3.Font = Enum.Font.SourceSans
FLuxusMobile.copy_3.Text = "Copy"
FLuxusMobile.copy_3.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.copy_3.TextSize = 18.000
FLuxusMobile.copy_3.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.copy_3.TextStrokeTransparency = 0.800

FLuxusMobile.UICorner_27.CornerRadius = UDim.new(0, 5)
FLuxusMobile.UICorner_27.Parent = FLuxusMobile.copy_3

FLuxusMobile.paste_3.Name = "paste"
FLuxusMobile.paste_3.Parent = FLuxusMobile.buttons3
FLuxusMobile.paste_3.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.paste_3.BorderColor3 = Color3.fromRGB(14, 14, 15)
FLuxusMobile.paste_3.Position = UDim2.new(0.208542377, 0, 0.0296957083, 0)
FLuxusMobile.paste_3.Size = UDim2.new(0, 55, 0, 29)
FLuxusMobile.paste_3.Font = Enum.Font.SourceSans
FLuxusMobile.paste_3.Text = "Paste"
FLuxusMobile.paste_3.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.paste_3.TextSize = 18.000
FLuxusMobile.paste_3.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.paste_3.TextStrokeTransparency = 0.800

FLuxusMobile.UICorner_28.CornerRadius = UDim.new(0, 5)
FLuxusMobile.UICorner_28.Parent = FLuxusMobile.paste_3

FLuxusMobile.buttons4.Name = "buttons4"
FLuxusMobile.buttons4.Parent = FLuxusMobile.executor_2
FLuxusMobile.buttons4.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.buttons4.BorderColor3 = Color3.fromRGB(35, 35, 35)
FLuxusMobile.buttons4.Position = UDim2.new(-0.0603049695, 0, -0.212229431, 0)
FLuxusMobile.buttons4.Size = UDim2.new(0, 521, 0, 29)
FLuxusMobile.buttons4.Visible = false

FLuxusMobile.Execute_4.Name = "Execute"
FLuxusMobile.Execute_4.Parent = FLuxusMobile.buttons4
FLuxusMobile.Execute_4.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.Execute_4.BorderColor3 = Color3.fromRGB(14, 14, 15)
FLuxusMobile.Execute_4.Position = UDim2.new(0.565548182, 0, -0.0392697677, 0)
FLuxusMobile.Execute_4.Size = UDim2.new(0, 74, 0, 29)
FLuxusMobile.Execute_4.Font = Enum.Font.SourceSans
FLuxusMobile.Execute_4.Text = "Execute"
FLuxusMobile.Execute_4.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.Execute_4.TextSize = 18.000
FLuxusMobile.Execute_4.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.Execute_4.TextStrokeTransparency = 0.800

FLuxusMobile.UICorner_29.CornerRadius = UDim.new(0, 5)
FLuxusMobile.UICorner_29.Parent = FLuxusMobile.Execute_4

FLuxusMobile.clear_4.Name = "clear"
FLuxusMobile.clear_4.Parent = FLuxusMobile.buttons4
FLuxusMobile.clear_4.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.clear_4.BorderColor3 = Color3.fromRGB(14, 14, 15)
FLuxusMobile.clear_4.Position = UDim2.new(-0.000670611858, 0, 0.0296957083, 0)
FLuxusMobile.clear_4.Size = UDim2.new(0, 54, 0, 29)
FLuxusMobile.clear_4.Font = Enum.Font.SourceSans
FLuxusMobile.clear_4.Text = "Clear"
FLuxusMobile.clear_4.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.clear_4.TextSize = 18.000
FLuxusMobile.clear_4.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.clear_4.TextStrokeTransparency = 0.800

FLuxusMobile.UICorner_30.CornerRadius = UDim.new(0, 5)
FLuxusMobile.UICorner_30.Parent = FLuxusMobile.clear_4

FLuxusMobile.copy_4.Name = "copy"
FLuxusMobile.copy_4.Parent = FLuxusMobile.buttons4
FLuxusMobile.copy_4.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.copy_4.BorderColor3 = Color3.fromRGB(14, 14, 15)
FLuxusMobile.copy_4.Position = UDim2.new(0.102976158, 0, -0.00478705019, 0)
FLuxusMobile.copy_4.Size = UDim2.new(0, 55, 0, 29)
FLuxusMobile.copy_4.Font = Enum.Font.SourceSans
FLuxusMobile.copy_4.Text = "Copy"
FLuxusMobile.copy_4.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.copy_4.TextSize = 18.000
FLuxusMobile.copy_4.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.copy_4.TextStrokeTransparency = 0.800

FLuxusMobile.UICorner_31.CornerRadius = UDim.new(0, 5)
FLuxusMobile.UICorner_31.Parent = FLuxusMobile.copy_4

FLuxusMobile.paste_4.Name = "paste"
FLuxusMobile.paste_4.Parent = FLuxusMobile.buttons4
FLuxusMobile.paste_4.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.paste_4.BorderColor3 = Color3.fromRGB(14, 14, 15)
FLuxusMobile.paste_4.Position = UDim2.new(0.208542377, 0, 0.0296957083, 0)
FLuxusMobile.paste_4.Size = UDim2.new(0, 55, 0, 29)
FLuxusMobile.paste_4.Font = Enum.Font.SourceSans
FLuxusMobile.paste_4.Text = "Paste"
FLuxusMobile.paste_4.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.paste_4.TextSize = 18.000
FLuxusMobile.paste_4.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.paste_4.TextStrokeTransparency = 0.800

FLuxusMobile.UICorner_32.CornerRadius = UDim.new(0, 5)
FLuxusMobile.UICorner_32.Parent = FLuxusMobile.paste_4

FLuxusMobile.console.Name = "console"
FLuxusMobile.console.Parent = FLuxusMobile.executor_2
FLuxusMobile.console.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.console.BorderColor3 = Color3.fromRGB(35, 35, 35)
FLuxusMobile.console.Position = UDim2.new(-0.0603049695, 0, 1.01493502, 0)
FLuxusMobile.console.Size = UDim2.new(0, 522, 0, 52)

FLuxusMobile.lines.Name = "lines"
FLuxusMobile.lines.Parent = FLuxusMobile.executor_2
FLuxusMobile.lines.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.lines.BorderColor3 = Color3.fromRGB(35, 35, 35)
FLuxusMobile.lines.Position = UDim2.new(-0.0603049621, 0, -0.00216448447, 0)
FLuxusMobile.lines.Size = UDim2.new(0, 28, 0, 296)

FLuxusMobile.TextLabel_7.Parent = FLuxusMobile.lines
FLuxusMobile.TextLabel_7.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_7.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_7.Size = UDim2.new(0, 28, 0, 20)
FLuxusMobile.TextLabel_7.Font = Enum.Font.SourceSans
FLuxusMobile.TextLabel_7.Text = "1"
FLuxusMobile.TextLabel_7.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_7.TextSize = 14.000

FLuxusMobile.Scripts.Name = "Scripts"
FLuxusMobile.Scripts.Parent = FLuxusMobile.executor_2
FLuxusMobile.Scripts.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.Scripts.BorderColor3 = Color3.fromRGB(35, 35, 35)
FLuxusMobile.Scripts.Position = UDim2.new(-0.288567901, 0, -0.0926406831, 0)
FLuxusMobile.Scripts.Size = UDim2.new(0, 112, 0, 317)

FLuxusMobile.TextLabel_8.Parent = FLuxusMobile.Scripts
FLuxusMobile.TextLabel_8.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.TextLabel_8.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_8.BorderColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.TextLabel_8.Position = UDim2.new(0.0497347638, 0, 0, 0)
FLuxusMobile.TextLabel_8.Size = UDim2.new(0, 60, 0, 30)
FLuxusMobile.TextLabel_8.Font = Enum.Font.SourceSans
FLuxusMobile.TextLabel_8.Text = "Scripts"
FLuxusMobile.TextLabel_8.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_8.TextSize = 18.000

FLuxusMobile.TextLabel_9.Parent = FLuxusMobile.Scripts
FLuxusMobile.TextLabel_9.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.TextLabel_9.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_9.BorderColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.TextLabel_9.Position = UDim2.new(0.0497347638, 0, 0.0694006309, 0)
FLuxusMobile.TextLabel_9.Size = UDim2.new(0, 60, 0, 30)
FLuxusMobile.TextLabel_9.Font = Enum.Font.SourceSans
FLuxusMobile.TextLabel_9.Text = "//Script1"
FLuxusMobile.TextLabel_9.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_9.TextSize = 18.000

FLuxusMobile.TextLabel_10.Parent = FLuxusMobile.Scripts
FLuxusMobile.TextLabel_10.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.TextLabel_10.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_10.BorderColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.TextLabel_10.Position = UDim2.new(0.0497347638, 0, 0.157728702, 0)
FLuxusMobile.TextLabel_10.Size = UDim2.new(0, 60, 0, 30)
FLuxusMobile.TextLabel_10.Font = Enum.Font.SourceSans
FLuxusMobile.TextLabel_10.Text = "//Script2"
FLuxusMobile.TextLabel_10.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_10.TextSize = 18.000

FLuxusMobile.TextLabel_11.Parent = FLuxusMobile.Scripts
FLuxusMobile.TextLabel_11.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.TextLabel_11.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_11.BorderColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.TextLabel_11.Position = UDim2.new(0.0497347638, 0, 0.252365947, 0)
FLuxusMobile.TextLabel_11.Size = UDim2.new(0, 60, 0, 30)
FLuxusMobile.TextLabel_11.Font = Enum.Font.SourceSans
FLuxusMobile.TextLabel_11.Text = "//Script3"
FLuxusMobile.TextLabel_11.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_11.TextSize = 18.000

FLuxusMobile.TextLabel_12.Parent = FLuxusMobile.Scripts
FLuxusMobile.TextLabel_12.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.TextLabel_12.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_12.BorderColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.TextLabel_12.Position = UDim2.new(0.0497347638, 0, 0.347003162, 0)
FLuxusMobile.TextLabel_12.Size = UDim2.new(0, 60, 0, 30)
FLuxusMobile.TextLabel_12.Font = Enum.Font.SourceSans
FLuxusMobile.TextLabel_12.Text = "//Script4"
FLuxusMobile.TextLabel_12.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_12.TextSize = 18.000

FLuxusMobile.scriptsbuttons.Name = "scriptsbuttons"
FLuxusMobile.scriptsbuttons.Parent = FLuxusMobile.executor_2
FLuxusMobile.scriptsbuttons.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.scriptsbuttons.BorderColor3 = Color3.fromRGB(35, 35, 35)
FLuxusMobile.scriptsbuttons.Position = UDim2.new(-0.0588577986, 0, -0.0968073756, 0)
FLuxusMobile.scriptsbuttons.Size = UDim2.new(0, 521, 0, 21)

FLuxusMobile.TextButton_5.Parent = FLuxusMobile.scriptsbuttons
FLuxusMobile.TextButton_5.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.TextButton_5.BorderColor3 = Color3.fromRGB(35, 35, 35)
FLuxusMobile.TextButton_5.Size = UDim2.new(0, 67, 0, 21)
FLuxusMobile.TextButton_5.Font = Enum.Font.SourceSans
FLuxusMobile.TextButton_5.Text = "Script1"
FLuxusMobile.TextButton_5.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextButton_5.TextSize = 14.000

FLuxusMobile.TextButton_6.Parent = FLuxusMobile.scriptsbuttons
FLuxusMobile.TextButton_6.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.TextButton_6.BorderColor3 = Color3.fromRGB(35, 35, 35)
FLuxusMobile.TextButton_6.Position = UDim2.new(0.128000006, 0, 0.0480000004, 0)
FLuxusMobile.TextButton_6.Size = UDim2.new(0, 67, 0, 21)
FLuxusMobile.TextButton_6.Font = Enum.Font.SourceSans
FLuxusMobile.TextButton_6.Text = "Script2"
FLuxusMobile.TextButton_6.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextButton_6.TextSize = 14.000

FLuxusMobile.TextButton_7.Parent = FLuxusMobile.scriptsbuttons
FLuxusMobile.TextButton_7.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.TextButton_7.BorderColor3 = Color3.fromRGB(35, 35, 35)
FLuxusMobile.TextButton_7.Position = UDim2.new(0.256999999, 0, 0.0480000004, 0)
FLuxusMobile.TextButton_7.Size = UDim2.new(0, 67, 0, 21)
FLuxusMobile.TextButton_7.Font = Enum.Font.SourceSans
FLuxusMobile.TextButton_7.Text = "Script3"
FLuxusMobile.TextButton_7.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextButton_7.TextSize = 14.000

FLuxusMobile.TextButton_8.Parent = FLuxusMobile.scriptsbuttons
FLuxusMobile.TextButton_8.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.TextButton_8.BorderColor3 = Color3.fromRGB(35, 35, 35)
FLuxusMobile.TextButton_8.Position = UDim2.new(0.38499999, 0, 0.0480000004, 0)
FLuxusMobile.TextButton_8.Size = UDim2.new(0, 67, 0, 21)
FLuxusMobile.TextButton_8.Font = Enum.Font.SourceSans
FLuxusMobile.TextButton_8.Text = "Script4"
FLuxusMobile.TextButton_8.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextButton_8.TextSize = 14.000

FLuxusMobile.Scriptname.Name = "Scriptname"
FLuxusMobile.Scriptname.Parent = FLuxusMobile.executor_2
FLuxusMobile.Scriptname.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.Scriptname.BorderColor3 = Color3.fromRGB(35, 35, 35)
FLuxusMobile.Scriptname.Position = UDim2.new(-0.288567901, 0, -0.212229416, 0)
FLuxusMobile.Scriptname.Size = UDim2.new(0, 117, 0, 29)

FLuxusMobile.TextLabel_13.Parent = FLuxusMobile.Scriptname
FLuxusMobile.TextLabel_13.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.TextLabel_13.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_13.BorderColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.TextLabel_13.Position = UDim2.new(0.0512820669, 0, 0, 0)
FLuxusMobile.TextLabel_13.Size = UDim2.new(0, 60, 0, 30)
FLuxusMobile.TextLabel_13.Font = Enum.Font.SourceSans
FLuxusMobile.TextLabel_13.Text = "Scripts"
FLuxusMobile.TextLabel_13.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_13.TextSize = 20.000

FLuxusMobile.TextLabel_14.Parent = FLuxusMobile.Scriptname
FLuxusMobile.TextLabel_14.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.TextLabel_14.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_14.BorderColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.TextLabel_14.Position = UDim2.new(0.743589759, 0, 0, 0)
FLuxusMobile.TextLabel_14.Size = UDim2.new(0, 27, 0, 30)
FLuxusMobile.TextLabel_14.Font = Enum.Font.SourceSans
FLuxusMobile.TextLabel_14.Text = "+"
FLuxusMobile.TextLabel_14.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_14.TextSize = 20.000

FLuxusMobile.Devlopers.Name = "Devlopers"
FLuxusMobile.Devlopers.Parent = FLuxusMobile.MainPage
FLuxusMobile.Devlopers.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.Devlopers.BorderColor3 = Color3.fromRGB(35, 35, 35)
FLuxusMobile.Devlopers.Position = UDim2.new(0.0868306831, 0, 0.111688308, 0)
FLuxusMobile.Devlopers.Size = UDim2.new(0, 631, 0, 341)
FLuxusMobile.Devlopers.Visible = false

FLuxusMobile.devloperframe.Name = "devloperframe"
FLuxusMobile.devloperframe.Parent = FLuxusMobile.Devlopers
FLuxusMobile.devloperframe.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.devloperframe.BorderColor3 = Color3.fromRGB(35, 35, 35)
FLuxusMobile.devloperframe.Position = UDim2.new(0.0332278498, 0, 0.0645161271, 0)
FLuxusMobile.devloperframe.Size = UDim2.new(0, 188, 0, 100)

FLuxusMobile.TextLabel_15.Parent = FLuxusMobile.devloperframe
FLuxusMobile.TextLabel_15.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_15.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_15.Position = UDim2.new(0.21808511, 0, 0.280000001, 0)
FLuxusMobile.TextLabel_15.Size = UDim2.new(0, 200, 0, 21)
FLuxusMobile.TextLabel_15.Font = Enum.Font.SourceSansBold
FLuxusMobile.TextLabel_15.Text = "Owner of Fluxus"
FLuxusMobile.TextLabel_15.TextColor3 = Color3.fromRGB(97, 116, 223)
FLuxusMobile.TextLabel_15.TextSize = 14.000

FLuxusMobile.ImageLabel_4.Parent = FLuxusMobile.TextLabel_15
FLuxusMobile.ImageLabel_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.ImageLabel_4.BackgroundTransparency = 1.000
FLuxusMobile.ImageLabel_4.Position = UDim2.new(0.189999998, 0, 0, 0)
FLuxusMobile.ImageLabel_4.Size = UDim2.new(0, 18, 0, 20)
FLuxusMobile.ImageLabel_4.Image = "rbxassetid://13818536229"
FLuxusMobile.ImageLabel_4.ImageColor3 = Color3.fromRGB(97, 116, 223)

FLuxusMobile.TextLabel_16.Parent = FLuxusMobile.devloperframe
FLuxusMobile.TextLabel_16.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_16.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_16.Position = UDim2.new(0.18617022, 0, 0.50999999, 0)
FLuxusMobile.TextLabel_16.Size = UDim2.new(0, 200, 0, 21)
FLuxusMobile.TextLabel_16.Font = Enum.Font.SourceSansBold
FLuxusMobile.TextLabel_16.Text = "DLL Devloper"
FLuxusMobile.TextLabel_16.TextColor3 = Color3.fromRGB(97, 116, 223)
FLuxusMobile.TextLabel_16.TextSize = 14.000

FLuxusMobile.ImageLabel_5.Parent = FLuxusMobile.TextLabel_16
FLuxusMobile.ImageLabel_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.ImageLabel_5.BackgroundTransparency = 1.000
FLuxusMobile.ImageLabel_5.Position = UDim2.new(0.219999999, 0, 0.0476190485, 0)
FLuxusMobile.ImageLabel_5.Size = UDim2.new(0, 18, 0, 20)
FLuxusMobile.ImageLabel_5.Image = "rbxassetid://13820121353"
FLuxusMobile.ImageLabel_5.ImageColor3 = Color3.fromRGB(97, 116, 223)

FLuxusMobile.ImageLabel_6.Parent = FLuxusMobile.devloperframe
FLuxusMobile.ImageLabel_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.ImageLabel_6.BackgroundTransparency = 1.000
FLuxusMobile.ImageLabel_6.Position = UDim2.new(0.0357446857, 0, 0.200000003, 0)
FLuxusMobile.ImageLabel_6.Size = UDim2.new(0, 62, 0, 57)
FLuxusMobile.ImageLabel_6.Image = "rbxassetid://13829625624"

FLuxusMobile.devloperframe_2.Name = "devloperframe"
FLuxusMobile.devloperframe_2.Parent = FLuxusMobile.Devlopers
FLuxusMobile.devloperframe_2.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.devloperframe_2.BorderColor3 = Color3.fromRGB(35, 35, 35)
FLuxusMobile.devloperframe_2.Position = UDim2.new(0.66455698, 0, 0.0645161271, 0)
FLuxusMobile.devloperframe_2.Size = UDim2.new(0, 188, 0, 100)

FLuxusMobile.ImageLabel_7.Parent = FLuxusMobile.devloperframe_2
FLuxusMobile.ImageLabel_7.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.ImageLabel_7.BackgroundTransparency = 1.000
FLuxusMobile.ImageLabel_7.Position = UDim2.new(0.0357445255, 0, 0.200000003, 0)
FLuxusMobile.ImageLabel_7.Size = UDim2.new(0, 62, 0, 53)
FLuxusMobile.ImageLabel_7.Image = "rbxassetid://13829629185"

FLuxusMobile.TextLabel_17.Parent = FLuxusMobile.devloperframe_2
FLuxusMobile.TextLabel_17.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_17.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_17.Position = UDim2.new(0.21808511, 0, 0.280000001, 0)
FLuxusMobile.TextLabel_17.Size = UDim2.new(0, 200, 0, 21)
FLuxusMobile.TextLabel_17.Font = Enum.Font.SourceSansBold
FLuxusMobile.TextLabel_17.Text = "Owner of Fluxus"
FLuxusMobile.TextLabel_17.TextColor3 = Color3.fromRGB(97, 116, 223)
FLuxusMobile.TextLabel_17.TextSize = 14.000

FLuxusMobile.ImageLabel_8.Parent = FLuxusMobile.TextLabel_17
FLuxusMobile.ImageLabel_8.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.ImageLabel_8.BackgroundTransparency = 1.000
FLuxusMobile.ImageLabel_8.Position = UDim2.new(0.189999998, 0, 0, 0)
FLuxusMobile.ImageLabel_8.Size = UDim2.new(0, 18, 0, 20)
FLuxusMobile.ImageLabel_8.Image = "rbxassetid://13818536229"
FLuxusMobile.ImageLabel_8.ImageColor3 = Color3.fromRGB(97, 116, 223)

FLuxusMobile.TextLabel_18.Parent = FLuxusMobile.devloperframe_2
FLuxusMobile.TextLabel_18.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_18.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_18.Position = UDim2.new(0.18617022, 0, 0.50999999, 0)
FLuxusMobile.TextLabel_18.Size = UDim2.new(0, 200, 0, 21)
FLuxusMobile.TextLabel_18.Font = Enum.Font.SourceSansBold
FLuxusMobile.TextLabel_18.Text = "UI Devloper"
FLuxusMobile.TextLabel_18.TextColor3 = Color3.fromRGB(97, 116, 223)
FLuxusMobile.TextLabel_18.TextSize = 14.000

FLuxusMobile.ImageLabel_9.Parent = FLuxusMobile.TextLabel_18
FLuxusMobile.ImageLabel_9.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.ImageLabel_9.BackgroundTransparency = 1.000
FLuxusMobile.ImageLabel_9.Position = UDim2.new(0.219999999, 0, 0.0476190485, 0)
FLuxusMobile.ImageLabel_9.Size = UDim2.new(0, 18, 0, 20)
FLuxusMobile.ImageLabel_9.Image = "rbxassetid://13820121353"
FLuxusMobile.ImageLabel_9.ImageColor3 = Color3.fromRGB(97, 116, 223)

FLuxusMobile.devloperframe_3.Name = "devloperframe"
FLuxusMobile.devloperframe_3.Parent = FLuxusMobile.Devlopers
FLuxusMobile.devloperframe_3.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.devloperframe_3.BorderColor3 = Color3.fromRGB(35, 35, 35)
FLuxusMobile.devloperframe_3.Position = UDim2.new(0.601165533, 0, 0.419354826, 0)
FLuxusMobile.devloperframe_3.Size = UDim2.new(0, 188, 0, 100)

FLuxusMobile.ImageLabel_10.Parent = FLuxusMobile.devloperframe_3
FLuxusMobile.ImageLabel_10.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.ImageLabel_10.BackgroundTransparency = 1.000
FLuxusMobile.ImageLabel_10.Position = UDim2.new(0.0410636738, 0, 0.219999999, 0)
FLuxusMobile.ImageLabel_10.Size = UDim2.new(0, 62, 0, 56)
FLuxusMobile.ImageLabel_10.Image = "rbxassetid://13829651331"

FLuxusMobile.TextLabel_19.Parent = FLuxusMobile.devloperframe_3
FLuxusMobile.TextLabel_19.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_19.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_19.Position = UDim2.new(0.21808511, 0, 0.280000001, 0)
FLuxusMobile.TextLabel_19.Size = UDim2.new(0, 200, 0, 21)
FLuxusMobile.TextLabel_19.Font = Enum.Font.SourceSansBold
FLuxusMobile.TextLabel_19.Text = "Owner of Fluxus"
FLuxusMobile.TextLabel_19.TextColor3 = Color3.fromRGB(97, 116, 223)
FLuxusMobile.TextLabel_19.TextSize = 14.000

FLuxusMobile.ImageLabel_11.Parent = FLuxusMobile.TextLabel_19
FLuxusMobile.ImageLabel_11.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.ImageLabel_11.BackgroundTransparency = 1.000
FLuxusMobile.ImageLabel_11.Position = UDim2.new(0.189999998, 0, 0, 0)
FLuxusMobile.ImageLabel_11.Size = UDim2.new(0, 18, 0, 20)
FLuxusMobile.ImageLabel_11.Image = "rbxassetid://13818536229"
FLuxusMobile.ImageLabel_11.ImageColor3 = Color3.fromRGB(97, 116, 223)

FLuxusMobile.TextLabel_20.Parent = FLuxusMobile.devloperframe_3
FLuxusMobile.TextLabel_20.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_20.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_20.Position = UDim2.new(0.18617022, 0, 0.50999999, 0)
FLuxusMobile.TextLabel_20.Size = UDim2.new(0, 200, 0, 21)
FLuxusMobile.TextLabel_20.Font = Enum.Font.SourceSansBold
FLuxusMobile.TextLabel_20.Text = "DLL Devloper"
FLuxusMobile.TextLabel_20.TextColor3 = Color3.fromRGB(97, 116, 223)
FLuxusMobile.TextLabel_20.TextSize = 14.000

FLuxusMobile.ImageLabel_12.Parent = FLuxusMobile.TextLabel_20
FLuxusMobile.ImageLabel_12.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.ImageLabel_12.BackgroundTransparency = 1.000
FLuxusMobile.ImageLabel_12.Position = UDim2.new(0.219999999, 0, 0.0476190485, 0)
FLuxusMobile.ImageLabel_12.Size = UDim2.new(0, 18, 0, 20)
FLuxusMobile.ImageLabel_12.Image = "rbxassetid://13820121353"
FLuxusMobile.ImageLabel_12.ImageColor3 = Color3.fromRGB(97, 116, 223)

FLuxusMobile.devloperframe_4.Name = "devloperframe"
FLuxusMobile.devloperframe_4.Parent = FLuxusMobile.Devlopers
FLuxusMobile.devloperframe_4.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.devloperframe_4.BorderColor3 = Color3.fromRGB(35, 35, 35)
FLuxusMobile.devloperframe_4.Position = UDim2.new(0.0987883806, 0, 0.419354826, 0)
FLuxusMobile.devloperframe_4.Size = UDim2.new(0, 188, 0, 100)

FLuxusMobile.ImageLabel_13.Parent = FLuxusMobile.devloperframe_4
FLuxusMobile.ImageLabel_13.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.ImageLabel_13.BackgroundTransparency = 1.000
FLuxusMobile.ImageLabel_13.Position = UDim2.new(0.0357446857, 0, 0.200000003, 0)
FLuxusMobile.ImageLabel_13.Size = UDim2.new(0, 62, 0, 64)
FLuxusMobile.ImageLabel_13.Image = "rbxassetid://13818536229"

FLuxusMobile.TextLabel_21.Parent = FLuxusMobile.devloperframe_4
FLuxusMobile.TextLabel_21.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_21.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_21.Position = UDim2.new(0.21808511, 0, 0.280000001, 0)
FLuxusMobile.TextLabel_21.Size = UDim2.new(0, 200, 0, 21)
FLuxusMobile.TextLabel_21.Font = Enum.Font.SourceSansBold
FLuxusMobile.TextLabel_21.Text = "Owner of Fluxus"
FLuxusMobile.TextLabel_21.TextColor3 = Color3.fromRGB(97, 116, 223)
FLuxusMobile.TextLabel_21.TextSize = 14.000

FLuxusMobile.ImageLabel_14.Parent = FLuxusMobile.TextLabel_21
FLuxusMobile.ImageLabel_14.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.ImageLabel_14.BackgroundTransparency = 1.000
FLuxusMobile.ImageLabel_14.Position = UDim2.new(0.189999998, 0, 0, 0)
FLuxusMobile.ImageLabel_14.Size = UDim2.new(0, 18, 0, 20)
FLuxusMobile.ImageLabel_14.Image = "rbxassetid://13818536229"

FLuxusMobile.TextLabel_22.Parent = FLuxusMobile.devloperframe_4
FLuxusMobile.TextLabel_22.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_22.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_22.Position = UDim2.new(0.18617022, 0, 0.50999999, 0)
FLuxusMobile.TextLabel_22.Size = UDim2.new(0, 200, 0, 21)
FLuxusMobile.TextLabel_22.Font = Enum.Font.SourceSansBold
FLuxusMobile.TextLabel_22.Text = "DLL Devloper"
FLuxusMobile.TextLabel_22.TextColor3 = Color3.fromRGB(97, 116, 223)
FLuxusMobile.TextLabel_22.TextSize = 14.000

FLuxusMobile.ImageLabel_15.Parent = FLuxusMobile.TextLabel_22
FLuxusMobile.ImageLabel_15.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.ImageLabel_15.BackgroundTransparency = 1.000
FLuxusMobile.ImageLabel_15.Position = UDim2.new(0.219999999, 0, 0.0476190485, 0)
FLuxusMobile.ImageLabel_15.Size = UDim2.new(0, 18, 0, 20)
FLuxusMobile.ImageLabel_15.Image = "rbxassetid://13820121353"

FLuxusMobile.devloperframe_5.Name = "devloperframe"
FLuxusMobile.devloperframe_5.Parent = FLuxusMobile.Devlopers
FLuxusMobile.devloperframe_5.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.devloperframe_5.BorderColor3 = Color3.fromRGB(35, 35, 35)
FLuxusMobile.devloperframe_5.Position = UDim2.new(0.425254285, 0, 0.78299123, 0)
FLuxusMobile.devloperframe_5.Size = UDim2.new(0, 72, 0, 68)

FLuxusMobile.ImageLabel_16.Parent = FLuxusMobile.devloperframe_5
FLuxusMobile.ImageLabel_16.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.ImageLabel_16.BackgroundTransparency = 1.000
FLuxusMobile.ImageLabel_16.Position = UDim2.new(0.055555556, 0, 0.102941178, 0)
FLuxusMobile.ImageLabel_16.Size = UDim2.new(0, 63, 0, 61)
FLuxusMobile.ImageLabel_16.Image = "rbxassetid://13818219807"

FLuxusMobile.devloperframe_6.Name = "devloperframe"
FLuxusMobile.devloperframe_6.Parent = FLuxusMobile.Devlopers
FLuxusMobile.devloperframe_6.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.devloperframe_6.BorderColor3 = Color3.fromRGB(35, 35, 35)
FLuxusMobile.devloperframe_6.Position = UDim2.new(0.358693272, 0, 0.134897351, 0)
FLuxusMobile.devloperframe_6.Size = UDim2.new(0, 177, 0, 51)

FLuxusMobile.ImageLabel_17.Parent = FLuxusMobile.devloperframe_6
FLuxusMobile.ImageLabel_17.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.ImageLabel_17.BackgroundTransparency = 1.000
FLuxusMobile.ImageLabel_17.Position = UDim2.new(0.0357445329, 0, 0.180392399, 0)
FLuxusMobile.ImageLabel_17.Size = UDim2.new(0, 40, 0, 35)
FLuxusMobile.ImageLabel_17.Image = "rbxassetid://13806267045"

FLuxusMobile.TextLabel_23.Parent = FLuxusMobile.devloperframe_6
FLuxusMobile.TextLabel_23.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_23.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_23.Position = UDim2.new(0.129673049, 0, 0.333529413, 0)
FLuxusMobile.TextLabel_23.Size = UDim2.new(0, 200, 0, 21)
FLuxusMobile.TextLabel_23.Font = Enum.Font.SourceSansBold
FLuxusMobile.TextLabel_23.Text = "UI TO LUA"
FLuxusMobile.TextLabel_23.TextColor3 = Color3.fromRGB(97, 116, 223)
FLuxusMobile.TextLabel_23.TextSize = 14.000

FLuxusMobile.ImageLabel_18.Parent = FLuxusMobile.TextLabel_23
FLuxusMobile.ImageLabel_18.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.ImageLabel_18.BackgroundTransparency = 1.000
FLuxusMobile.ImageLabel_18.Position = UDim2.new(0.219999999, 0, 0.0476190485, 0)
FLuxusMobile.ImageLabel_18.Size = UDim2.new(0, 18, 0, 20)
FLuxusMobile.ImageLabel_18.Image = "rbxassetid://13820121353"
FLuxusMobile.ImageLabel_18.ImageColor3 = Color3.fromRGB(97, 116, 223)

FLuxusMobile.TextLabel_24.Parent = FLuxusMobile.devloperframe_6
FLuxusMobile.TextLabel_24.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_24.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_24.Position = UDim2.new(-0.101965383, 0, -0.235098034, 0)
FLuxusMobile.TextLabel_24.Size = UDim2.new(0, 200, 0, 21)
FLuxusMobile.TextLabel_24.Font = Enum.Font.SourceSansBold
FLuxusMobile.TextLabel_24.Text = "Anya.DEV"
FLuxusMobile.TextLabel_24.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_24.TextSize = 14.000

FLuxusMobile.TextLabel_25.Parent = FLuxusMobile.devloperframe_6
FLuxusMobile.TextLabel_25.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_25.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_25.Position = UDim2.new(-1.19801068, 0, -0.431176484, 0)
FLuxusMobile.TextLabel_25.Size = UDim2.new(0, 200, 0, 21)
FLuxusMobile.TextLabel_25.Font = Enum.Font.SourceSansBold
FLuxusMobile.TextLabel_25.Text = "ShowerHeadFD"
FLuxusMobile.TextLabel_25.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_25.TextSize = 14.000

FLuxusMobile.TextLabel_26.Parent = FLuxusMobile.devloperframe_6
FLuxusMobile.TextLabel_26.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_26.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_26.Position = UDim2.new(1.0618763, 0, -0.588039219, 0)
FLuxusMobile.TextLabel_26.Size = UDim2.new(0, 200, 0, 21)
FLuxusMobile.TextLabel_26.Font = Enum.Font.SourceSansBold
FLuxusMobile.TextLabel_26.Text = "i_Zesty"
FLuxusMobile.TextLabel_26.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_26.TextSize = 14.000

FLuxusMobile.TextLabel_27.Parent = FLuxusMobile.devloperframe_6
FLuxusMobile.TextLabel_27.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_27.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_27.Position = UDim2.new(0.830237865, 0, 1.86294127, 0)
FLuxusMobile.TextLabel_27.Size = UDim2.new(0, 200, 0, 21)
FLuxusMobile.TextLabel_27.Font = Enum.Font.SourceSansBold
FLuxusMobile.TextLabel_27.Text = "Zera"
FLuxusMobile.TextLabel_27.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_27.TextSize = 14.000

FLuxusMobile.Frame.Parent = FLuxusMobile.Devlopers
FLuxusMobile.Frame.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.Frame.BorderColor3 = Color3.fromRGB(35, 35, 35)
FLuxusMobile.Frame.Position = UDim2.new(0.0987883806, 0, 0.419354826, 0)
FLuxusMobile.Frame.Size = UDim2.new(0, 188, 0, 100)

FLuxusMobile.ImageLabel_19.Parent = FLuxusMobile.Frame
FLuxusMobile.ImageLabel_19.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.ImageLabel_19.BackgroundTransparency = 1.000
FLuxusMobile.ImageLabel_19.Position = UDim2.new(0.0357446857, 0, 0.200000003, 0)
FLuxusMobile.ImageLabel_19.Size = UDim2.new(0, 62, 0, 64)
FLuxusMobile.ImageLabel_19.Image = "rbxassetid://13818536229"

FLuxusMobile.TextLabel_28.Parent = FLuxusMobile.Frame
FLuxusMobile.TextLabel_28.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_28.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_28.Position = UDim2.new(0.21808511, 0, 0.280000001, 0)
FLuxusMobile.TextLabel_28.Size = UDim2.new(0, 200, 0, 21)
FLuxusMobile.TextLabel_28.Font = Enum.Font.SourceSansBold
FLuxusMobile.TextLabel_28.Text = "Owner of Fluxus"
FLuxusMobile.TextLabel_28.TextColor3 = Color3.fromRGB(97, 116, 223)
FLuxusMobile.TextLabel_28.TextSize = 14.000

FLuxusMobile.ImageLabel_20.Parent = FLuxusMobile.TextLabel_28
FLuxusMobile.ImageLabel_20.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.ImageLabel_20.BackgroundTransparency = 1.000
FLuxusMobile.ImageLabel_20.Position = UDim2.new(0.189999998, 0, 0, 0)
FLuxusMobile.ImageLabel_20.Size = UDim2.new(0, 18, 0, 20)
FLuxusMobile.ImageLabel_20.Image = "rbxassetid://13818536229"

FLuxusMobile.TextLabel_29.Parent = FLuxusMobile.Frame
FLuxusMobile.TextLabel_29.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_29.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_29.Position = UDim2.new(0.18617022, 0, 0.50999999, 0)
FLuxusMobile.TextLabel_29.Size = UDim2.new(0, 200, 0, 21)
FLuxusMobile.TextLabel_29.Font = Enum.Font.SourceSansBold
FLuxusMobile.TextLabel_29.Text = "DLL Devloper"
FLuxusMobile.TextLabel_29.TextColor3 = Color3.fromRGB(97, 116, 223)
FLuxusMobile.TextLabel_29.TextSize = 14.000

FLuxusMobile.ImageLabel_21.Parent = FLuxusMobile.TextLabel_29
FLuxusMobile.ImageLabel_21.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.ImageLabel_21.BackgroundTransparency = 1.000
FLuxusMobile.ImageLabel_21.Position = UDim2.new(0.219999999, 0, 0.0476190485, 0)
FLuxusMobile.ImageLabel_21.Size = UDim2.new(0, 18, 0, 20)
FLuxusMobile.ImageLabel_21.Image = "rbxassetid://13820121353"

FLuxusMobile.Frame_2.Parent = FLuxusMobile.Devlopers
FLuxusMobile.Frame_2.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.Frame_2.BorderColor3 = Color3.fromRGB(35, 35, 35)
FLuxusMobile.Frame_2.Position = UDim2.new(0.0987883806, 0, 0.419354826, 0)
FLuxusMobile.Frame_2.Size = UDim2.new(0, 188, 0, 100)

FLuxusMobile.ImageLabel_22.Parent = FLuxusMobile.Frame_2
FLuxusMobile.ImageLabel_22.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.ImageLabel_22.BackgroundTransparency = 1.000
FLuxusMobile.ImageLabel_22.Position = UDim2.new(0.0357446857, 0, 0.200000003, 0)
FLuxusMobile.ImageLabel_22.Size = UDim2.new(0, 62, 0, 64)
FLuxusMobile.ImageLabel_22.Image = "rbxassetid://13818536229"

FLuxusMobile.TextLabel_30.Parent = FLuxusMobile.Frame_2
FLuxusMobile.TextLabel_30.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_30.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_30.Position = UDim2.new(0.21808511, 0, 0.280000001, 0)
FLuxusMobile.TextLabel_30.Size = UDim2.new(0, 200, 0, 21)
FLuxusMobile.TextLabel_30.Font = Enum.Font.SourceSansBold
FLuxusMobile.TextLabel_30.Text = "Owner of Fluxus"
FLuxusMobile.TextLabel_30.TextColor3 = Color3.fromRGB(97, 116, 223)
FLuxusMobile.TextLabel_30.TextSize = 14.000

FLuxusMobile.ImageLabel_23.Parent = FLuxusMobile.TextLabel_30
FLuxusMobile.ImageLabel_23.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.ImageLabel_23.BackgroundTransparency = 1.000
FLuxusMobile.ImageLabel_23.Position = UDim2.new(0.189999998, 0, 0, 0)
FLuxusMobile.ImageLabel_23.Size = UDim2.new(0, 18, 0, 20)
FLuxusMobile.ImageLabel_23.Image = "rbxassetid://13818536229"

FLuxusMobile.TextLabel_31.Parent = FLuxusMobile.Frame_2
FLuxusMobile.TextLabel_31.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_31.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_31.Position = UDim2.new(0.18617022, 0, 0.50999999, 0)
FLuxusMobile.TextLabel_31.Size = UDim2.new(0, 200, 0, 21)
FLuxusMobile.TextLabel_31.Font = Enum.Font.SourceSansBold
FLuxusMobile.TextLabel_31.Text = "DLL Devloper"
FLuxusMobile.TextLabel_31.TextColor3 = Color3.fromRGB(97, 116, 223)
FLuxusMobile.TextLabel_31.TextSize = 14.000

FLuxusMobile.ImageLabel_24.Parent = FLuxusMobile.TextLabel_31
FLuxusMobile.ImageLabel_24.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.ImageLabel_24.BackgroundTransparency = 1.000
FLuxusMobile.ImageLabel_24.Position = UDim2.new(0.219999999, 0, 0.0476190485, 0)
FLuxusMobile.ImageLabel_24.Size = UDim2.new(0, 18, 0, 20)
FLuxusMobile.ImageLabel_24.Image = "rbxassetid://13820121353"

FLuxusMobile.Frame_3.Parent = FLuxusMobile.Devlopers
FLuxusMobile.Frame_3.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.Frame_3.BorderColor3 = Color3.fromRGB(35, 35, 35)
FLuxusMobile.Frame_3.Position = UDim2.new(0.0987883806, 0, 0.419354826, 0)
FLuxusMobile.Frame_3.Size = UDim2.new(0, 188, 0, 100)

FLuxusMobile.ImageLabel_25.Parent = FLuxusMobile.Frame_3
FLuxusMobile.ImageLabel_25.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.ImageLabel_25.BackgroundTransparency = 1.000
FLuxusMobile.ImageLabel_25.Position = UDim2.new(0.0357446857, 0, 0.200000003, 0)
FLuxusMobile.ImageLabel_25.Size = UDim2.new(0, 62, 0, 64)
FLuxusMobile.ImageLabel_25.Image = "rbxassetid://13818536229"

FLuxusMobile.TextLabel_32.Parent = FLuxusMobile.Frame_3
FLuxusMobile.TextLabel_32.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_32.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_32.Position = UDim2.new(0.21808511, 0, 0.280000001, 0)
FLuxusMobile.TextLabel_32.Size = UDim2.new(0, 200, 0, 21)
FLuxusMobile.TextLabel_32.Font = Enum.Font.SourceSansBold
FLuxusMobile.TextLabel_32.Text = "Owner of Fluxus"
FLuxusMobile.TextLabel_32.TextColor3 = Color3.fromRGB(97, 116, 223)
FLuxusMobile.TextLabel_32.TextSize = 14.000

FLuxusMobile.ImageLabel_26.Parent = FLuxusMobile.TextLabel_32
FLuxusMobile.ImageLabel_26.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.ImageLabel_26.BackgroundTransparency = 1.000
FLuxusMobile.ImageLabel_26.Position = UDim2.new(0.189999998, 0, 0, 0)
FLuxusMobile.ImageLabel_26.Size = UDim2.new(0, 18, 0, 20)
FLuxusMobile.ImageLabel_26.Image = "rbxassetid://13818536229"

FLuxusMobile.TextLabel_33.Parent = FLuxusMobile.Frame_3
FLuxusMobile.TextLabel_33.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_33.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_33.Position = UDim2.new(0.18617022, 0, 0.50999999, 0)
FLuxusMobile.TextLabel_33.Size = UDim2.new(0, 200, 0, 21)
FLuxusMobile.TextLabel_33.Font = Enum.Font.SourceSansBold
FLuxusMobile.TextLabel_33.Text = "DLL Devloper"
FLuxusMobile.TextLabel_33.TextColor3 = Color3.fromRGB(97, 116, 223)
FLuxusMobile.TextLabel_33.TextSize = 14.000

FLuxusMobile.ImageLabel_27.Parent = FLuxusMobile.TextLabel_33
FLuxusMobile.ImageLabel_27.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.ImageLabel_27.BackgroundTransparency = 1.000
FLuxusMobile.ImageLabel_27.Position = UDim2.new(0.219999999, 0, 0.0476190485, 0)
FLuxusMobile.ImageLabel_27.Size = UDim2.new(0, 18, 0, 20)
FLuxusMobile.ImageLabel_27.Image = "rbxassetid://13820121353"

FLuxusMobile.Frame_4.Parent = FLuxusMobile.Devlopers
FLuxusMobile.Frame_4.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.Frame_4.BorderColor3 = Color3.fromRGB(35, 35, 35)
FLuxusMobile.Frame_4.Position = UDim2.new(0.0987883806, 0, 0.419354826, 0)
FLuxusMobile.Frame_4.Size = UDim2.new(0, 188, 0, 100)

FLuxusMobile.ImageLabel_28.Parent = FLuxusMobile.Frame_4
FLuxusMobile.ImageLabel_28.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.ImageLabel_28.BackgroundTransparency = 1.000
FLuxusMobile.ImageLabel_28.Position = UDim2.new(0.0357446857, 0, 0.200000003, 0)
FLuxusMobile.ImageLabel_28.Size = UDim2.new(0, 62, 0, 64)
FLuxusMobile.ImageLabel_28.Image = "rbxassetid://13818536229"

FLuxusMobile.TextLabel_34.Parent = FLuxusMobile.Frame_4
FLuxusMobile.TextLabel_34.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_34.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_34.Position = UDim2.new(0.21808511, 0, 0.280000001, 0)
FLuxusMobile.TextLabel_34.Size = UDim2.new(0, 200, 0, 21)
FLuxusMobile.TextLabel_34.Font = Enum.Font.SourceSansBold
FLuxusMobile.TextLabel_34.Text = "Owner of Fluxus"
FLuxusMobile.TextLabel_34.TextColor3 = Color3.fromRGB(97, 116, 223)
FLuxusMobile.TextLabel_34.TextSize = 14.000

FLuxusMobile.ImageLabel_29.Parent = FLuxusMobile.TextLabel_34
FLuxusMobile.ImageLabel_29.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.ImageLabel_29.BackgroundTransparency = 1.000
FLuxusMobile.ImageLabel_29.Position = UDim2.new(0.189999998, 0, 0, 0)
FLuxusMobile.ImageLabel_29.Size = UDim2.new(0, 18, 0, 20)
FLuxusMobile.ImageLabel_29.Image = "rbxassetid://13818536229"
FLuxusMobile.ImageLabel_29.ImageColor3 = Color3.fromRGB(97, 116, 223)

FLuxusMobile.TextLabel_35.Parent = FLuxusMobile.Frame_4
FLuxusMobile.TextLabel_35.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_35.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_35.Position = UDim2.new(0.18617022, 0, 0.50999999, 0)
FLuxusMobile.TextLabel_35.Size = UDim2.new(0, 200, 0, 21)
FLuxusMobile.TextLabel_35.Font = Enum.Font.SourceSansBold
FLuxusMobile.TextLabel_35.Text = "DLL Devloper"
FLuxusMobile.TextLabel_35.TextColor3 = Color3.fromRGB(97, 116, 223)
FLuxusMobile.TextLabel_35.TextSize = 14.000

FLuxusMobile.ImageLabel_30.Parent = FLuxusMobile.TextLabel_35
FLuxusMobile.ImageLabel_30.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.ImageLabel_30.BackgroundTransparency = 1.000
FLuxusMobile.ImageLabel_30.Position = UDim2.new(0.219999999, 0, 0.0476190485, 0)
FLuxusMobile.ImageLabel_30.Size = UDim2.new(0, 18, 0, 20)
FLuxusMobile.ImageLabel_30.Image = "rbxassetid://13820121353"
FLuxusMobile.ImageLabel_30.ImageColor3 = Color3.fromRGB(97, 116, 223)

FLuxusMobile.Settings.Name = "Settings"
FLuxusMobile.Settings.Parent = FLuxusMobile.MainPage
FLuxusMobile.Settings.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.Settings.BorderColor3 = Color3.fromRGB(35, 35, 35)
FLuxusMobile.Settings.Position = UDim2.new(0.0868306831, 0, 0.111688308, 0)
FLuxusMobile.Settings.Size = UDim2.new(0, 631, 0, 341)
FLuxusMobile.Settings.Visible = false

FLuxusMobile.setting1.Name = "setting1"
FLuxusMobile.setting1.Parent = FLuxusMobile.Settings
FLuxusMobile.setting1.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.setting1.BorderColor3 = Color3.fromRGB(35, 35, 35)
FLuxusMobile.setting1.Position = UDim2.new(0.568885505, 0, 0.167155415, 0)
FLuxusMobile.setting1.Size = UDim2.new(0, 188, 0, 80)

FLuxusMobile.TextLabel_36.Parent = FLuxusMobile.setting1
FLuxusMobile.TextLabel_36.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_36.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_36.Position = UDim2.new(-0.308510631, 0, 0.0599999949, 0)
FLuxusMobile.TextLabel_36.Size = UDim2.new(0, 200, 0, 21)
FLuxusMobile.TextLabel_36.Font = Enum.Font.SourceSansBold
FLuxusMobile.TextLabel_36.Text = "Fps Unlocker:"
FLuxusMobile.TextLabel_36.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_36.TextSize = 14.000

FLuxusMobile.setting1_2.Name = "setting1"
FLuxusMobile.setting1_2.Parent = FLuxusMobile.TextLabel_36
FLuxusMobile.setting1_2.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.setting1_2.BorderColor3 = Color3.fromRGB(35, 35, 35)
FLuxusMobile.setting1_2.Position = UDim2.new(0.984337151, 0, 2.1138103, 0)
FLuxusMobile.setting1_2.Size = UDim2.new(0, 42, 0, 25)

FLuxusMobile.setting1_3.Name = "setting1"
FLuxusMobile.setting1_3.Parent = FLuxusMobile.setting1_2
FLuxusMobile.setting1_3.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.setting1_3.BorderColor3 = Color3.fromRGB(35, 35, 35)
FLuxusMobile.setting1_3.Position = UDim2.new(-0.086265929, 0, -0.00599975605, 0)
FLuxusMobile.setting1_3.Size = UDim2.new(0, 44, 0, 25)

FLuxusMobile.UICorner_33.Parent = FLuxusMobile.setting1_3

FLuxusMobile.TextButton_9.Parent = FLuxusMobile.setting1_3
FLuxusMobile.TextButton_9.BackgroundColor3 = Color3.fromRGB(88, 69, 174)
FLuxusMobile.TextButton_9.Position = UDim2.new(0.160147995, 0, 0.0399998799, 0)
FLuxusMobile.TextButton_9.Size = UDim2.new(0, 36, 0, 23)
FLuxusMobile.TextButton_9.Font = Enum.Font.SourceSans
FLuxusMobile.TextButton_9.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextButton_9.TextSize = 14.000

FLuxusMobile.UICorner_34.Parent = FLuxusMobile.TextButton_9

FLuxusMobile.TextLabel_37.Parent = FLuxusMobile.setting1
FLuxusMobile.TextLabel_37.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_37.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_37.Position = UDim2.new(-0.186170205, 0, 0.32249999, 0)
FLuxusMobile.TextLabel_37.Size = UDim2.new(0, 200, 0, 21)
FLuxusMobile.TextLabel_37.Font = Enum.Font.SourceSansBold
FLuxusMobile.TextLabel_37.Text = "Up your fps to unlimited"
FLuxusMobile.TextLabel_37.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_37.TextSize = 14.000

FLuxusMobile.setting1_4.Name = "setting1"
FLuxusMobile.setting1_4.Parent = FLuxusMobile.Settings
FLuxusMobile.setting1_4.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.setting1_4.BorderColor3 = Color3.fromRGB(35, 35, 35)
FLuxusMobile.setting1_4.Position = UDim2.new(0.0474908948, 0, 0.167155415, 0)
FLuxusMobile.setting1_4.Size = UDim2.new(0, 188, 0, 80)

FLuxusMobile.TextLabel_38.Parent = FLuxusMobile.setting1_4
FLuxusMobile.TextLabel_38.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_38.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_38.Position = UDim2.new(-0.308510631, 0, 0.0599999949, 0)
FLuxusMobile.TextLabel_38.Size = UDim2.new(0, 200, 0, 21)
FLuxusMobile.TextLabel_38.Font = Enum.Font.SourceSansBold
FLuxusMobile.TextLabel_38.Text = "Fps Unlocker:"
FLuxusMobile.TextLabel_38.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_38.TextSize = 14.000

FLuxusMobile.setting1_5.Name = "setting1"
FLuxusMobile.setting1_5.Parent = FLuxusMobile.TextLabel_38
FLuxusMobile.setting1_5.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.setting1_5.BorderColor3 = Color3.fromRGB(35, 35, 35)
FLuxusMobile.setting1_5.Position = UDim2.new(0.984337151, 0, 2.1138103, 0)
FLuxusMobile.setting1_5.Size = UDim2.new(0, 42, 0, 25)

FLuxusMobile.setting1_6.Name = "setting1"
FLuxusMobile.setting1_6.Parent = FLuxusMobile.setting1_5
FLuxusMobile.setting1_6.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.setting1_6.BorderColor3 = Color3.fromRGB(35, 35, 35)
FLuxusMobile.setting1_6.Position = UDim2.new(-0.086265929, 0, -0.00599975605, 0)
FLuxusMobile.setting1_6.Size = UDim2.new(0, 44, 0, 25)

FLuxusMobile.UICorner_35.Parent = FLuxusMobile.setting1_6

FLuxusMobile.TextButton_10.Parent = FLuxusMobile.setting1_6
FLuxusMobile.TextButton_10.BackgroundColor3 = Color3.fromRGB(88, 69, 174)
FLuxusMobile.TextButton_10.Position = UDim2.new(0.160147995, 0, 0.0399998799, 0)
FLuxusMobile.TextButton_10.Size = UDim2.new(0, 36, 0, 23)
FLuxusMobile.TextButton_10.Font = Enum.Font.SourceSans
FLuxusMobile.TextButton_10.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextButton_10.TextSize = 14.000

FLuxusMobile.UICorner_36.Parent = FLuxusMobile.TextButton_10

FLuxusMobile.TextLabel_39.Parent = FLuxusMobile.setting1_4
FLuxusMobile.TextLabel_39.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_39.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_39.Position = UDim2.new(-0.186170205, 0, 0.32249999, 0)
FLuxusMobile.TextLabel_39.Size = UDim2.new(0, 200, 0, 21)
FLuxusMobile.TextLabel_39.Font = Enum.Font.SourceSansBold
FLuxusMobile.TextLabel_39.Text = "Up your fps to unlimited"
FLuxusMobile.TextLabel_39.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_39.TextSize = 14.000

FLuxusMobile.setting1_7.Name = "setting1"
FLuxusMobile.setting1_7.Parent = FLuxusMobile.Settings
FLuxusMobile.setting1_7.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.setting1_7.BorderColor3 = Color3.fromRGB(35, 35, 35)
FLuxusMobile.setting1_7.Position = UDim2.new(0.0474908948, 0, 0.612903237, 0)
FLuxusMobile.setting1_7.Size = UDim2.new(0, 188, 0, 80)

FLuxusMobile.TextLabel_40.Parent = FLuxusMobile.setting1_7
FLuxusMobile.TextLabel_40.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_40.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_40.Position = UDim2.new(-0.308510631, 0, 0.0599999949, 0)
FLuxusMobile.TextLabel_40.Size = UDim2.new(0, 200, 0, 21)
FLuxusMobile.TextLabel_40.Font = Enum.Font.SourceSansBold
FLuxusMobile.TextLabel_40.Text = "Fps Unlocker:"
FLuxusMobile.TextLabel_40.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_40.TextSize = 14.000

FLuxusMobile.setting1_8.Name = "setting1"
FLuxusMobile.setting1_8.Parent = FLuxusMobile.TextLabel_40
FLuxusMobile.setting1_8.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.setting1_8.BorderColor3 = Color3.fromRGB(35, 35, 35)
FLuxusMobile.setting1_8.Position = UDim2.new(0.984337151, 0, 2.1138103, 0)
FLuxusMobile.setting1_8.Size = UDim2.new(0, 42, 0, 25)

FLuxusMobile.setting1_9.Name = "setting1"
FLuxusMobile.setting1_9.Parent = FLuxusMobile.setting1_8
FLuxusMobile.setting1_9.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.setting1_9.BorderColor3 = Color3.fromRGB(35, 35, 35)
FLuxusMobile.setting1_9.Position = UDim2.new(-0.086265929, 0, -0.00599975605, 0)
FLuxusMobile.setting1_9.Size = UDim2.new(0, 44, 0, 25)

FLuxusMobile.UICorner_37.Parent = FLuxusMobile.setting1_9

FLuxusMobile.TextButton_11.Parent = FLuxusMobile.setting1_9
FLuxusMobile.TextButton_11.BackgroundColor3 = Color3.fromRGB(88, 69, 174)
FLuxusMobile.TextButton_11.Position = UDim2.new(0.160147995, 0, 0.0399998799, 0)
FLuxusMobile.TextButton_11.Size = UDim2.new(0, 36, 0, 23)
FLuxusMobile.TextButton_11.Font = Enum.Font.SourceSans
FLuxusMobile.TextButton_11.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextButton_11.TextSize = 14.000

FLuxusMobile.UICorner_38.Parent = FLuxusMobile.TextButton_11

FLuxusMobile.TextLabel_41.Parent = FLuxusMobile.setting1_7
FLuxusMobile.TextLabel_41.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_41.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_41.Position = UDim2.new(-0.186170205, 0, 0.32249999, 0)
FLuxusMobile.TextLabel_41.Size = UDim2.new(0, 200, 0, 21)
FLuxusMobile.TextLabel_41.Font = Enum.Font.SourceSansBold
FLuxusMobile.TextLabel_41.Text = "Up your fps to unlimited"
FLuxusMobile.TextLabel_41.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_41.TextSize = 14.000

FLuxusMobile.setting1_10.Name = "setting1"
FLuxusMobile.setting1_10.Parent = FLuxusMobile.Settings
FLuxusMobile.setting1_10.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.setting1_10.BorderColor3 = Color3.fromRGB(35, 35, 35)
FLuxusMobile.setting1_10.Position = UDim2.new(0.568885505, 0, 0.612903237, 0)
FLuxusMobile.setting1_10.Size = UDim2.new(0, 188, 0, 80)

FLuxusMobile.TextLabel_42.Parent = FLuxusMobile.setting1_10
FLuxusMobile.TextLabel_42.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_42.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_42.Position = UDim2.new(-0.308510631, 0, 0.0599999949, 0)
FLuxusMobile.TextLabel_42.Size = UDim2.new(0, 200, 0, 21)
FLuxusMobile.TextLabel_42.Font = Enum.Font.SourceSansBold
FLuxusMobile.TextLabel_42.Text = "Fps Unlocker:"
FLuxusMobile.TextLabel_42.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_42.TextSize = 14.000

FLuxusMobile.setting1_11.Name = "setting1"
FLuxusMobile.setting1_11.Parent = FLuxusMobile.TextLabel_42
FLuxusMobile.setting1_11.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.setting1_11.BorderColor3 = Color3.fromRGB(35, 35, 35)
FLuxusMobile.setting1_11.Position = UDim2.new(0.984337151, 0, 2.1138103, 0)
FLuxusMobile.setting1_11.Size = UDim2.new(0, 42, 0, 25)

FLuxusMobile.setting1_12.Name = "setting1"
FLuxusMobile.setting1_12.Parent = FLuxusMobile.setting1_11
FLuxusMobile.setting1_12.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
FLuxusMobile.setting1_12.BorderColor3 = Color3.fromRGB(35, 35, 35)
FLuxusMobile.setting1_12.Position = UDim2.new(-0.086265929, 0, -0.00599975605, 0)
FLuxusMobile.setting1_12.Size = UDim2.new(0, 44, 0, 25)

FLuxusMobile.UICorner_39.Parent = FLuxusMobile.setting1_12

FLuxusMobile.TextButton_12.Parent = FLuxusMobile.setting1_12
FLuxusMobile.TextButton_12.BackgroundColor3 = Color3.fromRGB(88, 69, 174)
FLuxusMobile.TextButton_12.Position = UDim2.new(0.160147995, 0, 0.0399998799, 0)
FLuxusMobile.TextButton_12.Size = UDim2.new(0, 36, 0, 23)
FLuxusMobile.TextButton_12.Font = Enum.Font.SourceSans
FLuxusMobile.TextButton_12.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextButton_12.TextSize = 14.000

FLuxusMobile.UICorner_40.Parent = FLuxusMobile.TextButton_12

FLuxusMobile.TextLabel_43.Parent = FLuxusMobile.setting1_10
FLuxusMobile.TextLabel_43.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_43.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_43.Position = UDim2.new(-0.186170205, 0, 0.32249999, 0)
FLuxusMobile.TextLabel_43.Size = UDim2.new(0, 200, 0, 21)
FLuxusMobile.TextLabel_43.Font = Enum.Font.SourceSansBold
FLuxusMobile.TextLabel_43.Text = "Up your fps to unlimited"
FLuxusMobile.TextLabel_43.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_43.TextSize = 14.000

FLuxusMobile.TextLabel_44.Parent = FLuxusMobile.Settings
FLuxusMobile.TextLabel_44.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_44.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_44.Position = UDim2.new(0.0459587947, 0, 0.0381231681, 0)
FLuxusMobile.TextLabel_44.Size = UDim2.new(0, 48, 0, 28)
FLuxusMobile.TextLabel_44.Font = Enum.Font.SourceSans
FLuxusMobile.TextLabel_44.Text = "<   >"
FLuxusMobile.TextLabel_44.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_44.TextScaled = true
FLuxusMobile.TextLabel_44.TextSize = 20.000
FLuxusMobile.TextLabel_44.TextWrapped = true

FLuxusMobile.LoginPage.Name = "LoginPage"
FLuxusMobile.LoginPage.Parent = FLuxusMobile.FLuxusMobile
FLuxusMobile.LoginPage.BackgroundColor3 = Color3.fromRGB(23, 23, 25)
FLuxusMobile.LoginPage.BackgroundTransparency = 1.000
FLuxusMobile.LoginPage.BorderColor3 = Color3.fromRGB(20, 20, 23)
FLuxusMobile.LoginPage.Position = UDim2.new(0.33065027, 0, 0.290977955, 0)
FLuxusMobile.LoginPage.Size = UDim2.new(0, 404, 0, 255)
FLuxusMobile.LoginPage.Visible = false
FLuxusMobile.LoginPage.Draggable = true
FLuxusMobile.LoginPage.Active = true

FLuxusMobile.UP_4.Name = "UP"
FLuxusMobile.UP_4.Parent = FLuxusMobile.LoginPage
FLuxusMobile.UP_4.BackgroundColor3 = Color3.fromRGB(20, 20, 23)
FLuxusMobile.UP_4.BorderColor3 = Color3.fromRGB(19, 19, 21)
FLuxusMobile.UP_4.Position = UDim2.new(-0.00247524749, 0, 0, 0)
FLuxusMobile.UP_4.Size = UDim2.new(0, 403, 0, 48)

FLuxusMobile.ImageLabel_31.Parent = FLuxusMobile.UP_4
FLuxusMobile.ImageLabel_31.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.ImageLabel_31.BackgroundTransparency = 1.000
FLuxusMobile.ImageLabel_31.Position = UDim2.new(0.0148883378, 0, 0.185185179, 0)
FLuxusMobile.ImageLabel_31.Size = UDim2.new(0, 27, 0, 25)
FLuxusMobile.ImageLabel_31.Image = "rbxassetid://13818219807"
FLuxusMobile.ImageLabel_31.ImageTransparency = 0.300

FLuxusMobile.TextButton_13.Parent = FLuxusMobile.UP_4
FLuxusMobile.TextButton_13.BackgroundColor3 = Color3.fromRGB(23, 23, 25)
FLuxusMobile.TextButton_13.BorderColor3 = Color3.fromRGB(14, 14, 15)
FLuxusMobile.TextButton_13.Position = UDim2.new(0.836228311, 0, 0.233796433, 0)
FLuxusMobile.TextButton_13.Size = UDim2.new(0, 60, 0, 25)
FLuxusMobile.TextButton_13.Font = Enum.Font.SourceSans
FLuxusMobile.TextButton_13.Text = "Back"
FLuxusMobile.TextButton_13.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextButton_13.TextSize = 18.000
FLuxusMobile.TextButton_13.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextButton_13.TextStrokeTransparency = 0.800

FLuxusMobile.UICorner_41.CornerRadius = UDim.new(0, 5)
FLuxusMobile.UICorner_41.Parent = FLuxusMobile.TextButton_13

FLuxusMobile.Down_3.Name = "Down"
FLuxusMobile.Down_3.Parent = FLuxusMobile.LoginPage
FLuxusMobile.Down_3.BackgroundColor3 = Color3.fromRGB(23, 23, 25)
FLuxusMobile.Down_3.BorderColor3 = Color3.fromRGB(20, 20, 23)
FLuxusMobile.Down_3.Position = UDim2.new(-0.00247524749, 0, 0.18534486, 0)
FLuxusMobile.Down_3.Size = UDim2.new(0, 403, 0, 228)

FLuxusMobile.GetKey_2.Name = "GetKey"
FLuxusMobile.GetKey_2.Parent = FLuxusMobile.Down_3
FLuxusMobile.GetKey_2.BackgroundColor3 = Color3.fromRGB(14, 14, 15)
FLuxusMobile.GetKey_2.BorderColor3 = Color3.fromRGB(14, 14, 15)
FLuxusMobile.GetKey_2.Position = UDim2.new(0.431657374, 0, 0.747772217, 0)
FLuxusMobile.GetKey_2.Size = UDim2.new(0, 94, 0, 42)

FLuxusMobile.TextButton_14.Parent = FLuxusMobile.GetKey_2
FLuxusMobile.TextButton_14.BackgroundColor3 = Color3.fromRGB(23, 23, 25)
FLuxusMobile.TextButton_14.BorderColor3 = Color3.fromRGB(14, 14, 15)
FLuxusMobile.TextButton_14.Position = UDim2.new(0.0469999984, 0, 0.0599999987, 0)
FLuxusMobile.TextButton_14.Size = UDim2.new(0, 85, 0, 37)
FLuxusMobile.TextButton_14.Font = Enum.Font.SourceSansBold
FLuxusMobile.TextButton_14.Text = "GetKey"
FLuxusMobile.TextButton_14.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextButton_14.TextSize = 18.000
FLuxusMobile.TextButton_14.TextStrokeColor3 = Color3.fromRGB(225, 225, 225)
FLuxusMobile.TextButton_14.TextStrokeTransparency = 0.800

FLuxusMobile.UICorner_42.CornerRadius = UDim.new(0, 5)
FLuxusMobile.UICorner_42.Parent = FLuxusMobile.TextButton_14

FLuxusMobile.UICorner_43.CornerRadius = UDim.new(0, 5)
FLuxusMobile.UICorner_43.Parent = FLuxusMobile.GetKey_2

FLuxusMobile.Help_3.Name = "Help"
FLuxusMobile.Help_3.Parent = FLuxusMobile.Down_3
FLuxusMobile.Help_3.BackgroundColor3 = Color3.fromRGB(14, 14, 15)
FLuxusMobile.Help_3.BorderColor3 = Color3.fromRGB(14, 14, 15)
FLuxusMobile.Help_3.Position = UDim2.new(0.0504892617, 0, 0.749438763, 0)
FLuxusMobile.Help_3.Size = UDim2.new(0, 94, 0, 42)

FLuxusMobile.UICorner_44.CornerRadius = UDim.new(0, 5)
FLuxusMobile.UICorner_44.Parent = FLuxusMobile.Help_3

FLuxusMobile.Help_4.Name = "Help"
FLuxusMobile.Help_4.Parent = FLuxusMobile.Help_3
FLuxusMobile.Help_4.BackgroundColor3 = Color3.fromRGB(23, 23, 25)
FLuxusMobile.Help_4.BorderColor3 = Color3.fromRGB(14, 14, 15)
FLuxusMobile.Help_4.Position = UDim2.new(0.0466382951, 0, 0.0599999987, 0)
FLuxusMobile.Help_4.Size = UDim2.new(0, 85, 0, 37)
FLuxusMobile.Help_4.Font = Enum.Font.SourceSansBold
FLuxusMobile.Help_4.Text = "?"
FLuxusMobile.Help_4.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.Help_4.TextSize = 18.000
FLuxusMobile.Help_4.TextStrokeColor3 = Color3.fromRGB(225, 225, 225)
FLuxusMobile.Help_4.TextStrokeTransparency = 0.800

FLuxusMobile.UICorner_45.CornerRadius = UDim.new(0, 5)
FLuxusMobile.UICorner_45.Parent = FLuxusMobile.Help_4

FLuxusMobile.Enter_2.Name = "Enter"
FLuxusMobile.Enter_2.Parent = FLuxusMobile.Down_3
FLuxusMobile.Enter_2.BackgroundColor3 = Color3.fromRGB(88, 69, 174)
FLuxusMobile.Enter_2.Position = UDim2.new(0.702719927, 0, 0.749571085, 0)
FLuxusMobile.Enter_2.Size = UDim2.new(0, 94, 0, 42)
FLuxusMobile.Enter_2.Font = Enum.Font.SourceSans
FLuxusMobile.Enter_2.Text = "Login"
FLuxusMobile.Enter_2.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.Enter_2.TextSize = 18.000
FLuxusMobile.Enter_2.TextStrokeColor3 = Color3.fromRGB(225, 225, 225)
FLuxusMobile.Enter_2.TextStrokeTransparency = 0.800

FLuxusMobile.UICorner_46.CornerRadius = UDim.new(0, 5)
FLuxusMobile.UICorner_46.Parent = FLuxusMobile.Enter_2

FLuxusMobile.inputusername.Name = "inputusername"
FLuxusMobile.inputusername.Parent = FLuxusMobile.Down_3
FLuxusMobile.inputusername.BackgroundColor3 = Color3.fromRGB(17, 17, 18)
FLuxusMobile.inputusername.BorderColor3 = Color3.fromRGB(17, 17, 18)
FLuxusMobile.inputusername.Position = UDim2.new(0.0520047657, 0, 0.175569788, 0)
FLuxusMobile.inputusername.Size = UDim2.new(0, 353, 0, 31)

FLuxusMobile.TextBox_2.Parent = FLuxusMobile.inputusername
FLuxusMobile.TextBox_2.BackgroundColor3 = Color3.fromRGB(23, 23, 25)
FLuxusMobile.TextBox_2.BorderColor3 = Color3.fromRGB(23, 23, 25)
FLuxusMobile.TextBox_2.Position = UDim2.new(0.0254957508, 0, 0.0967741311, 0)
FLuxusMobile.TextBox_2.Size = UDim2.new(0, 343, 0, 25)
FLuxusMobile.TextBox_2.Font = Enum.Font.SourceSans
FLuxusMobile.TextBox_2.Text = ""
FLuxusMobile.TextBox_2.TextColor3 = Color3.fromRGB(0, 0, 0)
FLuxusMobile.TextBox_2.TextSize = 14.000

FLuxusMobile.UICorner_47.CornerRadius = UDim.new(0, 5)
FLuxusMobile.UICorner_47.Parent = FLuxusMobile.TextBox_2

FLuxusMobile.UICorner_48.CornerRadius = UDim.new(0, 5)
FLuxusMobile.UICorner_48.Parent = FLuxusMobile.inputusername

FLuxusMobile.TextLabel_45.Parent = FLuxusMobile.Down_3
FLuxusMobile.TextLabel_45.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_45.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_45.Position = UDim2.new(0.0519802012, 0, 0.0687830597, 0)
FLuxusMobile.TextLabel_45.Size = UDim2.new(0, 334, 0, 13)
FLuxusMobile.TextLabel_45.Font = Enum.Font.SourceSans
FLuxusMobile.TextLabel_45.Text = "Username:"
FLuxusMobile.TextLabel_45.TextColor3 = Color3.fromRGB(155, 155, 155)
FLuxusMobile.TextLabel_45.TextSize = 16.000
FLuxusMobile.TextLabel_45.TextStrokeColor3 = Color3.fromRGB(65, 65, 66)
FLuxusMobile.TextLabel_45.TextXAlignment = Enum.TextXAlignment.Left

FLuxusMobile.TextLabel_46.Parent = FLuxusMobile.Down_3
FLuxusMobile.TextLabel_46.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_46.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_46.Position = UDim2.new(0.0519802012, 0, 0.366859972, 0)
FLuxusMobile.TextLabel_46.Size = UDim2.new(0, 334, 0, 13)
FLuxusMobile.TextLabel_46.Font = Enum.Font.SourceSans
FLuxusMobile.TextLabel_46.Text = "Password:"
FLuxusMobile.TextLabel_46.TextColor3 = Color3.fromRGB(155, 155, 155)
FLuxusMobile.TextLabel_46.TextSize = 16.000
FLuxusMobile.TextLabel_46.TextStrokeColor3 = Color3.fromRGB(65, 65, 66)
FLuxusMobile.TextLabel_46.TextXAlignment = Enum.TextXAlignment.Left

FLuxusMobile.inputPass.Name = "inputPass"
FLuxusMobile.inputPass.Parent = FLuxusMobile.Down_3
FLuxusMobile.inputPass.BackgroundColor3 = Color3.fromRGB(17, 17, 18)
FLuxusMobile.inputPass.BorderColor3 = Color3.fromRGB(17, 17, 18)
FLuxusMobile.inputPass.Position = UDim2.new(0.0520047657, 0, 0.497685164, 0)
FLuxusMobile.inputPass.Size = UDim2.new(0, 353, 0, 31)

FLuxusMobile.UICorner_49.CornerRadius = UDim.new(0, 5)
FLuxusMobile.UICorner_49.Parent = FLuxusMobile.inputPass

FLuxusMobile.TextBox_3.Parent = FLuxusMobile.inputPass
FLuxusMobile.TextBox_3.BackgroundColor3 = Color3.fromRGB(23, 23, 25)
FLuxusMobile.TextBox_3.BorderColor3 = Color3.fromRGB(23, 23, 25)
FLuxusMobile.TextBox_3.Position = UDim2.new(0.0339943357, 0, 0.0967741013, 0)
FLuxusMobile.TextBox_3.Size = UDim2.new(0, 343, 0, 25)
FLuxusMobile.TextBox_3.Font = Enum.Font.SourceSans
FLuxusMobile.TextBox_3.Text = ""
FLuxusMobile.TextBox_3.TextColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextBox_3.TextSize = 14.000

FLuxusMobile.UICorner_50.CornerRadius = UDim.new(0, 5)
FLuxusMobile.UICorner_50.Parent = FLuxusMobile.TextBox_3

FLuxusMobile.HelpFrame_2.Name = "HelpFrame"
FLuxusMobile.HelpFrame_2.Parent = FLuxusMobile.LoginPage
FLuxusMobile.HelpFrame_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.HelpFrame_2.Position = UDim2.new(-0.0618811883, 0, 0.237068951, 0)
FLuxusMobile.HelpFrame_2.Size = UDim2.new(0, 451, 0, 165)
FLuxusMobile.HelpFrame_2.Visible = false


FLuxusMobile.UP_5.Name = "UP"
FLuxusMobile.UP_5.Parent = FLuxusMobile.HelpFrame_2
FLuxusMobile.UP_5.BackgroundColor3 = Color3.fromRGB(235, 246, 249)
FLuxusMobile.UP_5.Position = UDim2.new(0, 0, -0.163636357, 0)
FLuxusMobile.UP_5.Size = UDim2.new(0, 451, 0, 27)

FLuxusMobile.UICorner_51.CornerRadius = UDim.new(0, 5)
FLuxusMobile.UICorner_51.Parent = FLuxusMobile.UP_5

FLuxusMobile.ImageButton_4.Parent = FLuxusMobile.UP_5
FLuxusMobile.ImageButton_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.ImageButton_4.BackgroundTransparency = 1.000
FLuxusMobile.ImageButton_4.BorderColor3 = Color3.fromRGB(50, 50, 50)
FLuxusMobile.ImageButton_4.Position = UDim2.new(0.946860731, 0, 0.169915095, 0)
FLuxusMobile.ImageButton_4.Size = UDim2.new(0, 21, 0, 18)
FLuxusMobile.ImageButton_4.Image = "rbxassetid://13806606582"

FLuxusMobile.TextLabel_47.Parent = FLuxusMobile.UP_5
FLuxusMobile.TextLabel_47.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_47.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_47.Position = UDim2.new(0.0165035818, 0, 0.179894343, 0)
FLuxusMobile.TextLabel_47.Size = UDim2.new(0, 334, 0, 16)
FLuxusMobile.TextLabel_47.Font = Enum.Font.SourceSans
FLuxusMobile.TextLabel_47.Text = "Help"
FLuxusMobile.TextLabel_47.TextColor3 = Color3.fromRGB(0, 0, 0)
FLuxusMobile.TextLabel_47.TextSize = 16.000
FLuxusMobile.TextLabel_47.TextStrokeColor3 = Color3.fromRGB(251, 251, 255)
FLuxusMobile.TextLabel_47.TextXAlignment = Enum.TextXAlignment.Left

FLuxusMobile.TextLabel_48.Parent = FLuxusMobile.UP_5
FLuxusMobile.TextLabel_48.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_48.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_48.Position = UDim2.new(0.169496924, 0, 2.21693134, 0)
FLuxusMobile.TextLabel_48.Size = UDim2.new(0, 334, 0, 16)
FLuxusMobile.TextLabel_48.Font = Enum.Font.SourceSans
FLuxusMobile.TextLabel_48.Text = "For Help With KeySystem, Please go to www.UXteam.net/feq"
FLuxusMobile.TextLabel_48.TextColor3 = Color3.fromRGB(0, 0, 0)
FLuxusMobile.TextLabel_48.TextSize = 16.000
FLuxusMobile.TextLabel_48.TextStrokeColor3 = Color3.fromRGB(251, 251, 255)
FLuxusMobile.TextLabel_48.TextXAlignment = Enum.TextXAlignment.Left

FLuxusMobile.TextLabel_49.Parent = FLuxusMobile.UP_5
FLuxusMobile.TextLabel_49.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_49.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_49.Position = UDim2.new(0.169496924, 0, 2.99470925, 0)
FLuxusMobile.TextLabel_49.Size = UDim2.new(0, 334, 0, 16)
FLuxusMobile.TextLabel_49.Font = Enum.Font.SourceSans
FLuxusMobile.TextLabel_49.Text = "**OR*"
FLuxusMobile.TextLabel_49.TextColor3 = Color3.fromRGB(0, 0, 0)
FLuxusMobile.TextLabel_49.TextSize = 16.000
FLuxusMobile.TextLabel_49.TextStrokeColor3 = Color3.fromRGB(251, 251, 255)
FLuxusMobile.TextLabel_49.TextXAlignment = Enum.TextXAlignment.Left

FLuxusMobile.TextLabel_50.Parent = FLuxusMobile.UP_5
FLuxusMobile.TextLabel_50.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextLabel_50.BackgroundTransparency = 1.000
FLuxusMobile.TextLabel_50.Position = UDim2.new(0.169496924, 0, 3.58730173, 0)
FLuxusMobile.TextLabel_50.Size = UDim2.new(0, 334, 0, 16)
FLuxusMobile.TextLabel_50.Font = Enum.Font.SourceSans
FLuxusMobile.TextLabel_50.Text = "Join our support server at https://discord.gg/nHhKdD5VuA "
FLuxusMobile.TextLabel_50.TextColor3 = Color3.fromRGB(0, 0, 0)
FLuxusMobile.TextLabel_50.TextSize = 16.000
FLuxusMobile.TextLabel_50.TextStrokeColor3 = Color3.fromRGB(251, 251, 255)
FLuxusMobile.TextLabel_50.TextXAlignment = Enum.TextXAlignment.Left

FLuxusMobile.UICorner_52.Parent = FLuxusMobile.HelpFrame_2

FLuxusMobile.ImageLabel_32.Parent = FLuxusMobile.HelpFrame_2
FLuxusMobile.ImageLabel_32.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.ImageLabel_32.BackgroundTransparency = 1.000
FLuxusMobile.ImageLabel_32.Position = UDim2.new(0.0155210644, 0, 0.206060588, 0)
FLuxusMobile.ImageLabel_32.Size = UDim2.new(0, 61, 0, 50)
FLuxusMobile.ImageLabel_32.Image = "rbxassetid://13828251068"

FLuxusMobile.Down_4.Name = "Down"
FLuxusMobile.Down_4.Parent = FLuxusMobile.HelpFrame_2
FLuxusMobile.Down_4.BackgroundColor3 = Color3.fromRGB(240, 240, 240)
FLuxusMobile.Down_4.Position = UDim2.new(0, 0, 0.800000012, 0)
FLuxusMobile.Down_4.Size = UDim2.new(0, 451, 0, 33)

FLuxusMobile.UICorner_53.CornerRadius = UDim.new(0, 5)
FLuxusMobile.UICorner_53.Parent = FLuxusMobile.Down_4

FLuxusMobile.TextButton_15.Parent = FLuxusMobile.Down_4
FLuxusMobile.TextButton_15.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.TextButton_15.Position = UDim2.new(0.849223912, 0, 0.0936029553, 0)
FLuxusMobile.TextButton_15.Size = UDim2.new(0, 60, 0, 25)
FLuxusMobile.TextButton_15.Font = Enum.Font.SourceSans
FLuxusMobile.TextButton_15.Text = "Okay!"
FLuxusMobile.TextButton_15.TextColor3 = Color3.fromRGB(0, 0, 0)
FLuxusMobile.TextButton_15.TextSize = 14.000

FLuxusMobile.UICorner_54.CornerRadius = UDim.new(0, 5)
FLuxusMobile.UICorner_54.Parent = FLuxusMobile.TextButton_15

FLuxusMobile.UIAspectRatioConstraint_2.Parent = FLuxusMobile.LoginPage
FLuxusMobile.UIAspectRatioConstraint_2.AspectRatio = 1.584

FLuxusMobile.ImageButton_5.Parent = FLuxusMobile.FLuxusMobile
FLuxusMobile.ImageButton_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FLuxusMobile.ImageButton_5.BackgroundTransparency = 1.000
FLuxusMobile.ImageButton_5.Position = UDim2.new(0.470588237, 0, 0.0482093655, 0)
FLuxusMobile.ImageButton_5.Size = UDim2.new(0, 66, 0, 60)
FLuxusMobile.ImageButton_5.Visible = false
FLuxusMobile.ImageButton_5.Image = "rbxassetid://13818219807"

-- Scripts:

local function SOHTGHS_fake_script() -- FLuxusMobile.TextButton.LocalScript 
	local script = Instance.new('LocalScript', FLuxusMobile.TextButton)

	script.Parent.MouseButton1Down:Connect(function()
		script.Parent.Parent.Parent.Parent.KeyPage.Visible = false
		script.Parent.Parent.Parent.Parent.LoginPage.Visible = true
	end)
end
coroutine.wrap(SOHTGHS_fake_script)()
local function NPYHCOC_fake_script() -- FLuxusMobile.ImageButton.LocalScript 
	local script = Instance.new('LocalScript', FLuxusMobile.ImageButton)

	script.Parent.MouseButton1Down:Connect(function()
		script.Parent.Parent.Parent.Parent.Mainframe.Visible = false
		script.Parent.Parent.Parent.Parent.ImageButton.Visible = true
	end)
end
coroutine.wrap(NPYHCOC_fake_script)()
local function GJAQM_fake_script() -- FLuxusMobile.Help_2.LocalScript 
	local script = Instance.new('LocalScript', FLuxusMobile.Help_2)

	script.Parent.MouseButton1Down:Connect(function()
		script.Parent.Parent.Parent.Parent.HelpFrame.Visible = true
		script.Parent.Parent.Parent.Parent.Parent.KeyPage.Transparency = 1
		script.Parent.Parent.Parent.Parent.UP.Visible = false
		script.Parent.Parent.Parent.Parent.Down.Visible = false
	end)
end
coroutine.wrap(GJAQM_fake_script)()
local function KVOQ_fake_script() -- FLuxusMobile.Enter.LocalScript 
	local script = Instance.new('LocalScript', FLuxusMobile.Enter)

	script.Parent.MouseButton1Down:Connect(function()
			script.Parent.Parent.Parent.Parent.MainPage.Visible = true
			script.Parent.Parent.Parent.Parent.ImageButton.Visible = false
			script.Parent.Parent.Parent.Parent.KeyPage.Visible = false
	end)
end
coroutine.wrap(KVOQ_fake_script)()
local function VKVDSKT_fake_script() -- FLuxusMobile.ImageButton_2.LocalScript 
	local script = Instance.new('LocalScript', FLuxusMobile.ImageButton_2)

	script.Parent.MouseButton1Down:Connect(function()
		script.Parent.Parent.Parent.Parent.HelpFrame.Visible = false
		script.Parent.Parent.Parent.Parent.Parent.KeyPage.Transparency = 0
		script.Parent.Parent.Parent.Parent.UP.Visible = true
		script.Parent.Parent.Parent.Parent.Down.Visible = true
	end)
end
coroutine.wrap(VKVDSKT_fake_script)()
local function BGVT_fake_script() -- FLuxusMobile.TextButton_3.LocalScript 
	local script = Instance.new('LocalScript', FLuxusMobile.TextButton_3)

	script.Parent.MouseButton1Down:Connect(function()
		script.Parent.Parent.Parent.Parent.HelpFrame.Visible = false
		script.Parent.Parent.Parent.Parent.Parent.KeyPage.Transparency = 0
		script.Parent.Parent.Parent.Parent.UP.Visible = true
		script.Parent.Parent.Parent.Parent.Down.Visible = true
	end)
end
coroutine.wrap(BGVT_fake_script)()
local function NHAPGG_fake_script() -- FLuxusMobile.ImageButton_3.LocalScript 
	local script = Instance.new('LocalScript', FLuxusMobile.ImageButton_3)

	script.Parent.MouseButton1Down:Connect(function()
		script.Parent.Parent.Parent.Parent.MainPage.Visible = false
		script.Parent.Parent.Parent.Parent.ImageButton.Visible = true
	end)
end
coroutine.wrap(NHAPGG_fake_script)()
local function MGTDBV_fake_script() -- FLuxusMobile.executor.LocalScript 
	local script = Instance.new('LocalScript', FLuxusMobile.executor)

	script.Parent.MouseButton1Down:Connect(function()
		script.Parent.Parent.Parent.executor.Visible = true
		script.Parent.Parent.Parent.Devlopers.Visible = false
		script.Parent.Parent.Parent.Settings.Visible = false
		script.Parent.BackgroundColor3 = Color3.fromRGB(36, 32, 51)
		script.Parent.Parent.player.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
		script.Parent.Parent.settings.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
	end)
end
coroutine.wrap(MGTDBV_fake_script)()
local function IHRY_fake_script() -- FLuxusMobile.settings.LocalScript 
	local script = Instance.new('LocalScript', FLuxusMobile.settings)

	script.Parent.MouseButton1Down:Connect(function()
		script.Parent.Parent.Parent.executor.Visible = false
		script.Parent.Parent.Parent.Devlopers.Visible = false
		script.Parent.Parent.Parent.Settings.Visible = true
		script.Parent.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
		script.Parent.Parent.player.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
		script.Parent.Parent.settings.BackgroundColor3 = Color3.fromRGB(36, 32, 51)
	end)
end
coroutine.wrap(IHRY_fake_script)()
local function TLDD_fake_script() -- FLuxusMobile.player.LocalScript 
	local script = Instance.new('LocalScript', FLuxusMobile.player)

	script.Parent.MouseButton1Down:Connect(function()
		script.Parent.Parent.Parent.executor.Visible = false
		script.Parent.Parent.Parent.Devlopers.Visible = true
		script.Parent.Parent.Parent.Settings.Visible = false
		script.Parent.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
		script.Parent.Parent.player.BackgroundColor3 = Color3.fromRGB(36, 32, 51)
		script.Parent.Parent.settings.BackgroundColor3 = Color3.fromRGB(24, 26, 27)
	end)
end
coroutine.wrap(TLDD_fake_script)()
local function YCTMW_fake_script() -- FLuxusMobile.Execute.LocalScript 
	local script = Instance.new('LocalScript', FLuxusMobile.Execute)

	script.Parent.MouseButton1Up:Connect(function()
		loadstring(script.Parent.Parent.Parent.script1.Text)() 
	end)
end
coroutine.wrap(YCTMW_fake_script)()
local function UVAGBKW_fake_script() -- FLuxusMobile.clear.LocalScript 
	local script = Instance.new('LocalScript', FLuxusMobile.clear)

	script.Parent.MouseButton1Down:Connect(function()
		script.Parent.Parent.Parent.script1.Text = ""
	end)
end
coroutine.wrap(UVAGBKW_fake_script)()
local function TYUGBL_fake_script() -- FLuxusMobile.copy.LocalScript 
	local script = Instance.new('LocalScript', FLuxusMobile.copy)

	script.Parent.MouseButton1Up:Connect(function()
		setclipboard(script.Parent.Parent.Parent.script1.Text)
	end)
end
coroutine.wrap(TYUGBL_fake_script)()
local function QZEB_fake_script() -- FLuxusMobile.Execute_2.LocalScript 
	local script = Instance.new('LocalScript', FLuxusMobile.Execute_2)

	script.Parent.MouseButton1Up:Connect(function()
	loadstring(script.Parent.Parent.Parent.script2.Text)() 
	end)
end
coroutine.wrap(QZEB_fake_script)()
local function WSTND_fake_script() -- FLuxusMobile.clear_2.LocalScript 
	local script = Instance.new('LocalScript', FLuxusMobile.clear_2)

	script.Parent.MouseButton1Down:Connect(function()
		script.Parent.Parent.Parent.script2.Text = ""
	end)
end
coroutine.wrap(WSTND_fake_script)()
local function CVPDY_fake_script() -- FLuxusMobile.copy_2.LocalScript 
	local script = Instance.new('LocalScript', FLuxusMobile.copy_2)

	script.Parent.MouseButton1Up:Connect(function()
		setclipboard(script.Parent.Parent.Parent.script2.Text)
	end)
end
coroutine.wrap(CVPDY_fake_script)()
local function YJUXX_fake_script() -- FLuxusMobile.Execute_3.LocalScript 
	local script = Instance.new('LocalScript', FLuxusMobile.Execute_3)

	script.Parent.MouseButton1Up:Connect(function()
	loadstring(script.Parent.Parent.Parent.script3.Text)() 
	end)
end
coroutine.wrap(YJUXX_fake_script)()
local function PPDJYK_fake_script() -- FLuxusMobile.clear_3.LocalScript 
	local script = Instance.new('LocalScript', FLuxusMobile.clear_3)

	script.Parent.MouseButton1Down:Connect(function()
		script.Parent.Parent.Parent.script3.Text = ""
	end)
end
coroutine.wrap(PPDJYK_fake_script)()
local function NHDDGJF_fake_script() -- FLuxusMobile.copy_3.LocalScript 
	local script = Instance.new('LocalScript', FLuxusMobile.copy_3)

	script.Parent.MouseButton1Up:Connect(function()
		setclipboard(script.Parent.Parent.Parent.script3.Text)
	end)
end
coroutine.wrap(NHDDGJF_fake_script)()
local function RQTH_fake_script() -- FLuxusMobile.Execute_4.LocalScript 
	local script = Instance.new('LocalScript', FLuxusMobile.Execute_4)

	script.Parent.MouseButton1Up:Connect(function()
		loadstring(script.Parent.Parent.Parent.script4.Text)() 
	end)
end
coroutine.wrap(RQTH_fake_script)()
local function YOVNX_fake_script() -- FLuxusMobile.clear_4.LocalScript 
	local script = Instance.new('LocalScript', FLuxusMobile.clear_4)

	script.Parent.MouseButton1Down:Connect(function()
		script.Parent.Parent.Parent.script4.Text = ""
	end)
end
coroutine.wrap(YOVNX_fake_script)()
local function BDEY_fake_script() -- FLuxusMobile.copy_4.LocalScript 
	local script = Instance.new('LocalScript', FLuxusMobile.copy_4)

	script.Parent.MouseButton1Up:Connect(function()
		setclipboard(script.Parent.Parent.Parent.script4.Text)
	end)
end
coroutine.wrap(BDEY_fake_script)()
local function WTXYB_fake_script() -- FLuxusMobile.TextButton_5.LocalScript 
	local script = Instance.new('LocalScript', FLuxusMobile.TextButton_5)

	script.Parent.MouseButton1Down:Connect(function()
		script.Parent.Parent.Parent.script1.Visible = true
		script.Parent.Parent.Parent.script2.Visible = false
		script.Parent.Parent.Parent.script3.Visible = false
		script.Parent.Parent.Parent.script4.Visible = false
		script.Parent.Parent.Parent.buttons1.Visible = true
		script.Parent.Parent.Parent.buttons2.Visible = false
		script.Parent.Parent.Parent.buttons3.Visible = false
		script.Parent.Parent.Parent.buttons4.Visible = false
	end)
end
coroutine.wrap(WTXYB_fake_script)()
local function UCXI_fake_script() -- FLuxusMobile.TextButton_6.LocalScript 
	local script = Instance.new('LocalScript', FLuxusMobile.TextButton_6)

	script.Parent.MouseButton1Down:Connect(function()
		script.Parent.Parent.Parent.script1.Visible = false
		script.Parent.Parent.Parent.script2.Visible = true
		script.Parent.Parent.Parent.script3.Visible = false
		script.Parent.Parent.Parent.script4.Visible = false
		script.Parent.Parent.Parent.buttons1.Visible = false
		script.Parent.Parent.Parent.buttons2.Visible = true
		script.Parent.Parent.Parent.buttons3.Visible = false
		script.Parent.Parent.Parent.buttons4.Visible = false
	end)
end
coroutine.wrap(UCXI_fake_script)()
local function ZJCZXCG_fake_script() -- FLuxusMobile.TextButton_7.LocalScript 
	local script = Instance.new('LocalScript', FLuxusMobile.TextButton_7)

	script.Parent.MouseButton1Down:Connect(function()
		script.Parent.Parent.Parent.script1.Visible = false
		script.Parent.Parent.Parent.script2.Visible = false
		script.Parent.Parent.Parent.script3.Visible = true
		script.Parent.Parent.Parent.script4.Visible = false
		script.Parent.Parent.Parent.buttons1.Visible = false
		script.Parent.Parent.Parent.buttons2.Visible = false
		script.Parent.Parent.Parent.buttons3.Visible = true
		script.Parent.Parent.Parent.buttons4.Visible = false
	end)
end
coroutine.wrap(ZJCZXCG_fake_script)()
local function YDBNHQK_fake_script() -- FLuxusMobile.TextButton_8.LocalScript 
	local script = Instance.new('LocalScript', FLuxusMobile.TextButton_8)

	script.Parent.MouseButton1Down:Connect(function()
		script.Parent.Parent.Parent.script1.Visible = false
		script.Parent.Parent.Parent.script2.Visible = false
		script.Parent.Parent.Parent.script3.Visible = false
		script.Parent.Parent.Parent.script4.Visible = true
		script.Parent.Parent.Parent.buttons1.Visible = false
		script.Parent.Parent.Parent.buttons2.Visible = false
		script.Parent.Parent.Parent.buttons3.Visible = false
		script.Parent.Parent.Parent.buttons4.Visible = true
	end)
end
coroutine.wrap(YDBNHQK_fake_script)()
local function QPFGX_fake_script() -- FLuxusMobile.TextButton_13.LocalScript 
	local script = Instance.new('LocalScript', FLuxusMobile.TextButton_13)

	script.Parent.MouseButton1Down:Connect(function()
		script.Parent.Parent.Parent.Parent.KeyPage.Visible = true
		script.Parent.Parent.Parent.Parent.LoginPage.Visible = false
	end)
end
coroutine.wrap(QPFGX_fake_script)()
local function LDYMEYU_fake_script() -- FLuxusMobile.TextButton_14.LocalScript 
	local script = Instance.new('LocalScript', FLuxusMobile.TextButton_14)

	script.Parent.MouseButton1Down:Connect(function()
		script.Parent.Parent.Parent.Parent.Parent.KeyPage.Visible = true
		script.Parent.Parent.Parent.Parent.Parent.LoginPage.Visible = false
	end)
end
coroutine.wrap(LDYMEYU_fake_script)()
local function AEIP_fake_script() -- FLuxusMobile.Enter_2.LocalScript 
	local script = Instance.new('LocalScript', FLuxusMobile.Enter_2)

	local username = script.Parent.Parent.inputusername.TextBox
	local pass = script.Parent.Parent.inputPass.TextBox
	script.Parent.MouseButton1Down:Connect(function()
		script.Parent.Parent.Parent.Parent.MainPage.Visible = true
		script.Parent.Parent.Parent.Parent.ImageButton.Visible = false
		script.Parent.Parent.Parent.Parent.LoginPage.Visible = false
	end)
end
coroutine.wrap(AEIP_fake_script)()
local function DNIAON_fake_script() -- FLuxusMobile.ImageButton_4.LocalScript 
	local script = Instance.new('LocalScript', FLuxusMobile.ImageButton_4)

	script.Parent.MouseButton1Down:Connect(function()
		script.Parent.Parent.Parent.Parent.HelpFrame.Visible = false
		script.Parent.Parent.Parent.Parent.Parent.KeyPage.Transparency = 0
		script.Parent.Parent.Parent.Parent.UP.Visible = true
		script.Parent.Parent.Parent.Parent.Down.Visible = true
	end)
end
coroutine.wrap(DNIAON_fake_script)()
local function ROQCY_fake_script() -- FLuxusMobile.TextButton_15.LocalScript 
	local script = Instance.new('LocalScript', FLuxusMobile.TextButton_15)

	script.Parent.MouseButton1Down:Connect(function()
		script.Parent.Parent.Parent.Parent.HelpFrame.Visible = false
		script.Parent.Parent.Parent.Parent.Parent.KeyPage.Transparency = 0
		script.Parent.Parent.Parent.Parent.UP.Visible = true
		script.Parent.Parent.Parent.Parent.Down.Visible = true
	end)
end
coroutine.wrap(ROQCY_fake_script)()
local function YZQQII_fake_script() -- FLuxusMobile.ImageButton_5.LocalScript 
	local script = Instance.new('LocalScript', FLuxusMobile.ImageButton_5)

	script.Parent.MouseButton1Down:Connect(function()
		script.Parent.Parent.MainPage.Visible = true
	end)
end
coroutine.wrap(YZQQII_fake_script)()
end)
 tab3.newButton("Electron", "Executor script", function()
    -- Gui to Lua
-- Version: 3.2

-- Instances:

local elctronmobile = {
	elctronmobile = Instance.new("ScreenGui"),
	Mainframe = Instance.new("Frame"),
	UP = Instance.new("Frame"),
	TextLabel = Instance.new("TextLabel"),
	ImageButton = Instance.new("ImageButton"),
	UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint"),
	Left = Instance.new("Frame"),
	executer = Instance.new("ImageButton"),
	UICorner = Instance.new("UICorner"),
	discord = Instance.new("ImageButton"),
	UICorner_2 = Instance.new("UICorner"),
	player = Instance.new("ImageButton"),
	UICorner_3 = Instance.new("UICorner"),
	cloud = Instance.new("ImageButton"),
	UICorner_4 = Instance.new("UICorner"),
	settings = Instance.new("ImageButton"),
	UICorner_5 = Instance.new("UICorner"),
	UIAspectRatioConstraint_2 = Instance.new("UIAspectRatioConstraint"),
	Frames = Instance.new("Frame"),
	executer_2 = Instance.new("Frame"),
	Down = Instance.new("Frame"),
	copy = Instance.new("TextButton"),
	UICorner_6 = Instance.new("UICorner"),
	paste = Instance.new("TextButton"),
	UICorner_7 = Instance.new("UICorner"),
	Execute = Instance.new("TextButton"),
	UICorner_8 = Instance.new("UICorner"),
	clear = Instance.new("TextButton"),
	UICorner_9 = Instance.new("UICorner"),
	executorframe = Instance.new("Frame"),
	Lines = Instance.new("Frame"),
	UIListLayout = Instance.new("UIListLayout"),
	text1 = Instance.new("TextLabel"),
	text2 = Instance.new("TextLabel"),
	text3 = Instance.new("TextLabel"),
	executor = Instance.new("Frame"),
	TextBox = Instance.new("TextBox"),
	scripts = Instance.new("Frame"),
	script = Instance.new("TextButton"),
	close = Instance.new("TextButton"),
	UICorner_10 = Instance.new("UICorner"),
	plus = Instance.new("TextButton"),
	UIGridLayout = Instance.new("UIGridLayout"),
	cloud_2 = Instance.new("Frame"),
	down = Instance.new("Frame"),
	oldnew = Instance.new("Frame"),
	UICorner_11 = Instance.new("UICorner"),
	TextButton = Instance.new("TextButton"),
	UIListLayout_2 = Instance.new("UIListLayout"),
	TextButton_2 = Instance.new("TextButton"),
	TextButton_3 = Instance.new("TextButton"),
	TextButton_4 = Instance.new("TextButton"),
	TextButton_5 = Instance.new("TextButton"),
	TextButton_6 = Instance.new("TextButton"),
	Frame = Instance.new("Frame"),
	ScrollingFrame = Instance.new("ScrollingFrame"),
	scriptluncher = Instance.new("Frame"),
	UICorner_12 = Instance.new("UICorner"),
	scriptimage = Instance.new("ImageLabel"),
	TextLabel_2 = Instance.new("TextLabel"),
	UICorner_13 = Instance.new("UICorner"),
	TextLabel_3 = Instance.new("TextLabel"),
	UICorner_14 = Instance.new("UICorner"),
	verified = Instance.new("ImageLabel"),
	ImageButton_2 = Instance.new("ImageButton"),
	UIGridLayout_2 = Instance.new("UIGridLayout"),
	scriptluncher_2 = Instance.new("Frame"),
	UICorner_15 = Instance.new("UICorner"),
	scriptimage_2 = Instance.new("ImageLabel"),
	TextLabel_4 = Instance.new("TextLabel"),
	UICorner_16 = Instance.new("UICorner"),
	TextLabel_5 = Instance.new("TextLabel"),
	UICorner_17 = Instance.new("UICorner"),
	verified_2 = Instance.new("ImageLabel"),
	ImageButton_3 = Instance.new("ImageButton"),
	scriptluncher_3 = Instance.new("Frame"),
	UICorner_18 = Instance.new("UICorner"),
	scriptimage_3 = Instance.new("ImageLabel"),
	TextLabel_6 = Instance.new("TextLabel"),
	UICorner_19 = Instance.new("UICorner"),
	TextLabel_7 = Instance.new("TextLabel"),
	UICorner_20 = Instance.new("UICorner"),
	verified_3 = Instance.new("ImageLabel"),
	ImageButton_4 = Instance.new("ImageButton"),
	scriptluncher_4 = Instance.new("Frame"),
	UICorner_21 = Instance.new("UICorner"),
	scriptimage_4 = Instance.new("ImageLabel"),
	TextLabel_8 = Instance.new("TextLabel"),
	UICorner_22 = Instance.new("UICorner"),
	TextLabel_9 = Instance.new("TextLabel"),
	UICorner_23 = Instance.new("UICorner"),
	verified_4 = Instance.new("ImageLabel"),
	ImageButton_5 = Instance.new("ImageButton"),
	scriptluncher_5 = Instance.new("Frame"),
	UICorner_24 = Instance.new("UICorner"),
	scriptimage_5 = Instance.new("ImageLabel"),
	TextLabel_10 = Instance.new("TextLabel"),
	UICorner_25 = Instance.new("UICorner"),
	TextLabel_11 = Instance.new("TextLabel"),
	UICorner_26 = Instance.new("UICorner"),
	verified_5 = Instance.new("ImageLabel"),
	ImageButton_6 = Instance.new("ImageButton"),
	scriptluncher_6 = Instance.new("Frame"),
	UICorner_27 = Instance.new("UICorner"),
	scriptimage_6 = Instance.new("ImageLabel"),
	TextLabel_12 = Instance.new("TextLabel"),
	UICorner_28 = Instance.new("UICorner"),
	TextLabel_13 = Instance.new("TextLabel"),
	UICorner_29 = Instance.new("UICorner"),
	verified_6 = Instance.new("ImageLabel"),
	ImageButton_7 = Instance.new("ImageButton"),
	scriptluncher_7 = Instance.new("Frame"),
	UICorner_30 = Instance.new("UICorner"),
	scriptimage_7 = Instance.new("ImageLabel"),
	TextLabel_14 = Instance.new("TextLabel"),
	UICorner_31 = Instance.new("UICorner"),
	TextLabel_15 = Instance.new("TextLabel"),
	UICorner_32 = Instance.new("UICorner"),
	verified_7 = Instance.new("ImageLabel"),
	ImageButton_8 = Instance.new("ImageButton"),
	scriptluncher_8 = Instance.new("Frame"),
	UICorner_33 = Instance.new("UICorner"),
	scriptimage_8 = Instance.new("ImageLabel"),
	TextLabel_16 = Instance.new("TextLabel"),
	UICorner_34 = Instance.new("UICorner"),
	TextLabel_17 = Instance.new("TextLabel"),
	UICorner_35 = Instance.new("UICorner"),
	verified_8 = Instance.new("ImageLabel"),
	ImageButton_9 = Instance.new("ImageButton"),
	scriptluncher_9 = Instance.new("Frame"),
	UICorner_36 = Instance.new("UICorner"),
	scriptimage_9 = Instance.new("ImageLabel"),
	TextLabel_18 = Instance.new("TextLabel"),
	UICorner_37 = Instance.new("UICorner"),
	TextLabel_19 = Instance.new("TextLabel"),
	UICorner_38 = Instance.new("UICorner"),
	verified_9 = Instance.new("ImageLabel"),
	ImageButton_10 = Instance.new("ImageButton"),
	scriptluncher_10 = Instance.new("Frame"),
	UICorner_39 = Instance.new("UICorner"),
	scriptimage_10 = Instance.new("ImageLabel"),
	TextLabel_20 = Instance.new("TextLabel"),
	UICorner_40 = Instance.new("UICorner"),
	TextLabel_21 = Instance.new("TextLabel"),
	UICorner_41 = Instance.new("UICorner"),
	verified_10 = Instance.new("ImageLabel"),
	ImageButton_11 = Instance.new("ImageButton"),
	scriptluncher_11 = Instance.new("Frame"),
	UICorner_42 = Instance.new("UICorner"),
	scriptimage_11 = Instance.new("ImageLabel"),
	TextLabel_22 = Instance.new("TextLabel"),
	UICorner_43 = Instance.new("UICorner"),
	TextLabel_23 = Instance.new("TextLabel"),
	UICorner_44 = Instance.new("UICorner"),
	verified_11 = Instance.new("ImageLabel"),
	ImageButton_12 = Instance.new("ImageButton"),
	scriptluncher_12 = Instance.new("Frame"),
	UICorner_45 = Instance.new("UICorner"),
	scriptimage_12 = Instance.new("ImageLabel"),
	TextLabel_24 = Instance.new("TextLabel"),
	UICorner_46 = Instance.new("UICorner"),
	TextLabel_25 = Instance.new("TextLabel"),
	UICorner_47 = Instance.new("UICorner"),
	verified_12 = Instance.new("ImageLabel"),
	ImageButton_13 = Instance.new("ImageButton"),
	scriptluncher_13 = Instance.new("Frame"),
	UICorner_48 = Instance.new("UICorner"),
	scriptimage_13 = Instance.new("ImageLabel"),
	TextLabel_26 = Instance.new("TextLabel"),
	UICorner_49 = Instance.new("UICorner"),
	TextLabel_27 = Instance.new("TextLabel"),
	UICorner_50 = Instance.new("UICorner"),
	verified_13 = Instance.new("ImageLabel"),
	ImageButton_14 = Instance.new("ImageButton"),
	scriptluncher_14 = Instance.new("Frame"),
	UICorner_51 = Instance.new("UICorner"),
	scriptimage_14 = Instance.new("ImageLabel"),
	TextLabel_28 = Instance.new("TextLabel"),
	UICorner_52 = Instance.new("UICorner"),
	TextLabel_29 = Instance.new("TextLabel"),
	UICorner_53 = Instance.new("UICorner"),
	verified_14 = Instance.new("ImageLabel"),
	ImageButton_15 = Instance.new("ImageButton"),
	scriptluncher_15 = Instance.new("Frame"),
	UICorner_54 = Instance.new("UICorner"),
	scriptimage_15 = Instance.new("ImageLabel"),
	TextLabel_30 = Instance.new("TextLabel"),
	UICorner_55 = Instance.new("UICorner"),
	TextLabel_31 = Instance.new("TextLabel"),
	UICorner_56 = Instance.new("UICorner"),
	verified_15 = Instance.new("ImageLabel"),
	ImageButton_16 = Instance.new("ImageButton"),
	scriptluncher_16 = Instance.new("Frame"),
	UICorner_57 = Instance.new("UICorner"),
	scriptimage_16 = Instance.new("ImageLabel"),
	TextLabel_32 = Instance.new("TextLabel"),
	UICorner_58 = Instance.new("UICorner"),
	TextLabel_33 = Instance.new("TextLabel"),
	UICorner_59 = Instance.new("UICorner"),
	verified_16 = Instance.new("ImageLabel"),
	ImageButton_17 = Instance.new("ImageButton"),
	scriptluncher_17 = Instance.new("Frame"),
	UICorner_60 = Instance.new("UICorner"),
	scriptimage_17 = Instance.new("ImageLabel"),
	TextLabel_34 = Instance.new("TextLabel"),
	UICorner_61 = Instance.new("UICorner"),
	TextLabel_35 = Instance.new("TextLabel"),
	UICorner_62 = Instance.new("UICorner"),
	verified_17 = Instance.new("ImageLabel"),
	ImageButton_18 = Instance.new("ImageButton"),
	scriptluncher_18 = Instance.new("Frame"),
	UICorner_63 = Instance.new("UICorner"),
	scriptimage_18 = Instance.new("ImageLabel"),
	TextLabel_36 = Instance.new("TextLabel"),
	UICorner_64 = Instance.new("UICorner"),
	TextLabel_37 = Instance.new("TextLabel"),
	UICorner_65 = Instance.new("UICorner"),
	verified_18 = Instance.new("ImageLabel"),
	ImageButton_19 = Instance.new("ImageButton"),
	UICorner_66 = Instance.new("UICorner"),
	up = Instance.new("Frame"),
	TextBox_2 = Instance.new("TextBox"),
	UICorner_67 = Instance.new("UICorner"),
	TextButton_7 = Instance.new("TextButton"),
	UICorner_68 = Instance.new("UICorner"),
	TextLabel_38 = Instance.new("TextLabel"),
	UICorner_69 = Instance.new("UICorner"),
	ImageButton_20 = Instance.new("ImageButton"),
	settings_2 = Instance.new("Frame"),
	left = Instance.new("Frame"),
	Frame_2 = Instance.new("Frame"),
	ImageLabel = Instance.new("ImageLabel"),
	UICorner_70 = Instance.new("UICorner"),
	UICorner_71 = Instance.new("UICorner"),
	TextLabel_39 = Instance.new("TextLabel"),
	TextButton_8 = Instance.new("TextButton"),
	UICorner_72 = Instance.new("UICorner"),
	right = Instance.new("Frame"),
	Frame_3 = Instance.new("Frame"),
	UICorner_73 = Instance.new("UICorner"),
	buttons = Instance.new("Frame"),
	UICorner_74 = Instance.new("UICorner"),
	TextLabel_40 = Instance.new("TextLabel"),
	TextLabel_41 = Instance.new("TextLabel"),
	TextButton_9 = Instance.new("TextButton"),
	UICorner_75 = Instance.new("UICorner"),
	UICorner_76 = Instance.new("UICorner"),
	UICorner_77 = Instance.new("UICorner"),
	UIAspectRatioConstraint_3 = Instance.new("UIAspectRatioConstraint"),
	UIAspectRatioConstraint_4 = Instance.new("UIAspectRatioConstraint"),
	KeyPage = Instance.new("Frame"),
	UICorner_78 = Instance.new("UICorner"),
	Electron = Instance.new("TextLabel"),
	Scripting = Instance.new("TextLabel"),
	keytext = Instance.new("TextLabel"),
	TextBox_3 = Instance.new("TextBox"),
	getkey = Instance.new("TextButton"),
	UICorner_79 = Instance.new("UICorner"),
	sumbit = Instance.new("TextButton"),
	UICorner_80 = Instance.new("UICorner"),
	copylink = Instance.new("TextButton"),
	UICorner_81 = Instance.new("UICorner"),
	ImageButton_21 = Instance.new("ImageButton"),
	UICorner_82 = Instance.new("UICorner"),
}

--Properties:

elctronmobile.elctronmobile.Name = "elctronmobile"
elctronmobile.elctronmobile.Parent = game.CoreGui
elctronmobile.elctronmobile.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

elctronmobile.Mainframe.Name = "Mainframe"
elctronmobile.Mainframe.Parent = elctronmobile.elctronmobile
elctronmobile.Mainframe.BackgroundColor3 = Color3.fromRGB(24, 28, 36)
elctronmobile.Mainframe.BackgroundTransparency = 1.000
elctronmobile.Mainframe.Position = UDim2.new(0.232400671, 0, 0.189393938, 0)
elctronmobile.Mainframe.Size = UDim2.new(0, 589, 0, 315)
elctronmobile.Mainframe.Visible = false

elctronmobile.UP.Name = "UP"
elctronmobile.UP.Parent = elctronmobile.Mainframe
elctronmobile.UP.BackgroundColor3 = Color3.fromRGB(28, 32, 40)
elctronmobile.UP.BorderColor3 = Color3.fromRGB(28, 32, 40)
elctronmobile.UP.Size = UDim2.new(0, 589, 0, 66)

elctronmobile.TextLabel.Parent = elctronmobile.UP
elctronmobile.TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.TextLabel.BackgroundTransparency = 1.000
elctronmobile.TextLabel.Position = UDim2.new(0.0173076931, 0, 0, 0)
elctronmobile.TextLabel.Size = UDim2.new(0, 90, 0, 50)
elctronmobile.TextLabel.Font = Enum.Font.SourceSansBold
elctronmobile.TextLabel.Text = "ELECTRON"
elctronmobile.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.TextLabel.TextScaled = true
elctronmobile.TextLabel.TextSize = 20.000
elctronmobile.TextLabel.TextWrapped = true
elctronmobile.TextLabel.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.ImageButton.Parent = elctronmobile.UP
elctronmobile.ImageButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.ImageButton.BackgroundTransparency = 1.000
elctronmobile.ImageButton.BorderColor3 = Color3.fromRGB(50, 50, 50)
elctronmobile.ImageButton.Position = UDim2.new(0.935362577, 0, 0.192424431, 0)
elctronmobile.ImageButton.Size = UDim2.new(0, 23, 0, 24)
elctronmobile.ImageButton.Image = "rbxassetid://13806606582"

elctronmobile.UIAspectRatioConstraint.Parent = elctronmobile.UP
elctronmobile.UIAspectRatioConstraint.AspectRatio = 8.924

elctronmobile.Left.Name = "Left"
elctronmobile.Left.Parent = elctronmobile.Mainframe
elctronmobile.Left.BackgroundColor3 = Color3.fromRGB(28, 32, 40)
elctronmobile.Left.BorderColor3 = Color3.fromRGB(28, 32, 40)
elctronmobile.Left.Position = UDim2.new(0, 0, 0.16507937, 0)
elctronmobile.Left.Size = UDim2.new(0, 38, 0, 258)

elctronmobile.executer.Name = "executer"
elctronmobile.executer.Parent = elctronmobile.Left
elctronmobile.executer.BackgroundColor3 = Color3.fromRGB(34, 38, 46)
elctronmobile.executer.Position = UDim2.new(0.11706984, 0, -0.00462406501, 0)
elctronmobile.executer.Size = UDim2.new(0, 29, 0, 31)
elctronmobile.executer.Image = "rbxassetid://13820121353"

elctronmobile.UICorner.Parent = elctronmobile.executer

elctronmobile.discord.Name = "discord"
elctronmobile.discord.Parent = elctronmobile.Left
elctronmobile.discord.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
elctronmobile.discord.Position = UDim2.new(0.11706984, 0, 0.743438005, 0)
elctronmobile.discord.Size = UDim2.new(0, 29, 0, 31)
elctronmobile.discord.Image = "rbxassetid://13820139515"

elctronmobile.UICorner_2.Parent = elctronmobile.discord

elctronmobile.player.Name = "player"
elctronmobile.player.Parent = elctronmobile.Left
elctronmobile.player.BackgroundColor3 = Color3.fromRGB(34, 38, 46)
elctronmobile.player.Position = UDim2.new(0.11706984, 0, 0.58064729, 0)
elctronmobile.player.Size = UDim2.new(0, 29, 0, 31)
elctronmobile.player.Image = "rbxassetid://13818536229"

elctronmobile.UICorner_3.Parent = elctronmobile.player

elctronmobile.cloud.Name = "cloud"
elctronmobile.cloud.Parent = elctronmobile.Left
elctronmobile.cloud.BackgroundColor3 = Color3.fromRGB(34, 38, 46)
elctronmobile.cloud.Position = UDim2.new(0.117069848, 0, 0.123282909, 0)
elctronmobile.cloud.Size = UDim2.new(0, 29, 0, 29)
elctronmobile.cloud.Image = "rbxassetid://13820200740"

elctronmobile.UICorner_4.Parent = elctronmobile.cloud

elctronmobile.settings.Name = "settings"
elctronmobile.settings.Parent = elctronmobile.Left
elctronmobile.settings.BackgroundColor3 = Color3.fromRGB(34, 38, 46)
elctronmobile.settings.Position = UDim2.new(0.11706984, 0, 0.247313917, 0)
elctronmobile.settings.Size = UDim2.new(0, 29, 0, 31)
elctronmobile.settings.Image = "rbxassetid://13806744100"

elctronmobile.UICorner_5.Parent = elctronmobile.settings

elctronmobile.UIAspectRatioConstraint_2.Parent = elctronmobile.Left
elctronmobile.UIAspectRatioConstraint_2.AspectRatio = 0.147

elctronmobile.Frames.Name = "Frames"
elctronmobile.Frames.Parent = elctronmobile.Mainframe
elctronmobile.Frames.BackgroundColor3 = Color3.fromRGB(24, 28, 36)
elctronmobile.Frames.Position = UDim2.new(0.0679066405, 0, 0.170999974, 0)
elctronmobile.Frames.Size = UDim2.new(0, 549, 0, 254)

elctronmobile.executer_2.Name = "executer"
elctronmobile.executer_2.Parent = elctronmobile.Frames
elctronmobile.executer_2.BackgroundColor3 = Color3.fromRGB(24, 28, 36)
elctronmobile.executer_2.Position = UDim2.new(0.000462794036, 0, 0.00607419945, 0)
elctronmobile.executer_2.Size = UDim2.new(0, 544, 0, 254)

elctronmobile.Down.Name = "Down"
elctronmobile.Down.Parent = elctronmobile.executer_2
elctronmobile.Down.BackgroundColor3 = Color3.fromRGB(26, 30, 37)
elctronmobile.Down.BorderColor3 = Color3.fromRGB(28, 32, 40)
elctronmobile.Down.Position = UDim2.new(-0.00784290582, 0, 0.876190424, 0)
elctronmobile.Down.Size = UDim2.new(0, 550, 0, 34)

elctronmobile.copy.Name = "copy"
elctronmobile.copy.Parent = elctronmobile.Down
elctronmobile.copy.BackgroundColor3 = Color3.fromRGB(34, 38, 46)
elctronmobile.copy.Position = UDim2.new(0, 74, 0, 4)
elctronmobile.copy.Size = UDim2.new(0, 57, 0, 25)
elctronmobile.copy.Font = Enum.Font.SourceSans
elctronmobile.copy.Text = "Copy"
elctronmobile.copy.TextColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.copy.TextSize = 14.000

elctronmobile.UICorner_6.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_6.Parent = elctronmobile.copy

elctronmobile.paste.Name = "paste"
elctronmobile.paste.Parent = elctronmobile.Down
elctronmobile.paste.BackgroundColor3 = Color3.fromRGB(34, 38, 46)
elctronmobile.paste.Position = UDim2.new(0, 139, 0, 4)
elctronmobile.paste.Size = UDim2.new(0, 57, 0, 25)
elctronmobile.paste.Font = Enum.Font.SourceSans
elctronmobile.paste.Text = "Paste"
elctronmobile.paste.TextColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.paste.TextSize = 14.000

elctronmobile.UICorner_7.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_7.Parent = elctronmobile.paste

elctronmobile.Execute.Name = "Execute"
elctronmobile.Execute.Parent = elctronmobile.Down
elctronmobile.Execute.BackgroundColor3 = Color3.fromRGB(34, 38, 46)
elctronmobile.Execute.Position = UDim2.new(0, 477, 0, 4)
elctronmobile.Execute.Size = UDim2.new(0, 57, 0, 25)
elctronmobile.Execute.Font = Enum.Font.SourceSans
elctronmobile.Execute.Text = "Execute"
elctronmobile.Execute.TextColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.Execute.TextSize = 14.000

elctronmobile.UICorner_8.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_8.Parent = elctronmobile.Execute

elctronmobile.clear.Name = "clear"
elctronmobile.clear.Parent = elctronmobile.Down
elctronmobile.clear.BackgroundColor3 = Color3.fromRGB(34, 38, 46)
elctronmobile.clear.Position = UDim2.new(0, 205, 0, 4)
elctronmobile.clear.Size = UDim2.new(0, 57, 0, 25)
elctronmobile.clear.Font = Enum.Font.SourceSans
elctronmobile.clear.Text = "Clear"
elctronmobile.clear.TextColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.clear.TextSize = 14.000

elctronmobile.UICorner_9.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_9.Parent = elctronmobile.clear

elctronmobile.executorframe.Name = "executorframe"
elctronmobile.executorframe.Parent = elctronmobile.executer_2
elctronmobile.executorframe.BackgroundColor3 = Color3.fromRGB(24, 28, 36)
elctronmobile.executorframe.Position = UDim2.new(-0.00753273675, 0, 0.0449319668, 0)
elctronmobile.executorframe.Size = UDim2.new(0, 548, 0, 211)

elctronmobile.Lines.Name = "Lines"
elctronmobile.Lines.Parent = elctronmobile.executorframe
elctronmobile.Lines.BackgroundColor3 = Color3.fromRGB(24, 28, 36)
elctronmobile.Lines.BorderColor3 = Color3.fromRGB(26, 30, 38)
elctronmobile.Lines.BorderSizePixel = 2
elctronmobile.Lines.Position = UDim2.new(0.0148112616, 0, 0.0216052886, 0)
elctronmobile.Lines.Size = UDim2.new(0, 49, 0, 201)

elctronmobile.UIListLayout.Parent = elctronmobile.Lines
elctronmobile.UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

elctronmobile.text1.Name = "text1"
elctronmobile.text1.Parent = elctronmobile.Lines
elctronmobile.text1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.text1.BackgroundTransparency = 1.000
elctronmobile.text1.Position = UDim2.new(0, 0, 0, -1)
elctronmobile.text1.Size = UDim2.new(0, 50, 0, 16)
elctronmobile.text1.Font = Enum.Font.SourceSans
elctronmobile.text1.Text = "1"
elctronmobile.text1.TextColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.text1.TextSize = 16.000

elctronmobile.text2.Name = "text2"
elctronmobile.text2.Parent = elctronmobile.Lines
elctronmobile.text2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.text2.BackgroundTransparency = 1.000
elctronmobile.text2.Position = UDim2.new(0, 0, 0, -1)
elctronmobile.text2.Size = UDim2.new(0, 50, 0, 16)
elctronmobile.text2.Font = Enum.Font.SourceSans
elctronmobile.text2.Text = "2"
elctronmobile.text2.TextColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.text2.TextSize = 16.000

elctronmobile.text3.Name = "text3"
elctronmobile.text3.Parent = elctronmobile.Lines
elctronmobile.text3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.text3.BackgroundTransparency = 1.000
elctronmobile.text3.Position = UDim2.new(0, -5, 0, 42)
elctronmobile.text3.Size = UDim2.new(0, 50, 0, 16)
elctronmobile.text3.Font = Enum.Font.SourceSans
elctronmobile.text3.Text = "3"
elctronmobile.text3.TextColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.text3.TextSize = 16.000

elctronmobile.executor.Name = "executor"
elctronmobile.executor.Parent = elctronmobile.executorframe
elctronmobile.executor.BackgroundColor3 = Color3.fromRGB(24, 28, 35)
elctronmobile.executor.Position = UDim2.new(0.162888199, 0, 0.0216053575, 0)
elctronmobile.executor.Size = UDim2.new(0, 397, 0, 201)

elctronmobile.TextBox.Parent = elctronmobile.executor
elctronmobile.TextBox.BackgroundColor3 = Color3.fromRGB(24, 28, 36)
elctronmobile.TextBox.BorderColor3 = Color3.fromRGB(24, 28, 36)
elctronmobile.TextBox.BorderSizePixel = 2
elctronmobile.TextBox.ClipsDescendants = true
elctronmobile.TextBox.LayoutOrder = 5
elctronmobile.TextBox.Position = UDim2.new(-0.04534005, 0, 0, 0)
elctronmobile.TextBox.Size = UDim2.new(0, 474, 0, 201)
elctronmobile.TextBox.Font = Enum.Font.SourceSans
elctronmobile.TextBox.MultiLine = true
elctronmobile.TextBox.PlaceholderColor3 = Color3.fromRGB(127, 127, 127)
elctronmobile.TextBox.PlaceholderText = "print(\"hi\")\\nprint(\"ui test\")\\nprint(\"by anya :> )"
elctronmobile.TextBox.Text = ""
elctronmobile.TextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.TextBox.TextSize = 16.000
elctronmobile.TextBox.TextStrokeColor3 = Color3.fromRGB(255, 0, 4)
elctronmobile.TextBox.TextXAlignment = Enum.TextXAlignment.Left
elctronmobile.TextBox.TextYAlignment = Enum.TextYAlignment.Top

elctronmobile.scripts.Name = "scripts"
elctronmobile.scripts.Parent = elctronmobile.executer_2
elctronmobile.scripts.BackgroundColor3 = Color3.fromRGB(28, 32, 40)
elctronmobile.scripts.BorderColor3 = Color3.fromRGB(31, 39, 53)
elctronmobile.scripts.Position = UDim2.new(0.00603827322, 0, -0.0160229895, 0)
elctronmobile.scripts.Size = UDim2.new(0, 542, 0, 14)

elctronmobile.script.Name = "script"
elctronmobile.script.Parent = elctronmobile.scripts
elctronmobile.script.BackgroundColor3 = Color3.fromRGB(31, 39, 53)
elctronmobile.script.BorderColor3 = Color3.fromRGB(31, 39, 53)
elctronmobile.script.Position = UDim2.new(-0.0423349813, 0, 0.0714287758, 0)
elctronmobile.script.Size = UDim2.new(0, 57, 0, 12)
elctronmobile.script.Font = Enum.Font.SourceSans
elctronmobile.script.Text = "script1"
elctronmobile.script.TextColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.script.TextSize = 14.000
elctronmobile.script.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.close.Name = "close"
elctronmobile.close.Parent = elctronmobile.script
elctronmobile.close.BackgroundColor3 = Color3.fromRGB(31, 39, 53)
elctronmobile.close.BackgroundTransparency = 1.000
elctronmobile.close.BorderColor3 = Color3.fromRGB(31, 39, 53)
elctronmobile.close.Position = UDim2.new(0.724828064, 0, 0.133928299, 0)
elctronmobile.close.Size = UDim2.new(0, 13, 0, 11)
elctronmobile.close.Font = Enum.Font.SourceSans
elctronmobile.close.Text = "X"
elctronmobile.close.TextColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.close.TextScaled = true
elctronmobile.close.TextSize = 14.000
elctronmobile.close.TextWrapped = true

elctronmobile.UICorner_10.CornerRadius = UDim.new(0, 4)
elctronmobile.UICorner_10.Parent = elctronmobile.script

elctronmobile.plus.Name = "plus"
elctronmobile.plus.Parent = elctronmobile.script
elctronmobile.plus.BackgroundColor3 = Color3.fromRGB(31, 39, 53)
elctronmobile.plus.BackgroundTransparency = 1.000
elctronmobile.plus.BorderColor3 = Color3.fromRGB(31, 39, 53)
elctronmobile.plus.Position = UDim2.new(0.98934418, 0, 0, 0)
elctronmobile.plus.Size = UDim2.new(0, 19, 0, 16)
elctronmobile.plus.Font = Enum.Font.SourceSans
elctronmobile.plus.Text = "+"
elctronmobile.plus.TextColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.plus.TextScaled = true
elctronmobile.plus.TextSize = 14.000
elctronmobile.plus.TextWrapped = true

elctronmobile.UIGridLayout.Parent = elctronmobile.scripts
elctronmobile.UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
elctronmobile.UIGridLayout.CellPadding = UDim2.new(0, 7, 0, 5)
elctronmobile.UIGridLayout.CellSize = UDim2.new(0, 48, 0, 16)

elctronmobile.cloud_2.Name = "cloud"
elctronmobile.cloud_2.Parent = elctronmobile.Frames
elctronmobile.cloud_2.BackgroundColor3 = Color3.fromRGB(24, 28, 36)
elctronmobile.cloud_2.Position = UDim2.new(0.00046282215, 0, 0.00213719159, 0)
elctronmobile.cloud_2.Size = UDim2.new(0, 548, 0, 254)
elctronmobile.cloud_2.Visible = false

elctronmobile.down.Name = "down"
elctronmobile.down.Parent = elctronmobile.cloud_2
elctronmobile.down.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.down.BorderColor3 = Color3.fromRGB(24, 28, 36)
elctronmobile.down.Position = UDim2.new(0.00776215736, 0, 0.234420657, 0)
elctronmobile.down.Size = UDim2.new(0, 537, 0, 195)

elctronmobile.oldnew.Name = "oldnew"
elctronmobile.oldnew.Parent = elctronmobile.down
elctronmobile.oldnew.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.oldnew.Position = UDim2.new(0.81934309, 0, -0.0264550261, 0)
elctronmobile.oldnew.Size = UDim2.new(0, 91, 0, 113)
elctronmobile.oldnew.Visible = false

elctronmobile.UICorner_11.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_11.Parent = elctronmobile.oldnew

elctronmobile.TextButton.Parent = elctronmobile.oldnew
elctronmobile.TextButton.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextButton.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextButton.Position = UDim2.new(0.0549450554, 0, 0.0500000007, 0)
elctronmobile.TextButton.Size = UDim2.new(0, 85, 0, 18)
elctronmobile.TextButton.Font = Enum.Font.SourceSans
elctronmobile.TextButton.Text = "New - Old"
elctronmobile.TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.TextButton.TextSize = 14.000
elctronmobile.TextButton.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.UIListLayout_2.Parent = elctronmobile.oldnew
elctronmobile.UIListLayout_2.HorizontalAlignment = Enum.HorizontalAlignment.Center
elctronmobile.UIListLayout_2.SortOrder = Enum.SortOrder.LayoutOrder

elctronmobile.TextButton_2.Parent = elctronmobile.oldnew
elctronmobile.TextButton_2.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextButton_2.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextButton_2.Position = UDim2.new(0.0549450554, 0, 0.0500000007, 0)
elctronmobile.TextButton_2.Size = UDim2.new(0, 85, 0, 18)
elctronmobile.TextButton_2.Font = Enum.Font.SourceSans
elctronmobile.TextButton_2.Text = "Old - New"
elctronmobile.TextButton_2.TextColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.TextButton_2.TextSize = 14.000
elctronmobile.TextButton_2.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.TextButton_3.Parent = elctronmobile.oldnew
elctronmobile.TextButton_3.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextButton_3.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextButton_3.Position = UDim2.new(0.0549450554, 0, 0.0500000007, 0)
elctronmobile.TextButton_3.Size = UDim2.new(0, 85, 0, 18)
elctronmobile.TextButton_3.Font = Enum.Font.SourceSans
elctronmobile.TextButton_3.Text = "Name: A - Z"
elctronmobile.TextButton_3.TextColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.TextButton_3.TextSize = 14.000
elctronmobile.TextButton_3.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.TextButton_4.Parent = elctronmobile.oldnew
elctronmobile.TextButton_4.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextButton_4.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextButton_4.Position = UDim2.new(0.0549450554, 0, 0.0500000007, 0)
elctronmobile.TextButton_4.Size = UDim2.new(0, 85, 0, 18)
elctronmobile.TextButton_4.Font = Enum.Font.SourceSans
elctronmobile.TextButton_4.Text = "Name: Z - A"
elctronmobile.TextButton_4.TextColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.TextButton_4.TextSize = 14.000
elctronmobile.TextButton_4.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.TextButton_5.Parent = elctronmobile.oldnew
elctronmobile.TextButton_5.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextButton_5.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextButton_5.Position = UDim2.new(0.0549450554, 0, 0.0500000007, 0)
elctronmobile.TextButton_5.Size = UDim2.new(0, 85, 0, 18)
elctronmobile.TextButton_5.Font = Enum.Font.SourceSans
elctronmobile.TextButton_5.Text = "Game: A - Z"
elctronmobile.TextButton_5.TextColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.TextButton_5.TextSize = 14.000
elctronmobile.TextButton_5.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.TextButton_6.Parent = elctronmobile.oldnew
elctronmobile.TextButton_6.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextButton_6.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextButton_6.Position = UDim2.new(0.0549450554, 0, 0.0500000007, 0)
elctronmobile.TextButton_6.Size = UDim2.new(0, 85, 0, 18)
elctronmobile.TextButton_6.Font = Enum.Font.SourceSans
elctronmobile.TextButton_6.Text = "Verifed"
elctronmobile.TextButton_6.TextColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.TextButton_6.TextSize = 14.000
elctronmobile.TextButton_6.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.Frame.Parent = elctronmobile.down
elctronmobile.Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.Frame.BackgroundTransparency = 1.000
elctronmobile.Frame.Position = UDim2.new(0, 0, 0.137566134, 0)
elctronmobile.Frame.Size = UDim2.new(0, 519, 0, 164)

elctronmobile.ScrollingFrame.Parent = elctronmobile.down
elctronmobile.ScrollingFrame.Active = true
elctronmobile.ScrollingFrame.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.ScrollingFrame.Position = UDim2.new(0.00186219742, 0, 0.0853072703, 0)
elctronmobile.ScrollingFrame.Size = UDim2.new(0, 534, 0, 168)
elctronmobile.ScrollingFrame.BottomImage = ""
elctronmobile.ScrollingFrame.CanvasSize = UDim2.new(0, 0, 4, 0)
elctronmobile.ScrollingFrame.ScrollBarThickness = 9
elctronmobile.ScrollingFrame.TopImage = ""

elctronmobile.scriptluncher.Name = "scriptluncher"
elctronmobile.scriptluncher.Parent = elctronmobile.ScrollingFrame
elctronmobile.scriptluncher.BackgroundColor3 = Color3.fromRGB(24, 27, 32)
elctronmobile.scriptluncher.Position = UDim2.new(0.0167667568, 0, -0.00517509086, 0)
elctronmobile.scriptluncher.Size = UDim2.new(0, 144, 0, 118)

elctronmobile.UICorner_12.Parent = elctronmobile.scriptluncher

elctronmobile.scriptimage.Name = "scriptimage"
elctronmobile.scriptimage.Parent = elctronmobile.scriptluncher
elctronmobile.scriptimage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.scriptimage.Size = UDim2.new(0, 143, 0, 65)
elctronmobile.scriptimage.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"

elctronmobile.TextLabel_2.Parent = elctronmobile.scriptluncher
elctronmobile.TextLabel_2.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_2.BackgroundTransparency = 1.000
elctronmobile.TextLabel_2.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_2.Position = UDim2.new(0.0624161288, 0, 0.604954362, 0)
elctronmobile.TextLabel_2.Size = UDim2.new(0, 71, 0, 11)
elctronmobile.TextLabel_2.Font = Enum.Font.SourceSans
elctronmobile.TextLabel_2.Text = "ScriptName"
elctronmobile.TextLabel_2.TextColor3 = Color3.fromRGB(158, 159, 161)
elctronmobile.TextLabel_2.TextSize = 15.000
elctronmobile.TextLabel_2.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.UICorner_13.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_13.Parent = elctronmobile.TextLabel_2

elctronmobile.TextLabel_3.Parent = elctronmobile.scriptluncher
elctronmobile.TextLabel_3.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_3.BackgroundTransparency = 1.000
elctronmobile.TextLabel_3.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_3.Position = UDim2.new(0.0624161288, 0, 0.740547597, 0)
elctronmobile.TextLabel_3.Size = UDim2.new(0, 71, 0, 15)
elctronmobile.TextLabel_3.Font = Enum.Font.SourceSans
elctronmobile.TextLabel_3.Text = "Universal"
elctronmobile.TextLabel_3.TextColor3 = Color3.fromRGB(158, 159, 161)
elctronmobile.TextLabel_3.TextSize = 20.000
elctronmobile.TextLabel_3.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.UICorner_14.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_14.Parent = elctronmobile.TextLabel_3

elctronmobile.verified.Name = "verified"
elctronmobile.verified.Parent = elctronmobile.scriptluncher
elctronmobile.verified.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.verified.BackgroundTransparency = 1.000
elctronmobile.verified.Position = UDim2.new(0.808673441, 0, 0.618644118, 0)
elctronmobile.verified.Size = UDim2.new(0, 16, 0, 14)
elctronmobile.verified.Image = "rbxassetid://13821702478"

elctronmobile.ImageButton_2.Parent = elctronmobile.scriptluncher
elctronmobile.ImageButton_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.ImageButton_2.BackgroundTransparency = 1.000
elctronmobile.ImageButton_2.Position = UDim2.new(0.802111149, 0, 0.765396893, 0)
elctronmobile.ImageButton_2.Size = UDim2.new(0, 16, 0, 14)
elctronmobile.ImageButton_2.Image = "rbxassetid://13821697887"

elctronmobile.UIGridLayout_2.Parent = elctronmobile.ScrollingFrame
elctronmobile.UIGridLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
elctronmobile.UIGridLayout_2.CellPadding = UDim2.new(0, 20, 0, 10)
elctronmobile.UIGridLayout_2.CellSize = UDim2.new(0, 144, 0, 118)

elctronmobile.scriptluncher_2.Name = "scriptluncher"
elctronmobile.scriptluncher_2.Parent = elctronmobile.ScrollingFrame
elctronmobile.scriptluncher_2.BackgroundColor3 = Color3.fromRGB(24, 27, 32)
elctronmobile.scriptluncher_2.Position = UDim2.new(0.0167667568, 0, -0.00517509086, 0)
elctronmobile.scriptluncher_2.Size = UDim2.new(0, 144, 0, 118)

elctronmobile.UICorner_15.Parent = elctronmobile.scriptluncher_2

elctronmobile.scriptimage_2.Name = "scriptimage"
elctronmobile.scriptimage_2.Parent = elctronmobile.scriptluncher_2
elctronmobile.scriptimage_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.scriptimage_2.Size = UDim2.new(0, 143, 0, 65)
elctronmobile.scriptimage_2.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"

elctronmobile.TextLabel_4.Parent = elctronmobile.scriptluncher_2
elctronmobile.TextLabel_4.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_4.BackgroundTransparency = 1.000
elctronmobile.TextLabel_4.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_4.Position = UDim2.new(0.0624161288, 0, 0.604954362, 0)
elctronmobile.TextLabel_4.Size = UDim2.new(0, 71, 0, 11)
elctronmobile.TextLabel_4.Font = Enum.Font.SourceSans
elctronmobile.TextLabel_4.Text = "ScriptName"
elctronmobile.TextLabel_4.TextColor3 = Color3.fromRGB(158, 159, 161)
elctronmobile.TextLabel_4.TextSize = 15.000
elctronmobile.TextLabel_4.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.UICorner_16.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_16.Parent = elctronmobile.TextLabel_4

elctronmobile.TextLabel_5.Parent = elctronmobile.scriptluncher_2
elctronmobile.TextLabel_5.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_5.BackgroundTransparency = 1.000
elctronmobile.TextLabel_5.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_5.Position = UDim2.new(0.0624161288, 0, 0.740547597, 0)
elctronmobile.TextLabel_5.Size = UDim2.new(0, 71, 0, 15)
elctronmobile.TextLabel_5.Font = Enum.Font.SourceSans
elctronmobile.TextLabel_5.Text = "Universal"
elctronmobile.TextLabel_5.TextColor3 = Color3.fromRGB(158, 159, 161)
elctronmobile.TextLabel_5.TextSize = 20.000
elctronmobile.TextLabel_5.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.UICorner_17.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_17.Parent = elctronmobile.TextLabel_5

elctronmobile.verified_2.Name = "verified"
elctronmobile.verified_2.Parent = elctronmobile.scriptluncher_2
elctronmobile.verified_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.verified_2.BackgroundTransparency = 1.000
elctronmobile.verified_2.Position = UDim2.new(0.808673441, 0, 0.618644118, 0)
elctronmobile.verified_2.Size = UDim2.new(0, 16, 0, 14)
elctronmobile.verified_2.Image = "rbxassetid://13821702478"

elctronmobile.ImageButton_3.Parent = elctronmobile.scriptluncher_2
elctronmobile.ImageButton_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.ImageButton_3.BackgroundTransparency = 1.000
elctronmobile.ImageButton_3.Position = UDim2.new(0.802111149, 0, 0.765396893, 0)
elctronmobile.ImageButton_3.Size = UDim2.new(0, 16, 0, 14)
elctronmobile.ImageButton_3.Image = "rbxassetid://13821697887"

elctronmobile.scriptluncher_3.Name = "scriptluncher"
elctronmobile.scriptluncher_3.Parent = elctronmobile.ScrollingFrame
elctronmobile.scriptluncher_3.BackgroundColor3 = Color3.fromRGB(24, 27, 32)
elctronmobile.scriptluncher_3.Position = UDim2.new(0.0167667568, 0, -0.00517509086, 0)
elctronmobile.scriptluncher_3.Size = UDim2.new(0, 144, 0, 118)

elctronmobile.UICorner_18.Parent = elctronmobile.scriptluncher_3

elctronmobile.scriptimage_3.Name = "scriptimage"
elctronmobile.scriptimage_3.Parent = elctronmobile.scriptluncher_3
elctronmobile.scriptimage_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.scriptimage_3.Size = UDim2.new(0, 143, 0, 65)
elctronmobile.scriptimage_3.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"

elctronmobile.TextLabel_6.Parent = elctronmobile.scriptluncher_3
elctronmobile.TextLabel_6.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_6.BackgroundTransparency = 1.000
elctronmobile.TextLabel_6.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_6.Position = UDim2.new(0.0624161288, 0, 0.604954362, 0)
elctronmobile.TextLabel_6.Size = UDim2.new(0, 71, 0, 11)
elctronmobile.TextLabel_6.Font = Enum.Font.SourceSans
elctronmobile.TextLabel_6.Text = "ScriptName"
elctronmobile.TextLabel_6.TextColor3 = Color3.fromRGB(158, 159, 161)
elctronmobile.TextLabel_6.TextSize = 15.000
elctronmobile.TextLabel_6.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.UICorner_19.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_19.Parent = elctronmobile.TextLabel_6

elctronmobile.TextLabel_7.Parent = elctronmobile.scriptluncher_3
elctronmobile.TextLabel_7.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_7.BackgroundTransparency = 1.000
elctronmobile.TextLabel_7.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_7.Position = UDim2.new(0.0624161288, 0, 0.740547597, 0)
elctronmobile.TextLabel_7.Size = UDim2.new(0, 71, 0, 15)
elctronmobile.TextLabel_7.Font = Enum.Font.SourceSans
elctronmobile.TextLabel_7.Text = "Universal"
elctronmobile.TextLabel_7.TextColor3 = Color3.fromRGB(158, 159, 161)
elctronmobile.TextLabel_7.TextSize = 20.000
elctronmobile.TextLabel_7.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.UICorner_20.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_20.Parent = elctronmobile.TextLabel_7

elctronmobile.verified_3.Name = "verified"
elctronmobile.verified_3.Parent = elctronmobile.scriptluncher_3
elctronmobile.verified_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.verified_3.BackgroundTransparency = 1.000
elctronmobile.verified_3.Position = UDim2.new(0.808673441, 0, 0.618644118, 0)
elctronmobile.verified_3.Size = UDim2.new(0, 16, 0, 14)
elctronmobile.verified_3.Image = "rbxassetid://13821702478"

elctronmobile.ImageButton_4.Parent = elctronmobile.scriptluncher_3
elctronmobile.ImageButton_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.ImageButton_4.BackgroundTransparency = 1.000
elctronmobile.ImageButton_4.Position = UDim2.new(0.802111149, 0, 0.765396893, 0)
elctronmobile.ImageButton_4.Size = UDim2.new(0, 16, 0, 14)
elctronmobile.ImageButton_4.Image = "rbxassetid://13821697887"

elctronmobile.scriptluncher_4.Name = "scriptluncher"
elctronmobile.scriptluncher_4.Parent = elctronmobile.ScrollingFrame
elctronmobile.scriptluncher_4.BackgroundColor3 = Color3.fromRGB(24, 27, 32)
elctronmobile.scriptluncher_4.Position = UDim2.new(0.0167667568, 0, -0.00517509086, 0)
elctronmobile.scriptluncher_4.Size = UDim2.new(0, 144, 0, 118)

elctronmobile.UICorner_21.Parent = elctronmobile.scriptluncher_4

elctronmobile.scriptimage_4.Name = "scriptimage"
elctronmobile.scriptimage_4.Parent = elctronmobile.scriptluncher_4
elctronmobile.scriptimage_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.scriptimage_4.Size = UDim2.new(0, 143, 0, 65)
elctronmobile.scriptimage_4.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"

elctronmobile.TextLabel_8.Parent = elctronmobile.scriptluncher_4
elctronmobile.TextLabel_8.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_8.BackgroundTransparency = 1.000
elctronmobile.TextLabel_8.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_8.Position = UDim2.new(0.0624161288, 0, 0.604954362, 0)
elctronmobile.TextLabel_8.Size = UDim2.new(0, 71, 0, 11)
elctronmobile.TextLabel_8.Font = Enum.Font.SourceSans
elctronmobile.TextLabel_8.Text = "ScriptName"
elctronmobile.TextLabel_8.TextColor3 = Color3.fromRGB(158, 159, 161)
elctronmobile.TextLabel_8.TextSize = 15.000
elctronmobile.TextLabel_8.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.UICorner_22.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_22.Parent = elctronmobile.TextLabel_8

elctronmobile.TextLabel_9.Parent = elctronmobile.scriptluncher_4
elctronmobile.TextLabel_9.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_9.BackgroundTransparency = 1.000
elctronmobile.TextLabel_9.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_9.Position = UDim2.new(0.0624161288, 0, 0.740547597, 0)
elctronmobile.TextLabel_9.Size = UDim2.new(0, 71, 0, 15)
elctronmobile.TextLabel_9.Font = Enum.Font.SourceSans
elctronmobile.TextLabel_9.Text = "Universal"
elctronmobile.TextLabel_9.TextColor3 = Color3.fromRGB(158, 159, 161)
elctronmobile.TextLabel_9.TextSize = 20.000
elctronmobile.TextLabel_9.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.UICorner_23.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_23.Parent = elctronmobile.TextLabel_9

elctronmobile.verified_4.Name = "verified"
elctronmobile.verified_4.Parent = elctronmobile.scriptluncher_4
elctronmobile.verified_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.verified_4.BackgroundTransparency = 1.000
elctronmobile.verified_4.Position = UDim2.new(0.808673441, 0, 0.618644118, 0)
elctronmobile.verified_4.Size = UDim2.new(0, 16, 0, 14)
elctronmobile.verified_4.Image = "rbxassetid://13821702478"

elctronmobile.ImageButton_5.Parent = elctronmobile.scriptluncher_4
elctronmobile.ImageButton_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.ImageButton_5.BackgroundTransparency = 1.000
elctronmobile.ImageButton_5.Position = UDim2.new(0.802111149, 0, 0.765396893, 0)
elctronmobile.ImageButton_5.Size = UDim2.new(0, 16, 0, 14)
elctronmobile.ImageButton_5.Image = "rbxassetid://13821697887"

elctronmobile.scriptluncher_5.Name = "scriptluncher"
elctronmobile.scriptluncher_5.Parent = elctronmobile.ScrollingFrame
elctronmobile.scriptluncher_5.BackgroundColor3 = Color3.fromRGB(24, 27, 32)
elctronmobile.scriptluncher_5.Position = UDim2.new(0.0167667568, 0, -0.00517509086, 0)
elctronmobile.scriptluncher_5.Size = UDim2.new(0, 144, 0, 118)

elctronmobile.UICorner_24.Parent = elctronmobile.scriptluncher_5

elctronmobile.scriptimage_5.Name = "scriptimage"
elctronmobile.scriptimage_5.Parent = elctronmobile.scriptluncher_5
elctronmobile.scriptimage_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.scriptimage_5.Size = UDim2.new(0, 143, 0, 65)
elctronmobile.scriptimage_5.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"

elctronmobile.TextLabel_10.Parent = elctronmobile.scriptluncher_5
elctronmobile.TextLabel_10.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_10.BackgroundTransparency = 1.000
elctronmobile.TextLabel_10.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_10.Position = UDim2.new(0.0624161288, 0, 0.604954362, 0)
elctronmobile.TextLabel_10.Size = UDim2.new(0, 71, 0, 11)
elctronmobile.TextLabel_10.Font = Enum.Font.SourceSans
elctronmobile.TextLabel_10.Text = "ScriptName"
elctronmobile.TextLabel_10.TextColor3 = Color3.fromRGB(158, 159, 161)
elctronmobile.TextLabel_10.TextSize = 15.000
elctronmobile.TextLabel_10.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.UICorner_25.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_25.Parent = elctronmobile.TextLabel_10

elctronmobile.TextLabel_11.Parent = elctronmobile.scriptluncher_5
elctronmobile.TextLabel_11.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_11.BackgroundTransparency = 1.000
elctronmobile.TextLabel_11.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_11.Position = UDim2.new(0.0624161288, 0, 0.740547597, 0)
elctronmobile.TextLabel_11.Size = UDim2.new(0, 71, 0, 15)
elctronmobile.TextLabel_11.Font = Enum.Font.SourceSans
elctronmobile.TextLabel_11.Text = "Universal"
elctronmobile.TextLabel_11.TextColor3 = Color3.fromRGB(158, 159, 161)
elctronmobile.TextLabel_11.TextSize = 20.000
elctronmobile.TextLabel_11.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.UICorner_26.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_26.Parent = elctronmobile.TextLabel_11

elctronmobile.verified_5.Name = "verified"
elctronmobile.verified_5.Parent = elctronmobile.scriptluncher_5
elctronmobile.verified_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.verified_5.BackgroundTransparency = 1.000
elctronmobile.verified_5.Position = UDim2.new(0.808673441, 0, 0.618644118, 0)
elctronmobile.verified_5.Size = UDim2.new(0, 16, 0, 14)
elctronmobile.verified_5.Image = "rbxassetid://13821702478"

elctronmobile.ImageButton_6.Parent = elctronmobile.scriptluncher_5
elctronmobile.ImageButton_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.ImageButton_6.BackgroundTransparency = 1.000
elctronmobile.ImageButton_6.Position = UDim2.new(0.802111149, 0, 0.765396893, 0)
elctronmobile.ImageButton_6.Size = UDim2.new(0, 16, 0, 14)
elctronmobile.ImageButton_6.Image = "rbxassetid://13821697887"

elctronmobile.scriptluncher_6.Name = "scriptluncher"
elctronmobile.scriptluncher_6.Parent = elctronmobile.ScrollingFrame
elctronmobile.scriptluncher_6.BackgroundColor3 = Color3.fromRGB(24, 27, 32)
elctronmobile.scriptluncher_6.Position = UDim2.new(0.0167667568, 0, -0.00517509086, 0)
elctronmobile.scriptluncher_6.Size = UDim2.new(0, 144, 0, 118)

elctronmobile.UICorner_27.Parent = elctronmobile.scriptluncher_6

elctronmobile.scriptimage_6.Name = "scriptimage"
elctronmobile.scriptimage_6.Parent = elctronmobile.scriptluncher_6
elctronmobile.scriptimage_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.scriptimage_6.Size = UDim2.new(0, 143, 0, 65)
elctronmobile.scriptimage_6.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"

elctronmobile.TextLabel_12.Parent = elctronmobile.scriptluncher_6
elctronmobile.TextLabel_12.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_12.BackgroundTransparency = 1.000
elctronmobile.TextLabel_12.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_12.Position = UDim2.new(0.0624161288, 0, 0.604954362, 0)
elctronmobile.TextLabel_12.Size = UDim2.new(0, 71, 0, 11)
elctronmobile.TextLabel_12.Font = Enum.Font.SourceSans
elctronmobile.TextLabel_12.Text = "ScriptName"
elctronmobile.TextLabel_12.TextColor3 = Color3.fromRGB(158, 159, 161)
elctronmobile.TextLabel_12.TextSize = 15.000
elctronmobile.TextLabel_12.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.UICorner_28.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_28.Parent = elctronmobile.TextLabel_12

elctronmobile.TextLabel_13.Parent = elctronmobile.scriptluncher_6
elctronmobile.TextLabel_13.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_13.BackgroundTransparency = 1.000
elctronmobile.TextLabel_13.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_13.Position = UDim2.new(0.0624161288, 0, 0.740547597, 0)
elctronmobile.TextLabel_13.Size = UDim2.new(0, 71, 0, 15)
elctronmobile.TextLabel_13.Font = Enum.Font.SourceSans
elctronmobile.TextLabel_13.Text = "Universal"
elctronmobile.TextLabel_13.TextColor3 = Color3.fromRGB(158, 159, 161)
elctronmobile.TextLabel_13.TextSize = 20.000
elctronmobile.TextLabel_13.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.UICorner_29.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_29.Parent = elctronmobile.TextLabel_13

elctronmobile.verified_6.Name = "verified"
elctronmobile.verified_6.Parent = elctronmobile.scriptluncher_6
elctronmobile.verified_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.verified_6.BackgroundTransparency = 1.000
elctronmobile.verified_6.Position = UDim2.new(0.808673441, 0, 0.618644118, 0)
elctronmobile.verified_6.Size = UDim2.new(0, 16, 0, 14)
elctronmobile.verified_6.Image = "rbxassetid://13821702478"

elctronmobile.ImageButton_7.Parent = elctronmobile.scriptluncher_6
elctronmobile.ImageButton_7.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.ImageButton_7.BackgroundTransparency = 1.000
elctronmobile.ImageButton_7.Position = UDim2.new(0.802111149, 0, 0.765396893, 0)
elctronmobile.ImageButton_7.Size = UDim2.new(0, 16, 0, 14)
elctronmobile.ImageButton_7.Image = "rbxassetid://13821697887"

elctronmobile.scriptluncher_7.Name = "scriptluncher"
elctronmobile.scriptluncher_7.Parent = elctronmobile.ScrollingFrame
elctronmobile.scriptluncher_7.BackgroundColor3 = Color3.fromRGB(24, 27, 32)
elctronmobile.scriptluncher_7.Position = UDim2.new(0.0167667568, 0, -0.00517509086, 0)
elctronmobile.scriptluncher_7.Size = UDim2.new(0, 144, 0, 118)

elctronmobile.UICorner_30.Parent = elctronmobile.scriptluncher_7

elctronmobile.scriptimage_7.Name = "scriptimage"
elctronmobile.scriptimage_7.Parent = elctronmobile.scriptluncher_7
elctronmobile.scriptimage_7.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.scriptimage_7.Size = UDim2.new(0, 143, 0, 65)
elctronmobile.scriptimage_7.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"

elctronmobile.TextLabel_14.Parent = elctronmobile.scriptluncher_7
elctronmobile.TextLabel_14.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_14.BackgroundTransparency = 1.000
elctronmobile.TextLabel_14.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_14.Position = UDim2.new(0.0624161288, 0, 0.604954362, 0)
elctronmobile.TextLabel_14.Size = UDim2.new(0, 71, 0, 11)
elctronmobile.TextLabel_14.Font = Enum.Font.SourceSans
elctronmobile.TextLabel_14.Text = "ScriptName"
elctronmobile.TextLabel_14.TextColor3 = Color3.fromRGB(158, 159, 161)
elctronmobile.TextLabel_14.TextSize = 15.000
elctronmobile.TextLabel_14.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.UICorner_31.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_31.Parent = elctronmobile.TextLabel_14

elctronmobile.TextLabel_15.Parent = elctronmobile.scriptluncher_7
elctronmobile.TextLabel_15.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_15.BackgroundTransparency = 1.000
elctronmobile.TextLabel_15.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_15.Position = UDim2.new(0.0624161288, 0, 0.740547597, 0)
elctronmobile.TextLabel_15.Size = UDim2.new(0, 71, 0, 15)
elctronmobile.TextLabel_15.Font = Enum.Font.SourceSans
elctronmobile.TextLabel_15.Text = "Universal"
elctronmobile.TextLabel_15.TextColor3 = Color3.fromRGB(158, 159, 161)
elctronmobile.TextLabel_15.TextSize = 20.000
elctronmobile.TextLabel_15.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.UICorner_32.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_32.Parent = elctronmobile.TextLabel_15

elctronmobile.verified_7.Name = "verified"
elctronmobile.verified_7.Parent = elctronmobile.scriptluncher_7
elctronmobile.verified_7.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.verified_7.BackgroundTransparency = 1.000
elctronmobile.verified_7.Position = UDim2.new(0.808673441, 0, 0.618644118, 0)
elctronmobile.verified_7.Size = UDim2.new(0, 16, 0, 14)
elctronmobile.verified_7.Image = "rbxassetid://13821702478"

elctronmobile.ImageButton_8.Parent = elctronmobile.scriptluncher_7
elctronmobile.ImageButton_8.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.ImageButton_8.BackgroundTransparency = 1.000
elctronmobile.ImageButton_8.Position = UDim2.new(0.802111149, 0, 0.765396893, 0)
elctronmobile.ImageButton_8.Size = UDim2.new(0, 16, 0, 14)
elctronmobile.ImageButton_8.Image = "rbxassetid://13821697887"

elctronmobile.scriptluncher_8.Name = "scriptluncher"
elctronmobile.scriptluncher_8.Parent = elctronmobile.ScrollingFrame
elctronmobile.scriptluncher_8.BackgroundColor3 = Color3.fromRGB(24, 27, 32)
elctronmobile.scriptluncher_8.Position = UDim2.new(0.0167667568, 0, -0.00517509086, 0)
elctronmobile.scriptluncher_8.Size = UDim2.new(0, 144, 0, 118)

elctronmobile.UICorner_33.Parent = elctronmobile.scriptluncher_8

elctronmobile.scriptimage_8.Name = "scriptimage"
elctronmobile.scriptimage_8.Parent = elctronmobile.scriptluncher_8
elctronmobile.scriptimage_8.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.scriptimage_8.Size = UDim2.new(0, 143, 0, 65)
elctronmobile.scriptimage_8.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"

elctronmobile.TextLabel_16.Parent = elctronmobile.scriptluncher_8
elctronmobile.TextLabel_16.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_16.BackgroundTransparency = 1.000
elctronmobile.TextLabel_16.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_16.Position = UDim2.new(0.0624161288, 0, 0.604954362, 0)
elctronmobile.TextLabel_16.Size = UDim2.new(0, 71, 0, 11)
elctronmobile.TextLabel_16.Font = Enum.Font.SourceSans
elctronmobile.TextLabel_16.Text = "ScriptName"
elctronmobile.TextLabel_16.TextColor3 = Color3.fromRGB(158, 159, 161)
elctronmobile.TextLabel_16.TextSize = 15.000
elctronmobile.TextLabel_16.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.UICorner_34.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_34.Parent = elctronmobile.TextLabel_16

elctronmobile.TextLabel_17.Parent = elctronmobile.scriptluncher_8
elctronmobile.TextLabel_17.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_17.BackgroundTransparency = 1.000
elctronmobile.TextLabel_17.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_17.Position = UDim2.new(0.0624161288, 0, 0.740547597, 0)
elctronmobile.TextLabel_17.Size = UDim2.new(0, 71, 0, 15)
elctronmobile.TextLabel_17.Font = Enum.Font.SourceSans
elctronmobile.TextLabel_17.Text = "Universal"
elctronmobile.TextLabel_17.TextColor3 = Color3.fromRGB(158, 159, 161)
elctronmobile.TextLabel_17.TextSize = 20.000
elctronmobile.TextLabel_17.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.UICorner_35.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_35.Parent = elctronmobile.TextLabel_17

elctronmobile.verified_8.Name = "verified"
elctronmobile.verified_8.Parent = elctronmobile.scriptluncher_8
elctronmobile.verified_8.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.verified_8.BackgroundTransparency = 1.000
elctronmobile.verified_8.Position = UDim2.new(0.808673441, 0, 0.618644118, 0)
elctronmobile.verified_8.Size = UDim2.new(0, 16, 0, 14)
elctronmobile.verified_8.Image = "rbxassetid://13821702478"

elctronmobile.ImageButton_9.Parent = elctronmobile.scriptluncher_8
elctronmobile.ImageButton_9.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.ImageButton_9.BackgroundTransparency = 1.000
elctronmobile.ImageButton_9.Position = UDim2.new(0.802111149, 0, 0.765396893, 0)
elctronmobile.ImageButton_9.Size = UDim2.new(0, 16, 0, 14)
elctronmobile.ImageButton_9.Image = "rbxassetid://13821697887"

elctronmobile.scriptluncher_9.Name = "scriptluncher"
elctronmobile.scriptluncher_9.Parent = elctronmobile.ScrollingFrame
elctronmobile.scriptluncher_9.BackgroundColor3 = Color3.fromRGB(24, 27, 32)
elctronmobile.scriptluncher_9.Position = UDim2.new(0.0167667568, 0, -0.00517509086, 0)
elctronmobile.scriptluncher_9.Size = UDim2.new(0, 144, 0, 118)

elctronmobile.UICorner_36.Parent = elctronmobile.scriptluncher_9

elctronmobile.scriptimage_9.Name = "scriptimage"
elctronmobile.scriptimage_9.Parent = elctronmobile.scriptluncher_9
elctronmobile.scriptimage_9.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.scriptimage_9.Size = UDim2.new(0, 143, 0, 65)
elctronmobile.scriptimage_9.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"

elctronmobile.TextLabel_18.Parent = elctronmobile.scriptluncher_9
elctronmobile.TextLabel_18.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_18.BackgroundTransparency = 1.000
elctronmobile.TextLabel_18.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_18.Position = UDim2.new(0.0624161288, 0, 0.604954362, 0)
elctronmobile.TextLabel_18.Size = UDim2.new(0, 71, 0, 11)
elctronmobile.TextLabel_18.Font = Enum.Font.SourceSans
elctronmobile.TextLabel_18.Text = "ScriptName"
elctronmobile.TextLabel_18.TextColor3 = Color3.fromRGB(158, 159, 161)
elctronmobile.TextLabel_18.TextSize = 15.000
elctronmobile.TextLabel_18.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.UICorner_37.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_37.Parent = elctronmobile.TextLabel_18

elctronmobile.TextLabel_19.Parent = elctronmobile.scriptluncher_9
elctronmobile.TextLabel_19.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_19.BackgroundTransparency = 1.000
elctronmobile.TextLabel_19.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_19.Position = UDim2.new(0.0624161288, 0, 0.740547597, 0)
elctronmobile.TextLabel_19.Size = UDim2.new(0, 71, 0, 15)
elctronmobile.TextLabel_19.Font = Enum.Font.SourceSans
elctronmobile.TextLabel_19.Text = "Universal"
elctronmobile.TextLabel_19.TextColor3 = Color3.fromRGB(158, 159, 161)
elctronmobile.TextLabel_19.TextSize = 20.000
elctronmobile.TextLabel_19.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.UICorner_38.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_38.Parent = elctronmobile.TextLabel_19

elctronmobile.verified_9.Name = "verified"
elctronmobile.verified_9.Parent = elctronmobile.scriptluncher_9
elctronmobile.verified_9.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.verified_9.BackgroundTransparency = 1.000
elctronmobile.verified_9.Position = UDim2.new(0.808673441, 0, 0.618644118, 0)
elctronmobile.verified_9.Size = UDim2.new(0, 16, 0, 14)
elctronmobile.verified_9.Image = "rbxassetid://13821702478"

elctronmobile.ImageButton_10.Parent = elctronmobile.scriptluncher_9
elctronmobile.ImageButton_10.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.ImageButton_10.BackgroundTransparency = 1.000
elctronmobile.ImageButton_10.Position = UDim2.new(0.802111149, 0, 0.765396893, 0)
elctronmobile.ImageButton_10.Size = UDim2.new(0, 16, 0, 14)
elctronmobile.ImageButton_10.Image = "rbxassetid://13821697887"

elctronmobile.scriptluncher_10.Name = "scriptluncher"
elctronmobile.scriptluncher_10.Parent = elctronmobile.ScrollingFrame
elctronmobile.scriptluncher_10.BackgroundColor3 = Color3.fromRGB(24, 27, 32)
elctronmobile.scriptluncher_10.Position = UDim2.new(0.0167667568, 0, -0.00517509086, 0)
elctronmobile.scriptluncher_10.Size = UDim2.new(0, 144, 0, 118)

elctronmobile.UICorner_39.Parent = elctronmobile.scriptluncher_10

elctronmobile.scriptimage_10.Name = "scriptimage"
elctronmobile.scriptimage_10.Parent = elctronmobile.scriptluncher_10
elctronmobile.scriptimage_10.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.scriptimage_10.Size = UDim2.new(0, 143, 0, 65)
elctronmobile.scriptimage_10.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"

elctronmobile.TextLabel_20.Parent = elctronmobile.scriptluncher_10
elctronmobile.TextLabel_20.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_20.BackgroundTransparency = 1.000
elctronmobile.TextLabel_20.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_20.Position = UDim2.new(0.0624161288, 0, 0.604954362, 0)
elctronmobile.TextLabel_20.Size = UDim2.new(0, 71, 0, 11)
elctronmobile.TextLabel_20.Font = Enum.Font.SourceSans
elctronmobile.TextLabel_20.Text = "ScriptName"
elctronmobile.TextLabel_20.TextColor3 = Color3.fromRGB(158, 159, 161)
elctronmobile.TextLabel_20.TextSize = 15.000
elctronmobile.TextLabel_20.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.UICorner_40.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_40.Parent = elctronmobile.TextLabel_20

elctronmobile.TextLabel_21.Parent = elctronmobile.scriptluncher_10
elctronmobile.TextLabel_21.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_21.BackgroundTransparency = 1.000
elctronmobile.TextLabel_21.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_21.Position = UDim2.new(0.0624161288, 0, 0.740547597, 0)
elctronmobile.TextLabel_21.Size = UDim2.new(0, 71, 0, 15)
elctronmobile.TextLabel_21.Font = Enum.Font.SourceSans
elctronmobile.TextLabel_21.Text = "Universal"
elctronmobile.TextLabel_21.TextColor3 = Color3.fromRGB(158, 159, 161)
elctronmobile.TextLabel_21.TextSize = 20.000
elctronmobile.TextLabel_21.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.UICorner_41.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_41.Parent = elctronmobile.TextLabel_21

elctronmobile.verified_10.Name = "verified"
elctronmobile.verified_10.Parent = elctronmobile.scriptluncher_10
elctronmobile.verified_10.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.verified_10.BackgroundTransparency = 1.000
elctronmobile.verified_10.Position = UDim2.new(0.808673441, 0, 0.618644118, 0)
elctronmobile.verified_10.Size = UDim2.new(0, 16, 0, 14)
elctronmobile.verified_10.Image = "rbxassetid://13821702478"

elctronmobile.ImageButton_11.Parent = elctronmobile.scriptluncher_10
elctronmobile.ImageButton_11.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.ImageButton_11.BackgroundTransparency = 1.000
elctronmobile.ImageButton_11.Position = UDim2.new(0.802111149, 0, 0.765396893, 0)
elctronmobile.ImageButton_11.Size = UDim2.new(0, 16, 0, 14)
elctronmobile.ImageButton_11.Image = "rbxassetid://13821697887"

elctronmobile.scriptluncher_11.Name = "scriptluncher"
elctronmobile.scriptluncher_11.Parent = elctronmobile.ScrollingFrame
elctronmobile.scriptluncher_11.BackgroundColor3 = Color3.fromRGB(24, 27, 32)
elctronmobile.scriptluncher_11.Position = UDim2.new(0.0167667568, 0, -0.00517509086, 0)
elctronmobile.scriptluncher_11.Size = UDim2.new(0, 144, 0, 118)

elctronmobile.UICorner_42.Parent = elctronmobile.scriptluncher_11

elctronmobile.scriptimage_11.Name = "scriptimage"
elctronmobile.scriptimage_11.Parent = elctronmobile.scriptluncher_11
elctronmobile.scriptimage_11.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.scriptimage_11.Size = UDim2.new(0, 143, 0, 65)
elctronmobile.scriptimage_11.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"

elctronmobile.TextLabel_22.Parent = elctronmobile.scriptluncher_11
elctronmobile.TextLabel_22.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_22.BackgroundTransparency = 1.000
elctronmobile.TextLabel_22.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_22.Position = UDim2.new(0.0624161288, 0, 0.604954362, 0)
elctronmobile.TextLabel_22.Size = UDim2.new(0, 71, 0, 11)
elctronmobile.TextLabel_22.Font = Enum.Font.SourceSans
elctronmobile.TextLabel_22.Text = "ScriptName"
elctronmobile.TextLabel_22.TextColor3 = Color3.fromRGB(158, 159, 161)
elctronmobile.TextLabel_22.TextSize = 15.000
elctronmobile.TextLabel_22.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.UICorner_43.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_43.Parent = elctronmobile.TextLabel_22

elctronmobile.TextLabel_23.Parent = elctronmobile.scriptluncher_11
elctronmobile.TextLabel_23.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_23.BackgroundTransparency = 1.000
elctronmobile.TextLabel_23.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_23.Position = UDim2.new(0.0624161288, 0, 0.740547597, 0)
elctronmobile.TextLabel_23.Size = UDim2.new(0, 71, 0, 15)
elctronmobile.TextLabel_23.Font = Enum.Font.SourceSans
elctronmobile.TextLabel_23.Text = "Universal"
elctronmobile.TextLabel_23.TextColor3 = Color3.fromRGB(158, 159, 161)
elctronmobile.TextLabel_23.TextSize = 20.000
elctronmobile.TextLabel_23.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.UICorner_44.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_44.Parent = elctronmobile.TextLabel_23

elctronmobile.verified_11.Name = "verified"
elctronmobile.verified_11.Parent = elctronmobile.scriptluncher_11
elctronmobile.verified_11.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.verified_11.BackgroundTransparency = 1.000
elctronmobile.verified_11.Position = UDim2.new(0.808673441, 0, 0.618644118, 0)
elctronmobile.verified_11.Size = UDim2.new(0, 16, 0, 14)
elctronmobile.verified_11.Image = "rbxassetid://13821702478"

elctronmobile.ImageButton_12.Parent = elctronmobile.scriptluncher_11
elctronmobile.ImageButton_12.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.ImageButton_12.BackgroundTransparency = 1.000
elctronmobile.ImageButton_12.Position = UDim2.new(0.802111149, 0, 0.765396893, 0)
elctronmobile.ImageButton_12.Size = UDim2.new(0, 16, 0, 14)
elctronmobile.ImageButton_12.Image = "rbxassetid://13821697887"

elctronmobile.scriptluncher_12.Name = "scriptluncher"
elctronmobile.scriptluncher_12.Parent = elctronmobile.ScrollingFrame
elctronmobile.scriptluncher_12.BackgroundColor3 = Color3.fromRGB(24, 27, 32)
elctronmobile.scriptluncher_12.Position = UDim2.new(0.0167667568, 0, -0.00517509086, 0)
elctronmobile.scriptluncher_12.Size = UDim2.new(0, 144, 0, 118)

elctronmobile.UICorner_45.Parent = elctronmobile.scriptluncher_12

elctronmobile.scriptimage_12.Name = "scriptimage"
elctronmobile.scriptimage_12.Parent = elctronmobile.scriptluncher_12
elctronmobile.scriptimage_12.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.scriptimage_12.Size = UDim2.new(0, 143, 0, 65)
elctronmobile.scriptimage_12.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"

elctronmobile.TextLabel_24.Parent = elctronmobile.scriptluncher_12
elctronmobile.TextLabel_24.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_24.BackgroundTransparency = 1.000
elctronmobile.TextLabel_24.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_24.Position = UDim2.new(0.0624161288, 0, 0.604954362, 0)
elctronmobile.TextLabel_24.Size = UDim2.new(0, 71, 0, 11)
elctronmobile.TextLabel_24.Font = Enum.Font.SourceSans
elctronmobile.TextLabel_24.Text = "ScriptName"
elctronmobile.TextLabel_24.TextColor3 = Color3.fromRGB(158, 159, 161)
elctronmobile.TextLabel_24.TextSize = 15.000
elctronmobile.TextLabel_24.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.UICorner_46.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_46.Parent = elctronmobile.TextLabel_24

elctronmobile.TextLabel_25.Parent = elctronmobile.scriptluncher_12
elctronmobile.TextLabel_25.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_25.BackgroundTransparency = 1.000
elctronmobile.TextLabel_25.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_25.Position = UDim2.new(0.0624161288, 0, 0.740547597, 0)
elctronmobile.TextLabel_25.Size = UDim2.new(0, 71, 0, 15)
elctronmobile.TextLabel_25.Font = Enum.Font.SourceSans
elctronmobile.TextLabel_25.Text = "Universal"
elctronmobile.TextLabel_25.TextColor3 = Color3.fromRGB(158, 159, 161)
elctronmobile.TextLabel_25.TextSize = 20.000
elctronmobile.TextLabel_25.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.UICorner_47.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_47.Parent = elctronmobile.TextLabel_25

elctronmobile.verified_12.Name = "verified"
elctronmobile.verified_12.Parent = elctronmobile.scriptluncher_12
elctronmobile.verified_12.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.verified_12.BackgroundTransparency = 1.000
elctronmobile.verified_12.Position = UDim2.new(0.808673441, 0, 0.618644118, 0)
elctronmobile.verified_12.Size = UDim2.new(0, 16, 0, 14)
elctronmobile.verified_12.Image = "rbxassetid://13821702478"

elctronmobile.ImageButton_13.Parent = elctronmobile.scriptluncher_12
elctronmobile.ImageButton_13.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.ImageButton_13.BackgroundTransparency = 1.000
elctronmobile.ImageButton_13.Position = UDim2.new(0.802111149, 0, 0.765396893, 0)
elctronmobile.ImageButton_13.Size = UDim2.new(0, 16, 0, 14)
elctronmobile.ImageButton_13.Image = "rbxassetid://13821697887"

elctronmobile.scriptluncher_13.Name = "scriptluncher"
elctronmobile.scriptluncher_13.Parent = elctronmobile.ScrollingFrame
elctronmobile.scriptluncher_13.BackgroundColor3 = Color3.fromRGB(24, 27, 32)
elctronmobile.scriptluncher_13.Position = UDim2.new(0.0167667568, 0, -0.00517509086, 0)
elctronmobile.scriptluncher_13.Size = UDim2.new(0, 144, 0, 118)

elctronmobile.UICorner_48.Parent = elctronmobile.scriptluncher_13

elctronmobile.scriptimage_13.Name = "scriptimage"
elctronmobile.scriptimage_13.Parent = elctronmobile.scriptluncher_13
elctronmobile.scriptimage_13.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.scriptimage_13.Size = UDim2.new(0, 143, 0, 65)
elctronmobile.scriptimage_13.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"

elctronmobile.TextLabel_26.Parent = elctronmobile.scriptluncher_13
elctronmobile.TextLabel_26.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_26.BackgroundTransparency = 1.000
elctronmobile.TextLabel_26.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_26.Position = UDim2.new(0.0624161288, 0, 0.604954362, 0)
elctronmobile.TextLabel_26.Size = UDim2.new(0, 71, 0, 11)
elctronmobile.TextLabel_26.Font = Enum.Font.SourceSans
elctronmobile.TextLabel_26.Text = "ScriptName"
elctronmobile.TextLabel_26.TextColor3 = Color3.fromRGB(158, 159, 161)
elctronmobile.TextLabel_26.TextSize = 15.000
elctronmobile.TextLabel_26.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.UICorner_49.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_49.Parent = elctronmobile.TextLabel_26

elctronmobile.TextLabel_27.Parent = elctronmobile.scriptluncher_13
elctronmobile.TextLabel_27.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_27.BackgroundTransparency = 1.000
elctronmobile.TextLabel_27.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_27.Position = UDim2.new(0.0624161288, 0, 0.740547597, 0)
elctronmobile.TextLabel_27.Size = UDim2.new(0, 71, 0, 15)
elctronmobile.TextLabel_27.Font = Enum.Font.SourceSans
elctronmobile.TextLabel_27.Text = "Universal"
elctronmobile.TextLabel_27.TextColor3 = Color3.fromRGB(158, 159, 161)
elctronmobile.TextLabel_27.TextSize = 20.000
elctronmobile.TextLabel_27.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.UICorner_50.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_50.Parent = elctronmobile.TextLabel_27

elctronmobile.verified_13.Name = "verified"
elctronmobile.verified_13.Parent = elctronmobile.scriptluncher_13
elctronmobile.verified_13.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.verified_13.BackgroundTransparency = 1.000
elctronmobile.verified_13.Position = UDim2.new(0.808673441, 0, 0.618644118, 0)
elctronmobile.verified_13.Size = UDim2.new(0, 16, 0, 14)
elctronmobile.verified_13.Image = "rbxassetid://13821702478"

elctronmobile.ImageButton_14.Parent = elctronmobile.scriptluncher_13
elctronmobile.ImageButton_14.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.ImageButton_14.BackgroundTransparency = 1.000
elctronmobile.ImageButton_14.Position = UDim2.new(0.802111149, 0, 0.765396893, 0)
elctronmobile.ImageButton_14.Size = UDim2.new(0, 16, 0, 14)
elctronmobile.ImageButton_14.Image = "rbxassetid://13821697887"

elctronmobile.scriptluncher_14.Name = "scriptluncher"
elctronmobile.scriptluncher_14.Parent = elctronmobile.ScrollingFrame
elctronmobile.scriptluncher_14.BackgroundColor3 = Color3.fromRGB(24, 27, 32)
elctronmobile.scriptluncher_14.Position = UDim2.new(0.0167667568, 0, -0.00517509086, 0)
elctronmobile.scriptluncher_14.Size = UDim2.new(0, 144, 0, 118)

elctronmobile.UICorner_51.Parent = elctronmobile.scriptluncher_14

elctronmobile.scriptimage_14.Name = "scriptimage"
elctronmobile.scriptimage_14.Parent = elctronmobile.scriptluncher_14
elctronmobile.scriptimage_14.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.scriptimage_14.Size = UDim2.new(0, 143, 0, 65)
elctronmobile.scriptimage_14.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"

elctronmobile.TextLabel_28.Parent = elctronmobile.scriptluncher_14
elctronmobile.TextLabel_28.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_28.BackgroundTransparency = 1.000
elctronmobile.TextLabel_28.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_28.Position = UDim2.new(0.0624161288, 0, 0.604954362, 0)
elctronmobile.TextLabel_28.Size = UDim2.new(0, 71, 0, 11)
elctronmobile.TextLabel_28.Font = Enum.Font.SourceSans
elctronmobile.TextLabel_28.Text = "ScriptName"
elctronmobile.TextLabel_28.TextColor3 = Color3.fromRGB(158, 159, 161)
elctronmobile.TextLabel_28.TextSize = 15.000
elctronmobile.TextLabel_28.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.UICorner_52.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_52.Parent = elctronmobile.TextLabel_28

elctronmobile.TextLabel_29.Parent = elctronmobile.scriptluncher_14
elctronmobile.TextLabel_29.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_29.BackgroundTransparency = 1.000
elctronmobile.TextLabel_29.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_29.Position = UDim2.new(0.0624161288, 0, 0.740547597, 0)
elctronmobile.TextLabel_29.Size = UDim2.new(0, 71, 0, 15)
elctronmobile.TextLabel_29.Font = Enum.Font.SourceSans
elctronmobile.TextLabel_29.Text = "Universal"
elctronmobile.TextLabel_29.TextColor3 = Color3.fromRGB(158, 159, 161)
elctronmobile.TextLabel_29.TextSize = 20.000
elctronmobile.TextLabel_29.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.UICorner_53.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_53.Parent = elctronmobile.TextLabel_29

elctronmobile.verified_14.Name = "verified"
elctronmobile.verified_14.Parent = elctronmobile.scriptluncher_14
elctronmobile.verified_14.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.verified_14.BackgroundTransparency = 1.000
elctronmobile.verified_14.Position = UDim2.new(0.808673441, 0, 0.618644118, 0)
elctronmobile.verified_14.Size = UDim2.new(0, 16, 0, 14)
elctronmobile.verified_14.Image = "rbxassetid://13821702478"

elctronmobile.ImageButton_15.Parent = elctronmobile.scriptluncher_14
elctronmobile.ImageButton_15.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.ImageButton_15.BackgroundTransparency = 1.000
elctronmobile.ImageButton_15.Position = UDim2.new(0.802111149, 0, 0.765396893, 0)
elctronmobile.ImageButton_15.Size = UDim2.new(0, 16, 0, 14)
elctronmobile.ImageButton_15.Image = "rbxassetid://13821697887"

elctronmobile.scriptluncher_15.Name = "scriptluncher"
elctronmobile.scriptluncher_15.Parent = elctronmobile.ScrollingFrame
elctronmobile.scriptluncher_15.BackgroundColor3 = Color3.fromRGB(24, 27, 32)
elctronmobile.scriptluncher_15.Position = UDim2.new(0.0167667568, 0, -0.00517509086, 0)
elctronmobile.scriptluncher_15.Size = UDim2.new(0, 144, 0, 118)

elctronmobile.UICorner_54.Parent = elctronmobile.scriptluncher_15

elctronmobile.scriptimage_15.Name = "scriptimage"
elctronmobile.scriptimage_15.Parent = elctronmobile.scriptluncher_15
elctronmobile.scriptimage_15.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.scriptimage_15.Size = UDim2.new(0, 143, 0, 65)
elctronmobile.scriptimage_15.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"

elctronmobile.TextLabel_30.Parent = elctronmobile.scriptluncher_15
elctronmobile.TextLabel_30.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_30.BackgroundTransparency = 1.000
elctronmobile.TextLabel_30.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_30.Position = UDim2.new(0.0624161288, 0, 0.604954362, 0)
elctronmobile.TextLabel_30.Size = UDim2.new(0, 71, 0, 11)
elctronmobile.TextLabel_30.Font = Enum.Font.SourceSans
elctronmobile.TextLabel_30.Text = "ScriptName"
elctronmobile.TextLabel_30.TextColor3 = Color3.fromRGB(158, 159, 161)
elctronmobile.TextLabel_30.TextSize = 15.000
elctronmobile.TextLabel_30.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.UICorner_55.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_55.Parent = elctronmobile.TextLabel_30

elctronmobile.TextLabel_31.Parent = elctronmobile.scriptluncher_15
elctronmobile.TextLabel_31.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_31.BackgroundTransparency = 1.000
elctronmobile.TextLabel_31.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_31.Position = UDim2.new(0.0624161288, 0, 0.740547597, 0)
elctronmobile.TextLabel_31.Size = UDim2.new(0, 71, 0, 15)
elctronmobile.TextLabel_31.Font = Enum.Font.SourceSans
elctronmobile.TextLabel_31.Text = "Universal"
elctronmobile.TextLabel_31.TextColor3 = Color3.fromRGB(158, 159, 161)
elctronmobile.TextLabel_31.TextSize = 20.000
elctronmobile.TextLabel_31.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.UICorner_56.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_56.Parent = elctronmobile.TextLabel_31

elctronmobile.verified_15.Name = "verified"
elctronmobile.verified_15.Parent = elctronmobile.scriptluncher_15
elctronmobile.verified_15.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.verified_15.BackgroundTransparency = 1.000
elctronmobile.verified_15.Position = UDim2.new(0.808673441, 0, 0.618644118, 0)
elctronmobile.verified_15.Size = UDim2.new(0, 16, 0, 14)
elctronmobile.verified_15.Image = "rbxassetid://13821702478"

elctronmobile.ImageButton_16.Parent = elctronmobile.scriptluncher_15
elctronmobile.ImageButton_16.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.ImageButton_16.BackgroundTransparency = 1.000
elctronmobile.ImageButton_16.Position = UDim2.new(0.802111149, 0, 0.765396893, 0)
elctronmobile.ImageButton_16.Size = UDim2.new(0, 16, 0, 14)
elctronmobile.ImageButton_16.Image = "rbxassetid://13821697887"

elctronmobile.scriptluncher_16.Name = "scriptluncher"
elctronmobile.scriptluncher_16.Parent = elctronmobile.ScrollingFrame
elctronmobile.scriptluncher_16.BackgroundColor3 = Color3.fromRGB(24, 27, 32)
elctronmobile.scriptluncher_16.Position = UDim2.new(0.0167667568, 0, -0.00517509086, 0)
elctronmobile.scriptluncher_16.Size = UDim2.new(0, 144, 0, 118)

elctronmobile.UICorner_57.Parent = elctronmobile.scriptluncher_16

elctronmobile.scriptimage_16.Name = "scriptimage"
elctronmobile.scriptimage_16.Parent = elctronmobile.scriptluncher_16
elctronmobile.scriptimage_16.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.scriptimage_16.Size = UDim2.new(0, 143, 0, 65)
elctronmobile.scriptimage_16.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"

elctronmobile.TextLabel_32.Parent = elctronmobile.scriptluncher_16
elctronmobile.TextLabel_32.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_32.BackgroundTransparency = 1.000
elctronmobile.TextLabel_32.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_32.Position = UDim2.new(0.0624161288, 0, 0.604954362, 0)
elctronmobile.TextLabel_32.Size = UDim2.new(0, 71, 0, 11)
elctronmobile.TextLabel_32.Font = Enum.Font.SourceSans
elctronmobile.TextLabel_32.Text = "ScriptName"
elctronmobile.TextLabel_32.TextColor3 = Color3.fromRGB(158, 159, 161)
elctronmobile.TextLabel_32.TextSize = 15.000
elctronmobile.TextLabel_32.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.UICorner_58.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_58.Parent = elctronmobile.TextLabel_32

elctronmobile.TextLabel_33.Parent = elctronmobile.scriptluncher_16
elctronmobile.TextLabel_33.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_33.BackgroundTransparency = 1.000
elctronmobile.TextLabel_33.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_33.Position = UDim2.new(0.0624161288, 0, 0.740547597, 0)
elctronmobile.TextLabel_33.Size = UDim2.new(0, 71, 0, 15)
elctronmobile.TextLabel_33.Font = Enum.Font.SourceSans
elctronmobile.TextLabel_33.Text = "Universal"
elctronmobile.TextLabel_33.TextColor3 = Color3.fromRGB(158, 159, 161)
elctronmobile.TextLabel_33.TextSize = 20.000
elctronmobile.TextLabel_33.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.UICorner_59.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_59.Parent = elctronmobile.TextLabel_33

elctronmobile.verified_16.Name = "verified"
elctronmobile.verified_16.Parent = elctronmobile.scriptluncher_16
elctronmobile.verified_16.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.verified_16.BackgroundTransparency = 1.000
elctronmobile.verified_16.Position = UDim2.new(0.808673441, 0, 0.618644118, 0)
elctronmobile.verified_16.Size = UDim2.new(0, 16, 0, 14)
elctronmobile.verified_16.Image = "rbxassetid://13821702478"

elctronmobile.ImageButton_17.Parent = elctronmobile.scriptluncher_16
elctronmobile.ImageButton_17.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.ImageButton_17.BackgroundTransparency = 1.000
elctronmobile.ImageButton_17.Position = UDim2.new(0.802111149, 0, 0.765396893, 0)
elctronmobile.ImageButton_17.Size = UDim2.new(0, 16, 0, 14)
elctronmobile.ImageButton_17.Image = "rbxassetid://13821697887"

elctronmobile.scriptluncher_17.Name = "scriptluncher"
elctronmobile.scriptluncher_17.Parent = elctronmobile.ScrollingFrame
elctronmobile.scriptluncher_17.BackgroundColor3 = Color3.fromRGB(24, 27, 32)
elctronmobile.scriptluncher_17.Position = UDim2.new(0.0167667568, 0, -0.00517509086, 0)
elctronmobile.scriptluncher_17.Size = UDim2.new(0, 144, 0, 118)

elctronmobile.UICorner_60.Parent = elctronmobile.scriptluncher_17

elctronmobile.scriptimage_17.Name = "scriptimage"
elctronmobile.scriptimage_17.Parent = elctronmobile.scriptluncher_17
elctronmobile.scriptimage_17.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.scriptimage_17.Size = UDim2.new(0, 143, 0, 65)
elctronmobile.scriptimage_17.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"

elctronmobile.TextLabel_34.Parent = elctronmobile.scriptluncher_17
elctronmobile.TextLabel_34.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_34.BackgroundTransparency = 1.000
elctronmobile.TextLabel_34.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_34.Position = UDim2.new(0.0624161288, 0, 0.604954362, 0)
elctronmobile.TextLabel_34.Size = UDim2.new(0, 71, 0, 11)
elctronmobile.TextLabel_34.Font = Enum.Font.SourceSans
elctronmobile.TextLabel_34.Text = "ScriptName"
elctronmobile.TextLabel_34.TextColor3 = Color3.fromRGB(158, 159, 161)
elctronmobile.TextLabel_34.TextSize = 15.000
elctronmobile.TextLabel_34.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.UICorner_61.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_61.Parent = elctronmobile.TextLabel_34

elctronmobile.TextLabel_35.Parent = elctronmobile.scriptluncher_17
elctronmobile.TextLabel_35.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_35.BackgroundTransparency = 1.000
elctronmobile.TextLabel_35.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_35.Position = UDim2.new(0.0624161288, 0, 0.740547597, 0)
elctronmobile.TextLabel_35.Size = UDim2.new(0, 71, 0, 15)
elctronmobile.TextLabel_35.Font = Enum.Font.SourceSans
elctronmobile.TextLabel_35.Text = "Universal"
elctronmobile.TextLabel_35.TextColor3 = Color3.fromRGB(158, 159, 161)
elctronmobile.TextLabel_35.TextSize = 20.000
elctronmobile.TextLabel_35.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.UICorner_62.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_62.Parent = elctronmobile.TextLabel_35

elctronmobile.verified_17.Name = "verified"
elctronmobile.verified_17.Parent = elctronmobile.scriptluncher_17
elctronmobile.verified_17.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.verified_17.BackgroundTransparency = 1.000
elctronmobile.verified_17.Position = UDim2.new(0.808673441, 0, 0.618644118, 0)
elctronmobile.verified_17.Size = UDim2.new(0, 16, 0, 14)
elctronmobile.verified_17.Image = "rbxassetid://13821702478"

elctronmobile.ImageButton_18.Parent = elctronmobile.scriptluncher_17
elctronmobile.ImageButton_18.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.ImageButton_18.BackgroundTransparency = 1.000
elctronmobile.ImageButton_18.Position = UDim2.new(0.802111149, 0, 0.765396893, 0)
elctronmobile.ImageButton_18.Size = UDim2.new(0, 16, 0, 14)
elctronmobile.ImageButton_18.Image = "rbxassetid://13821697887"

elctronmobile.scriptluncher_18.Name = "scriptluncher"
elctronmobile.scriptluncher_18.Parent = elctronmobile.ScrollingFrame
elctronmobile.scriptluncher_18.BackgroundColor3 = Color3.fromRGB(24, 27, 32)
elctronmobile.scriptluncher_18.Position = UDim2.new(0.0167667568, 0, -0.00517509086, 0)
elctronmobile.scriptluncher_18.Size = UDim2.new(0, 144, 0, 118)

elctronmobile.UICorner_63.Parent = elctronmobile.scriptluncher_18

elctronmobile.scriptimage_18.Name = "scriptimage"
elctronmobile.scriptimage_18.Parent = elctronmobile.scriptluncher_18
elctronmobile.scriptimage_18.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.scriptimage_18.Size = UDim2.new(0, 143, 0, 65)
elctronmobile.scriptimage_18.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"

elctronmobile.TextLabel_36.Parent = elctronmobile.scriptluncher_18
elctronmobile.TextLabel_36.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_36.BackgroundTransparency = 1.000
elctronmobile.TextLabel_36.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_36.Position = UDim2.new(0.0624161288, 0, 0.604954362, 0)
elctronmobile.TextLabel_36.Size = UDim2.new(0, 71, 0, 11)
elctronmobile.TextLabel_36.Font = Enum.Font.SourceSans
elctronmobile.TextLabel_36.Text = "ScriptName"
elctronmobile.TextLabel_36.TextColor3 = Color3.fromRGB(158, 159, 161)
elctronmobile.TextLabel_36.TextSize = 15.000
elctronmobile.TextLabel_36.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.UICorner_64.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_64.Parent = elctronmobile.TextLabel_36

elctronmobile.TextLabel_37.Parent = elctronmobile.scriptluncher_18
elctronmobile.TextLabel_37.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_37.BackgroundTransparency = 1.000
elctronmobile.TextLabel_37.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_37.Position = UDim2.new(0.0624161288, 0, 0.740547597, 0)
elctronmobile.TextLabel_37.Size = UDim2.new(0, 71, 0, 15)
elctronmobile.TextLabel_37.Font = Enum.Font.SourceSans
elctronmobile.TextLabel_37.Text = "Universal"
elctronmobile.TextLabel_37.TextColor3 = Color3.fromRGB(158, 159, 161)
elctronmobile.TextLabel_37.TextSize = 20.000
elctronmobile.TextLabel_37.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.UICorner_65.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_65.Parent = elctronmobile.TextLabel_37

elctronmobile.verified_18.Name = "verified"
elctronmobile.verified_18.Parent = elctronmobile.scriptluncher_18
elctronmobile.verified_18.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.verified_18.BackgroundTransparency = 1.000
elctronmobile.verified_18.Position = UDim2.new(0.808673441, 0, 0.618644118, 0)
elctronmobile.verified_18.Size = UDim2.new(0, 16, 0, 14)
elctronmobile.verified_18.Image = "rbxassetid://13821702478"

elctronmobile.ImageButton_19.Parent = elctronmobile.scriptluncher_18
elctronmobile.ImageButton_19.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.ImageButton_19.BackgroundTransparency = 1.000
elctronmobile.ImageButton_19.Position = UDim2.new(0.802111149, 0, 0.765396893, 0)
elctronmobile.ImageButton_19.Size = UDim2.new(0, 16, 0, 14)
elctronmobile.ImageButton_19.Image = "rbxassetid://13821697887"

elctronmobile.UICorner_66.Parent = elctronmobile.down

elctronmobile.up.Name = "up"
elctronmobile.up.Parent = elctronmobile.cloud_2
elctronmobile.up.BackgroundColor3 = Color3.fromRGB(24, 28, 36)
elctronmobile.up.Position = UDim2.new(0.000462887052, 0, 0.017885223, 0)
elctronmobile.up.Size = UDim2.new(0, 548, 0, 52)

elctronmobile.TextBox_2.Parent = elctronmobile.up
elctronmobile.TextBox_2.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextBox_2.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextBox_2.Position = UDim2.new(0.4908759, 0, 0.369230717, 0)
elctronmobile.TextBox_2.Size = UDim2.new(0, 171, 0, 28)
elctronmobile.TextBox_2.Font = Enum.Font.SourceSans
elctronmobile.TextBox_2.Text = ""
elctronmobile.TextBox_2.TextColor3 = Color3.fromRGB(0, 0, 0)
elctronmobile.TextBox_2.TextSize = 14.000

elctronmobile.UICorner_67.Parent = elctronmobile.TextBox_2

elctronmobile.TextButton_7.Parent = elctronmobile.TextBox_2
elctronmobile.TextButton_7.BackgroundColor3 = Color3.fromRGB(35, 39, 49)
elctronmobile.TextButton_7.BorderColor3 = Color3.fromRGB(35, 39, 49)
elctronmobile.TextButton_7.Position = UDim2.new(0.656441689, 0, 0.0333333351, 0)
elctronmobile.TextButton_7.Size = UDim2.new(0, 56, 0, 29)
elctronmobile.TextButton_7.Font = Enum.Font.SourceSansBold
elctronmobile.TextButton_7.Text = "Search"
elctronmobile.TextButton_7.TextColor3 = Color3.fromRGB(125, 132, 140)
elctronmobile.TextButton_7.TextSize = 14.000
elctronmobile.TextButton_7.TextStrokeColor3 = Color3.fromRGB(77, 82, 91)
elctronmobile.TextButton_7.TextStrokeTransparency = 0.800
elctronmobile.TextButton_7.TextWrapped = true

elctronmobile.UICorner_68.Parent = elctronmobile.TextButton_7

elctronmobile.TextLabel_38.Parent = elctronmobile.up
elctronmobile.TextLabel_38.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_38.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextLabel_38.Position = UDim2.new(0.817518234, 0, 0.384615391, 0)
elctronmobile.TextLabel_38.Size = UDim2.new(0, 92, 0, 28)
elctronmobile.TextLabel_38.Font = Enum.Font.SourceSans
elctronmobile.TextLabel_38.Text = "Sort By"
elctronmobile.TextLabel_38.TextColor3 = Color3.fromRGB(128, 128, 128)
elctronmobile.TextLabel_38.TextSize = 14.000

elctronmobile.UICorner_69.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_69.Parent = elctronmobile.TextLabel_38

elctronmobile.ImageButton_20.Parent = elctronmobile.TextLabel_38
elctronmobile.ImageButton_20.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.ImageButton_20.BackgroundTransparency = 1.000
elctronmobile.ImageButton_20.Position = UDim2.new(0.804347813, 0, 0.214285716, 0)
elctronmobile.ImageButton_20.Size = UDim2.new(0, 16, 0, 16)
elctronmobile.ImageButton_20.Image = "rbxassetid://13821367483"

elctronmobile.settings_2.Name = "settings"
elctronmobile.settings_2.Parent = elctronmobile.Frames
elctronmobile.settings_2.BackgroundColor3 = Color3.fromRGB(24, 28, 36)
elctronmobile.settings_2.Position = UDim2.new(0.00046282215, 0, 0.00213719159, 0)
elctronmobile.settings_2.Size = UDim2.new(0, 548, 0, 254)
elctronmobile.settings_2.Visible = false

elctronmobile.left.Name = "left"
elctronmobile.left.Parent = elctronmobile.settings_2
elctronmobile.left.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.left.BorderColor3 = Color3.fromRGB(24, 28, 36)
elctronmobile.left.Position = UDim2.new(0.00776215736, 0, 0.017885223, 0)
elctronmobile.left.Size = UDim2.new(0, 168, 0, 248)

elctronmobile.Frame_2.Parent = elctronmobile.left
elctronmobile.Frame_2.BackgroundColor3 = Color3.fromRGB(40, 42, 47)
elctronmobile.Frame_2.Position = UDim2.new(0.035714291, 0, 0.226275787, 0)
elctronmobile.Frame_2.Size = UDim2.new(0, 36, 0, 36)

elctronmobile.ImageLabel.Parent = elctronmobile.Frame_2
elctronmobile.ImageLabel.BackgroundColor3 = Color3.fromRGB(40, 42, 47)
elctronmobile.ImageLabel.Position = UDim2.new(0.0986902565, 0, 0.0841009915, 0)
elctronmobile.ImageLabel.Size = UDim2.new(0, 27, 0, 28)
elctronmobile.ImageLabel.Image = "rbxassetid://13821856760"

elctronmobile.UICorner_70.Parent = elctronmobile.Frame_2

elctronmobile.UICorner_71.Parent = elctronmobile.left

elctronmobile.TextLabel_39.Parent = elctronmobile.left
elctronmobile.TextLabel_39.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.TextLabel_39.BackgroundTransparency = 1.000
elctronmobile.TextLabel_39.Position = UDim2.new(0.0892857164, 0, 0.0645161271, 0)
elctronmobile.TextLabel_39.Size = UDim2.new(0, 92, 0, 18)
elctronmobile.TextLabel_39.Font = Enum.Font.SourceSansBold
elctronmobile.TextLabel_39.Text = "Settings"
elctronmobile.TextLabel_39.TextColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.TextLabel_39.TextSize = 28.000
elctronmobile.TextLabel_39.TextWrapped = true

elctronmobile.TextButton_8.Parent = elctronmobile.left
elctronmobile.TextButton_8.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextButton_8.Position = UDim2.new(0.25, 0, 0.221774191, 0)
elctronmobile.TextButton_8.Size = UDim2.new(0, 121, 0, 38)
elctronmobile.TextButton_8.Font = Enum.Font.SourceSans
elctronmobile.TextButton_8.Text = "General Settings"
elctronmobile.TextButton_8.TextColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.TextButton_8.TextSize = 20.000

elctronmobile.UICorner_72.Parent = elctronmobile.TextButton_8

elctronmobile.right.Name = "right"
elctronmobile.right.Parent = elctronmobile.settings_2
elctronmobile.right.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.right.BorderColor3 = Color3.fromRGB(24, 28, 36)
elctronmobile.right.Position = UDim2.new(0.321630776, 0, 0.0218222309, 0)
elctronmobile.right.Size = UDim2.new(0, 367, 0, 245)

elctronmobile.Frame_3.Parent = elctronmobile.right
elctronmobile.Frame_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.Frame_3.BackgroundTransparency = 1.000
elctronmobile.Frame_3.Position = UDim2.new(0, 0, 0.0110355299, 0)
elctronmobile.Frame_3.Size = UDim2.new(0, 519, 0, 240)

elctronmobile.UICorner_73.Parent = elctronmobile.right

elctronmobile.buttons.Name = "buttons"
elctronmobile.buttons.Parent = elctronmobile.settings_2
elctronmobile.buttons.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.buttons.BorderColor3 = Color3.fromRGB(24, 28, 36)
elctronmobile.buttons.Position = UDim2.new(0.37090084, 0, 0.128121451, 0)
elctronmobile.buttons.Size = UDim2.new(0, 325, 0, 218)

elctronmobile.UICorner_74.Parent = elctronmobile.buttons

elctronmobile.TextLabel_40.Parent = elctronmobile.buttons
elctronmobile.TextLabel_40.BackgroundColor3 = Color3.fromRGB(35, 35, 37)
elctronmobile.TextLabel_40.BorderColor3 = Color3.fromRGB(84, 80, 80)
elctronmobile.TextLabel_40.Position = UDim2.new(-0.00615384616, 0, 0.0271926317, 0)
elctronmobile.TextLabel_40.Size = UDim2.new(0, 322, 0, 50)
elctronmobile.TextLabel_40.Font = Enum.Font.SourceSans
elctronmobile.TextLabel_40.Text = ""
elctronmobile.TextLabel_40.TextColor3 = Color3.fromRGB(0, 0, 0)
elctronmobile.TextLabel_40.TextSize = 14.000

elctronmobile.TextLabel_41.Parent = elctronmobile.TextLabel_40
elctronmobile.TextLabel_41.BackgroundColor3 = Color3.fromRGB(35, 35, 37)
elctronmobile.TextLabel_41.BorderColor3 = Color3.fromRGB(24, 28, 36)
elctronmobile.TextLabel_41.Position = UDim2.new(0.0310559012, 0, 0.159999698, 0)
elctronmobile.TextLabel_41.Size = UDim2.new(0, 307, 0, 38)
elctronmobile.TextLabel_41.Font = Enum.Font.SourceSans
elctronmobile.TextLabel_41.Text = "FPS UNLOCKER\\nGet Your Fps Limit!"
elctronmobile.TextLabel_41.TextColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.TextLabel_41.TextSize = 14.000
elctronmobile.TextLabel_41.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.TextButton_9.Parent = elctronmobile.TextLabel_41
elctronmobile.TextButton_9.BackgroundColor3 = Color3.fromRGB(35, 39, 49)
elctronmobile.TextButton_9.BorderColor3 = Color3.fromRGB(84, 80, 80)
elctronmobile.TextButton_9.Position = UDim2.new(0.790959537, 0, -0.00217277114, 0)
elctronmobile.TextButton_9.Size = UDim2.new(0, 63, 0, 35)
elctronmobile.TextButton_9.Font = Enum.Font.SourceSans
elctronmobile.TextButton_9.Text = "Load"
elctronmobile.TextButton_9.TextColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.TextButton_9.TextSize = 20.000

elctronmobile.UICorner_75.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_75.Parent = elctronmobile.TextButton_9

elctronmobile.UICorner_76.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_76.Parent = elctronmobile.TextLabel_41

elctronmobile.UICorner_77.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_77.Parent = elctronmobile.TextLabel_40

elctronmobile.UIAspectRatioConstraint_3.Parent = elctronmobile.Frames
elctronmobile.UIAspectRatioConstraint_3.AspectRatio = 2.161

elctronmobile.UIAspectRatioConstraint_4.Parent = elctronmobile.Mainframe
elctronmobile.UIAspectRatioConstraint_4.AspectRatio = 1.870

elctronmobile.KeyPage.Name = "KeyPage"
elctronmobile.KeyPage.Parent = elctronmobile.elctronmobile
elctronmobile.KeyPage.BackgroundColor3 = Color3.fromRGB(25, 28, 35)
elctronmobile.KeyPage.Position = UDim2.new(0.350739092, 0, 0.318526179, 0)
elctronmobile.KeyPage.Size = UDim2.new(0, 408, 0, 201)

elctronmobile.UICorner_78.Parent = elctronmobile.KeyPage

elctronmobile.Electron.Name = "Electron"
elctronmobile.Electron.Parent = elctronmobile.KeyPage
elctronmobile.Electron.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.Electron.BackgroundTransparency = 1.000
elctronmobile.Electron.Position = UDim2.new(0.0568438433, 0, 0.0398009978, 0)
elctronmobile.Electron.Size = UDim2.new(0, 52, 0, 23)
elctronmobile.Electron.Font = Enum.Font.SourceSans
elctronmobile.Electron.Text = "Electron"
elctronmobile.Electron.TextColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.Electron.TextSize = 24.000

elctronmobile.Scripting.Name = "Scripting"
elctronmobile.Scripting.Parent = elctronmobile.KeyPage
elctronmobile.Scripting.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.Scripting.BackgroundTransparency = 1.000
elctronmobile.Scripting.Position = UDim2.new(0.0371517017, 0, 0.154228851, 0)
elctronmobile.Scripting.Size = UDim2.new(0, 98, 0, 18)
elctronmobile.Scripting.Font = Enum.Font.SourceSans
elctronmobile.Scripting.Text = "The easiest scripting Experiences"
elctronmobile.Scripting.TextColor3 = Color3.fromRGB(115, 114, 114)
elctronmobile.Scripting.TextSize = 15.000
elctronmobile.Scripting.TextXAlignment = Enum.TextXAlignment.Left

elctronmobile.keytext.Name = "keytext"
elctronmobile.keytext.Parent = elctronmobile.KeyPage
elctronmobile.keytext.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.keytext.BackgroundTransparency = 1.000
elctronmobile.keytext.Position = UDim2.new(0.435661852, 0, 0.388059705, 0)
elctronmobile.keytext.Size = UDim2.new(0, 52, 0, 23)
elctronmobile.keytext.Font = Enum.Font.SourceSans
elctronmobile.keytext.Text = "Please Enter Your Key"
elctronmobile.keytext.TextColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.keytext.TextSize = 17.000

elctronmobile.TextBox_3.Parent = elctronmobile.KeyPage
elctronmobile.TextBox_3.BackgroundColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextBox_3.BorderColor3 = Color3.fromRGB(36, 38, 43)
elctronmobile.TextBox_3.Position = UDim2.new(0.146734357, 0, 0.532338321, 0)
elctronmobile.TextBox_3.Size = UDim2.new(0, 285, 0, 25)
elctronmobile.TextBox_3.Font = Enum.Font.SourceSans
elctronmobile.TextBox_3.Text = ""
elctronmobile.TextBox_3.TextColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.TextBox_3.TextSize = 14.000

elctronmobile.getkey.Name = "getkey"
elctronmobile.getkey.Parent = elctronmobile.KeyPage
elctronmobile.getkey.BackgroundColor3 = Color3.fromRGB(35, 39, 49)
elctronmobile.getkey.BorderColor3 = Color3.fromRGB(35, 39, 49)
elctronmobile.getkey.Position = UDim2.new(0.392156839, 0, 0.696517408, 0)
elctronmobile.getkey.Size = UDim2.new(0, 84, 0, 27)
elctronmobile.getkey.Font = Enum.Font.SourceSans
elctronmobile.getkey.Text = "Get Key"
elctronmobile.getkey.TextColor3 = Color3.fromRGB(132, 135, 140)
elctronmobile.getkey.TextSize = 20.000
elctronmobile.getkey.TextStrokeColor3 = Color3.fromRGB(118, 120, 127)
elctronmobile.getkey.TextStrokeTransparency = 0.890

elctronmobile.UICorner_79.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_79.Parent = elctronmobile.getkey

elctronmobile.sumbit.Name = "sumbit"
elctronmobile.sumbit.Parent = elctronmobile.KeyPage
elctronmobile.sumbit.BackgroundColor3 = Color3.fromRGB(35, 39, 49)
elctronmobile.sumbit.BorderColor3 = Color3.fromRGB(35, 39, 49)
elctronmobile.sumbit.Position = UDim2.new(0.144607842, 0, 0.696517408, 0)
elctronmobile.sumbit.Size = UDim2.new(0, 84, 0, 27)
elctronmobile.sumbit.Font = Enum.Font.SourceSans
elctronmobile.sumbit.Text = "> Submit"
elctronmobile.sumbit.TextColor3 = Color3.fromRGB(132, 135, 140)
elctronmobile.sumbit.TextSize = 20.000
elctronmobile.sumbit.TextStrokeColor3 = Color3.fromRGB(118, 120, 127)
elctronmobile.sumbit.TextStrokeTransparency = 0.890

elctronmobile.UICorner_80.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_80.Parent = elctronmobile.sumbit

elctronmobile.copylink.Name = "copylink"
elctronmobile.copylink.Parent = elctronmobile.KeyPage
elctronmobile.copylink.BackgroundColor3 = Color3.fromRGB(35, 39, 49)
elctronmobile.copylink.BorderColor3 = Color3.fromRGB(35, 39, 49)
elctronmobile.copylink.Position = UDim2.new(0.637254894, 0, 0.696517408, 0)
elctronmobile.copylink.Size = UDim2.new(0, 84, 0, 27)
elctronmobile.copylink.Font = Enum.Font.SourceSans
elctronmobile.copylink.Text = "Copy Key Link"
elctronmobile.copylink.TextColor3 = Color3.fromRGB(132, 135, 140)
elctronmobile.copylink.TextSize = 15.000
elctronmobile.copylink.TextStrokeColor3 = Color3.fromRGB(118, 120, 127)
elctronmobile.copylink.TextStrokeTransparency = 0.890
elctronmobile.copylink.TextWrapped = true

elctronmobile.UICorner_81.CornerRadius = UDim.new(0, 5)
elctronmobile.UICorner_81.Parent = elctronmobile.copylink

elctronmobile.ImageButton_21.Parent = elctronmobile.elctronmobile
elctronmobile.ImageButton_21.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
elctronmobile.ImageButton_21.Position = UDim2.new(0.463968396, 0, 0.0637052357, 0)
elctronmobile.ImageButton_21.Size = UDim2.new(0, 58, 0, 57)
elctronmobile.ImageButton_21.Visible = false
elctronmobile.ImageButton_21.Image = "rbxassetid://13820139515"

elctronmobile.UICorner_82.CornerRadius = UDim.new(1, 8)
elctronmobile.UICorner_82.Parent = elctronmobile.ImageButton_21

-- Scripts:

local function PJTC_fake_script() -- elctronmobile.ImageButton.LocalScript 
	local script = Instance.new('LocalScript', elctronmobile.ImageButton)

	script.Parent.MouseButton1Down:Connect(function()
		script.Parent.Parent.Parent.Parent.Mainframe.Visible = false
		script.Parent.Parent.Parent.Parent.ImageButton.Visible = true
	end)
end
coroutine.wrap(PJTC_fake_script)()
local function ZMLR_fake_script() -- elctronmobile.executer.LocalScript 
	local script = Instance.new('LocalScript', elctronmobile.executer)

	local frames = script.Parent.Parent.Parent.Frames
	script.Parent.MouseButton1Down:Connect(function()
		frames.executer.Visible = true
		frames.cloud.Visible = false
		frames.settings.Visible = false
	end)
	
end
coroutine.wrap(ZMLR_fake_script)()
local function JWCZBCB_fake_script() -- elctronmobile.discord.LocalScript 
	local script = Instance.new('LocalScript', elctronmobile.discord)

	script.Parent.MouseButton1Down:Connect(function()
	
	end)
	
end
coroutine.wrap(JWCZBCB_fake_script)()
local function UKPNLSN_fake_script() -- elctronmobile.player.LocalScript 
	local script = Instance.new('LocalScript', elctronmobile.player)

	script.Parent.MouseButton1Down:Connect(function()
	
	end)
	
end
coroutine.wrap(UKPNLSN_fake_script)()
local function FAMZ_fake_script() -- elctronmobile.cloud.LocalScript 
	local script = Instance.new('LocalScript', elctronmobile.cloud)

	local frames = script.Parent.Parent.Parent.Frames
	script.Parent.MouseButton1Down:Connect(function()
		frames.executer.Visible = false
		frames.cloud.Visible = true
		frames.settings.Visible = false
	end)
	
end
coroutine.wrap(FAMZ_fake_script)()
local function YKYXOW_fake_script() -- elctronmobile.settings.LocalScript 
	local script = Instance.new('LocalScript', elctronmobile.settings)

	local frames = script.Parent.Parent.Parent.Frames
	script.Parent.MouseButton1Down:Connect(function()
		frames.executer.Visible = false
		frames.cloud.Visible = false
		frames.settings.Visible = true
	end)
	
end
coroutine.wrap(YKYXOW_fake_script)()
local function YDDLD_fake_script() -- elctronmobile.Execute.LocalScript 
	local script = Instance.new('LocalScript', elctronmobile.Execute)

	local textbox = script.Parent.Parent.Parent.Parent.executer.executorframe.executor.TextBox
	script.Parent.MouseButton1Up:Connect(function()
		loadstring(textbox.Text)() 
		local electrontext = script.Parent.Parent.Parent.Parent.Parent.UP
		electrontext.TextLabel.Text = "ELECTRON: Sript Executed!"
		electrontext.TextLabel.TextColor3 = Color3.fromRGB(87, 255, 78)
		wait(2)
		electrontext.TextLabel.Text = "ELECTRON"
		electrontext.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	end)
end
coroutine.wrap(YDDLD_fake_script)()
local function FAEKJ_fake_script() -- elctronmobile.clear.LocalScript 
	local script = Instance.new('LocalScript', elctronmobile.clear)

	script.Parent.MouseButton1Down:Connect(function()
		script.Parent.Parent.Parent.executorframe.executor.TextBox.Text = ""
	end)
end
coroutine.wrap(FAEKJ_fake_script)()
local function QYGFS_fake_script() -- elctronmobile.ImageButton_20.LocalScript 
	local script = Instance.new('LocalScript', elctronmobile.ImageButton_20)

	
	script.Parent.MouseButton1Click:Connect (function()
		script.Parent.Parent.Parent.Parent.down.oldnew.Visible = not script.Parent.Parent.Parent.Parent.down.oldnew.Visible
	end)
end
coroutine.wrap(QYGFS_fake_script)()
local function ARCCTO_fake_script() -- elctronmobile.Mainframe.LocalScript 
	local script = Instance.new('LocalScript', elctronmobile.Mainframe)

	script.Parent.Draggable = true
	script.Parent.Active = true
end
coroutine.wrap(ARCCTO_fake_script)()
local function PUMOB_fake_script() -- elctronmobile.sumbit.LocalScript 
	local script = Instance.new('LocalScript', elctronmobile.sumbit)

	script.Parent.MouseButton1Up:Connect(function()
		script.Parent.Parent.Parent.Mainframe.Visible = true
		script.Parent.Parent.Parent.KeyPage.Visible = false
	end)
end
coroutine.wrap(PUMOB_fake_script)()
local function AUHNW_fake_script() -- elctronmobile.KeyPage.LocalScript 
	local script = Instance.new('LocalScript', elctronmobile.KeyPage)

	script.Parent.Draggable = true
	script.Parent.Active = true
end
coroutine.wrap(AUHNW_fake_script)()
local function RTGFDSU_fake_script() -- elctronmobile.ImageButton_21.LocalScript 
	local script = Instance.new('LocalScript', elctronmobile.ImageButton_21)

	script.Parent.MouseButton1Down:Connect(function()
		script.Parent.Parent.Mainframe.Visible = true
		script.Parent.Visible = false
	end)
end
coroutine.wrap(RTGFDSU_fake_script)()
end)
tab3.newButton("Synapse X", "Executor script", function()
    -- Synapse X Remake made by @chillz_azy (yt)

local synversion = "2.23.11"

-- this shit function makes my script fucked
--[[pcall(function()
    local HttpService = game:GetService("HttpService")
    local response = game:HttpGet("https://api.whatexploitsare.online/status")
    local data = HttpService:JSONDecode(response)

    for _, item in pairs(data) do
        if item.Synapse then
            synversion = item.Synapse.exploit_version
	end
    end
end)]]

-- Instances: 150 | Scripts: 8 | Modules: 4
local G2L = {};
-- StarterGui.SynapseX
G2L["1"] = Instance.new("ScreenGui", game:GetService("CoreGui"));
G2L["1"]["Name"] = [[SynapseX]];
G2L["1"]["ResetOnSpawn"] = false;

-- StarterGui.SynapseX.FloatingIcon
G2L["2"] = Instance.new("ImageButton", G2L["1"]);
G2L["2"]["BackgroundColor3"] = Color3.fromRGB(61, 61, 61);
G2L["2"]["Size"] = UDim2.new(0, 36, 0, 36);
G2L["2"]["Name"] = [[FloatingIcon]];
G2L["2"].Visible = false
G2L["2"]["Position"] = UDim2.new(0.7019911956787109, 0, 0.7092568278312683, 0);

-- StarterGui.SynapseX.FloatingIcon. 
G2L["3"] = Instance.new("ImageLabel", G2L["2"]);
G2L["3"]["BorderSizePixel"] = 0;
G2L["3"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3"]["Image"] = [[http://www.roblox.com/asset/?id=9483813933]];
G2L["3"]["Size"] = UDim2.new(0, 23, 0, 26);
G2L["3"]["Name"] = [[ ]];
G2L["3"]["BackgroundTransparency"] = 1;
G2L["3"]["Position"] = UDim2.new(0.16640418767929077, 0, 0.13268542289733887, 0);

-- StarterGui.SynapseX.FloatingIcon.UICorner
G2L["4"] = Instance.new("UICorner", G2L["2"]);
G2L["4"]["CornerRadius"] = UDim.new(1, 8);

-- StarterGui.SynapseX.FloatingIcon.UIGradient
G2L["5"] = Instance.new("UIGradient", G2L["2"]);
G2L["5"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(0.720, Color3.fromRGB(0, 0, 0)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(0, 0, 0))};

-- StarterGui.SynapseX.Main
G2L["6"] = Instance.new("Frame", G2L["1"]);
G2L["6"]["Active"] = true;
G2L["6"]["ZIndex"] = 4;
G2L["6"]["BorderSizePixel"] = 0;
G2L["6"]["BackgroundColor3"] = Color3.fromRGB(71, 71, 71);
G2L["6"]["BackgroundTransparency"] = 1;
G2L["6"]["Size"] = UDim2.new(0, 646, 0, 283);
G2L["6"]["Position"] = UDim2.new(0, 19, 0, 23);
G2L["6"]["Name"] = [[Main]];

-- StarterGui.SynapseX.Main.Icon
G2L["7"] = Instance.new("ImageLabel", G2L["6"]);
G2L["7"]["BorderSizePixel"] = 0;
G2L["7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7"]["Image"] = [[http://www.roblox.com/asset/?id=9483813933]];
G2L["7"]["Size"] = UDim2.new(0, 23, 0, 26);
G2L["7"]["Name"] = [[Icon]];
G2L["7"]["BackgroundTransparency"] = 1;
G2L["7"]["Position"] = UDim2.new(0, 5, 0, 0);

-- StarterGui.SynapseX.Main.Background
G2L["8"] = Instance.new("ImageLabel", G2L["6"]);
G2L["8"]["ZIndex"] = 0;
G2L["8"]["BorderSizePixel"] = 0;
G2L["8"]["ScaleType"] = Enum.ScaleType.Tile;
G2L["8"]["BackgroundColor3"] = Color3.fromRGB(52, 52, 52);
G2L["8"]["TileSize"] = UDim2.new(0, 25, 0, 25);
G2L["8"]["Size"] = UDim2.new(0, 647, 0, 283);
G2L["8"]["Name"] = [[Background]];

-- StarterGui.SynapseX.Main.Panel
G2L["9"] = Instance.new("Frame", G2L["6"]);
G2L["9"]["ZIndex"] = 0;
G2L["9"]["BorderSizePixel"] = 0;
G2L["9"]["BackgroundColor3"] = Color3.fromRGB(61, 61, 61);
G2L["9"]["Size"] = UDim2.new(0, 647, 0, 27);
G2L["9"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["9"]["Name"] = [[Panel]];

-- StarterGui.SynapseX.Main.MainFunc
G2L["a"] = Instance.new("Frame", G2L["6"]);
G2L["a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a"]["BackgroundTransparency"] = 1;
G2L["a"]["Size"] = UDim2.new(0, 100, 0, 100);
G2L["a"]["Name"] = [[MainFunc]];

-- StarterGui.SynapseX.Main.MainFunc.Needs
G2L["b"] = Instance.new("Folder", G2L["a"]);
G2L["b"]["Name"] = [[Needs]];

-- StarterGui.SynapseX.Main.MainFunc.Needs.Tab
G2L["c"] = Instance.new("TextButton", G2L["b"]);
G2L["c"]["ZIndex"] = 0;
G2L["c"]["BorderSizePixel"] = 0;
G2L["c"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["c"]["BackgroundColor3"] = Color3.fromRGB(101, 101, 101);
G2L["c"]["TextSize"] = 14;
G2L["c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c"]["Visible"] = false;
G2L["c"]["Size"] = UDim2.new(0, 56, 0, 16);
G2L["c"]["Name"] = [[Tab]];
G2L["c"]["Text"] = [[  Script 1]];
G2L["c"]["Position"] = UDim2.new(-0.0003878306597471237, 0, -0.011710520833730698, 0);
G2L["c"]["BackgroundTransparency"] = 0.10000000149011612;

-- StarterGui.SynapseX.Main.MainFunc.Needs.Tab.Remove
G2L["d"] = Instance.new("TextButton", G2L["c"]);
G2L["d"]["BorderSizePixel"] = 0;
G2L["d"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["d"]["BackgroundColor3"] = Color3.fromRGB(101, 101, 101);
G2L["d"]["TextSize"] = 15;
G2L["d"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["d"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["d"]["Size"] = UDim2.new(0, 10, 0, 10);
G2L["d"]["Name"] = [[Remove]];
G2L["d"]["BorderColor3"] = Color3.fromRGB(28, 43, 54);
G2L["d"]["Text"] = [[x]];
G2L["d"]["Position"] = UDim2.new(0, 46, 0, 2);
G2L["d"]["BackgroundTransparency"] = 1;

-- StarterGui.SynapseX.Main.MainFunc.Needs.ScriptHubButton
G2L["e"] = Instance.new("TextButton", G2L["b"]);
G2L["e"]["ZIndex"] = 3;
G2L["e"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["e"]["BackgroundColor3"] = Color3.fromRGB(61, 61, 61);
G2L["e"]["TextSize"] = 14;
G2L["e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["e"]["Visible"] = false;
G2L["e"]["Size"] = UDim2.new(0, 96, 0, 15);
G2L["e"]["Name"] = [[ScriptHubButton]];
G2L["e"]["BorderColor3"] = Color3.fromRGB(61, 61, 61);
G2L["e"]["Text"] = [[test.lua]];
G2L["e"]["AutomaticSize"] = Enum.AutomaticSize.X;
G2L["e"]["Position"] = UDim2.new(0.039603959769010544, 0, 0, 0);

-- StarterGui.SynapseX.Main.MainFunc.Needs.Textbox
G2L["f"] = Instance.new("ScrollingFrame", G2L["b"]);
G2L["f"]["Active"] = true;
G2L["f"]["BorderSizePixel"] = 0;
G2L["f"]["CanvasSize"] = UDim2.new(0, 0, 0, 0);
G2L["f"]["BackgroundColor3"] = Color3.fromRGB(41, 41, 41);
G2L["f"]["AutomaticCanvasSize"] = Enum.AutomaticSize.XY;
G2L["f"]["Size"] = UDim2.new(0, 533, 0, 197);
G2L["f"]["Position"] = UDim2.new(0.05999999865889549, 0, 0.48061829805374146, 0);
G2L["f"]["Visible"] = false;
G2L["f"]["Name"] = [[Textbox]];

-- StarterGui.SynapseX.Main.MainFunc.Needs.Textbox.Frame
G2L["10"] = Instance.new("Frame", G2L["f"]);
G2L["10"]["Active"] = true;
G2L["10"]["BorderSizePixel"] = 0;
G2L["10"]["BackgroundColor3"] = Color3.fromRGB(41, 41, 41);
G2L["10"]["Size"] = UDim2.new(0, 533, 0, 200);
G2L["10"]["Selectable"] = true;
G2L["10"]["ClipsDescendants"] = true;
G2L["10"]["AutomaticSize"] = Enum.AutomaticSize.XY;
G2L["10"]["SelectionGroup"] = true;

-- StarterGui.SynapseX.Main.MainFunc.Needs.Textbox.Frame.Textbox
G2L["11"] = Instance.new("TextBox", G2L["10"]);
G2L["11"]["ZIndex"] = 4;
G2L["11"]["BorderSizePixel"] = 0;
G2L["11"]["TextSize"] = 14;
G2L["11"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["11"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["11"]["BackgroundColor3"] = Color3.fromRGB(41, 41, 41);
G2L["11"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["11"]["FontFace"] = Font.new([[rbxasset://fonts/families/Inconsolata.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["11"]["MultiLine"] = true;
G2L["11"]["Size"] = UDim2.new(0, 486, 0, 194);
G2L["11"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["11"]["Text"] = [[]];
G2L["11"]["Position"] = UDim2.new(0, 35, 0, 0);
G2L["11"]["AutomaticSize"] = Enum.AutomaticSize.XY;
G2L["11"]["Name"] = [[Textbox]];
G2L["11"]["ClearTextOnFocus"] = false;

-- StarterGui.SynapseX.Main.MainFunc.Needs.Textbox.Frame.Linebar
G2L["12"] = Instance.new("Frame", G2L["10"]);
G2L["12"]["ZIndex"] = 2;
G2L["12"]["BorderSizePixel"] = 0;
G2L["12"]["BackgroundColor3"] = Color3.fromRGB(36, 36, 36);
G2L["12"]["Size"] = UDim2.new(0, 32, 1, 0);
G2L["12"]["Name"] = [[Linebar]];

-- StarterGui.SynapseX.Main.MainFunc.Needs.Textbox.Frame.Linebar.LineText
G2L["13"] = Instance.new("TextLabel", G2L["12"]);
G2L["13"]["ZIndex"] = 5;
G2L["13"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["13"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["13"]["TextXAlignment"] = Enum.TextXAlignment.Right;
G2L["13"]["FontFace"] = Font.new([[rbxasset://fonts/families/Inconsolata.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["13"]["TextSize"] = 14;
G2L["13"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["13"]["Size"] = UDim2.new(0, 24, 0, 197);
G2L["13"]["Text"] = [[1]];
G2L["13"]["Name"] = [[LineText]];
G2L["13"]["BackgroundTransparency"] = 1;

-- StarterGui.SynapseX.Main.MainFunc.Needs.Textbox.Frame.Highlighted
G2L["14"] = Instance.new("Frame", G2L["10"]);
G2L["14"]["ZIndex"] = 5;
G2L["14"]["BorderSizePixel"] = 0;
G2L["14"]["BackgroundColor3"] = Color3.fromRGB(101, 101, 101);
G2L["14"]["BackgroundTransparency"] = 0.699999988079071;
G2L["14"]["Size"] = UDim2.new(1.0958691835403442, 0, 0, 13);
G2L["14"]["Position"] = UDim2.new(0, -44, 0, 0);
G2L["14"]["AutomaticSize"] = Enum.AutomaticSize.X;
G2L["14"]["Name"] = [[Highlighted]];

-- StarterGui.SynapseX.Main.MainFunc.Needs.Textbox.Frame.Highlighted.LineText
G2L["15"] = Instance.new("TextLabel", G2L["14"]);
G2L["15"]["ZIndex"] = 5;
G2L["15"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["15"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["15"]["TextXAlignment"] = Enum.TextXAlignment.Right;
G2L["15"]["FontFace"] = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["15"]["TextTransparency"] = 1;
G2L["15"]["TextSize"] = 14;
G2L["15"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["15"]["Size"] = UDim2.new(0, 24, 0, 197);
G2L["15"]["Text"] = [[1]];
G2L["15"]["Name"] = [[LineText]];
G2L["15"]["Visible"] = false;
G2L["15"]["BackgroundTransparency"] = 1;

-- StarterGui.SynapseX.Main.MainFunc.Textboxes
G2L["16"] = Instance.new("Folder", G2L["a"]);
G2L["16"]["Name"] = [[Textboxes]];

-- StarterGui.SynapseX.Main.MainFunc.ScriptHub
G2L["17"] = Instance.new("ScrollingFrame", G2L["a"]);
G2L["17"]["Active"] = true;
G2L["17"]["ZIndex"] = 2;
G2L["17"]["BorderSizePixel"] = 0;
G2L["17"]["BackgroundColor3"] = Color3.fromRGB(61, 61, 61);
G2L["17"]["AutomaticCanvasSize"] = Enum.AutomaticSize.XY;
G2L["17"]["Size"] = UDim2.new(0, 101, 0, 215);
G2L["17"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["17"]["Position"] = UDim2.new(5.420000076293945, 0, 0.30000001192092896, 0);
G2L["17"]["Name"] = [[ScriptHub]];

-- StarterGui.SynapseX.Main.MainFunc.ScriptHub.UIListLayout
G2L["18"] = Instance.new("UIListLayout", G2L["17"]);
G2L["18"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

-- StarterGui.SynapseX.Main.MainFunc.ScriptHub.UIPadding
G2L["19"] = Instance.new("UIPadding", G2L["17"]);
G2L["19"]["PaddingLeft"] = UDim.new(0.05000000074505806, 0);

-- StarterGui.SynapseX.Main.Maximize
G2L["1a"] = Instance.new("ImageButton", G2L["6"]);
G2L["1a"]["BorderSizePixel"] = 0;
G2L["1a"]["BackgroundColor3"] = Color3.fromRGB(61, 61, 61);
G2L["1a"]["Size"] = UDim2.new(0, 15, 0, 15);
G2L["1a"]["Name"] = [[Maximize]];
G2L["1a"]["BorderColor3"] = Color3.fromRGB(99, 150, 182);
G2L["1a"]["Position"] = UDim2.new(0, 606, 0, 2);

-- StarterGui.SynapseX.Main.Maximize.NameText
G2L["1b"] = Instance.new("TextLabel", G2L["1a"]);
G2L["1b"]["TextWrapped"] = true;
G2L["1b"]["ZIndex"] = 2;
G2L["1b"]["BackgroundColor3"] = Color3.fromRGB(0, 55, 81);
G2L["1b"]["FontFace"] = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1b"]["TextSize"] = 12;
G2L["1b"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1b"]["Size"] = UDim2.new(0, 15, 0, 15);
G2L["1b"]["Active"] = true;
G2L["1b"]["Text"] = [[M]];
G2L["1b"]["Name"] = [[NameText]];
G2L["1b"]["BackgroundTransparency"] = 1;

-- StarterGui.SynapseX.Main.Maximize.ImageButton
G2L["1c"] = Instance.new("ImageButton", G2L["1a"]);
G2L["1c"]["BackgroundColor3"] = Color3.fromRGB(0, 55, 81);
G2L["1c"]["Size"] = UDim2.new(0, 15, 0, 15);
G2L["1c"]["BorderColor3"] = Color3.fromRGB(99, 150, 182);
G2L["1c"]["Visible"] = false;
G2L["1c"]["BackgroundTransparency"] = 0.6000000238418579;

-- StarterGui.SynapseX.Main.Maximize.UICorner
G2L["1d"] = Instance.new("UICorner", G2L["1a"]);
G2L["1d"]["CornerRadius"] = UDim.new(0, 0);

-- StarterGui.SynapseX.Main.TitleSynapse
G2L["1e"] = Instance.new("TextLabel", G2L["6"]);
G2L["1e"]["BorderSizePixel"] = 0;
G2L["1e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1e"]["TextSize"] = 15;
G2L["1e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1e"]["Size"] = UDim2.new(0, 646, 0, 27);
G2L["1e"]["Text"] = "Synapse X - "..synversion;
G2L["1e"]["Name"] = [[TitleSynapse]];
G2L["1e"]["BackgroundTransparency"] = 1;

-- StarterGui.SynapseX.Main.ScriptHub
G2L["1f"] = Instance.new("ImageButton", G2L["6"]);
G2L["1f"]["BorderSizePixel"] = 0;
G2L["1f"]["BackgroundColor3"] = Color3.fromRGB(61, 61, 61);
G2L["1f"]["Size"] = UDim2.new(0, 82, 0, 27);
G2L["1f"]["Name"] = [[ScriptHub]];
G2L["1f"]["BorderColor3"] = Color3.fromRGB(99, 150, 182);
G2L["1f"]["Position"] = UDim2.new(0, 560, 0, 250);

-- StarterGui.SynapseX.Main.ScriptHub.NameText
G2L["20"] = Instance.new("TextLabel", G2L["1f"]);
G2L["20"]["TextWrapped"] = true;
G2L["20"]["ZIndex"] = 2;
G2L["20"]["BorderSizePixel"] = 0;
G2L["20"]["BackgroundColor3"] = Color3.fromRGB(61, 61, 61);
G2L["20"]["FontFace"] = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["20"]["TextSize"] = 14;
G2L["20"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["20"]["Size"] = UDim2.new(0, 82, 0, 27);
G2L["20"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["20"]["Text"] = [[Script Hub]];
G2L["20"]["Name"] = [[NameText]];
G2L["20"]["BackgroundTransparency"] = 1;

-- StarterGui.SynapseX.Main.ScriptHub.ImageButton
G2L["21"] = Instance.new("ImageButton", G2L["1f"]);
G2L["21"]["BackgroundColor3"] = Color3.fromRGB(0, 55, 81);
G2L["21"]["Size"] = UDim2.new(0, 82, 0, 27);
G2L["21"]["BorderColor3"] = Color3.fromRGB(99, 150, 182);
G2L["21"]["Visible"] = false;
G2L["21"]["BackgroundTransparency"] = 0.6000000238418579;

-- StarterGui.SynapseX.Main.ScriptHub.UICorner
G2L["22"] = Instance.new("UICorner", G2L["1f"]);
G2L["22"]["CornerRadius"] = UDim.new(0, 0);

-- StarterGui.SynapseX.Main.Options
G2L["23"] = Instance.new("ImageButton", G2L["6"]);
G2L["23"]["BorderSizePixel"] = 0;
G2L["23"]["BackgroundColor3"] = Color3.fromRGB(61, 61, 61);
G2L["23"]["Size"] = UDim2.new(0, 82, 0, 27);
G2L["23"]["Name"] = [[Options]];
G2L["23"]["BorderColor3"] = Color3.fromRGB(99, 150, 182);
G2L["23"]["Position"] = UDim2.new(0, 352, 0, 250);

-- StarterGui.SynapseX.Main.Options.NameText
G2L["24"] = Instance.new("TextLabel", G2L["23"]);
G2L["24"]["TextWrapped"] = true;
G2L["24"]["ZIndex"] = 2;
G2L["24"]["BorderSizePixel"] = 0;
G2L["24"]["BackgroundColor3"] = Color3.fromRGB(61, 61, 61);
G2L["24"]["FontFace"] = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["24"]["TextSize"] = 14;
G2L["24"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["24"]["Size"] = UDim2.new(0, 82, 0, 27);
G2L["24"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["24"]["Text"] = [[Options]];
G2L["24"]["Name"] = [[NameText]];
G2L["24"]["BackgroundTransparency"] = 1;

-- StarterGui.SynapseX.Main.Options.ImageButton
G2L["25"] = Instance.new("ImageButton", G2L["23"]);
G2L["25"]["BackgroundColor3"] = Color3.fromRGB(0, 55, 81);
G2L["25"]["Size"] = UDim2.new(0, 82, 0, 27);
G2L["25"]["BorderColor3"] = Color3.fromRGB(99, 150, 182);
G2L["25"]["Visible"] = false;
G2L["25"]["BackgroundTransparency"] = 0.6000000238418579;

-- StarterGui.SynapseX.Main.Options.UICorner
G2L["26"] = Instance.new("UICorner", G2L["23"]);
G2L["26"]["CornerRadius"] = UDim.new(0, 0);

-- StarterGui.SynapseX.Main.Minimize
G2L["27"] = Instance.new("ImageButton", G2L["6"]);
G2L["27"]["BorderSizePixel"] = 0;
G2L["27"]["BackgroundColor3"] = Color3.fromRGB(61, 61, 61);
G2L["27"]["Size"] = UDim2.new(0, 15, 0, 15);
G2L["27"]["Name"] = [[Minimize]];
G2L["27"]["BorderColor3"] = Color3.fromRGB(99, 150, 182);
G2L["27"]["Position"] = UDim2.new(0, 582, 0, 2);

-- StarterGui.SynapseX.Main.Minimize.NameText
G2L["28"] = Instance.new("TextLabel", G2L["27"]);
G2L["28"]["TextWrapped"] = true;
G2L["28"]["ZIndex"] = 2;
G2L["28"]["BackgroundColor3"] = Color3.fromRGB(0, 55, 81);
G2L["28"]["FontFace"] = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["28"]["TextSize"] = 15;
G2L["28"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["28"]["Size"] = UDim2.new(0, 15, 0, 15);
G2L["28"]["Active"] = true;
G2L["28"]["Text"] = [[_]];
G2L["28"]["Name"] = [[NameText]];
G2L["28"]["BackgroundTransparency"] = 1;

-- StarterGui.SynapseX.Main.Minimize.ImageButton
G2L["29"] = Instance.new("ImageButton", G2L["27"]);
G2L["29"]["BackgroundColor3"] = Color3.fromRGB(0, 55, 81);
G2L["29"]["Size"] = UDim2.new(0, 15, 0, 15);
G2L["29"]["BorderColor3"] = Color3.fromRGB(99, 150, 182);
G2L["29"]["Visible"] = false;
G2L["29"]["BackgroundTransparency"] = 0.6000000238418579;

-- StarterGui.SynapseX.Main.Minimize.UICorner
G2L["2a"] = Instance.new("UICorner", G2L["27"]);
G2L["2a"]["CornerRadius"] = UDim.new(0, 0);

-- StarterGui.SynapseX.Main.Execute
G2L["2b"] = Instance.new("ImageButton", G2L["6"]);
G2L["2b"]["BorderSizePixel"] = 0;
G2L["2b"]["BackgroundColor3"] = Color3.fromRGB(61, 61, 61);
G2L["2b"]["Size"] = UDim2.new(0, 82, 0, 27);
G2L["2b"]["Name"] = [[Execute]];
G2L["2b"]["BorderColor3"] = Color3.fromRGB(99, 150, 182);
G2L["2b"]["Position"] = UDim2.new(0, 6, 0, 250);

-- StarterGui.SynapseX.Main.Execute.NameText
G2L["2c"] = Instance.new("TextLabel", G2L["2b"]);
G2L["2c"]["TextWrapped"] = true;
G2L["2c"]["ZIndex"] = 2;
G2L["2c"]["BorderSizePixel"] = 0;
G2L["2c"]["BackgroundColor3"] = Color3.fromRGB(61, 61, 61);
G2L["2c"]["FontFace"] = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["2c"]["TextSize"] = 14;
G2L["2c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2c"]["Size"] = UDim2.new(0, 82, 0, 27);
G2L["2c"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2c"]["Text"] = [[Execute]];
G2L["2c"]["Name"] = [[NameText]];
G2L["2c"]["BackgroundTransparency"] = 1;

-- StarterGui.SynapseX.Main.Execute.ImageButton
G2L["2d"] = Instance.new("ImageButton", G2L["2b"]);
G2L["2d"]["BackgroundColor3"] = Color3.fromRGB(0, 55, 81);
G2L["2d"]["Size"] = UDim2.new(0, 82, 0, 27);
G2L["2d"]["BorderColor3"] = Color3.fromRGB(99, 150, 182);
G2L["2d"]["Visible"] = false;
G2L["2d"]["BackgroundTransparency"] = 0.6000000238418579;

-- StarterGui.SynapseX.Main.Execute.UICorner
G2L["2e"] = Instance.new("UICorner", G2L["2b"]);
G2L["2e"]["CornerRadius"] = UDim.new(0, 0);

-- StarterGui.SynapseX.Main.SaveFile
G2L["2f"] = Instance.new("ImageButton", G2L["6"]);
G2L["2f"]["BorderSizePixel"] = 0;
G2L["2f"]["BackgroundColor3"] = Color3.fromRGB(61, 61, 61);
G2L["2f"]["Size"] = UDim2.new(0, 82, 0, 27);
G2L["2f"]["Name"] = [[SaveFile]];
G2L["2f"]["BorderColor3"] = Color3.fromRGB(99, 150, 182);
G2L["2f"]["Position"] = UDim2.new(0, 266, 0, 250);

-- StarterGui.SynapseX.Main.SaveFile.NameText
G2L["30"] = Instance.new("TextLabel", G2L["2f"]);
G2L["30"]["TextWrapped"] = true;
G2L["30"]["ZIndex"] = 2;
G2L["30"]["BorderSizePixel"] = 0;
G2L["30"]["BackgroundColor3"] = Color3.fromRGB(61, 61, 61);
G2L["30"]["FontFace"] = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["30"]["TextSize"] = 14;
G2L["30"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["30"]["Size"] = UDim2.new(0, 82, 0, 27);
G2L["30"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["30"]["Text"] = [[Save File]];
G2L["30"]["Name"] = [[NameText]];
G2L["30"]["BackgroundTransparency"] = 1;

-- StarterGui.SynapseX.Main.SaveFile.ImageButton
G2L["31"] = Instance.new("ImageButton", G2L["2f"]);
G2L["31"]["BackgroundColor3"] = Color3.fromRGB(0, 55, 81);
G2L["31"]["Size"] = UDim2.new(0, 82, 0, 27);
G2L["31"]["BorderColor3"] = Color3.fromRGB(99, 150, 182);
G2L["31"]["Visible"] = false;
G2L["31"]["BackgroundTransparency"] = 0.6000000238418579;

-- StarterGui.SynapseX.Main.SaveFile.UICorner
G2L["32"] = Instance.new("UICorner", G2L["2f"]);
G2L["32"]["CornerRadius"] = UDim.new(0, 0);

-- StarterGui.SynapseX.Main.Close
G2L["33"] = Instance.new("ImageButton", G2L["6"]);
G2L["33"]["BorderSizePixel"] = 0;
G2L["33"]["BackgroundColor3"] = Color3.fromRGB(61, 61, 61);
G2L["33"]["Size"] = UDim2.new(0, 15, 0, 15);
G2L["33"]["Name"] = [[Close]];
G2L["33"]["BorderColor3"] = Color3.fromRGB(99, 150, 182);
G2L["33"]["Position"] = UDim2.new(0, 627, 0, 2);

-- StarterGui.SynapseX.Main.Close.NameText
G2L["34"] = Instance.new("TextLabel", G2L["33"]);
G2L["34"]["TextWrapped"] = true;
G2L["34"]["ZIndex"] = 2;
G2L["34"]["BackgroundColor3"] = Color3.fromRGB(0, 55, 81);
G2L["34"]["FontFace"] = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["34"]["TextSize"] = 14;
G2L["34"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["34"]["Size"] = UDim2.new(0, 15, 0, 15);
G2L["34"]["Active"] = true;
G2L["34"]["Text"] = [[x]];
G2L["34"]["Name"] = [[NameText]];
G2L["34"]["BackgroundTransparency"] = 1;

-- StarterGui.SynapseX.Main.Close.ImageButton
G2L["35"] = Instance.new("ImageButton", G2L["33"]);
G2L["35"]["BackgroundColor3"] = Color3.fromRGB(0, 55, 81);
G2L["35"]["Size"] = UDim2.new(0, 15, 0, 15);
G2L["35"]["BorderColor3"] = Color3.fromRGB(99, 150, 182);
G2L["35"]["Visible"] = false;
G2L["35"]["BackgroundTransparency"] = 0.6000000238418579;

-- StarterGui.SynapseX.Main.Close.UICorner
G2L["36"] = Instance.new("UICorner", G2L["33"]);
G2L["36"]["CornerRadius"] = UDim.new(0, 0);

-- StarterGui.SynapseX.Main.Clear
G2L["37"] = Instance.new("ImageButton", G2L["6"]);
G2L["37"]["BorderSizePixel"] = 0;
G2L["37"]["BackgroundColor3"] = Color3.fromRGB(61, 61, 61);
G2L["37"]["Size"] = UDim2.new(0, 82, 0, 27);
G2L["37"]["Name"] = [[Clear]];
G2L["37"]["BorderColor3"] = Color3.fromRGB(99, 150, 182);
G2L["37"]["Position"] = UDim2.new(0, 92, 0, 250);

-- StarterGui.SynapseX.Main.Clear.NameText
G2L["38"] = Instance.new("TextLabel", G2L["37"]);
G2L["38"]["TextWrapped"] = true;
G2L["38"]["ZIndex"] = 2;
G2L["38"]["BorderSizePixel"] = 0;
G2L["38"]["BackgroundColor3"] = Color3.fromRGB(61, 61, 61);
G2L["38"]["FontFace"] = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["38"]["TextSize"] = 14;
G2L["38"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["38"]["Size"] = UDim2.new(0, 82, 0, 27);
G2L["38"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["38"]["Text"] = [[Clear]];
G2L["38"]["Name"] = [[NameText]];
G2L["38"]["BackgroundTransparency"] = 1;

-- StarterGui.SynapseX.Main.Clear.ImageButton
G2L["39"] = Instance.new("ImageButton", G2L["37"]);
G2L["39"]["BackgroundColor3"] = Color3.fromRGB(0, 55, 81);
G2L["39"]["Size"] = UDim2.new(0, 82, 0, 27);
G2L["39"]["BorderColor3"] = Color3.fromRGB(99, 150, 182);
G2L["39"]["Visible"] = false;
G2L["39"]["BackgroundTransparency"] = 0.6000000238418579;

-- StarterGui.SynapseX.Main.Clear.UICorner
G2L["3a"] = Instance.new("UICorner", G2L["37"]);
G2L["3a"]["CornerRadius"] = UDim.new(0, 0);

-- StarterGui.SynapseX.Main.Attach
G2L["3b"] = Instance.new("ImageButton", G2L["6"]);
G2L["3b"]["BorderSizePixel"] = 0;
G2L["3b"]["BackgroundColor3"] = Color3.fromRGB(61, 61, 61);
G2L["3b"]["Size"] = UDim2.new(0, 82, 0, 27);
G2L["3b"]["Name"] = [[Attach]];
G2L["3b"]["BorderColor3"] = Color3.fromRGB(99, 150, 182);
G2L["3b"]["Position"] = UDim2.new(0, 474, 0, 250);

-- StarterGui.SynapseX.Main.Attach.NameText
G2L["3c"] = Instance.new("TextLabel", G2L["3b"]);
G2L["3c"]["TextWrapped"] = true;
G2L["3c"]["ZIndex"] = 2;
G2L["3c"]["BorderSizePixel"] = 0;
G2L["3c"]["BackgroundColor3"] = Color3.fromRGB(61, 61, 61);
G2L["3c"]["FontFace"] = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["3c"]["TextSize"] = 14;
G2L["3c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3c"]["Size"] = UDim2.new(0, 82, 0, 27);
G2L["3c"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3c"]["Text"] = [[Attach]];
G2L["3c"]["Name"] = [[NameText]];
G2L["3c"]["BackgroundTransparency"] = 1;

-- StarterGui.SynapseX.Main.Attach.ImageButton
G2L["3d"] = Instance.new("ImageButton", G2L["3b"]);
G2L["3d"]["BackgroundColor3"] = Color3.fromRGB(0, 55, 81);
G2L["3d"]["Size"] = UDim2.new(0, 82, 0, 27);
G2L["3d"]["BorderColor3"] = Color3.fromRGB(99, 150, 182);
G2L["3d"]["Visible"] = false;
G2L["3d"]["BackgroundTransparency"] = 0.6000000238418579;

-- StarterGui.SynapseX.Main.Attach.UICorner
G2L["3e"] = Instance.new("UICorner", G2L["3b"]);
G2L["3e"]["CornerRadius"] = UDim.new(0, 0);

-- StarterGui.SynapseX.Main.OpenFile
G2L["3f"] = Instance.new("ImageButton", G2L["6"]);
G2L["3f"]["BorderSizePixel"] = 0;
G2L["3f"]["BackgroundColor3"] = Color3.fromRGB(61, 61, 61);
G2L["3f"]["Size"] = UDim2.new(0, 82, 0, 27);
G2L["3f"]["Name"] = [[OpenFile]];
G2L["3f"]["BorderColor3"] = Color3.fromRGB(99, 150, 182);
G2L["3f"]["Position"] = UDim2.new(0, 179, 0, 250);

-- StarterGui.SynapseX.Main.OpenFile.NameText
G2L["40"] = Instance.new("TextLabel", G2L["3f"]);
G2L["40"]["TextWrapped"] = true;
G2L["40"]["ZIndex"] = 2;
G2L["40"]["BorderSizePixel"] = 0;
G2L["40"]["BackgroundColor3"] = Color3.fromRGB(61, 61, 61);
G2L["40"]["FontFace"] = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["40"]["TextSize"] = 14;
G2L["40"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["40"]["Size"] = UDim2.new(0, 82, 0, 27);
G2L["40"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["40"]["Text"] = [[Open File]];
G2L["40"]["Name"] = [[NameText]];
G2L["40"]["BackgroundTransparency"] = 1;

-- StarterGui.SynapseX.Main.OpenFile.ImageButton
G2L["41"] = Instance.new("ImageButton", G2L["3f"]);
G2L["41"]["BackgroundColor3"] = Color3.fromRGB(0, 55, 81);
G2L["41"]["Size"] = UDim2.new(0, 82, 0, 27);
G2L["41"]["BorderColor3"] = Color3.fromRGB(99, 150, 182);
G2L["41"]["Visible"] = false;
G2L["41"]["BackgroundTransparency"] = 0.6000000238418579;

-- StarterGui.SynapseX.Main.OpenFile.UICorner
G2L["42"] = Instance.new("UICorner", G2L["3f"]);
G2L["42"]["CornerRadius"] = UDim.new(0, 0);

-- StarterGui.SynapseX.Main.ScriptTab
G2L["43"] = Instance.new("ScrollingFrame", G2L["6"]);
G2L["43"]["Active"] = true;
G2L["43"]["ScrollingDirection"] = Enum.ScrollingDirection.X;
G2L["43"]["SizeConstraint"] = Enum.SizeConstraint.RelativeYY;
G2L["43"]["ZIndex"] = 6;
G2L["43"]["BorderSizePixel"] = 0;
G2L["43"]["CanvasSize"] = UDim2.new(0, 0, 0, 0);
G2L["43"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["43"]["VerticalScrollBarPosition"] = Enum.VerticalScrollBarPosition.Left;
G2L["43"]["HorizontalScrollBarInset"] = Enum.ScrollBarInset.Always;
G2L["43"]["AutomaticCanvasSize"] = Enum.AutomaticSize.X;
G2L["43"]["BackgroundTransparency"] = 0.9990000128746033;
G2L["43"]["Size"] = UDim2.new(0, 533, 0, 16);
G2L["43"]["Selectable"] = false;
G2L["43"]["ClipsDescendants"] = false;
G2L["43"]["ScrollBarThickness"] = 3;
G2L["43"]["Position"] = UDim2.new(0, 6, 0, 32);
G2L["43"]["Name"] = [[ScriptTab]];
G2L["43"]["SelectionGroup"] = false;

-- StarterGui.SynapseX.Main.ScriptTab.ScriptTabHandler
G2L["44"] = Instance.new("LocalScript", G2L["43"]);
G2L["44"]["Name"] = [[ScriptTabHandler]];

-- StarterGui.SynapseX.Main.ScriptTab.Tabs
G2L["45"] = Instance.new("Folder", G2L["43"]);
G2L["45"]["Name"] = [[Tabs]];

-- StarterGui.SynapseX.Main.ScriptTab.Tabs.AddScript
G2L["46"] = Instance.new("Frame", G2L["45"]);
G2L["46"]["Active"] = true;
G2L["46"]["ZIndex"] = 0;
G2L["46"]["BorderSizePixel"] = 0;
G2L["46"]["BackgroundColor3"] = Color3.fromRGB(101, 101, 101);
G2L["46"]["BackgroundTransparency"] = 1;
G2L["46"]["LayoutOrder"] = 999999999;
G2L["46"]["Size"] = UDim2.new(0, 10, 0, 11);
G2L["46"]["Selectable"] = true;
G2L["46"]["Name"] = [[AddScript]];

-- StarterGui.SynapseX.Main.ScriptTab.Tabs.AddScript.Button
G2L["47"] = Instance.new("TextButton", G2L["46"]);
G2L["47"]["BorderSizePixel"] = 0;
G2L["47"]["BackgroundColor3"] = Color3.fromRGB(101, 101, 101);
G2L["47"]["TextSize"] = 20;
G2L["47"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["47"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["47"]["Size"] = UDim2.new(0, 10, 0, 11);
G2L["47"]["LayoutOrder"] = 999999999;
G2L["47"]["Name"] = [[Button]];
G2L["47"]["Text"] = [[+]];
G2L["47"]["Position"] = UDim2.new(0.1599999964237213, 0, 0.25, 0);
G2L["47"]["BackgroundTransparency"] = 0.10000000149011612;

-- StarterGui.SynapseX.Main.ScriptTab.Tabs.UIListLayout
G2L["48"] = Instance.new("UIListLayout", G2L["45"]);
G2L["48"]["FillDirection"] = Enum.FillDirection.Horizontal;
G2L["48"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

-- StarterGui.SynapseX.Main.ButtonsHandler
G2L["49"] = Instance.new("LocalScript", G2L["6"]);
G2L["49"]["Name"] = [[ButtonsHandler]];

-- StarterGui.SynapseX.SaveScript
G2L["4a"] = Instance.new("Frame", G2L["1"]);
G2L["4a"]["Active"] = true;
G2L["4a"]["ZIndex"] = 10;
G2L["4a"]["BorderSizePixel"] = 0;
G2L["4a"]["BackgroundColor3"] = Color3.fromRGB(61, 61, 61);
G2L["4a"]["Size"] = UDim2.new(0, 322, 0, 81);
G2L["4a"]["Position"] = UDim2.new(0.2866774797439575, 0, 0.3861943185329437, 0);
G2L["4a"]["Visible"] = false;
G2L["4a"]["Name"] = [[SaveScript]];

-- StarterGui.SynapseX.SaveScript.scriptname
G2L["4b"] = Instance.new("TextBox", G2L["4a"]);
G2L["4b"]["ZIndex"] = 11;
G2L["4b"]["BorderSizePixel"] = 0;
G2L["4b"]["TextSize"] = 14;
G2L["4b"]["BackgroundColor3"] = Color3.fromRGB(41, 41, 41);
G2L["4b"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["4b"]["PlaceholderText"] = [[File Name]];
G2L["4b"]["Size"] = UDim2.new(0, 317, 0, 22);
G2L["4b"]["Text"] = [[]];
G2L["4b"]["Position"] = UDim2.new(0, 3, 0, 32);
G2L["4b"]["Name"] = [[scriptname]];

-- StarterGui.SynapseX.SaveScript.savescript
G2L["4c"] = Instance.new("TextButton", G2L["4a"]);
G2L["4c"]["ZIndex"] = 11;
G2L["4c"]["BorderSizePixel"] = 0;
G2L["4c"]["BackgroundColor3"] = Color3.fromRGB(46, 46, 46);
G2L["4c"]["TextSize"] = 14;
G2L["4c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["4c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4c"]["Size"] = UDim2.new(0, 317, 0, 19);
G2L["4c"]["Name"] = [[savescript]];
G2L["4c"]["Text"] = [[Save File]];
G2L["4c"]["Position"] = UDim2.new(0, 3, 0, 56);

-- StarterGui.SynapseX.SaveScript.Icon
G2L["4d"] = Instance.new("ImageLabel", G2L["4a"]);
G2L["4d"]["ZIndex"] = 11;
G2L["4d"]["BorderSizePixel"] = 0;
G2L["4d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4d"]["Image"] = [[http://www.roblox.com/asset/?id=9483813933]];
G2L["4d"]["Size"] = UDim2.new(0, 48, 0, 23);
G2L["4d"]["Name"] = [[Icon]];
G2L["4d"]["BackgroundTransparency"] = 1;
G2L["4d"]["Position"] = UDim2.new(0.008999999612569809, 0, 0.05000000074505806, 0);

-- StarterGui.SynapseX.SaveScript.Icon.UIAspectRatioConstraint
G2L["4e"] = Instance.new("UIAspectRatioConstraint", G2L["4d"]);
G2L["4e"]["AspectRatio"] = 0.8846153616905212;

-- StarterGui.SynapseX.SaveScript.Title
G2L["4f"] = Instance.new("TextLabel", G2L["4a"]);
G2L["4f"]["TextWrapped"] = true;
G2L["4f"]["ZIndex"] = 11;
G2L["4f"]["BorderSizePixel"] = 4;
G2L["4f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["4f"]["TextSize"] = 15;
G2L["4f"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4f"]["Size"] = UDim2.new(0, 322, 0, 30);
G2L["4f"]["Active"] = true;
G2L["4f"]["Text"] = [[Synapse X - Save File]];
G2L["4f"]["Name"] = [[Title]];
G2L["4f"]["BackgroundTransparency"] = 1;

-- StarterGui.SynapseX.SaveScript.Close
G2L["50"] = Instance.new("TextButton", G2L["4a"]);
G2L["50"]["TextWrapped"] = true;
G2L["50"]["ZIndex"] = 12;
G2L["50"]["BackgroundColor3"] = Color3.fromRGB(0, 55, 81);
G2L["50"]["TextSize"] = 17;
G2L["50"]["FontFace"] = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["50"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["50"]["Selectable"] = false;
G2L["50"]["Size"] = UDim2.new(0, 26, 0, 26);
G2L["50"]["Name"] = [[Close]];
G2L["50"]["Text"] = [[x]];
G2L["50"]["Position"] = UDim2.new(0.9130434989929199, 0, 0.024690981954336166, 0);
G2L["50"]["BackgroundTransparency"] = 1;

-- StarterGui.SynapseX.SaveScript.Handler
G2L["51"] = Instance.new("LocalScript", G2L["4a"]);
G2L["51"]["Name"] = [[Handler]];

-- StarterGui.SynapseX.ScriptLog
G2L["52"] = Instance.new("Frame", G2L["1"]);
G2L["52"]["Active"] = true;
G2L["52"]["BorderSizePixel"] = 0;
G2L["52"]["BackgroundColor3"] = Color3.fromRGB(71, 71, 71);
G2L["52"]["Size"] = UDim2.new(0, 353, 0, 26);
G2L["52"]["Position"] = UDim2.new(0.25691962242126465, 0, 0.26443204283714294, 0);
G2L["52"]["Visible"] = false;
G2L["52"]["Name"] = [[ScriptLog]];

-- StarterGui.SynapseX.ScriptLog.MainFrame
G2L["53"] = Instance.new("Frame", G2L["52"]);
G2L["53"]["BorderSizePixel"] = 0;
G2L["53"]["BackgroundColor3"] = Color3.fromRGB(51, 51, 51);
G2L["53"]["Size"] = UDim2.new(0, 353, 0, 185);
G2L["53"]["Position"] = UDim2.new(0, 0, 1, 0);
G2L["53"]["Name"] = [[MainFrame]];

-- StarterGui.SynapseX.ScriptLog.MainFrame.ANS9DZNASD8Z7NAS987NAFA
G2L["54"] = Instance.new("ScrollingFrame", G2L["53"]);
G2L["54"]["Active"] = true;
G2L["54"]["BorderSizePixel"] = 0;
G2L["54"]["BackgroundColor3"] = Color3.fromRGB(61, 61, 61);
G2L["54"]["Size"] = UDim2.new(0, 116, 0, 162);
G2L["54"]["Position"] = UDim2.new(0.033443499356508255, 0, 0.06024263799190521, 0);
G2L["54"]["Name"] = [[ANS9DZNASD8Z7NAS987NAFA]];

-- StarterGui.SynapseX.ScriptLog.MainFrame.ANS9DZNASD8Z7NAS987NAFA.Script1
G2L["55"] = Instance.new("TextButton", G2L["54"]);
G2L["55"]["BorderSizePixel"] = 0;
G2L["55"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["55"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["55"]["TextSize"] = 14;
G2L["55"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["55"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["55"]["Size"] = UDim2.new(0, 116, 0, 19);
G2L["55"]["Name"] = [[Script1]];
G2L["55"]["Text"] = [[Script1]];

-- StarterGui.SynapseX.ScriptLog.MainFrame.A8SDMZAS89DZANSA98F
G2L["56"] = Instance.new("TextButton", G2L["53"]);
G2L["56"]["BorderSizePixel"] = 0;
G2L["56"]["BackgroundColor3"] = Color3.fromRGB(61, 61, 61);
G2L["56"]["TextSize"] = 14;
G2L["56"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["56"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["56"]["Size"] = UDim2.new(0, 97, 0, 25);
G2L["56"]["Name"] = [[A8SDMZAS89DZANSA98F]];
G2L["56"]["Text"] = [[Close]];
G2L["56"]["Position"] = UDim2.new(0.7019798755645752, 0, 0.800000011920929, 0);

-- StarterGui.SynapseX.ScriptLog.MainFrame.9NAC7A9S7N8ZASFH9ASF87NAS8YGA9GSA7
G2L["57"] = Instance.new("TextBox", G2L["53"]);
G2L["57"]["BorderSizePixel"] = 0;
G2L["57"]["TextEditable"] = false;
G2L["57"]["TextSize"] = 14;
G2L["57"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["57"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["57"]["BackgroundColor3"] = Color3.fromRGB(61, 61, 61);
G2L["57"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["57"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["57"]["Size"] = UDim2.new(0, 200, 0, 129);
G2L["57"]["Text"] = [[]];
G2L["57"]["Position"] = UDim2.new(0.4107648730278015, 0, 0.05550934001803398, 0);
G2L["57"]["Name"] = [[9NAC7A9S7N8ZASFH9ASF87NAS8YGA9GSA7]];
G2L["57"]["ClearTextOnFocus"] = false;

-- StarterGui.SynapseX.ScriptLog.MainFrame.9A8D7NAS9Z87NZDA98S7DNA98DNZ9A8SN
G2L["58"] = Instance.new("TextButton", G2L["53"]);
G2L["58"]["BorderSizePixel"] = 0;
G2L["58"]["BackgroundColor3"] = Color3.fromRGB(61, 61, 61);
G2L["58"]["TextSize"] = 14;
G2L["58"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["58"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["58"]["Size"] = UDim2.new(0, 97, 0, 25);
G2L["58"]["Name"] = [[9A8D7NAS9Z87NZDA98S7DNA98DNZ9A8SN]];
G2L["58"]["Text"] = [[Copy Code]];
G2L["58"]["Position"] = UDim2.new(0.4107648730278015, 0, 0.800000011920929, 0);

-- StarterGui.SynapseX.ScriptLog.Icon
G2L["59"] = Instance.new("ImageLabel", G2L["52"]);
G2L["59"]["BorderSizePixel"] = 0;
G2L["59"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["59"]["Image"] = [[http://www.roblox.com/asset/?id=9483813933]];
G2L["59"]["Size"] = UDim2.new(0, 23, 0, 26);
G2L["59"]["Name"] = [[Icon]];
G2L["59"]["BackgroundTransparency"] = 1;
G2L["59"]["Position"] = UDim2.new(0.00932147353887558, 0, -0.006203480064868927, 0);

-- StarterGui.SynapseX.ScriptLog.Title
G2L["5a"] = Instance.new("TextLabel", G2L["52"]);
G2L["5a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["5a"]["TextSize"] = 14;
G2L["5a"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5a"]["Size"] = UDim2.new(0, 353, 0, 26);
G2L["5a"]["Text"] = [[Script Log]];
G2L["5a"]["Name"] = [[Title]];
G2L["5a"]["BackgroundTransparency"] = 1;

-- StarterGui.SynapseX.ScriptHubMenu
G2L["5b"] = Instance.new("Frame", G2L["1"]);
G2L["5b"]["Active"] = true;
G2L["5b"]["BorderSizePixel"] = 0;
G2L["5b"]["BackgroundColor3"] = Color3.fromRGB(67, 67, 67);
G2L["5b"]["Size"] = UDim2.new(0, 411, 0, 31);
G2L["5b"]["Position"] = UDim2.new(0, 13, 0, 13);
G2L["5b"]["Visible"] = false;
G2L["5b"]["Name"] = [[ScriptHubMenu]];

-- StarterGui.SynapseX.ScriptHubMenu.Background
G2L["5c"] = Instance.new("ImageLabel", G2L["5b"]);
G2L["5c"]["BorderSizePixel"] = 0;
G2L["5c"]["ScaleType"] = Enum.ScaleType.Tile;
G2L["5c"]["BackgroundColor3"] = Color3.fromRGB(50, 50, 50);
G2L["5c"]["Size"] = UDim2.new(0, 411, 0, 275);
G2L["5c"]["Active"] = true;
G2L["5c"]["BorderColor3"] = Color3.fromRGB(55, 55, 55);
G2L["5c"]["Name"] = [[Background]];

-- StarterGui.SynapseX.ScriptHubMenu.Background.ScrollingFrame
G2L["5d"] = Instance.new("ScrollingFrame", G2L["5c"]);
G2L["5d"]["Active"] = true;
G2L["5d"]["BorderSizePixel"] = 0;
G2L["5d"]["CanvasSize"] = UDim2.new(0, 0, 0, 0);
G2L["5d"]["TopImage"] = [[rbxasset://textures/ui/Scroll/scroll-middle.png]];
G2L["5d"]["BackgroundColor3"] = Color3.fromRGB(30, 30, 30);
G2L["5d"]["Size"] = UDim2.new(0, 109, 0, 226);
G2L["5d"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5d"]["ScrollBarThickness"] = 14;
G2L["5d"]["Position"] = UDim2.new(0.020667528733611107, 0, 0.13779912889003754, 0);
G2L["5d"]["BottomImage"] = [[rbxasset://textures/ui/Scroll/scroll-middle.png]];

-- StarterGui.SynapseX.ScriptHubMenu.Background.ScrollingFrame.Dex
G2L["5e"] = Instance.new("TextButton", G2L["5d"]);
G2L["5e"]["TextWrapped"] = true;
G2L["5e"]["BorderSizePixel"] = 0;
G2L["5e"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["5e"]["BackgroundColor3"] = Color3.fromRGB(30, 30, 30);
G2L["5e"]["TextSize"] = 14;
G2L["5e"]["FontFace"] = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["5e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5e"]["Size"] = UDim2.new(0, 107, 0, 18);
G2L["5e"]["Name"] = [[Dex]];
G2L["5e"]["BorderColor3"] = Color3.fromRGB(0, 231, 255);
G2L["5e"]["Text"] = [[Dex Explorer]];
G2L["5e"]["Position"] = UDim2.new(0, 1, 0, 1);
G2L["5e"]["BackgroundTransparency"] = 1;

-- StarterGui.SynapseX.ScriptHubMenu.Background.ScrollingFrame.ScriptDumper
G2L["5f"] = Instance.new("TextButton", G2L["5d"]);
G2L["5f"]["BorderSizePixel"] = 0;
G2L["5f"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["5f"]["BackgroundColor3"] = Color3.fromRGB(30, 30, 30);
G2L["5f"]["TextSize"] = 14;
G2L["5f"]["FontFace"] = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["5f"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5f"]["Size"] = UDim2.new(0, 107, 0, 18);
G2L["5f"]["Name"] = [[ScriptDumper]];
G2L["5f"]["BorderColor3"] = Color3.fromRGB(0, 231, 255);
G2L["5f"]["Text"] = [[Script Dumper]];
G2L["5f"]["Position"] = UDim2.new(0.008999999612569809, 0, 0.34637168049812317, 0);
G2L["5f"]["BackgroundTransparency"] = 1;

-- StarterGui.SynapseX.ScriptHubMenu.Background.ScrollingFrame.RemoteSpy
G2L["60"] = Instance.new("TextButton", G2L["5d"]);
G2L["60"]["BorderSizePixel"] = 0;
G2L["60"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["60"]["BackgroundColor3"] = Color3.fromRGB(30, 30, 30);
G2L["60"]["TextSize"] = 14;
G2L["60"]["FontFace"] = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["60"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["60"]["Size"] = UDim2.new(0, 107, 0, 18);
G2L["60"]["Name"] = [[RemoteSpy]];
G2L["60"]["BorderColor3"] = Color3.fromRGB(0, 231, 255);
G2L["60"]["Text"] = [[Remote Spy]];
G2L["60"]["Position"] = UDim2.new(0.008999999612569809, 0, 0.23982301354408264, 0);
G2L["60"]["BackgroundTransparency"] = 1;

-- StarterGui.SynapseX.ScriptHubMenu.Background.ScrollingFrame.UnnamedESP
G2L["61"] = Instance.new("TextButton", G2L["5d"]);
G2L["61"]["BorderSizePixel"] = 0;
G2L["61"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["61"]["BackgroundColor3"] = Color3.fromRGB(30, 30, 30);
G2L["61"]["TextSize"] = 14;
G2L["61"]["FontFace"] = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["61"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["61"]["Size"] = UDim2.new(0, 107, 0, 18);
G2L["61"]["Name"] = [[UnnamedESP]];
G2L["61"]["BorderColor3"] = Color3.fromRGB(0, 231, 255);
G2L["61"]["Text"] = [[Unnamed ESP]];
G2L["61"]["Position"] = UDim2.new(0.00917431153357029, 0, 0.11946903169155121, 0);
G2L["61"]["BackgroundTransparency"] = 1;

-- StarterGui.SynapseX.ScriptHubMenu.Close
G2L["62"] = Instance.new("TextButton", G2L["5b"]);
G2L["62"]["BorderSizePixel"] = 0;
G2L["62"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["62"]["TextSize"] = 14;
G2L["62"]["FontFace"] = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["62"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["62"]["Size"] = UDim2.new(0, 121, 0, 23);
G2L["62"]["Name"] = [[Close]];
G2L["62"]["BorderColor3"] = Color3.fromRGB(99, 150, 182);
G2L["62"]["Text"] = [[Close]];
G2L["62"]["Position"] = UDim2.new(0.6677603721618652, 0, 7.790436744689941, 0);

-- StarterGui.SynapseX.ScriptHubMenu.Title
G2L["63"] = Instance.new("TextLabel", G2L["5b"]);
G2L["63"]["TextWrapped"] = true;
G2L["63"]["ZIndex"] = 3;
G2L["63"].Draggable = true;
G2L["63"]["BorderSizePixel"] = 4;
G2L["63"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["63"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["63"]["TextSize"] = 15;
G2L["63"].Active = true;
G2L["63"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["63"]["Size"] = UDim2.new(0, 410, 0, 30);
G2L["63"]["Text"] = [[Synapse X - Script Hub]];
G2L["63"]["Name"] = [[Title]];
G2L["63"]["BackgroundTransparency"] = 1;

-- StarterGui.SynapseX.ScriptHubMenu.Description
G2L["64"] = Instance.new("TextLabel", G2L["5b"]);
G2L["64"]["TextWrapped"] = true;
G2L["64"]["BorderSizePixel"] = 0;
G2L["64"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["64"]["BackgroundColor3"] = Color3.fromRGB(30, 30, 30);
G2L["64"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["64"]["FontFace"] = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["64"]["TextSize"] = 14;
G2L["64"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["64"]["Size"] = UDim2.new(0, 272, 0, 60);
G2L["64"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
G2L["64"]["Text"] = [[]];
G2L["64"]["Name"] = [[Description]];
G2L["64"]["Position"] = UDim2.new(0.31386861205101013, 0, 5.612903118133545, 0);

-- StarterGui.SynapseX.ScriptHubMenu.Minimize
G2L["65"] = Instance.new("TextButton", G2L["5b"]);
G2L["65"]["ZIndex"] = 3;
G2L["65"]["BorderSizePixel"] = 0;
G2L["65"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["65"]["TextSize"] = 14;
G2L["65"]["FontFace"] = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["65"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["65"]["Size"] = UDim2.new(0, 21, 0, 21);
G2L["65"]["Name"] = [[Minimize]];
G2L["65"]["BorderColor3"] = Color3.fromRGB(99, 150, 182);
G2L["65"]["Text"] = [[_]];
G2L["65"]["Position"] = UDim2.new(0.9318734407424927, 0, 0.16129040718078613, 0);

-- StarterGui.SynapseX.ScriptHubMenu.Dex
G2L["66"] = Instance.new("Frame", G2L["5b"]);
G2L["66"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["66"]["BackgroundTransparency"] = 1;
G2L["66"]["Size"] = UDim2.new(0, 100, 0, 100);
G2L["66"]["Visible"] = false;
G2L["66"]["Name"] = [[Dex]];

-- StarterGui.SynapseX.ScriptHubMenu.Dex.Image
G2L["67"] = Instance.new("ImageLabel", G2L["66"]);
G2L["67"]["BorderSizePixel"] = 0;
G2L["67"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["67"]["Image"] = [[http://www.roblox.com/asset/?id=7070160765]];
G2L["67"]["Size"] = UDim2.new(0, 272, 0, 126);
G2L["67"]["Name"] = [[Image]];
G2L["67"]["BackgroundTransparency"] = 1;
G2L["67"]["Position"] = UDim2.new(1.283868670463562, 0, 0.38265305757522583, 0);

-- StarterGui.SynapseX.ScriptHubMenu.RemoteSpy
G2L["68"] = Instance.new("Frame", G2L["5b"]);
G2L["68"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["68"]["BackgroundTransparency"] = 1;
G2L["68"]["Size"] = UDim2.new(0, 100, 0, 100);
G2L["68"]["Visible"] = false;
G2L["68"]["Name"] = [[RemoteSpy]];

-- StarterGui.SynapseX.ScriptHubMenu.RemoteSpy.Image
G2L["69"] = Instance.new("ImageLabel", G2L["68"]);
G2L["69"]["BorderSizePixel"] = 0;
G2L["69"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["69"]["Image"] = [[http://www.roblox.com/asset/?id=7370616106]];
G2L["69"]["Size"] = UDim2.new(0, 272, 0, 126);
G2L["69"]["Name"] = [[Image]];
G2L["69"]["BackgroundTransparency"] = 1;
G2L["69"]["Position"] = UDim2.new(1.283868670463562, 0, 0.38265305757522583, 0);

-- StarterGui.SynapseX.ScriptHubMenu.UnnamedESP
G2L["6a"] = Instance.new("Frame", G2L["5b"]);
G2L["6a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6a"]["BackgroundTransparency"] = 1;
G2L["6a"]["Size"] = UDim2.new(0, 100, 0, 100);
G2L["6a"]["Visible"] = false;
G2L["6a"]["Name"] = [[UnnamedESP]];

-- StarterGui.SynapseX.ScriptHubMenu.UnnamedESP.Image
G2L["6b"] = Instance.new("ImageLabel", G2L["6a"]);
G2L["6b"]["BorderSizePixel"] = 0;
G2L["6b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6b"]["Image"] = [[http://www.roblox.com/asset/?id=7370616607]];
G2L["6b"]["Size"] = UDim2.new(0, 272, 0, 126);
G2L["6b"]["Name"] = [[Image]];
G2L["6b"]["BackgroundTransparency"] = 1;
G2L["6b"]["Position"] = UDim2.new(1.283868670463562, 0, 0.38265305757522583, 0);

-- StarterGui.SynapseX.ScriptHubMenu.ScriptDumper
G2L["6c"] = Instance.new("Frame", G2L["5b"]);
G2L["6c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6c"]["BackgroundTransparency"] = 1;
G2L["6c"]["Size"] = UDim2.new(0, 100, 0, 100);
G2L["6c"]["Visible"] = false;
G2L["6c"]["Name"] = [[ScriptDumper]];

-- StarterGui.SynapseX.ScriptHubMenu.ScriptDumper.Image
G2L["6d"] = Instance.new("ImageLabel", G2L["6c"]);
G2L["6d"]["BorderSizePixel"] = 0;
G2L["6d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6d"]["Image"] = [[http://www.roblox.com/asset/?id=7370669353]];
G2L["6d"]["Size"] = UDim2.new(0, 272, 0, 126);
G2L["6d"]["Name"] = [[Image]];
G2L["6d"]["BackgroundTransparency"] = 1;
G2L["6d"]["Position"] = UDim2.new(1.283868670463562, 0, 0.38265305757522583, 0);

-- StarterGui.SynapseX.ScriptHubMenu.Icon
G2L["6e"] = Instance.new("ImageLabel", G2L["5b"]);
G2L["6e"]["ZIndex"] = 6;
G2L["6e"]["BorderSizePixel"] = 0;
G2L["6e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6e"]["Image"] = [[http://www.roblox.com/asset/?id=9483813933]];
G2L["6e"]["Size"] = UDim2.new(0, 23, 0, 26);
G2L["6e"]["Name"] = [[Icon]];
G2L["6e"]["BackgroundTransparency"] = 1;
G2L["6e"]["Position"] = UDim2.new(0.00932147353887558, 0, 0.05000000074505806, 0);

-- StarterGui.SynapseX.ScriptHubMenu.Panel
G2L["6f"] = Instance.new("Frame", G2L["5b"]);
G2L["6f"]["BorderSizePixel"] = 0;
G2L["6f"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["6f"]["Size"] = UDim2.new(0, 411, 0, 30);
G2L["6f"]["Position"] = UDim2.new(0, 0, -0.009731169790029526, 0);
G2L["6f"]["Name"] = [[Panel]];

-- StarterGui.SynapseX.ScriptHubMenu.Execute
G2L["70"] = Instance.new("TextButton", G2L["5b"]);
G2L["70"]["BorderSizePixel"] = 0;
G2L["70"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["70"]["TextSize"] = 14;
G2L["70"]["FontFace"] = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["70"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["70"]["Visible"] = false;
G2L["70"]["Size"] = UDim2.new(0, 121, 0, 23);
G2L["70"]["Name"] = [[Execute]];
G2L["70"]["BorderColor3"] = Color3.fromRGB(99, 150, 182);
G2L["70"]["Text"] = [[Execute]];
G2L["70"]["Position"] = UDim2.new(0.31386861205101013, 0, 7.764839172363281, 0);

-- StarterGui.SynapseX.ScriptHubMenu.ScriptHubHandler
G2L["71"] = Instance.new("LocalScript", G2L["5b"]);
G2L["71"]["Name"] = [[ScriptHubHandler]];

-- StarterGui.SynapseX.OptionMenu
G2L["72"] = Instance.new("Frame", G2L["1"]);
G2L["72"]["Active"] = true;
G2L["72"]["ZIndex"] = 5;
G2L["72"]["BorderSizePixel"] = 0;
G2L["72"]["BackgroundColor3"] = Color3.fromRGB(61, 61, 61);
G2L["72"]["Size"] = UDim2.new(0, 199, 0, 31);
G2L["72"]["Position"] = UDim2.new(0, 671, 0, 16);
G2L["72"]["Visible"] = false;
G2L["72"]["Name"] = [[OptionMenu]];

-- StarterGui.SynapseX.OptionMenu.Title
G2L["73"] = Instance.new("TextLabel", G2L["72"]);
G2L["73"]["ZIndex"] = 6;
G2L["73"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["73"]["FontFace"] = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["73"]["TextSize"] = 14;
G2L["73"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["73"]["Size"] = UDim2.new(0, 199, 0, 26);
G2L["73"]["Text"] = [[Options]];
G2L["73"]["Name"] = [[Title]];
G2L["73"]["BackgroundTransparency"] = 1;
G2L["73"]["Position"] = UDim2.new(-0.0011280769249424338, 0, 0.07083868235349655, 0);

-- StarterGui.SynapseX.OptionMenu.FPSUnlocker
G2L["74"] = Instance.new("TextLabel", G2L["72"]);
G2L["74"]["ZIndex"] = 6;
G2L["74"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["74"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["74"]["FontFace"] = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["74"]["TextSize"] = 14;
G2L["74"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["74"]["Size"] = UDim2.new(0, 63, 0, 16);
G2L["74"]["Text"] = 'FPS Unlock [BETA]';
G2L["74"]["Name"] = [[FPSUnlocker]];
G2L["74"]["BackgroundTransparency"] = 1;
G2L["74"]["Position"] = UDim2.new(0.35585591197013855, 0, 1.5485485792160034, 0);

-- StarterGui.SynapseX.OptionMenu.TopMost
G2L["75"] = Instance.new("TextLabel", G2L["72"]);
G2L["75"]["ZIndex"] = 6;
G2L["75"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["75"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["75"]["FontFace"] = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["75"]["TextSize"] = 14;
G2L["75"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["75"]["Size"] = UDim2.new(0, 63, 0, 16);
G2L["75"]["Text"] = [[TopMost]];
G2L["75"]["Name"] = [[TopMost]];
G2L["75"]["BackgroundTransparency"] = 1;
G2L["75"]["Position"] = UDim2.new(0.35585591197013855, 0, 3.7420969009399414, 0);

-- StarterGui.SynapseX.OptionMenu.InternalUI
G2L["76"] = Instance.new("TextLabel", G2L["72"]);
G2L["76"]["ZIndex"] = 6;
G2L["76"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["76"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["76"]["FontFace"] = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["76"]["TextSize"] = 14;
G2L["76"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["76"]["Size"] = UDim2.new(0, 63, 0, 16);
G2L["76"]["Text"] = [[Internal UI]];
G2L["76"]["Name"] = [[InternalUI]];
G2L["76"]["BackgroundTransparency"] = 1;
G2L["76"]["Position"] = UDim2.new(0.35585591197013855, 0, 3.0001611709594727, 0);

-- StarterGui.SynapseX.OptionMenu.Close
G2L["77"] = Instance.new("TextButton", G2L["72"]);
G2L["77"]["ZIndex"] = 6;
G2L["77"]["BorderSizePixel"] = 0;
G2L["77"]["BackgroundColor3"] = Color3.fromRGB(61, 61, 61);
G2L["77"]["TextSize"] = 14;
G2L["77"]["FontFace"] = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["77"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["77"]["Size"] = UDim2.new(0, 178, 0, 25);
G2L["77"]["Name"] = [[Close]];
G2L["77"]["BorderColor3"] = Color3.fromRGB(0, 231, 255);
G2L["77"]["Text"] = [[Close]];
G2L["77"]["Position"] = UDim2.new(0.04838477447628975, 0, 6.747819900512695, 0);

-- StarterGui.SynapseX.OptionMenu.ToggleFPSUnlocker
G2L["78"] = Instance.new("TextButton", G2L["72"]);
G2L["78"]["TextWrapped"] = true;
G2L["78"]["ZIndex"] = 6;
G2L["78"]["BorderSizePixel"] = 0;
G2L["78"]["BackgroundColor3"] = Color3.fromRGB(167, 167, 167);
G2L["78"]["TextSize"] = 13;
G2L["78"]["FontFace"] = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["78"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["78"]["Size"] = UDim2.new(0, 14, 0, 14);
G2L["78"]["Name"] = [[ToggleFPSUnlocker]];
G2L["78"]["Text"] = [[]];
G2L["78"]["Position"] = UDim2.new(0.24308274686336517, 0, 1.5808066129684448, 0);

-- StarterGui.SynapseX.OptionMenu.ToggleInternalUI
G2L["79"] = Instance.new("TextButton", G2L["72"]);
G2L["79"]["TextWrapped"] = true;
G2L["79"]["ZIndex"] = 6;
G2L["79"]["BorderSizePixel"] = 0;
G2L["79"]["BackgroundColor3"] = Color3.fromRGB(113, 113, 113);
G2L["79"]["TextSize"] = 13;
G2L["79"]["FontFace"] = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["79"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["79"]["Size"] = UDim2.new(0, 14, 0, 14);
G2L["79"]["Name"] = [[ToggleInternalUI]];
G2L["79"]["Text"] = [[x]];
G2L["79"]["Position"] = UDim2.new(0.24308274686336517, 0, 3.032419204711914, 0);

-- StarterGui.SynapseX.OptionMenu.ToggleTopMost
G2L["7a"] = Instance.new("TextButton", G2L["72"]);
G2L["7a"]["TextWrapped"] = true;
G2L["7a"]["ZIndex"] = 6;
G2L["7a"]["BorderSizePixel"] = 0;
G2L["7a"]["BackgroundColor3"] = Color3.fromRGB(113, 113, 113);
G2L["7a"]["TextSize"] = 13;
G2L["7a"]["FontFace"] = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["7a"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7a"]["Size"] = UDim2.new(0, 14, 0, 14);
G2L["7a"]["Name"] = [[ToggleTopMost]];
G2L["7a"]["Text"] = [[x]];
G2L["7a"]["Position"] = UDim2.new(0.24308274686336517, 0, 3.774354934692383, 0);

-- StarterGui.SynapseX.OptionMenu.Icon
G2L["7b"] = Instance.new("ImageLabel", G2L["72"]);
G2L["7b"]["ZIndex"] = 6;
G2L["7b"]["BorderSizePixel"] = 0;
G2L["7b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7b"]["Image"] = [[http://www.roblox.com/asset/?id=9483813933]];
G2L["7b"]["Size"] = UDim2.new(0, 23, 0, 26);
G2L["7b"]["Name"] = [[Icon]];
G2L["7b"]["BackgroundTransparency"] = 1;
G2L["7b"]["Position"] = UDim2.new(0.014999999664723873, 0, 0.057999998331069946, 0);

-- StarterGui.SynapseX.OptionMenu.ToggleAutoExec
G2L["7c"] = Instance.new("TextButton", G2L["72"]);
G2L["7c"]["TextWrapped"] = true;
G2L["7c"]["ZIndex"] = 6;
G2L["7c"]["BorderSizePixel"] = 0;
G2L["7c"]["BackgroundColor3"] = Color3.fromRGB(167, 167, 167);
G2L["7c"]["TextSize"] = 13;
G2L["7c"]["FontFace"] = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["7c"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7c"]["Size"] = UDim2.new(0, 14, 0, 14);
G2L["7c"]["Name"] = [[ToggleAutoExec]];
G2L["7c"]["Text"] = [[]];
G2L["7c"]["Position"] = UDim2.new(0.24308274686336517, 0, 2.2904839515686035, 0);

-- StarterGui.SynapseX.OptionMenu.AutoExec
G2L["7d"] = Instance.new("TextLabel", G2L["72"]);
G2L["7d"]["ZIndex"] = 6;
G2L["7d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7d"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["7d"]["FontFace"] = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["7d"]["TextSize"] = 14;
G2L["7d"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7d"]["Size"] = UDim2.new(0, 63, 0, 16);
G2L["7d"]["Text"] = [[Auto Exec scripts]];
G2L["7d"]["Name"] = [[AutoExec]];
G2L["7d"]["BackgroundTransparency"] = 1;
G2L["7d"]["Position"] = UDim2.new(0.35585591197013855, 0, 2.258225917816162, 0);

-- StarterGui.SynapseX.OptionMenu.Buttons
G2L["7e"] = Instance.new("Frame", G2L["72"]);
G2L["7e"]["ZIndex"] = 6;
G2L["7e"]["BorderSizePixel"] = 0;
G2L["7e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7e"]["BackgroundTransparency"] = 1;
G2L["7e"]["Size"] = UDim2.new(0, 176, 0, 58);
G2L["7e"]["Position"] = UDim2.new(0.05500003695487976, 0, 4.516129493713379, 0);
G2L["7e"]["Name"] = [[Buttons]];

-- StarterGui.SynapseX.OptionMenu.Buttons.UIListLayout
G2L["7f"] = Instance.new("UIListLayout", G2L["7e"]);
G2L["7f"]["Padding"] = UDim.new(0, 5);
G2L["7f"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

-- StarterGui.SynapseX.OptionMenu.Buttons.Rejoin
G2L["80"] = Instance.new("TextButton", G2L["7e"]);
G2L["80"]["ZIndex"] = 6;
G2L["80"]["BorderSizePixel"] = 0;
G2L["80"]["Modal"] = true;
G2L["80"]["BackgroundColor3"] = Color3.fromRGB(61, 61, 61);
G2L["80"]["TextSize"] = 14;
G2L["80"]["FontFace"] = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["80"]["TextColor3"] = Color3.fromRGB(251, 251, 251);
G2L["80"]["Size"] = UDim2.new(0, 177, 0, 17);
G2L["80"]["Name"] = [[Rejoin]];
G2L["80"]["BorderColor3"] = Color3.fromRGB(0, 231, 255);
G2L["80"]["Text"] = [[Rejoin]];
G2L["80"]["Position"] = UDim2.new(0.054999999701976776, 0, 5.838741779327393, 0);

-- StarterGui.SynapseX.OptionMenu.Buttons.Discord
G2L["81"] = Instance.new("TextButton", G2L["7e"]);
G2L["81"]["ZIndex"] = 6;
G2L["81"]["BorderSizePixel"] = 0;
G2L["81"]["BackgroundColor3"] = Color3.fromRGB(61, 61, 61);
G2L["81"]["TextSize"] = 14;
G2L["81"]["FontFace"] = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["81"]["TextColor3"] = Color3.fromRGB(251, 251, 251);
G2L["81"]["Size"] = UDim2.new(0, 177, 0, 17);
G2L["81"]["Name"] = [[Discord]];
G2L["81"]["BorderColor3"] = Color3.fromRGB(0, 231, 255);
G2L["81"]["Text"] = [[Discord]];
G2L["81"]["Position"] = UDim2.new(0.054999999701976776, 0, 5.838741779327393, 0);

-- StarterGui.SynapseX.OptionMenu.MainFrame
G2L["82"] = Instance.new("Frame", G2L["72"]);
G2L["82"]["ZIndex"] = 5;
G2L["82"]["BorderSizePixel"] = 0;
G2L["82"]["BackgroundColor3"] = Color3.fromRGB(52, 52, 52);
G2L["82"]["Size"] = UDim2.new(0, 199, 0, 211);
G2L["82"]["Position"] = UDim2.new(0, 0, 0.988335907459259, 0);
G2L["82"]["Name"] = [[MainFrame]];

-- StarterGui.SynapseX.OptionMenu.Optionhandler
G2L["83"] = Instance.new("LocalScript", G2L["72"]);
G2L["83"]["Name"] = [[Optionhandler]];

-- StarterGui.SynapseX.GetSavedScripts
G2L["84"] = Instance.new("LocalScript", G2L["1"]);
G2L["84"]["Name"] = [[GetSavedScripts]];

-- StarterGui.SynapseX.Injected
G2L["85"] = Instance.new("BoolValue", G2L["1"]);
G2L["85"]["Name"] = [[Injected]];

-- StarterGui.SynapseX.Module
G2L["86"] = Instance.new("ModuleScript", G2L["1"]);
G2L["86"]["Name"] = [[Module]];

-- StarterGui.SynapseX.Module.RClick
G2L["87"] = Instance.new("Frame", G2L["86"]);
G2L["87"]["ZIndex"] = 7;
G2L["87"]["BackgroundColor3"] = Color3.fromRGB(44, 44, 44);
G2L["87"]["Size"] = UDim2.new(0, 94, 0, 63);
G2L["87"]["BorderColor3"] = Color3.fromRGB(119, 119, 119);
G2L["87"]["Position"] = UDim2.new(-0.0146878557279706, 0, 1.0666667222976685, 0);
G2L["87"]["Visible"] = false;
G2L["87"]["Name"] = [[RClick]];

-- StarterGui.SynapseX.Module.RClick.Execute
G2L["88"] = Instance.new("TextButton", G2L["87"]);
G2L["88"]["ZIndex"] = 7;
G2L["88"]["BackgroundColor3"] = Color3.fromRGB(44, 44, 44);
G2L["88"]["TextSize"] = 14;
G2L["88"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["88"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["88"]["Size"] = UDim2.new(0, 93, 0, 21);
G2L["88"]["Name"] = [[Execute]];
G2L["88"]["BorderColor3"] = Color3.fromRGB(119, 119, 119);
G2L["88"]["Text"] = [[Execute]];
G2L["88"]["Position"] = UDim2.new(0.005026959348469973, 0, 0, 0);

-- StarterGui.SynapseX.Module.RClick.Load
G2L["89"] = Instance.new("TextButton", G2L["87"]);
G2L["89"]["ZIndex"] = 7;
G2L["89"]["BackgroundColor3"] = Color3.fromRGB(44, 44, 44);
G2L["89"]["TextSize"] = 14;
G2L["89"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["89"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["89"]["Size"] = UDim2.new(0, 93, 0, 21);
G2L["89"]["Name"] = [[Load]];
G2L["89"]["BorderColor3"] = Color3.fromRGB(119, 119, 119);
G2L["89"]["Text"] = [[Load into Editor]];
G2L["89"]["Position"] = UDim2.new(0.005026959348469973, 0, 0.3174603283405304, 0);

-- StarterGui.SynapseX.Module.RClick.Delete
G2L["8a"] = Instance.new("TextButton", G2L["87"]);
G2L["8a"]["ZIndex"] = 7;
G2L["8a"]["BackgroundColor3"] = Color3.fromRGB(44, 44, 44);
G2L["8a"]["TextSize"] = 14;
G2L["8a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["8a"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["8a"]["Size"] = UDim2.new(0, 93, 0, 21);
G2L["8a"]["Name"] = [[Delete]];
G2L["8a"]["BorderColor3"] = Color3.fromRGB(119, 119, 119);
G2L["8a"]["Text"] = [[Delete]];
G2L["8a"]["Position"] = UDim2.new(0.005026959348469973, 0, 0.6666666865348816, 0);

-- StarterGui.SynapseX.OpenScript
G2L["8b"] = Instance.new("Frame", G2L["1"]);
G2L["8b"]["Active"] = true;
G2L["8b"]["ZIndex"] = 10;
G2L["8b"]["BorderSizePixel"] = 0;
G2L["8b"]["BackgroundColor3"] = Color3.fromRGB(61, 61, 61);
G2L["8b"]["Size"] = UDim2.new(0, 322, 0, 81);
G2L["8b"]["Position"] = UDim2.new(0.2866109609603882, 0, 0.5302865505218506, 0);
G2L["8b"]["Visible"] = false;
G2L["8b"]["Name"] = [[OpenScript]];

-- StarterGui.SynapseX.OpenScript.scriptname
G2L["8c"] = Instance.new("TextBox", G2L["8b"]);
G2L["8c"]["ZIndex"] = 11;
G2L["8c"]["BorderSizePixel"] = 0;
G2L["8c"]["TextSize"] = 14;
G2L["8c"]["BackgroundColor3"] = Color3.fromRGB(41, 41, 41);
G2L["8c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["8c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["8c"]["PlaceholderText"] = [[File Name]];
G2L["8c"]["Size"] = UDim2.new(0, 317, 0, 22);
G2L["8c"]["Text"] = [[]];
G2L["8c"]["Position"] = UDim2.new(0, 3, 0, 32);
G2L["8c"]["Name"] = [[scriptname]];

-- StarterGui.SynapseX.OpenScript.savescript
G2L["8d"] = Instance.new("TextButton", G2L["8b"]);
G2L["8d"]["ZIndex"] = 11;
G2L["8d"]["BorderSizePixel"] = 0;
G2L["8d"]["BackgroundColor3"] = Color3.fromRGB(46, 46, 46);
G2L["8d"]["TextSize"] = 14;
G2L["8d"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["8d"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["8d"]["Size"] = UDim2.new(0, 317, 0, 19);
G2L["8d"]["Name"] = [[savescript]];
G2L["8d"]["Text"] = [[Open FIle]];
G2L["8d"]["Position"] = UDim2.new(0, 3, 0, 56);

-- StarterGui.SynapseX.OpenScript.Icon
G2L["8e"] = Instance.new("ImageLabel", G2L["8b"]);
G2L["8e"]["ZIndex"] = 11;
G2L["8e"]["BorderSizePixel"] = 0;
G2L["8e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["8e"]["Image"] = [[http://www.roblox.com/asset/?id=9483813933]];
G2L["8e"]["Size"] = UDim2.new(0, 48, 0, 23);
G2L["8e"]["Name"] = [[Icon]];
G2L["8e"]["BackgroundTransparency"] = 1;
G2L["8e"]["Position"] = UDim2.new(0.008999999612569809, 0, 0.05000000074505806, 0);

-- StarterGui.SynapseX.OpenScript.Icon.UIAspectRatioConstraint
G2L["8f"] = Instance.new("UIAspectRatioConstraint", G2L["8e"]);
G2L["8f"]["AspectRatio"] = 0.8846153616905212;

-- StarterGui.SynapseX.OpenScript.Title
G2L["90"] = Instance.new("TextLabel", G2L["8b"]);
G2L["90"]["TextWrapped"] = true;
G2L["90"]["ZIndex"] = 11;
G2L["90"]["BorderSizePixel"] = 4;
G2L["90"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["90"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["90"]["TextSize"] = 15;
G2L["90"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["90"]["Size"] = UDim2.new(0, 322, 0, 30);
G2L["90"]["Active"] = true;
G2L["90"]["Text"] = [[Synapse X - Open FIle]];
G2L["90"]["Name"] = [[Title]];
G2L["90"]["BackgroundTransparency"] = 1;

-- StarterGui.SynapseX.OpenScript.Close
G2L["91"] = Instance.new("TextButton", G2L["8b"]);
G2L["91"]["TextWrapped"] = true;
G2L["91"]["ZIndex"] = 12;
G2L["91"]["BackgroundColor3"] = Color3.fromRGB(0, 55, 81);
G2L["91"]["TextSize"] = 17;
G2L["91"]["FontFace"] = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["91"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["91"]["Selectable"] = false;
G2L["91"]["Size"] = UDim2.new(0, 26, 0, 26);
G2L["91"]["Name"] = [[Close]];
G2L["91"]["Text"] = [[x]];
G2L["91"]["Position"] = UDim2.new(0.9130434989929199, 0, 0.024690981954336166, 0);
G2L["91"]["BackgroundTransparency"] = 1;

-- StarterGui.SynapseX.OpenScript.Handler
G2L["92"] = Instance.new("LocalScript", G2L["8b"]);
G2L["92"]["Name"] = [[Handler]];

-- StarterGui.SynapseX.SetDraggable
G2L["93"] = Instance.new("LocalScript", G2L["1"]);
G2L["93"]["Name"] = [[SetDraggable]];

-- StarterGui.SynapseX.Highlighter
G2L["94"] = Instance.new("ModuleScript", G2L["1"]);
G2L["94"]["Name"] = [[Highlighter]];

-- StarterGui.SynapseX.Highlighter.lexer
G2L["95"] = Instance.new("ModuleScript", G2L["94"]);
G2L["95"]["Name"] = [[lexer]];

-- StarterGui.SynapseX.Highlighter.lexer.language
G2L["96"] = Instance.new("ModuleScript", G2L["95"]);
G2L["96"]["Name"] = [[language]];

-- Require G2L wrapper
local G2L_REQUIRE = require;
local G2L_MODULES = {};
local function require(Module:ModuleScript)
    local ModuleState = G2L_MODULES[Module];
    if ModuleState then
        if not ModuleState.Required then
            ModuleState.Required = true;
            ModuleState.Value = ModuleState.Closure();
        end
        return ModuleState.Value;
    end;
    return G2L_REQUIRE(Module);
end

G2L_MODULES[G2L["86"]] = {
Closure = function()
    local script = G2L["86"];
local module = {}
local highlighter = require(script.Parent.Highlighter)

function module:AddTab(title, source)
	local NewTextbox = script.Parent.Main.MainFunc.Needs.Textbox:Clone()
	local NewTab = script.Parent.Main.MainFunc.Needs.Tab:Clone()
	local num = 0

	NewTextbox.Parent = script.Parent.Main.MainFunc.Textboxes
	NewTab.Parent=  script.Parent.Main.ScriptTab.Tabs
	NewTab.Visible = true
	NewTextbox.Visible = true
	NewTab.BackgroundColor3 = Color3.fromRGB(80,80,80)
	highlighter.highlight({
		textObject = NewTextbox.Frame.Textbox,
		src = NewTextbox.Frame.Textbox.Text,
		forceUpdate = true
	})

    NewTab.MouseButton1Up:Connect(function()
        
        -- Set any textbox except new disabled (not visible)
	for _,tabs in pairs(script.Parent.Main.MainFunc.Textboxes:GetChildren()) do
		if tabs.Name ~= NewTextbox.Name then
			tabs.Visible = false
		elseif tabs.Name == NewTextbox.Name then
			tabs.Visible = true
			end
	end

	-- Set any Tab color back except this
	for i,v in pairs(script.Parent:GetChildren()) do
		if v:IsA("TextButton") and v.Name ~= NewTab.Name then
			v.BackgroundColor3 = Color3.fromRGB(100,100,100)
		end
	end
    
    end)
    NewTab:FindFirstChild("Remove").MouseButton1Up:Connect(function()

        NewTab:Destroy()
		

    end)

	-- Set da name as yes
	for i,v in pairs(script.Parent.Main.MainFunc.Textboxes:GetChildren()) do
		num += 1
	end
	if type(title) == "string" then
		NewTab.Name = '  '..title
		NewTab.Text = '  '..title
		NewTextbox.Name = '  '..title
		NewTextbox.Frame.Textbox.Text = source
	else
		NewTab.Name = "  Script "..tostring(num)
		NewTab.Text = "  Script "..tostring(num)
		NewTextbox.Name = "  Script "..tostring(num)
	end

	-- Set any textbox except new disabled (not visible)
	for _,tabs in pairs(script.Parent.Main.MainFunc.Textboxes:GetChildren()) do
		if tabs.Name ~= NewTextbox.Name then
			tabs.Visible = false
		end
	end

	-- Set any Tab color back except this
	for i,v in pairs(script.Parent:GetChildren()) do
		if v:IsA("TextButton") and v.Name ~= NewTab.Name then
			v.BackgroundColor3 = Color3.fromRGB(100,100,100)
		end
	end
end

function module:GetActiveTextbox()
	for _, textbox in pairs(script.Parent.Main.MainFunc.Textboxes:GetChildren()) do
		if textbox.Visible then
			return textbox
		end
	end
end

function module:AddScriptTabSave(name, source)
	local Button = script.Parent.Main.MainFunc.Needs.ScriptHubButton:Clone()
	local click = false
	Button.Parent = script.Parent.Main.MainFunc.ScriptHub
	Button.Text = name
	Button.Visible = true

	Button.MouseButton1Up:Connect(function()
		if not click then
			click = true
			wait(0.5) -- Adjust this delay if needed
			if click then
				module:AddTab(name, source)
			end
			click = false
		end
	end)
	Button.MouseButton2Up:Connect(function()
		local rclick = script.RClick:Clone()
		rclick.Visible = true
		rclick.Parent = Button
		rclick.MouseEnter:Connect(function()
			rclick.Execute.MouseButton1Up:Connect(function()
				loadstring(source)()
			end)
			rclick.Load.MouseButton1Up:Connect(function()
				module:AddTab(name, source)
			end)
			rclick.Delete.MouseButton1Up:Connect(function()
				rclick.Parent:Destroy()
			end)
			rclick.MouseLeave:Connect(function()
				rclick:Destroy()
			end)
		end)
	end)
end

return module

end;
};
G2L_MODULES[G2L["94"]] = {
Closure = function()
    local script = G2L["94"];
export type HighlighterColors = { [string]: Color3 }

export type TextObject = TextLabel | TextBox

export type HighlightProps = {
	textObject: TextObject,
	src: string?,
	forceUpdate: boolean?,
	lexer: Lexer?,
	customLang: { [string]: string }?
}

export type Lexer = {
	scan: (src: string) -> () -> (string, string),
	navigator: () -> any,
	finished: boolean?,
}

export type Highlighter = {
	defaultLexer: Lexer,
	setTokenColors: (colors: HighlighterColors?) -> (),
	highlight: (props: HighlightProps) -> (() -> ())?,
	refresh: () -> (),
}

export type ObjectData = {
	Text: string,
	Labels: { TextLabel },
	Lines: { string },
	Lexer: Lexer?,
	CustomLang: { [string]: string }?,
}

local function SanitizeRichText(s: string): string
	return string.gsub(
		string.gsub(string.gsub(string.gsub(string.gsub(s, "&", "&amp;"), "<", "&lt;"), ">", "&gt;"), '"', "&quot;"),
		"'",
		"&apos;"
	)
end

local function SanitizeTabs(s: string): string
	return string.gsub(s, "\t", "    ")
end

local function SanitizeControl(s: string): string
	return string.gsub(s, "[\0\1\2\3\4\5\6\7\8\11\12\13\14\15\16\17\18\19\20\21\22\23\24\25\26\27\28\29\30\31]+", "")
end

local TokenColors: HighlighterColors = {
	["background"] = Color3.fromRGB(41, 41, 41),
	["iden"] = Color3.fromRGB(234, 234, 234),
	["keyword"] = Color3.fromRGB(215, 174, 255),
	["builtin"] = Color3.fromRGB(131, 206, 255),
	["string"] = Color3.fromRGB(196, 255, 193),
	["number"] = Color3.fromRGB(255, 125, 125),
	["comment"] = Color3.fromRGB(140, 140, 155),
	["operator"] = Color3.fromRGB(255, 239, 148),
	["custom"] = Color3.fromRGB(119, 122, 255),
}
local ColorFormatter: { [Color3]: string } = {}
local LastData: { [TextObject]: ObjectData } = {}
local Cleanups: { [TextObject]: () -> () } = {}

local Highlighter = {
	defaultLexer = require(script.lexer),
}

function Highlighter.highlight(props: HighlightProps)
	-- Gather props
	local textObject = props.textObject
	local src = SanitizeTabs(SanitizeControl(props.src or textObject.Text))
	local lexer = props.lexer or Highlighter.defaultLexer
	local customLang = props.customLang
	local forceUpdate = props.forceUpdate

	-- Avoid updating when unnecessary
	local data = LastData[textObject]
	if data == nil then
		data = {
			Text = "",
			Labels = {},
			Lines = {},
			Lexer = lexer,
			CustomLang = customLang,
		}
		LastData[textObject] = data
	elseif forceUpdate ~= true and data.Text == src then
		return
	end

	local lineLabels = data.Labels
	local previousLines = data.Lines

	local lines = string.split(src, "\n")

	data.Lines = lines
	data.Text = src
	data.Lexer = lexer
	data.CustomLang = customLang

	-- Ensure valid object properties
	textObject.RichText = false
	textObject.Text = src
	textObject.TextXAlignment = Enum.TextXAlignment.Left
	textObject.TextYAlignment = Enum.TextYAlignment.Top
	textObject.BackgroundColor3 = TokenColors.background
	textObject.TextColor3 = TokenColors.iden
	textObject.TextTransparency = 0.5

	-- Build the highlight labels
	local lineFolder = textObject:FindFirstChild("SyntaxHighlights")
	if lineFolder == nil then
		local newLineFolder = Instance.new("Folder")
		newLineFolder.Name = "SyntaxHighlights"
		newLineFolder.Parent = textObject

		lineFolder = newLineFolder
	end

	-- Add a cleanup handler for this textObject
	local cleanup = Cleanups[textObject]
	if not cleanup then
		local connections: { RBXScriptConnection } = {}
		local function newCleanup()
			for _, label in ipairs(lineLabels) do
				label:Destroy()
			end
			table.clear(lineLabels)
			lineLabels = nil

			LastData[textObject] = nil
			Cleanups[textObject] = nil

			for _, connection in connections do
				connection:Disconnect()
			end
			table.clear(connections)
			connections = nil
		end
		Cleanups[textObject] = newCleanup
		cleanup = newCleanup

		table.insert(
			connections,
			textObject.AncestryChanged:Connect(function()
				if textObject.Parent then
					return
				end

				cleanup()
			end)
		)
		table.insert(
			connections,
			textObject:GetPropertyChangedSignal("TextBounds"):Connect(function()
				Highlighter.highlight({
					textObject = textObject,
					forceUpdate = true,
					lexer = lexer,
					customLang = customLang,
				})
			end)
		)
		table.insert(
			connections,
			textObject:GetPropertyChangedSignal("Text"):Connect(function()
				Highlighter.highlight({
					textObject = textObject,
					lexer = lexer,
					customLang = customLang,
				})
			end)
		)
		table.insert(
			connections,
			textObject:GetPropertyChangedSignal("AbsoluteSize"):Connect(function()
				Highlighter.highlight({
					textObject = textObject,
					forceUpdate = true,
					lexer = lexer,
					customLang = customLang,
				})
			end)
		)
	end

	-- Shortcut empty labels
	if src == "" then
		for l=1, #lineLabels do
			if lineLabels[l].Text == "" then continue end
			lineLabels[l].Text = ""
		end
		return cleanup
	end

	-- Wait for TextBounds to be non-NaN and non-zero because Roblox
	local textBounds = textObject.TextBounds
	while (textBounds.Y ~= textBounds.Y) or (textBounds.Y < 1) do
		task.wait()
		textBounds = textObject.TextBounds
	end

	if LastData[textObject] == nil then
		-- Got cleaned up while we were waiting
		return cleanup
	end

	local numLines = #lines
	local textHeight = textBounds.Y / numLines * textObject.LineHeight

	local richText, index, lineNumber = table.create(5), 0, 1
	for token: string, content: string in lexer.scan(src) do
		local Color =
			if customLang and customLang[content] then
				TokenColors["custom"]
			else
				TokenColors[token] or TokenColors["iden"]

		local tokenLines = string.split(SanitizeRichText(content), "\n")

		for l, line in ipairs(tokenLines) do
			-- Find line label
			local lineLabel = lineLabels[lineNumber]
			if not lineLabel then
				local newLabel = Instance.new("TextLabel")
				newLabel.Name = "Line_" .. lineNumber
				newLabel.RichText = true
				newLabel.BackgroundTransparency = 1
				newLabel.ZIndex = 4
				newLabel.Text = ""
				newLabel.TextXAlignment = Enum.TextXAlignment.Left
				newLabel.TextYAlignment = Enum.TextYAlignment.Top
				newLabel.Parent = lineFolder
				lineLabels[lineNumber] = newLabel
				lineLabel = newLabel
			end

			-- Align line label
			lineLabel.TextColor3 = TokenColors["iden"]
			lineLabel.Font = textObject.Font
			lineLabel.TextSize = textObject.TextSize
			lineLabel.Size = UDim2.new(1, 0, 0, math.ceil(textHeight))
			lineLabel.Position = UDim2.fromScale(0, textHeight * (lineNumber - 1) / textObject.AbsoluteSize.Y)

			-- If multiline token, then set line & move to next
			if l > 1 then
				if forceUpdate or lines[lineNumber] ~= previousLines[lineNumber] then
					-- Set line
					lineLabels[lineNumber].Text = table.concat(richText)
				end
				-- Move to next line
				lineNumber += 1
				index = 0
				table.clear(richText)
			end

			-- If changed, add token to line
			if forceUpdate or lines[lineNumber] ~= previousLines[lineNumber] then
				index += 1
				-- Only add RichText tags when the color is non-default and the characters are non-whitespace
				if Color ~= TokenColors["iden"] and string.find(line, "[%S%C]") then
					richText[index] = string.format(ColorFormatter[Color], line)
				else
					richText[index] = line
				end
			end
		end
	end

	-- Set final line
	if richText[1] and lineLabels[lineNumber] then
		lineLabels[lineNumber].Text = table.concat(richText)
	end

	-- Clear unused line labels
	for l=lineNumber+1, #lineLabels do
		if lineLabels[l].Text == "" then continue end
		lineLabels[l].Text = ""
	end

	return cleanup
end

function Highlighter.refresh(): ()
	-- Rehighlight existing labels using latest colors
	for textObject, data in pairs(LastData) do
		for _, lineLabel in ipairs(data.Labels) do
			lineLabel.TextColor3 = TokenColors["iden"]
		end

		Highlighter.highlight({
			textObject = textObject,
			forceUpdate = true,
			src = data.Text,
			lexer = data.Lexer,
			customLang = data.CustomLang,
		})
	end
end

function Highlighter.setTokenColors(colors: HighlighterColors)
	for token, color in colors do
		TokenColors[token] = color
		ColorFormatter[color] = string.format(
			'<font color="#%.2x%.2x%.2x">',
			color.R * 255,
			color.G * 255,
			color.B * 255
		) .. "%s</font>"
	end

	Highlighter.refresh()
end
Highlighter.setTokenColors(TokenColors)

return Highlighter :: Highlighter

end;
};
G2L_MODULES[G2L["95"]] = {
Closure = function()
    local script = G2L["95"];
--[=[
	Lexical scanner for creating a sequence of tokens from Lua source code.
	This is a heavily modified and Roblox-optimized version of
	the original Penlight Lexer module:
		https://github.com/stevedonovan/Penlight
	Authors:
		stevedonovan <https://github.com/stevedonovan> ----------- Original Penlight lexer author
		ryanjmulder <https://github.com/ryanjmulder> ------------- Penlight lexer contributer
		mpeterv <https://github.com/mpeterv> --------------------- Penlight lexer contributer
		Tieske <https://github.com/Tieske> ----------------------- Penlight lexer contributer
		boatbomber <https://github.com/boatbomber> --------------- Roblox port, added builtin token,
		                                                           added patterns for incomplete syntax, bug fixes,
		                                                           behavior changes, token optimization, thread optimization
		                                                           Added lexer.navigator() for non-sequential reads
		Sleitnick <https://github.com/Sleitnick> ----------------- Roblox optimizations
		howmanysmall <https://github.com/howmanysmall> ----------- Lua + Roblox optimizations

	List of possible tokens:
		- iden
		- keyword
		- builtin
		- string
		- number
		- comment
		- operator
--]=]

local lexer = {}

local Prefix, Suffix, Cleaner = "^[%c%s]*", "[%c%s]*", "[%c%s]+"
local UNICODE = "[%z\x01-\x7F\xC2-\xF4][\x80-\xBF]+"
local NUMBER_A = "0[xX][%da-fA-F_]+"
local NUMBER_B = "0[bB][01_]+"
local NUMBER_C = "%d+%.?%d*[eE][%+%-]?%d+"
local NUMBER_D = "%d+[%._]?[%d_eE]*"
local OPERATORS = "[:;<>/~%*%(%)%-={},%.#%^%+%%]+"
local BRACKETS = "[%[%]]+" -- needs to be separate pattern from other operators or it'll mess up multiline strings
local IDEN = "[%a_][%w_]*"
local STRING_EMPTY = "(['\"])%1" --Empty String
local STRING_PLAIN = "(['\"])[^\n]-([^\\]%1)" --TODO: Handle escaping escapes
local STRING_INTER = "`[^\n]-`"
local STRING_INCOMP_A = "(['\"]).-\n" --Incompleted String with next line
local STRING_INCOMP_B = "(['\"])[^\n]*" --Incompleted String without next line
local STRING_MULTI = "%[(=*)%[.-%]%1%]" --Multiline-String
local STRING_MULTI_INCOMP = "%[=*%[.-.*" --Incompleted Multiline-String
local COMMENT_MULTI = "%-%-%[(=*)%[.-%]%1%]" --Completed Multiline-Comment
local COMMENT_MULTI_INCOMP = "%-%-%[=*%[.-.*" --Incompleted Multiline-Comment
local COMMENT_PLAIN = "%-%-.-\n" --Completed Singleline-Comment
local COMMENT_INCOMP = "%-%-.*" --Incompleted Singleline-Comment
-- local TYPED_VAR = ":%s*([%w%?%| \t]+%s*)" --Typed variable, parameter, function

local lang = require(script.language)
local lua_keyword = lang.keyword
local lua_builtin = lang.builtin
local lua_libraries = lang.libraries

lexer.language = lang

local lua_matches = {
	-- Indentifiers
	{ Prefix .. IDEN .. Suffix, "var" },

	-- Numbers
	{ Prefix .. NUMBER_A .. Suffix, "number" },
	{ Prefix .. NUMBER_B .. Suffix, "number" },
	{ Prefix .. NUMBER_C .. Suffix, "number" },
	{ Prefix .. NUMBER_D .. Suffix, "number" },

	-- Strings
	{ Prefix .. STRING_EMPTY .. Suffix, "string" },
	{ Prefix .. STRING_PLAIN .. Suffix, "string" },
	{ Prefix .. STRING_INCOMP_A .. Suffix, "string" },
	{ Prefix .. STRING_INCOMP_B .. Suffix, "string" },
	{ Prefix .. STRING_MULTI .. Suffix, "string" },
	{ Prefix .. STRING_MULTI_INCOMP .. Suffix, "string" },
	{ Prefix .. STRING_INTER .. Suffix, "string_inter" },

	-- Comments
	{ Prefix .. COMMENT_MULTI .. Suffix, "comment" },
	{ Prefix .. COMMENT_MULTI_INCOMP .. Suffix, "comment" },
	{ Prefix .. COMMENT_PLAIN .. Suffix, "comment" },
	{ Prefix .. COMMENT_INCOMP .. Suffix, "comment" },

	-- Operators
	{ Prefix .. OPERATORS .. Suffix, "operator" },
	{ Prefix .. BRACKETS .. Suffix, "operator" },

	-- Unicode
	{ Prefix .. UNICODE .. Suffix, "iden" },

	-- Unknown
	{ "^.", "iden" },
}

-- To reduce the amount of table indexing during lexing, we separate the matches now
local PATTERNS, TOKENS = {}, {}
for i, m in lua_matches do
	PATTERNS[i] = m[1]
	TOKENS[i] = m[2]
end

--- Create a plain token iterator from a string.
-- @tparam string s a string.

function lexer.scan(s: string)
	local index = 1
	local size = #s
	local previousContent1, previousContent2, previousContent3, previousToken = "", "", "", ""

	local thread = coroutine.create(function()
		while index <= size do
			local matched = false
			for tokenType, pattern in ipairs(PATTERNS) do
				-- Find match
				local start, finish = string.find(s, pattern, index)
				if start == nil then continue end

				-- Move head
				index = finish + 1
				matched = true

				-- Gather results
				local content = string.sub(s, start, finish)
				local rawToken = TOKENS[tokenType]
				local processedToken = rawToken

				-- Process token
				if rawToken == "var" then
					-- Since we merge spaces into the tok, we need to remove them
					-- in order to check the actual word it contains
					local cleanContent = string.gsub(content, Cleaner, "")

					if lua_keyword[cleanContent] then
						processedToken = "keyword"
					elseif lua_builtin[cleanContent] then
						processedToken = "builtin"
					elseif string.find(previousContent1, "%.[%s%c]*$") and previousToken ~= "comment" then
						-- The previous was a . so we need to special case indexing things
						local parent = string.gsub(previousContent2, Cleaner, "")
						local lib = lua_libraries[parent]
						if lib and lib[cleanContent] and not string.find(previousContent3, "%.[%s%c]*$") then
							-- Indexing a builtin lib with existing item, treat as a builtin
							processedToken = "builtin"
						else
							-- Indexing a non builtin, can't be treated as a keyword/builtin
							processedToken = "iden"
						end
						-- print("indexing",parent,"with",cleanTok,"as",t2)
					else
						processedToken = "iden"
					end
				elseif rawToken == "string_inter" then
					if not string.find(content, "[^\\]{") then
						-- This inter string doesnt actually have any inters
						processedToken = "string"
					else
						-- We're gonna do our own yields, so the main loop won't need to
						-- Our yields will be a mix of string and whatever is inside the inters
						processedToken = nil

						local isString = true
						local subIndex = 1
						local subSize = #content
						while subIndex <= subSize do
							-- Find next brace
							local subStart, subFinish = string.find(content, "^.-[^\\][{}]", subIndex)
							if subStart == nil then
								-- No more braces, all string
								coroutine.yield("string", string.sub(content, subIndex))
								break
							end

							if isString then
								-- We are currently a string
								subIndex = subFinish + 1
								coroutine.yield("string", string.sub(content, subStart, subFinish))

								-- This brace opens code
								isString = false
							else
								-- We are currently in code
								subIndex = subFinish
								local subContent = string.sub(content, subStart, subFinish-1)
								for innerToken, innerContent in lexer.scan(subContent) do
									coroutine.yield(innerToken, innerContent)
								end

								-- This brace opens string/closes code
								isString = true
							end
						end
					end
				end

				-- Record last 3 tokens for the indexing context check
				previousContent3 = previousContent2
				previousContent2 = previousContent1
				previousContent1 = content
				previousToken = processedToken or rawToken
				if processedToken then
					coroutine.yield(processedToken, content)
				end
				break
			end

			-- No matches found
			if not matched then
				return
			end
		end

		-- Completed the scan
		return
	end)

	return function()
		if coroutine.status(thread) == "dead" then
			return
		end

		local success, token, content = coroutine.resume(thread)
		if success and token then
			return token, content
		end

		return
	end
end

function lexer.navigator()
	local nav = {
		Source = "",
		TokenCache = table.create(50),

		_RealIndex = 0,
		_UserIndex = 0,
		_ScanThread = nil,
	}

	function nav:Destroy()
		self.Source = nil
		self._RealIndex = nil
		self._UserIndex = nil
		self.TokenCache = nil
		self._ScanThread = nil
	end

	function nav:SetSource(SourceString)
		self.Source = SourceString

		self._RealIndex = 0
		self._UserIndex = 0
		table.clear(self.TokenCache)

		self._ScanThread = coroutine.create(function()
			for Token, Src in lexer.scan(self.Source) do
				self._RealIndex += 1
				self.TokenCache[self._RealIndex] = { Token, Src }
				coroutine.yield(Token, Src)
			end
		end)
	end

	function nav.Next()
		nav._UserIndex += 1

		if nav._RealIndex >= nav._UserIndex then
			-- Already scanned, return cached
			return table.unpack(nav.TokenCache[nav._UserIndex])
		else
			if coroutine.status(nav._ScanThread) == "dead" then
				-- Scan thread dead
				return
			else
				local success, token, src = coroutine.resume(nav._ScanThread)
				if success and token then
					-- Scanned new data
					return token, src
				else
					-- Lex completed
					return
				end
			end
		end
	end

	function nav.Peek(PeekAmount)
		local GoalIndex = nav._UserIndex + PeekAmount

		if nav._RealIndex >= GoalIndex then
			-- Already scanned, return cached
			if GoalIndex > 0 then
				return table.unpack(nav.TokenCache[GoalIndex])
			else
				-- Invalid peek
				return
			end
		else
			if coroutine.status(nav._ScanThread) == "dead" then
				-- Scan thread dead
				return
			else
				local IterationsAway = GoalIndex - nav._RealIndex

				local success, token, src = nil, nil, nil

				for _ = 1, IterationsAway do
					success, token, src = coroutine.resume(nav._ScanThread)
					if not (success or token) then
						-- Lex completed
						break
					end
				end

				return token, src
			end
		end
	end

	return nav
end

return lexer

end;
};
G2L_MODULES[G2L["96"]] = {
Closure = function()
    local script = G2L["96"];
local language = {
	keyword = {
		["and"] = "keyword",
		["break"] = "keyword",
		["continue"] = "keyword",
		["do"] = "keyword",
		["else"] = "keyword",
		["elseif"] = "keyword",
		["end"] = "keyword",
		["export"] = "keyword",
		["false"] = "keyword",
		["for"] = "keyword",
		["function"] = "keyword",
		["if"] = "keyword",
		["in"] = "keyword",
		["local"] = "keyword",
		["nil"] = "keyword",
		["not"] = "keyword",
		["or"] = "keyword",
		["repeat"] = "keyword",
		["return"] = "keyword",
		["self"] = "keyword",
		["then"] = "keyword",
		["true"] = "keyword",
		["type"] = "keyword",
		["typeof"] = "keyword",
		["until"] = "keyword",
		["while"] = "keyword",
	},

	builtin = {
		-- Luau Functions
		["assert"] = "function",
		["error"] = "function",
		["getfenv"] = "function",
		["getmetatable"] = "function",
		["ipairs"] = "function",
		["loadstring"] = "function",
		["newproxy"] = "function",
		["next"] = "function",
		["pairs"] = "function",
		["pcall"] = "function",
		["print"] = "function",
		["rawequal"] = "function",
		["rawget"] = "function",
		["rawlen"] = "function",
		["rawset"] = "function",
		["select"] = "function",
		["setfenv"] = "function",
		["setmetatable"] = "function",
		["tonumber"] = "function",
		["tostring"] = "function",
		["unpack"] = "function",
		["xpcall"] = "function",

		-- Luau Functions (Deprecated)
		["collectgarbage"] = "function",

		-- Luau Variables
		["_G"] = "table",
		["_VERSION"] = "string",

		-- Luau Tables
		["bit32"] = "table",
		["coroutine"] = "table",
		["debug"] = "table",
		["math"] = "table",
		["os"] = "table",
		["string"] = "table",
		["table"] = "table",
		["utf8"] = "table",

		-- Roblox Functions
		["DebuggerManager"] = "function",
		["delay"] = "function",
		["gcinfo"] = "function",
		["PluginManager"] = "function",
		["require"] = "function",
		["settings"] = "function",
		["spawn"] = "function",
		["tick"] = "function",
		["time"] = "function",
		["UserSettings"] = "function",
		["wait"] = "function",
		["warn"] = "function",

		-- Roblox Functions (Deprecated)
		["Delay"] = "function",
		["ElapsedTime"] = "function",
		["elapsedTime"] = "function",
		["printidentity"] = "function",
		["Spawn"] = "function",
		["Stats"] = "function",
		["stats"] = "function",
		["Version"] = "function",
		["version"] = "function",
		["Wait"] = "function",
		["ypcall"] = "function",

		-- Roblox Variables
		["game"] = "Instance",
		["plugin"] = "Instance",
		["script"] = "Instance",
		["shared"] = "Instance",
		["workspace"] = "Instance",

		-- Roblox Variables (Deprecated)
		["Game"] = "Instance",
		["Workspace"] = "Instance",

		-- Roblox Tables
		["Axes"] = "table",
		["BrickColor"] = "table",
		["CatalogSearchParams"] = "table",
		["CFrame"] = "table",
		["Color3"] = "table",
		["ColorSequence"] = "table",
		["ColorSequenceKeypoint"] = "table",
		["DateTime"] = "table",
		["DockWidgetPluginGuiInfo"] = "table",
		["Enum"] = "table",
		["Faces"] = "table",
		["FloatCurveKey"] = "table",
		["Font"] = "table",
		["Instance"] = "table",
		["NumberRange"] = "table",
		["NumberSequence"] = "table",
		["NumberSequenceKeypoint"] = "table",
		["OverlapParams"] = "table",
		["PathWaypoint"] = "table",
		["PhysicalProperties"] = "table",
		["Random"] = "table",
		["Ray"] = "table",
		["RaycastParams"] = "table",
		["Rect"] = "table",
		["Region3"] = "table",
		["Region3int16"] = "table",
		["RotationCurveKey"] = "table",
		["task"] = "table",
		["TweenInfo"] = "table",
		["UDim"] = "table",
		["UDim2"] = "table",
		["Vector2"] = "table",
		["Vector2int16"] = "table",
		["Vector3"] = "table",
		["Vector3int16"] = "table",
	},

	libraries = {

		-- Luau Libraries
		bit32 = {
			arshift = "function",
			band = "function",
			bnot = "function",
			bor = "function",
			btest = "function",
			bxor = "function",
			countlz = "function",
			countrz = "function",
			extract = "function",
			lrotate = "function",
			lshift = "function",
			replace = "function",
			rrotate = "function",
			rshift = "function",
		},

		coroutine = {
			close = "function",
			create = "function",
			isyieldable = "function",
			resume = "function",
			running = "function",
			status = "function",
			wrap = "function",
			yield = "function",
		},

		debug = {
			dumpheap = "function",
			info = "function",
			loadmodule = "function",
			profilebegin = "function",
			profileend = "function",
			resetmemorycategory = "function",
			setmemorycategory = "function",
			traceback = "function",
		},

		math = {
			abs = "function",
			acos = "function",
			asin = "function",
			atan2 = "function",
			atan = "function",
			ceil = "function",
			clamp = "function",
			cos = "function",
			cosh = "function",
			deg = "function",
			exp = "function",
			floor = "function",
			fmod = "function",
			frexp = "function",
			ldexp = "function",
			log10 = "function",
			log = "function",
			max = "function",
			min = "function",
			modf = "function",
			noise = "function",
			pow = "function",
			rad = "function",
			random = "function",
			randomseed = "function",
			round = "function",
			sign = "function",
			sin = "function",
			sinh = "function",
			sqrt = "function",
			tan = "function",
			tanh = "function",

			huge = "number",
			pi = "number",
		},

		os = {
			clock = "function",
			date = "function",
			difftime = "function",
			time = "function",
		},

		string = {
			byte = "function",
			char = "function",
			find = "function",
			format = "function",
			gmatch = "function",
			gsub = "function",
			len = "function",
			lower = "function",
			match = "function",
			pack = "function",
			packsize = "function",
			rep = "function",
			reverse = "function",
			split = "function",
			sub = "function",
			unpack = "function",
			upper = "function",
		},

		table = {
			clear = "function",
			clone = "function",
			concat = "function",
			create = "function",
			find = "function",
			foreach = "function",
			foreachi = "function",
			freeze = "function",
			getn = "function",
			insert = "function",
			isfrozen = "function",
			maxn = "function",
			move = "function",
			pack = "function",
			remove = "function",
			sort = "function",
			unpack = "function",
		},

		utf8 = {
			char = "function",
			codepoint = "function",
			codes = "function",
			graphemes = "function",
			len = "function",
			nfcnormalize = "function",
			nfdnormalize = "function",
			offset = "function",

			charpattern = "string",
		},

		-- Roblox Libraries
		Axes = {
			new = "function",
		},

		BrickColor = {
			Black = "function",
			Blue = "function",
			DarkGray = "function",
			Gray = "function",
			Green = "function",
			new = "function",
			New = "function",
			palette = "function",
			Random = "function",
			random = "function",
			Red = "function",
			White = "function",
			Yellow = "function",
		},

		CatalogSearchParams = {
			new = "function",
		},

		CFrame = {
			Angles = "function",
			fromAxisAngle = "function",
			fromEulerAngles = "function",
			fromEulerAnglesXYZ = "function",
			fromEulerAnglesYXZ = "function",
			fromMatrix = "function",
			fromOrientation = "function",
			lookAt = "function",
			new = "function",

			identity = "CFrame",
		},

		Color3 = {
			fromHex = "function",
			fromHSV = "function",
			fromRGB = "function",
			new = "function",
			toHSV = "function",
		},

		ColorSequence = {
			new = "function",
		},

		ColorSequenceKeypoint = {
			new = "function",
		},

		DateTime = {
			fromIsoDate = "function",
			fromLocalTime = "function",
			fromUniversalTime = "function",
			fromUnixTimestamp = "function",
			fromUnixTimestampMillis = "function",
			now = "function",
		},

		DockWidgetPluginGuiInfo = {
			new = "function",
		},

		Enum = {},

		Faces = {
			new = "function",
		},

		FloatCurveKey = {
			new = "function",
		},

		Font = {
			fromEnum = "function",
			fromId = "function",
			fromName = "function",
			new = "function",
		},

		Instance = {
			new = "function",
		},

		NumberRange = {
			new = "function",
		},

		NumberSequence = {
			new = "function",
		},

		NumberSequenceKeypoint = {
			new = "function",
		},

		OverlapParams = {
			new = "function",
		},

		PathWaypoint = {
			new = "function",
		},

		PhysicalProperties = {
			new = "function",
		},

		Random = {
			new = "function",
		},

		Ray = {
			new = "function",
		},

		RaycastParams = {
			new = "function",
		},

		Rect = {
			new = "function",
		},

		Region3 = {
			new = "function",
		},

		Region3int16 = {
			new = "function",
		},

		RotationCurveKey = {
			new = "function",
		},

		task = {
			cancel = "function",
			defer = "function",
			delay = "function",
			desynchronize = "function",
			spawn = "function",
			synchronize = "function",
			wait = "function",
		},

		TweenInfo = {
			new = "function",
		},

		UDim = {
			new = "function",
		},

		UDim2 = {
			fromOffset = "function",
			fromScale = "function",
			new = "function",
		},

		Vector2 = {
			new = "function",

			one = "Vector2",
			xAxis = "Vector2",
			yAxis = "Vector2",
			zero = "Vector2",
		},

		Vector2int16 = {
			new = "function",
		},

		Vector3 = {
			fromAxis = "function",
			FromAxis = "function",
			fromNormalId = "function",
			FromNormalId = "function",
			new = "function",

			one = "Vector3",
			xAxis = "Vector3",
			yAxis = "Vector3",
			zAxis = "Vector3",
			zero = "Vector3",
		},

		Vector3int16 = {
			new = "function",
		},
	},
}

-- Filling up language.libraries.Enum table
local enumLibraryTable = language.libraries.Enum

for _, enum in ipairs(Enum:GetEnums()) do
	--TODO: Remove tostring from here once there is a better way to get the name of an Enum
	enumLibraryTable[tostring(enum)] = "Enum"
end

return language

end;
};
-- StarterGui.SynapseX.Main.ScriptTab.ScriptTabHandler
local function C_44()
local script = G2L["44"];
	local function AddTab()
		local NewTextbox = script.Parent.Parent.MainFunc.Needs.Textbox:Clone()
		local NewTab = script.Parent.Parent.MainFunc.Needs.Tab:Clone()
		local num = 0
		
		NewTextbox.Parent = script.Parent.Parent.MainFunc.Textboxes
		NewTab.Parent=  script.Parent.Tabs
		NewTab.Visible = true
		NewTextbox.Visible = true
		NewTab.BackgroundColor3 = Color3.fromRGB(80,80,80)
		
		-- Set da name as yes
		for i,v in pairs(script.Parent.Parent.MainFunc.Textboxes:GetChildren()) do
			num += 1
		end
		NewTab.Name = "  Script "..tostring(num)
		NewTab.Text = "  Script "..tostring(num)
		NewTextbox.Name = "  Script "..tostring(num)
		
		-- Set any textbox except new disabled (not visible)
		for _,tabs in pairs(script.Parent.Parent.MainFunc.Textboxes:GetChildren()) do
			if tabs.Name ~= NewTextbox.Name then
				tabs.Visible = false
			end
		end

		-- Set any Tab color back except this
		for i,v in pairs(script.Parent.Tabs:GetChildren()) do
			if v:IsA("TextButton") and v.Name ~= NewTab.Name then
				v.BackgroundColor3 = Color3.fromRGB(100,100,100)
			end
		end





		NewTab:FindFirstChild("Remove").MouseButton1Up:Connect(function()
			local num = 0
			for _, textboxes in pairs(script.Parent.Parent.MainFunc.Textboxes:GetChildren()) do
				num += 1

			end
			if num > 1 then
				for i,v in pairs(script.Parent.Parent.MainFunc.Textboxes:GetChildren()) do
					if v.Name == NewTab.Name then
						v:Destroy()
					end
				end
				NewTab:Destroy()
			end
		end)
		NewTab.MouseButton1Up:Connect(function()
			for i,v in pairs(script.Parent.Parent.MainFunc.Textboxes:GetChildren()) do
				if v.Name == NewTab.Name then
					v.Visible = true
				else
					v.Visible = false
				end
			end
			for i,v in pairs(script.Parent.Tabs:GetChildren()) do
				if v:IsA("TextButton") and v.Name ~= NewTab.Name then
					v.BackgroundColor3 = Color3.fromRGB(100,100,100)
				else
					if v:IsA("TextButton") then
						v.BackgroundColor3 = Color3.fromRGB(80,80,80)
					end
				end
			end
		end)




		-- Textbox handler
		local Highlighter = require(script.Parent.Parent.Parent.Highlighter)

		local textBox = NewTextbox.Frame.Textbox



		local TextBox = textBox
		local LineIndicator = NewTextbox.Frame.Linebar.LineText


		local function updateLineIndicator()
			local text = TextBox.Text
			local lineCount = select(2, text:gsub('\n', '\n'))

			LineIndicator.Text = ""

			for lineNumber = 1, lineCount + 1 do
				LineIndicator.Text = LineIndicator.Text .. lineNumber .. "\n"
			end
		end

		local function autoHighlight()
			Highlighter.highlight({
				textObject = textBox,
				src = textBox.Text,
				forceUpdate = true
			})
		end
		textBox:GetPropertyChangedSignal("Text"):Connect(function()
			autoHighlight()
		end)

		task.spawn(function()
			local UserInputService = game:GetService("UserInputService")
			local textBox = NewTextbox.Frame.Textbox -- Replace with the instance of your TextBox
			local lineIndicatorFrame = NewTextbox.Frame.Highlighted -- Replace with the instance of your line indicator frame

			local function moveLineIndicatorFrame(lineNumber)
				local lineHeight = lineIndicatorFrame.LineText.TextSize -- Adjust this value as per your line indicator's line height

				local newYOffset
				if lineNumber then
					newYOffset = (lineNumber - 10) * lineHeight
				else
					newYOffset = lineIndicatorFrame.Position.Y.Offset + 14
				end

				lineIndicatorFrame.Position = UDim2.new(0, 0, 0, newYOffset)
			end

			local function onMouseMove()
				if textBox:IsFocused() then
					UserInputService.InputBegan:Connect(function(input)
						if  input == Enum.UserInputType.MouseButton1 or input == Enum.UserInputType.Touch then
							local mouse = UserInputService:GetMouseLocation()
							local y = mouse.Y
							local lineHeight = lineIndicatorFrame.LineText.TextSize -- Adjust this value as per your line indicator's line height

							local lineNumber = math.floor(y / lineHeight) + 1
							moveLineIndicatorFrame(lineNumber)
						end
					end)
				end
			end

			UserInputService.InputChanged:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseMovement then
					onMouseMove()
				end
			end)

			UserInputService.InputBegan:Connect(function(input)
            pcall(function() -- i hate the errors, so yes
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
					local mouse = UserInputService:GetMouseLocation()
					local y = mouse.Y
					pcall(function() lineHeight = lineIndicatorFrame:FindFirstChild("LineText").TextSize end)

					local lineNumber = math.floor(y / lineHeight) + 1
					moveLineIndicatorFrame(lineNumber)
				elseif input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode.Return and textBox:IsFocused() then
					moveLineIndicatorFrame(nil)
				end
            end)
            end)

			textBox.FocusLost:Connect(function(enterPressed)
				if enterPressed then
					local lineNumber = textBox.CursorPosition.Y
					moveLineIndicatorFrame(lineNumber)
				end
			end)
		end)





		updateLineIndicator()


		TextBox.Changed:Connect(function(property)
			if property == "Text" then
				updateLineIndicator()
			end
		end)


		textBox:GetPropertyChangedSignal("Text"):Connect(function()
			NewTextbox.Frame.Size = UDim2.new(script.Parent.Size.X.Scale, script.Parent.Size.X.Offset, script.Parent.Parent.Size.Y.Scale, script.Parent.Parent.Size.Y.Offset + 150)
			NewTextbox.Frame.Highlighted.Size = UDim2.new(0, script.Parent.Parent.Size.X.Offset + 150,0, 13)
		end)














	end

	script.Parent.Tabs.AddScript.Button.MouseButton1Up:Connect(function()
		AddTab()
	end)
	AddTab()
end;
task.spawn(C_44);
-- StarterGui.SynapseX.Main.ButtonsHandler
local function C_49()
	local script = G2L["49"];
	local buttons = script.Parent
	local title = buttons.TitleSynapse
	local injected =  script.Parent.Parent.Injected.Value


	local function GetTextbox()
		for _,textbox in pairs(script.Parent.MainFunc.Textboxes:GetChildren()) do
			if textbox.Visible then
				return textbox
			end
		end
	end
	buttons.Clear.MouseButton1Up:Connect(function()
		for _, textbox in pairs(buttons.MainFunc.Textboxes:GetChildren()) do
			if textbox.Visible then
				textbox.Frame.Textbox.Text = ''
			end
		end
	end)
	buttons.Execute.MouseButton1Up:Connect(function()
		if not injected then
			title.Text = "Synapse X - "..synversion.." (not injected! press attach)"
		elseif injected == true then

			local textbox = GetTextbox()

			loadstring(textbox.Frame.Textbox.Text)()
		end
	end)
	buttons.Attach.MouseButton1Up:Connect(function()
		if not injected then
			title.Text = "Synapse X - "..synversion.." (checking...)"
			task.wait(0.8)
			title.Text = "Synapse X - "..synversion.." (injecting...)"
			task.wait(2.3)
			title.Text = "Synapse X - "..synversion.." (checking whitelist...)"
			task.wait(1.6)
			title.Text = "Synapse X - "..synversion.." (scanning...)"
			task.wait(1.3)
			title.Text = "Synapse X - "..synversion.." (ready!)"
			injected = true
			task.wait(1)
			title.Text = "Synapse X - "..synversion
		else
			title.Text = "Synapse X - "..synversion.." (already injected!)"
			task.wait(1)
			title.Text = "Synapse X - "..synversion
		end
	end)

	buttons.Options.MouseButton1Up:Connect(function()
		script.Parent.Parent.OptionMenu.Position = UDim2.new(0.367, -11,0.317, -6)
		script.Parent.Parent.OptionMenu.Visible = true
	end)

	buttons.OpenFile.MouseButton1Up:Connect(function()
		script.Parent.Parent.OpenScript.Visible = true
	end)
	buttons.SaveFile.MouseButton1Up:Connect(function()
		script.Parent.Parent.SaveScript.Visible = true
	end)
	buttons.Close.MouseButton1Up:Connect(function()
		script.Parent.Parent:Destroy()
	end)
	buttons.Maximize.MouseButton1Up:Connect(function()
		--idkkk
	end)
	buttons.Minimize.MouseButton1Up:Connect(function()
		buttons.Visible = false
		script.Parent.Parent.FloatingIcon.Visible = true
	end)

	script.Parent.Parent.FloatingIcon.MouseButton1Up:Connect(function()
		buttons.Visible = true
		script.Parent.Parent.FloatingIcon.Visible = false
	end)

	buttons.ScriptHub.MouseButton1Up:Connect(function()
		script.Parent.Parent.ScriptHubMenu.Visible = true
	end)
end;
task.spawn(C_49);
-- StarterGui.SynapseX.SaveScript.Handler
local function C_51()
	local script = G2L["51"];
	script.Parent.savescript.MouseButton1Up:Connect(function()
		local module = require(script.Parent.Parent.Module)
		module:AddScriptTabSave(script.Parent.scriptname.Text..".lua", module:GetActiveTextbox().Frame.Textbox.Text)
		script.Parent.Visible = false
		script.Parent.scriptname.Text = ''
		makefolder("SynapseSavedScripts")
		writefile("SynapseSavedScripts/"..script.Parent.scriptname.Text..".lua", module:GetActiveTextbox().Frame.Textbox.Text)
	end)

	script.Parent.Close.MouseButton1Up:Connect(function()
		script.Parent.Visible = false
		script.Parent.scriptname.Text = ''
	end)
end;
task.spawn(C_51);
-- StarterGui.SynapseX.ScriptHubMenu.ScriptHubHandler
local function C_71()
	local script = G2L["71"];
	local yes = script.Parent
	yes.Background.ScrollingFrame.Dex.MouseButton1Up:Connect(function()
		for i,v in pairs(script.Parent:GetChildren()) do
			if v.Name ~= script.Parent.Background.ScrollingFrame.Dex.Name and v:IsA("Frame") then
				pcall(function() v.Visible = false end)
			else
				pcall(function() v.Visible = true end)
			end
		end
		script.Parent.Description.Text = [[A version of the popular Dex explorer with
		patches specifically for Synapse X.]]
	end)

	yes.Background.ScrollingFrame.RemoteSpy.MouseButton1Up:Connect(function()
		for i,v in pairs(script.Parent:GetChildren()) do
			if v.Name ~= script.Parent.Background.ScrollingFrame.RemoteSpy.Name and v:IsA("Frame") then
				pcall(function() v.Visible = false end)
			else
				pcall(function() v.Visible = true end)
			end
		end
		script.Parent.Description.Text = [[Allows you to view RemoteEvents and
		RemoteFunctions calleld.]]
	end)

	yes.Background.ScrollingFrame.UnnamedESP.MouseButton1Up:Connect(function()
		for i,v in pairs(script.Parent:GetChildren()) do
			if v.Name ~= script.Parent.Background.ScrollingFrame.UnnamedESP.Name and v:IsA("Frame") then
				pcall(function() v.Visible = false end)
			else
				pcall(function() v.Visible = true end)
			end
		end
		script.Parent.Description.Text = [[ESP made by ic3w0lf using the Drawing API.]]
	end)

	yes.Background.ScrollingFrame.ScriptDumper.MouseButton1Up:Connect(function()
		for i,v in pairs(script.Parent:GetChildren()) do
			if v.Name ~= script.Parent.Background.ScrollingFrame.ScriptDumper.Name and v:IsA("Frame") then
				pcall(function() pcall(function() v.Visible = false end) end)
			else
				pcall(function() v.Visible = true end)
			end
		end
		script.Parent.Description.Text = [[Dumps all LocalScripts an ModuleScripts.]]
	end)

	yes.Execute.MouseButton1Up:Connect(function()
		for i,v in pairs(yes:GetChildren()) do
			if v.Visible then
				if v.Name == "Dex" then
				loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/dex.lua"))()
			elseif v.Name == "RemoteSpy" then
				loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/SimpleSpyV3/main.lua"))()
			elseif v.Name == "UnnamedESP" then
				pcall(function() loadstring(game:HttpGet('https://raw.githubusercontent.com/ic3w0lf22/Unnamed-ESP/master/UnnamedESP.lua'))() end)
			elseif v.Name == "ScriptDumper" then
				saveinstance()
			end
			end
		end
	end)

	yes.Close.MouseButton1Up:Connect(function()
		script.Parent.Visible = false
	end)

	yes.Minimize.MouseButton1Up:Connect(function()
		script.Parent.Visible = false
	end)
end;
task.spawn(C_71);
-- StarterGui.SynapseX.OptionMenu.Optionhandler
local function C_83()
	local script = G2L["83"];
	local stuff  =script.Parent

	stuff.Buttons.Discord.MouseButton1Up:Connect(function()
		setclipboard("XYFXYNmG4D")
	end)
	stuff.Buttons.Rejoin.MouseButton1Up:Connect(function()
		game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, game.JobId)
	end)

	stuff.Close.MouseButton1Up:Connect(function()
		script.Parent.Visible = false
	end)



	-- Toggles
	stuff.ToggleAutoExec.MouseButton1Up:Connect(function()
		if stuff.ToggleAutoExec.Text == '' then
			stuff.ToggleAutoExec.BackgroundColor3 = Color3.fromRGB(112,112,112)
			stuff.ToggleAutoExec.Text = 'x'



		else
			stuff.ToggleAutoExec.BackgroundColor3 = Color3.fromRGB(166,166,166)
			stuff.ToggleAutoExec.Text = ''



		end
	end)

	stuff.ToggleFPSUnlocker.MouseButton1Up:Connect(function()
		if stuff.ToggleFPSUnlocker.Text == '' then
			stuff.ToggleFPSUnlocker.BackgroundColor3 = Color3.fromRGB(112,112,112)
			stuff.ToggleFPSUnlocker.Text = 'x'

			setfpscap(math.huge)

		else
			stuff.ToggleFPSUnlocker.BackgroundColor3 = Color3.fromRGB(166,166,166)
			stuff.ToggleFPSUnlocker.Text = ''

			setfpscap(60)

		end
	end)

	stuff.ToggleInternalUI.MouseButton1Up:Connect(function()
		if stuff.ToggleInternalUI.Text == '' then
			stuff.ToggleInternalUI.BackgroundColor3 = Color3.fromRGB(112,112,112)
			stuff.ToggleInternalUI.Text = 'x'

			-- idk

		else
			stuff.ToggleInternalUI.BackgroundColor3 = Color3.fromRGB(166,166,166)
			stuff.ToggleInternalUI.Text = ''

			-- idk

		end
	end)

	stuff.ToggleTopMost.MouseButton1Up:Connect(function()
		if stuff.ToggleTopMost.Text == '' then
			stuff.ToggleTopMost.BackgroundColor3 = Color3.fromRGB(112,112,112)
			stuff.ToggleTopMost.Text = 'x'

			-- idk

		else
			stuff.ToggleTopMost.BackgroundColor3 = Color3.fromRGB(166,166,166)
			stuff.ToggleTopMost.Text = ''

			-- idk

		end
	end)
end;
task.spawn(C_83);
-- StarterGui.SynapseX.GetSavedScripts
local function C_84()

	local script = G2L["84"];
	local module = require(script.Parent.Module)
    
	for index, value in pairs(listfiles("SynapseSavedScripts")) do
    	print(value)
		if isfile(value) then
			task.wait(0.05)
            local editedString = string.gsub(value, [[SynapseSavedScripts\]], "")
			module:AddScriptTabSave(editedString, readfile(value))
		end
	end
end;
task.spawn(C_84);
-- StarterGui.SynapseX.OpenScript.Handler
local function C_92()
	local script = G2L["92"];
	script.Parent.savescript.MouseButton1Up:Connect(function()
		local module = require(script.Parent.Parent.Module)
		if isfile(script.Parent.scriptname.Text) then
			local a = script.Parent.scriptname.Text
			script.Parent.Visible = false
			script.Parent.scriptname.Text = ''
			module:AddTab(script.Parent.scriptname.Text, readfile(a))
		else
			script.Parent.Title.Text = "Synapse X - Open File (File not found!)"
			task.wait(1)
			script.Parent.Title.Text = "Synapse X - Open File"
		end
	end)

	script.Parent.Close.MouseButton1Up:Connect(function()
		script.Parent.Visible = false
		script.Parent.scriptname.Text = ''
	end)
end;
task.spawn(C_92);
-- StarterGui.SynapseX.SetDraggable
local function C_93()
	local script = G2L["93"];
	local yes =  script.Parent
	yes.Main.Draggable = true
	yes.OpenScript.Draggable = true
	yes.OptionMenu.Draggable = true
	yes.SaveScript.Draggable = true
	yes.ScriptHubMenu.Draggable = true
	yes.ScriptLog.Draggable = true
	yes.FloatingIcon.Draggable = true
	
	
	
	yes.Main.MainFunc.ScriptHub.ChildAdded:Connect(function(v)
		
		if v:IsA("TextButton") then
        		local color = v.BackgroundColor3
            	local bordercolor = v.BorderColor3
            	local bordersize = v.BorderSizePixel
            	v.MouseEnter:Connect(function()
               	 	v.BackgroundColor3 = Color3.fromRGB(0,47,80)
               	 	v.BorderColor3 = Color3.fromRGB(91,139,168)
               	 	v.BorderSizePixel = 1
            	end)
           		 v.MouseLeave:Connect(function()
               		 v.BackgroundColor3 = color
               	 	v.BorderColor3 = bordercolor
               	 	v.BorderSizePixel = bordersize
           		 end)
           	end
	
	end)
	
	yes.Main.MainFunc.ScriptHub.ChildAdded:Connect(function(v)
		if yes:IsA("TextButton") then
			v.ChildAdded:Connect(function(RClick)
			print(RClick.Name)
			local del = RCLick.Delete
				local color = del.BackgroundColor3
            	local bordercolor = del.BorderColor3
            	local bordersize = del.BorderSizePixel
            	del.MouseEnter:Connect(function()
               	 	del.BackgroundColor3 = Color3.fromRGB(0,47,80)
               	 	del.BorderColor3 = Color3.fromRGB(91,139,168)
               	 	del.BorderSizePixel = 1
            	end)
           		 del.MouseLeave:Connect(function()
               		 del.BackgroundColor3 = color
               	 	del.BorderColor3 = bordercolor
               	 	del.BorderSizePixel = bordersize
           		 end)
           		 
           		 
           		 local exec = RCLick.Execute
				local color = exec.BackgroundColor3
            	local bordercolor = exec.BorderColor3
            	local bordersize = exec.BorderSizePixel
            	exec.MouseEnter:Connect(function()
               	 	exec.BackgroundColor3 = Color3.fromRGB(0,47,80)
               	 	exec.BorderColor3 = Color3.fromRGB(91,139,168)
               	 	exec.BorderSizePixel = 1
            	end)
           		exec.MouseLeave:Connect(function()
               		 exec.BackgroundColor3 = color
               	 	exec.BorderColor3 = bordercolor
               	 	exec.BorderSizePixel = bordersize
           		 end)
           		 
           		 local load = RCLick.Load
				local color = load.BackgroundColor3
            	local bordercolor = load.BorderColor3
            	local bordersize =load.BorderSizePixel
            	load.MouseEnter:Connect(function()
               	 	load.BackgroundColor3 = Color3.fromRGB(0,47,80)
               	 	load.BorderColor3 = Color3.fromRGB(91,139,168)
               	 	load.BorderSizePixel = 1
            	end)
           		load.MouseLeave:Connect(function()
               		load.BackgroundColor3 = color
               	 	load.BorderColor3 = bordercolor
               	 	load.BorderSizePixel = bordersize
           		 end)
		end)

		end
	end)
	
	
	
	task.spawn(function()
		
		for i,v in pairs(yes.Main.MainFunc.ScriptHub:GetChildren()) do
        	if v:IsA("TextButton") then
        		local color = v.BackgroundColor3
            	local bordercolor = v.BorderColor3
            	local bordersize = v.BorderSizePixel
            	v.MouseEnter:Connect(function()
               	 	v.BackgroundColor3 = Color3.fromRGB(0,47,80)
               	 	v.BorderColor3 = Color3.fromRGB(91,139,168)
               	 	v.BorderSizePixel = 1
            	end)
           		 v.MouseLeave:Connect(function()
               		 v.BackgroundColor3 = color
               	 	v.BorderColor3 = bordercolor
               	 	v.BorderSizePixel = bordersize
           		 end)
           	end
        end
	
	end)
   for i,v in pairs(G2L["1"]:GetDescendants()) do
        if (v:IsA("TextButton") and v.Parent.Parent.Name ~= "Tabs" and v.Parent.Name ~= "Tabs") or (v:IsA("ImageButton")) then
            task.spawn(function()
            	local color = v.BackgroundColor3
            	local bordercolor = v.BorderColor3
            	local bordersize = v.BorderSizePixel
            	v.BackgroundTransparency = 0
            	v.MouseEnter:Connect(function()
               	 	v.BackgroundColor3 = Color3.fromRGB(0,47,80)
               	 	v.BorderColor3 = Color3.fromRGB(91,139,168)
               	 	v.BorderSizePixel = 1
            	end)
           		 v.MouseLeave:Connect(function()
               		 v.BackgroundColor3 = color
               	 	v.BorderColor3 = bordercolor
               	 	v.BorderSizePixel = bordersize
           		 end)
            end)
        end
   end
   
end;
task.spawn(C_93);

return G2L["1"], require;
end)
tab3.newButton("Synapse X [PE]", "Executor script", function()
    -- Instances:

local SynapseXreal = Instance.new("ScreenGui")
local MainFrame = Instance.new("Frame")
local bar = Instance.new("Frame")
local Close = Instance.new("TextButton")
local ImageLabel = Instance.new("ImageLabel")
local security = Instance.new("TextLabel")
local EditorFrame = Instance.new("ScrollingFrame")
local Source = Instance.new("TextBox")
local Comments_ = Instance.new("TextLabel")
local Globals_ = Instance.new("TextLabel")
local Keywords_ = Instance.new("TextLabel")
local RemoteHighlight_ = Instance.new("TextLabel")
local Strings_ = Instance.new("TextLabel")
local Tokens_ = Instance.new("TextLabel")
local Numbers_ = Instance.new("TextLabel")
local Lines = Instance.new("TextLabel")
local title = Instance.new("TextLabel")
local list = Instance.new("Frame")
local execute = Instance.new("TextButton")
local clear = Instance.new("TextButton")
local scripthub = Instance.new("TextButton")
local Attach = Instance.new("TextButton")
local title_2 = Instance.new("ImageLabel")
local scripthub_2 = Instance.new("Frame")
local bar_2 = Instance.new("Frame")
local select = Instance.new("Frame")
local dex = Instance.new("TextButton")
local esp = Instance.new("TextButton")
local spy = Instance.new("TextButton")
local dumper = Instance.new("TextButton")
local desc = Instance.new("Frame")
local descri = Instance.new("TextLabel")
local title_3 = Instance.new("TextLabel")
local execute_2 = Instance.new("TextButton")
local close = Instance.new("TextButton")
local title_4 = Instance.new("ImageLabel")

local scriptselected = "none"
local injected = false

--Properties:

SynapseXreal.Name = "Synapse X (real)"
SynapseXreal.Parent = game.CoreGui
SynapseXreal.ResetOnSpawn = false

MainFrame.Name = "MainFrame"
MainFrame.Parent = SynapseXreal
MainFrame.Active = true
MainFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
MainFrame.BorderSizePixel = 0
MainFrame.Position = UDim2.new(0.0543109924, 0, 0.103222892, 0)
MainFrame.Size = UDim2.new(0, 689, 0, 320)

bar.Name = "bar"
bar.Parent = MainFrame
bar.BackgroundColor3 = Color3.fromRGB(94, 94, 94)
bar.BackgroundTransparency = 0.800
bar.BorderSizePixel = 0
bar.Position = UDim2.new(-0, 0, -0.00296382909, 0)
bar.Size = UDim2.new(0, 689, 0, 25)

Close.Name = "Close"
Close.Parent = bar
Close.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Close.BackgroundTransparency = 1.000
Close.BorderColor3 = Color3.fromRGB(27, 42, 53)
Close.BorderSizePixel = 0
Close.Position = UDim2.new(0.969521046, 0, 0, 0)
Close.Size = UDim2.new(0, 21, 0, 25)
Close.Font = Enum.Font.Arial
Close.Text = "X"
Close.TextColor3 = Color3.fromRGB(255, 255, 255)
Close.TextSize = 14.000
Close.MouseButton1Click:Connect(function()
    SynapseXreal:Destroy()
end)

ImageLabel.Parent = MainFrame
ImageLabel.BackgroundColor3 = Color3.fromRGB(47, 47, 47)
ImageLabel.BorderSizePixel = 0
ImageLabel.Position = UDim2.new(0.0252733715, 0, 0.015625, 27)
ImageLabel.Size = UDim2.new(0, 541, 0, 246)

security.Name = "security"
security.Parent = ImageLabel
security.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
security.Size = UDim2.new(0, 552, 0, 258)
security.Visible = false
security.Font = Enum.Font.SourceSans
security.TextColor3 = Color3.fromRGB(0, 0, 0)
security.TextSize = 14.000

EditorFrame.Name = "EditorFrame"
EditorFrame.Parent = ImageLabel
EditorFrame.BackgroundColor3 = Color3.fromRGB(37, 37, 37)
EditorFrame.BackgroundTransparency = 1.000
EditorFrame.BorderColor3 = Color3.fromRGB(61, 61, 61)
EditorFrame.Size = UDim2.new(1, 0, 1, 0)
EditorFrame.ZIndex = 3
EditorFrame.BottomImage = "rbxassetid://148970562"
EditorFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
EditorFrame.HorizontalScrollBarInset = Enum.ScrollBarInset.ScrollBar
EditorFrame.MidImage = "rbxassetid://148970562"
EditorFrame.ScrollBarThickness = 5
EditorFrame.TopImage = "rbxassetid://148970562"

Source.Name = "Source"
Source.Parent = EditorFrame
Source.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Source.BackgroundTransparency = 1.000
Source.Position = UDim2.new(0, 30, 0, 0)
Source.Size = UDim2.new(0.945652187, 0, 1, 0)
Source.ZIndex = 3
Source.ClearTextOnFocus = false
Source.Font = Enum.Font.Code
Source.MultiLine = true
Source.PlaceholderColor3 = Color3.fromRGB(204, 204, 204)
Source.Text = ""
Source.TextColor3 = Color3.fromRGB(204, 204, 204)
Source.TextSize = 15.000
Source.TextXAlignment = Enum.TextXAlignment.Left
Source.TextYAlignment = Enum.TextYAlignment.Top

Comments_.Name = "Comments_"
Comments_.Parent = Source
Comments_.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Comments_.BackgroundTransparency = 1.000
Comments_.Size = UDim2.new(1, 0, 1, 0)
Comments_.ZIndex = 5
Comments_.Font = Enum.Font.Code
Comments_.Text = ""
Comments_.TextColor3 = Color3.fromRGB(59, 200, 59)
Comments_.TextSize = 15.000
Comments_.TextXAlignment = Enum.TextXAlignment.Left
Comments_.TextYAlignment = Enum.TextYAlignment.Top

Globals_.Name = "Globals_"
Globals_.Parent = Source
Globals_.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Globals_.BackgroundTransparency = 1.000
Globals_.Size = UDim2.new(1, 0, 1, 0)
Globals_.ZIndex = 5
Globals_.Font = Enum.Font.Code
Globals_.Text = ""
Globals_.TextColor3 = Color3.fromRGB(132, 214, 247)
Globals_.TextSize = 15.000
Globals_.TextXAlignment = Enum.TextXAlignment.Left
Globals_.TextYAlignment = Enum.TextYAlignment.Top

Keywords_.Name = "Keywords_"
Keywords_.Parent = Source
Keywords_.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Keywords_.BackgroundTransparency = 1.000
Keywords_.Size = UDim2.new(1, 0, 1, 0)
Keywords_.ZIndex = 5
Keywords_.Font = Enum.Font.Code
Keywords_.Text = ""
Keywords_.TextColor3 = Color3.fromRGB(248, 109, 124)
Keywords_.TextSize = 15.000
Keywords_.TextXAlignment = Enum.TextXAlignment.Left
Keywords_.TextYAlignment = Enum.TextYAlignment.Top

RemoteHighlight_.Name = "RemoteHighlight_"
RemoteHighlight_.Parent = Source
RemoteHighlight_.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
RemoteHighlight_.BackgroundTransparency = 1.000
RemoteHighlight_.Size = UDim2.new(1, 0, 1, 0)
RemoteHighlight_.ZIndex = 5
RemoteHighlight_.Font = Enum.Font.Code
RemoteHighlight_.Text = ""
RemoteHighlight_.TextColor3 = Color3.fromRGB(0, 144, 255)
RemoteHighlight_.TextSize = 15.000
RemoteHighlight_.TextXAlignment = Enum.TextXAlignment.Left
RemoteHighlight_.TextYAlignment = Enum.TextYAlignment.Top

Strings_.Name = "Strings_"
Strings_.Parent = Source
Strings_.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Strings_.BackgroundTransparency = 1.000
Strings_.Size = UDim2.new(1, 0, 1, 0)
Strings_.ZIndex = 5
Strings_.Font = Enum.Font.Code
Strings_.Text = ""
Strings_.TextColor3 = Color3.fromRGB(173, 241, 149)
Strings_.TextSize = 15.000
Strings_.TextXAlignment = Enum.TextXAlignment.Left
Strings_.TextYAlignment = Enum.TextYAlignment.Top

Tokens_.Name = "Tokens_"
Tokens_.Parent = Source
Tokens_.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Tokens_.BackgroundTransparency = 1.000
Tokens_.Size = UDim2.new(1, 0, 1, 0)
Tokens_.ZIndex = 5
Tokens_.Font = Enum.Font.Code
Tokens_.Text = ""
Tokens_.TextColor3 = Color3.fromRGB(255, 255, 255)
Tokens_.TextSize = 15.000
Tokens_.TextXAlignment = Enum.TextXAlignment.Left
Tokens_.TextYAlignment = Enum.TextYAlignment.Top

Numbers_.Name = "Numbers_"
Numbers_.Parent = Source
Numbers_.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Numbers_.BackgroundTransparency = 1.000
Numbers_.Size = UDim2.new(1, 0, 1, 0)
Numbers_.ZIndex = 4
Numbers_.Font = Enum.Font.Code
Numbers_.Text = ""
Numbers_.TextColor3 = Color3.fromRGB(255, 198, 0)
Numbers_.TextSize = 15.000
Numbers_.TextXAlignment = Enum.TextXAlignment.Left
Numbers_.TextYAlignment = Enum.TextYAlignment.Top

Lines.Name = "Lines"
Lines.Parent = EditorFrame
Lines.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Lines.BackgroundTransparency = 1.000
Lines.Size = UDim2.new(0, 30, 1, 0)
Lines.ZIndex = 4
Lines.Font = Enum.Font.Code
Lines.Text = "1"
Lines.TextColor3 = Color3.fromRGB(255, 255, 255)
Lines.TextSize = 15.000
Lines.TextYAlignment = Enum.TextYAlignment.Top

title.Name = "title"
title.Parent = MainFrame
title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
title.BackgroundTransparency = 1.000
title.Position = UDim2.new(0.330062926, 0, 0.00625000056, 0)
title.Size = UDim2.new(0, 200, 0, 22)
title.Font = Enum.Font.SourceSans
title.Text = "Synapse X - vRBX"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.TextSize = 16.000

list.Name = "list"
list.Parent = MainFrame
list.BackgroundColor3 = Color3.fromRGB(53, 53, 53)
list.BorderSizePixel = 0
list.Position = UDim2.new(0.820970535, 0, 0.100000001, 0)
list.Size = UDim2.new(0, 114, 0, 246)

execute.Name = "execute"
execute.Parent = MainFrame
execute.BackgroundColor3 = Color3.fromRGB(104, 104, 104)
execute.BackgroundTransparency = 0.800
execute.BorderSizePixel = 0
execute.Position = UDim2.new(0.0095389355, 0, 0.887499988, 0)
execute.Size = UDim2.new(0, 92, 0, 30)
execute.Font = Enum.Font.Arial
execute.Text = "Execute"
execute.TextColor3 = Color3.fromRGB(255, 255, 255)
execute.TextSize = 14.000
execute.MouseButton1Click:Connect(function()
    if injected == true then
        loadstring(Source.Text)()
    end
    if injected == false then
        title.Text = "Synapse X - vRBX (not injected! press attach)"
    end
end)

clear.Name = "clear"
clear.Parent = MainFrame
clear.BackgroundColor3 = Color3.fromRGB(104, 104, 104)
clear.BackgroundTransparency = 0.800
clear.BorderSizePixel = 0
clear.Position = UDim2.new(0.154146105, 0, 0.887499988, 0)
clear.Size = UDim2.new(0, 84, 0, 30)
clear.Font = Enum.Font.Arial
clear.Text = "Clear"
clear.TextColor3 = Color3.fromRGB(255, 255, 255)
clear.TextSize = 14.000
clear.MouseButton1Click:Connect(function()
    Source.Text = ""
end)

scripthub.Name = "scripthub"
scripthub.Parent = MainFrame
scripthub.BackgroundColor3 = Color3.fromRGB(104, 104, 104)
scripthub.BackgroundTransparency = 0.800
scripthub.BorderSizePixel = 0
scripthub.Position = UDim2.new(0.871768773, 0, 0.887499988, 0)
scripthub.Size = UDim2.new(0, 79, 0, 30)
scripthub.Font = Enum.Font.Arial
scripthub.Text = "Script Hub"
scripthub.TextColor3 = Color3.fromRGB(255, 255, 255)
scripthub.TextSize = 14.000
scripthub.MouseButton1Click:Connect(function()
    scripthub_2.Visible = true
end)

Attach.Name = "Attach"
Attach.Parent = MainFrame
Attach.BackgroundColor3 = Color3.fromRGB(104, 104, 104)
Attach.BackgroundTransparency = 0.800
Attach.BorderSizePixel = 0
Attach.Position = UDim2.new(0.741144657, 0, 0.887499988, 0)
Attach.Size = UDim2.new(0, 84, 0, 30)
Attach.Font = Enum.Font.Arial
Attach.Text = "Attach"
Attach.TextColor3 = Color3.fromRGB(255, 255, 255)
Attach.TextSize = 14.000
Attach.MouseButton1Click:Connect(function()
    print("hi")
    if injected == true then
        title.Text = "Synapse X - vRBX (already injected!)"
        wait(1)
        title.Text = "Synapse X - vRBX"
    end
    if injected == false then
        title.Text = "Synapse X - vRBX (checking...)"
        wait(0.1)
        title.Text = "Synapse X - vRBX (injecting...)"
        wait(1.5)
        title.Text = "Synapse X - vRBX (checking whitelist...)"
        wait(0.8)
        title.Text = "Synapse X - vRBX (scanning...)"
        wait(0.3)
        title.Text = "Synapse X - vRBX (ready!)"
        wait(0.5)
        title.Text = "Synapse X - vRBX"
        injected = true
    end
end)

title_2.Name = "title"
title_2.Parent = MainFrame
title_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
title_2.BackgroundTransparency = 1.000
title_2.Position = UDim2.new(0.00870821718, 0, 0, 0)
title_2.Size = UDim2.new(0, 18, 0, 24)
title_2.ZIndex = 14
title_2.Image = "http://www.roblox.com/asset/?id=7641125882"
title_2.ImageRectSize = Vector2.new(138, 167)

scripthub_2.Name = "scripthub"
scripthub_2.Parent = SynapseXreal
scripthub_2.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
scripthub_2.BorderSizePixel = 0
scripthub_2.Position = UDim2.new(0.433135211, 0, 0.502979755, 0)
scripthub_2.Size = UDim2.new(0, 290, 0, 305)
scripthub_2.Visible = false
scripthub_2.ZIndex = 100

bar_2.Name = "bar"
bar_2.Parent = scripthub_2
bar_2.BackgroundColor3 = Color3.fromRGB(94, 94, 94)
bar_2.BackgroundTransparency = 0.800
bar_2.BorderSizePixel = 0
bar_2.Position = UDim2.new(0, 0, -0.0029638072, 0)
bar_2.Size = UDim2.new(0, 290, 0, 25)

select.Name = "select"
select.Parent = scripthub_2
select.BackgroundColor3 = Color3.fromRGB(21, 21, 21)
select.BorderSizePixel = 0
select.Position = UDim2.new(0.0299979374, 0, 0.104918033, 0)
select.Size = UDim2.new(0, 82, 0, 264)
select.ZIndex = 110

dex.Name = "dex"
dex.Parent = select
dex.BackgroundColor3 = Color3.fromRGB(0, 32, 61)
dex.BackgroundTransparency = 1.000
dex.BorderColor3 = Color3.fromRGB(0, 0, 49)
dex.BorderSizePixel = 0
dex.Position = UDim2.new(0.0121960752, 0, -1.49011612e-08, 0)
dex.Size = UDim2.new(0, 80, 0, 18)
dex.Font = Enum.Font.SourceSans
dex.Text = " Dark Dex"
dex.TextColor3 = Color3.fromRGB(255, 255, 255)
dex.TextSize = 14.000
dex.TextXAlignment = Enum.TextXAlignment.Left
dex.ZIndex = 110
dex.MouseButton1Click:Connect(function()
    scriptselected = "dex"
end)

esp.Name = "esp"
esp.Parent = select
esp.BackgroundColor3 = Color3.fromRGB(0, 32, 61)
esp.BackgroundTransparency = 1.000
esp.BorderColor3 = Color3.fromRGB(0, 0, 49)
esp.BorderSizePixel = 0
esp.Position = UDim2.new(0.0121960752, 0, 0.0681818053, 0)
esp.Size = UDim2.new(0, 80, 0, 18)
esp.Font = Enum.Font.SourceSans
esp.Text = " Unnamed ESP"
esp.TextColor3 = Color3.fromRGB(255, 255, 255)
esp.TextSize = 14.000
esp.TextXAlignment = Enum.TextXAlignment.Left
esp.ZIndex = 110
esp.MouseButton1Click:Connect(function()
    scriptselected = "esp"
end)

spy.Name = "spy"
spy.Parent = select
spy.BackgroundColor3 = Color3.fromRGB(0, 32, 61)
spy.BackgroundTransparency = 1.000
spy.BorderColor3 = Color3.fromRGB(0, 0, 49)
spy.BorderSizePixel = 0
spy.Position = UDim2.new(0.0121960752, 0, 0.136363626, 0)
spy.Size = UDim2.new(0, 80, 0, 18)
spy.Font = Enum.Font.SourceSans
spy.Text = " Remote Spy"
spy.TextColor3 = Color3.fromRGB(255, 255, 255)
spy.TextSize = 14.000
spy.TextXAlignment = Enum.TextXAlignment.Left
spy.ZIndex = 110
spy.MouseButton1Click:Connect(function()
    scriptselected = "spy"
end)

dumper.Name = "dumper"
dumper.Parent = select
dumper.BackgroundColor3 = Color3.fromRGB(0, 32, 61)
dumper.BackgroundTransparency = 1.000
dumper.BorderColor3 = Color3.fromRGB(0, 0, 49)
dumper.BorderSizePixel = 0
dumper.Position = UDim2.new(0.0121960752, 0, 0.204545438, 0)
dumper.Size = UDim2.new(0, 80, 0, 18)
dumper.Font = Enum.Font.SourceSans
dumper.Text = " SaveInstance"
dumper.TextColor3 = Color3.fromRGB(255, 255, 255)
dumper.TextSize = 14.000
dumper.TextXAlignment = Enum.TextXAlignment.Left
dumper.ZIndex = 110
dumper.MouseButton1Click:Connect(function()
    scriptselected = "dumper"
end)

desc.Name = "desc"
desc.Parent = scripthub_2
desc.BackgroundColor3 = Color3.fromRGB(21, 21, 21)
desc.BorderSizePixel = 0
desc.Position = UDim2.new(0.340342641, 0, 0.613114715, 0)
desc.Size = UDim2.new(0, 184, 0, 69)
desc.ZIndex = 110

descri.Name = "descri"
descri.Parent = desc
descri.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
descri.BackgroundTransparency = 1.000
descri.BorderSizePixel = 0
descri.Position = UDim2.new(0.0112334546, 0, 0, 0)
descri.Size = UDim2.new(0, 181, 0, 69)
descri.Font = Enum.Font.SourceSans
descri.Text = ""
descri.TextColor3 = Color3.fromRGB(255, 255, 255)
descri.TextSize = 15.000
descri.TextWrapped = true
descri.TextXAlignment = Enum.TextXAlignment.Left
descri.TextYAlignment = Enum.TextYAlignment.Top
descri.ZIndex = 125

title_3.Name = "title"
title_3.Parent = scripthub_2
title_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
title_3.BackgroundTransparency = 1.000
title_3.Position = UDim2.new(0.161097407, 0, -0.000307376496, 0)
title_3.Size = UDim2.new(0, 200, 0, 22)
title_3.Font = Enum.Font.SourceSans
title_3.Text = "Synapse X - Script Hub"
title_3.TextColor3 = Color3.fromRGB(255, 255, 255)
title_3.TextSize = 16.000
title_3.ZIndex = 110

execute_2.Name = "execute"
execute_2.Parent = scripthub_2
execute_2.BackgroundColor3 = Color3.fromRGB(104, 104, 104)
execute_2.BackgroundTransparency = 0.800
execute_2.BorderSizePixel = 0
execute_2.Position = UDim2.new(0.34057343, 0, 0.871106505, 0)
execute_2.Size = UDim2.new(0, 92, 0, 30)
execute_2.Font = Enum.Font.Arial
execute_2.Text = "Execute"
execute_2.TextColor3 = Color3.fromRGB(255, 255, 255)
execute_2.TextSize = 14.000
execute_2.ZIndex = 110
execute_2.MouseButton1Click:Connect(function()
    if injected == true then
        if scriptselected == "dex" then
            loadstring(game:HttpGet("https://pastebin.com/raw/J8AX35Fg"))()
        end
        if scriptselected == "spy" then
            loadstring(game:HttpGet("https://pastebin.com/raw/u62hTuwR"))()
        end
        if scriptselected == "dumper" then
            saveinstance()
        end
        if scriptselected == "esp" then
            loadstring(game:HttpGet("https://raw.githubusercontent.com/ic3w0lf22/Unnamed-ESP/master/UnnamedESP.lua"))()
        end
        if scriptselected == "none" then
        end
    end
    if injected == false then
        execute_2.Text = "Not Attached!"
        wait(1)
        execute_2.Text = "Execute"
    end
end)

close.Name = "close"
close.Parent = scripthub_2
close.BackgroundColor3 = Color3.fromRGB(104, 104, 104)
close.BackgroundTransparency = 0.800
close.BorderSizePixel = 0
close.Position = UDim2.new(0.685180664, 0, 0.871106505, 0)
close.Size = UDim2.new(0, 84, 0, 30)
close.Font = Enum.Font.Arial
close.Text = "Close"
close.TextColor3 = Color3.fromRGB(255, 255, 255)
close.TextSize = 14.000
close.ZIndex = 110
close.MouseButton1Click:Connect(function()
    scriptselected = "none"
    scripthub_2.Visible = false
end)

title_4.Name = "title"
title_4.Parent = scripthub_2
title_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
title_4.BackgroundTransparency = 1.000
title_4.Position = UDim2.new(0.00870821718, 0, 0, 0)
title_4.Size = UDim2.new(0, 18, 0, 24)
title_4.ZIndex = 110
title_4.Image = "http://www.roblox.com/asset/?id=7641125882"
title_4.ImageRectSize = Vector2.new(138, 167)

-- Scripts:

local function SYHNK_fake_script() -- ImageLabel.LocalScript 
    local script = Instance.new('LocalScript', ImageLabel)
    local lua_keywords = {"and", "break", "do", "else", "elseif", "end", "false", "for", "function", "goto", "if", "in", "local", "nil", "not", "or", "repeat", "return", "then", "true", "until", "while"}
    local global_env = {"getrawmetatable", "game", "workspace", "script", "math", "string", "table", "print", "wait", "BrickColor", "Color3", "next", "pairs", "ipairs", "select", "unpack", "Instance", "Vector2", "Vector3", "CFrame", "Ray", "UDim2", "Enum", "assert", "error", "warn", "tick", "loadstring", "_G", "shared", "getfenv", "setfenv", "newproxy", "setmetatable", "getmetatable", "os", "debug", "pcall", "ypcall", "xpcall", "rawequal", "rawset", "rawget", "tonumber", "tostring", "type", "typeof", "_VERSION", "coroutine", "delay", "require", "spawn", "LoadLibrary", "settings", "stats", "time", "UserSettings", "version", "Axes", "ColorSequence", "Faces", "ColorSequenceKeypoint", "NumberRange", "NumberSequence", "NumberSequenceKeypoint", "gcinfo", "elapsedTime", "collectgarbage", "PhysicalProperties", "Rect", "Region3", "Region3int16", "UDim", "Vector2int16", "Vector3int16"}
    local Source = script.Parent.EditorFrame.Source
    local Lines = Source.Parent.Lines
    local Highlight = function(string, keywords)
        local K = {}
        local S = string
        local Token =
            {
                ["="] = true,
                ["."] = true,
                [","] = true,
                ["("] = true,
                [")"] = true,
                ["["] = true,
                ["]"] = true,
                ["{"] = true,
                ["}"] = true,
                [":"] = true,
                ["*"] = true,
                ["/"] = true,
                ["+"] = true,
                ["-"] = true,
                ["%"] = true,
                [";"] = true,
                ["~"] = true
            }
        for i, v in pairs(keywords) do
            K[v] = true
        end
        S = S:gsub(".", function(c)
            if Token[c] ~= nil then
                return "\32"
            else
                return c
            end
        end)
        S = S:gsub("%S+", function(c)
            if K[c] ~= nil then
                return c
            else
                return (" "):rep(#c)
            end
        end)
        return S
    end
    local hTokens = function(string)
        local Token =
            {
                ["="] = true,
                ["."] = true,
                [","] = true,
                ["("] = true,
                [")"] = true,
                ["["] = true,
                ["]"] = true,
                ["{"] = true,
                ["}"] = true,
                [":"] = true,
                ["*"] = true,
                ["/"] = true,
                ["+"] = true,
                ["-"] = true,
                ["%"] = true,
                [";"] = true,
                ["~"] = true
            }
        local A = ""
        string:gsub(".", function(c)
            if Token[c] ~= nil then
                A = A .. c
            elseif c == "\n" then
                A = A .. "\n"
            elseif c == "\t" then
                A = A .. "\t"
            else
                A = A .. "\32"
            end
        end)
        return A
    end

    local strings = function(string)
        local highlight = ""
        local quote = false
        string:gsub(".", function(c)
            if quote == false and c == "\"" then
                quote = true
            elseif quote == true and c == "\"" then
                quote = false
            end
            if quote == false and c == "\"" then
                highlight = highlight .. "\""
            elseif c == "\n" then
                highlight = highlight .. "\n"
            elseif c == "\t" then
                highlight = highlight .. "\t"
            elseif quote == true then
                highlight = highlight .. c
            elseif quote == false then
                highlight = highlight .. "\32"
            end
        end)
        return highlight
    end
    local comments = function(string)
        local ret = ""
        string:gsub("[^\r\n]+", function(c)
            local comm = false
            local i = 0
            c:gsub(".", function(n)
                i = i + 1
                if c:sub(i, i + 1) == "--" then
                    comm = true
                end
                if comm == true then
                    ret = ret .. n
                else
                    ret = ret .. "\32"
                end
            end)
            ret = ret
        end)
        return ret
    end
    local numbers = function(string)
        local A = ""
        string:gsub(".", function(c)
            if tonumber(c) ~= nil then
                A = A .. c
            elseif c == "\n" then
                A = A .. "\n"
            elseif c == "\t" then
                A = A .. "\t"
            else
                A = A .. "\32"
            end
        end)
        return A
    end
    local highlight_source = function(type)
        if type == "Text" then
            Source.Text = Source.Text:gsub("\13", "")
            Source.Text = Source.Text:gsub("\t", "      ")
            local s = Source.Text
            Source.Keywords_.Text = Highlight(s, lua_keywords)
            Source.Globals_.Text = Highlight(s, global_env)
            Source.RemoteHighlight_.Text = Highlight(s, {"FireServer", "fireServer", "InvokeServer", "invokeServer"})
            Source.Tokens_.Text = hTokens(s)
            Source.Numbers_.Text = numbers(s)
            Source.Strings_.Text = strings(s)
            local lin = 1
            s:gsub("\n", function()
                lin = lin + 1
            end)
            Lines.Text = ""
            for i = 1, lin do
                Lines.Text = Lines.Text .. i .. "\n"
            end
        end
    end
    highlight_source("Text")
    Source.Changed:Connect(highlight_source)
end
coroutine.wrap(SYHNK_fake_script)()
local function AMNA_fake_script() -- MainFrame.Dragging 
    local script = Instance.new('LocalScript', MainFrame)

    local UserInputService = game:GetService("UserInputService")

    local gui = script.Parent

    local dragging
    local dragInput
    local dragStart
    local startPos

    local function update(input)
        local delta = input.Position - dragStart
        gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end

    gui.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = gui.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    gui.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)
end
coroutine.wrap(AMNA_fake_script)()
local function VEUJFP_fake_script() -- scripthub_2.Dragging 
    local script = Instance.new('LocalScript', scripthub_2)

    local UserInputService = game:GetService("UserInputService")

    local gui = script.Parent

    local dragging
    local dragInput
    local dragStart
    local startPos

    local function update(input)
        local delta = input.Position - dragStart
        gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end

    gui.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = gui.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    gui.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)
end
coroutine.wrap(VEUJFP_fake_script)()
while true do
    wait(0.01)
    if scripthub_2.Visible == true then
        if scriptselected == "none" then
            descri.Text = ""
        end
        if scriptselected == "dex" then
            descri.Text = "A version of the popular Dex explorer with patches specifically for Synapse X."
        end
        if scriptselected == "esp" then
            descri.Text = "ESP Made by ic3w0lf using the Drawing API."
        end
        if scriptselected == "spy" then
            descri.Text = "Allows you to view RemoteEvents and RemoteFunctions called."
        end
        if scriptselected == "dumper" then
            descri.Text = "Dumps the place as a .rbxl file in your workspace folder."
        end
    end
end
end)
tab3.newButton("Arceus X", "Executor script", function()
    
local AZY = {};
-- StarterGui.ArceusXV3
AZY["1"] = Instance.new("ScreenGui", game.CoreGui);
AZY["1"]["Name"] = [[ArceusXV3]];
AZY["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;
AZY["1"]["ResetOnSpawn"] = false;

-- StarterGui.ArceusXV3.Welcome
AZY["2"] = Instance.new("Folder", AZY["1"]);
AZY["2"]["Name"] = [[Welcome]];

-- StarterGui.ArceusXV3.Welcome.Frame
AZY["3"] = Instance.new("Frame", AZY["2"]);
AZY["3"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["3"]["BackgroundTransparency"] = 0.699999988079071;
AZY["3"]["Size"] = UDim2.new(100.58300018310547, 0, 10.576000213623047, 0);
AZY["3"]["BorderColor3"] = Color3.fromRGB(28, 43, 54);
AZY["3"]["Position"] = UDim2.new(-0.012608751654624939, 0, -1.0678343772888184, 0);

-- StarterGui.ArceusXV3.Welcome.Frame.UIAspectRatioConstraint
AZY["4"] = Instance.new("UIAspectRatioConstraint", AZY["3"]);
AZY["4"]["AspectRatio"] = 2.0052521228790283;

-- StarterGui.ArceusXV3.Welcome.Welcome
AZY["5"] = Instance.new("Frame", AZY["2"]);
AZY["5"]["BackgroundColor3"] = Color3.fromRGB(52, 52, 52);
AZY["5"]["Size"] = UDim2.new(0.666020393371582, 0, 0.8211921453475952, 0);
AZY["5"]["Position"] = UDim2.new(0.17622511088848114, 0, 0.0894039198756218, 0);
AZY["5"]["Name"] = [[Welcome]];

-- StarterGui.ArceusXV3.Welcome.Welcome.UIAspectRatioConstraint
AZY["6"] = Instance.new("UIAspectRatioConstraint", AZY["5"]);
AZY["6"]["AspectRatio"] = 1.6193960905075073;

-- StarterGui.ArceusXV3.Welcome.Welcome.ScrollingFrame
AZY["7"] = Instance.new("ScrollingFrame", AZY["5"]);
AZY["7"]["Active"] = true;
AZY["7"]["CanvasSize"] = UDim2.new(0, 0, 1.2000000476837158, 0);
AZY["7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["7"]["BackgroundTransparency"] = 1;
AZY["7"]["Size"] = UDim2.new(1.0180450677871704, 0, 1, 0);
AZY["7"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0);
AZY["7"]["BorderColor3"] = Color3.fromRGB(255, 255, 255);
AZY["7"]["ScrollBarThickness"] = 7;

-- StarterGui.ArceusXV3.Welcome.Welcome.ScrollingFrame.Text
AZY["8"] = Instance.new("TextLabel", AZY["7"]);
AZY["8"]["TextWrapped"] = true;
AZY["8"]["TextYAlignment"] = Enum.TextYAlignment.Top;
AZY["8"]["TextScaled"] = true;
AZY["8"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["8"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["8"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["8"]["TextSize"] = 29;
AZY["8"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["8"]["Size"] = UDim2.new(0.8902860283851624, 0, 0.6482642889022827, 0);
AZY["8"]["Text"] = [[Dear User,

We are writing to welcome you as one of you first bete testers of Arceus X!
We are thrilled to have your collaboration and to offer you the oppoturnity
to try out the new features we are developing.

We are confident that your experience and creativity will help us make
Arceus X an even more effective and user-friendly application.
Please feel free to share any feedback and suggestion that can help us further
improve our platform.

Thank you so much your support, and we look forward to working with
you in this exciting journey!

Best regards,
SPDM Team]];
AZY["8"]["Name"] = [[Text]];
AZY["8"]["BackgroundTransparency"] = 1;
AZY["8"]["Position"] = UDim2.new(0.04280221089720726, 0, 0.14032021164894104, 0);

-- StarterGui.ArceusXV3.Welcome.Welcome.ScrollingFrame.Text.LocalScript
AZY["9"] = Instance.new("LocalScript", AZY["8"]);


-- StarterGui.ArceusXV3.Welcome.Welcome.ScrollingFrame.TextButton
AZY["a"] = Instance.new("TextButton", AZY["7"]);
AZY["a"]["TextWrapped"] = true;
AZY["a"]["TextScaled"] = true;
AZY["a"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["a"]["TextSize"] = 24;
AZY["a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["a"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["a"]["Size"] = UDim2.new(0.2372465580701828, 0, 0.10296772420406342, 0);
AZY["a"]["Text"] = [[Get started]];
AZY["a"]["Position"] = UDim2.new(0.3705448806285858, 0, 0.8786289095878601, 0);

-- StarterGui.ArceusXV3.Welcome.Welcome.ScrollingFrame.TextButton.UICorner
AZY["b"] = Instance.new("UICorner", AZY["a"]);
AZY["b"]["CornerRadius"] = UDim.new(0, 12);

-- StarterGui.ArceusXV3.Welcome.Welcome.ScrollingFrame.TextButton.UITextSizeConstraint
AZY["c"] = Instance.new("UITextSizeConstraint", AZY["a"]);
AZY["c"]["MaxTextSize"] = 24;

-- StarterGui.ArceusXV3.Welcome.Welcome.ScrollingFrame.TextButton.LocalScriptNew
AZY["d"] = Instance.new("LocalScript", AZY["a"]);
AZY["d"]["Name"] = [[LocalScriptNew]];

-- StarterGui.ArceusXV3.Welcome.Welcome.ScrollingFrame.Title
AZY["e"] = Instance.new("TextLabel", AZY["7"]);
AZY["e"]["TextWrapped"] = true;
AZY["e"]["TextScaled"] = true;
AZY["e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["e"]["TextSize"] = 45;
AZY["e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["e"]["Size"] = UDim2.new(0.624912440776825, 0, 0.12905988097190857, 0);
AZY["e"]["Text"] = [[Welcome to Arceus X 3.0!]];
AZY["e"]["Name"] = [[Title]];
AZY["e"]["BackgroundTransparency"] = 1;
AZY["e"]["Position"] = UDim2.new(0.1773233860731125, 0, 0.011320043355226517, 0);

-- StarterGui.ArceusXV3.Welcome.Welcome.ScrollingFrame.Title.UITextSizeConstraint
AZY["f"] = Instance.new("UITextSizeConstraint", AZY["e"]);
AZY["f"]["MaxTextSize"] = 45;

-- StarterGui.ArceusXV3.Welcome.Welcome.UICorner
AZY["10"] = Instance.new("UICorner", AZY["5"]);
AZY["10"]["CornerRadius"] = UDim.new(0, 40);

-- StarterGui.ArceusXV3.AnimationIntro
AZY["11"] = Instance.new("Folder", AZY["1"]);
AZY["11"]["Name"] = [[AnimationIntro]];

-- StarterGui.ArceusXV3.AnimationIntro.Background
AZY["12"] = Instance.new("Frame", AZY["11"]);
AZY["12"]["BackgroundColor3"] = Color3.fromRGB(28, 28, 28);
AZY["12"]["Size"] = UDim2.new(0, 1806, 0, 1604);
AZY["12"]["Position"] = UDim2.new(-0.11024535447359085, 0, -0.16887417435646057, 0);
AZY["12"]["Visible"] = false;
AZY["12"]["Name"] = [[Background]];

-- StarterGui.ArceusXV3.AnimationIntro.Frame
AZY["13"] = Instance.new("Frame", AZY["11"]);
AZY["13"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["13"]["Size"] = UDim2.new(0.03313452750444412, 0, 0.06622516363859177, 0);
AZY["13"]["Position"] = UDim2.new(0.48293575644493103, 0, 0.4668874144554138, 0);
AZY["13"]["Visible"] = false;

-- StarterGui.ArceusXV3.AnimationIntro.Frame.UICorner
AZY["14"] = Instance.new("UICorner", AZY["13"]);
AZY["14"]["CornerRadius"] = UDim.new(1, 100);

-- StarterGui.ArceusXV3.AnimationIntro.ImageLabel
AZY["15"] = Instance.new("ImageLabel", AZY["11"]);
AZY["15"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["15"]["ImageTransparency"] = 1;
AZY["15"]["Visible"] = false;
AZY["15"]["Image"] = [[rbxassetid://12564267060]];
AZY["15"]["Size"] = UDim2.new(0.09526176750659943, 0, 0.27649006247520447, 0);
AZY["15"]["BackgroundTransparency"] = 1;
AZY["15"]["Position"] = UDim2.new(0.4423459470272064, 0, 0.36092716455459595, 0);

-- StarterGui.ArceusXV3.AnimationIntro.NameLogo
AZY["16"] = Instance.new("TextLabel", AZY["11"]);
AZY["16"]["TextWrapped"] = true;
AZY["16"]["TextScaled"] = true;
AZY["16"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["16"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["16"]["TextTransparency"] = 1;
AZY["16"]["TextSize"] = 50;
AZY["16"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["16"]["Size"] = UDim2.new(0.13893571496009827, 0, 0.09271523356437683, 0);
AZY["16"]["Text"] = [[Arceus X]];
AZY["16"]["Name"] = [[NameLogo]];
AZY["16"]["Visible"] = false;
AZY["16"]["BackgroundTransparency"] = 1;
AZY["16"]["Position"] = UDim2.new(0.3928734362125397, 0, 0.4523245096206665, 0);

-- StarterGui.ArceusXV3.AnimationIntro.NameLogo.UITextSizeConstraint
AZY["17"] = Instance.new("UITextSizeConstraint", AZY["16"]);
AZY["17"]["MaxTextSize"] = 50;

-- StarterGui.ArceusXV3.MainUI
AZY["18"] = Instance.new("Folder", AZY["1"]);
AZY["18"]["Name"] = [[MainUI]];

-- StarterGui.ArceusXV3.MainUI.MainFrame
AZY["19"] = Instance.new("Frame", AZY["18"]);
AZY["19"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["19"]["BackgroundTransparency"] = 0.44999998807907104;
AZY["19"]["Size"] = UDim2.new(0, 459, 0, 276);
AZY["19"]["Position"] = UDim2.new(0.1498919129371643, 0, 0.12086091935634613, 0);
AZY["19"]["Visible"] = false;
AZY["19"]["Name"] = [[MainFrame]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.UICorner
AZY["1a"] = Instance.new("UICorner", AZY["19"]);
AZY["1a"]["CornerRadius"] = UDim.new(0, 15);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel
AZY["1b"] = Instance.new("Frame", AZY["19"]);
AZY["1b"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["1b"]["BackgroundTransparency"] = 0.550000011920929;
AZY["1b"]["Size"] = UDim2.new(0.9417322874069214, 0, 0.11706378310918808, 0);
AZY["1b"]["Position"] = UDim2.new(0.03099355846643448, 0, 0.0474083386361599, 0);
AZY["1b"]["Name"] = [[Panel]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.UICorner
AZY["1c"] = Instance.new("UICorner", AZY["1b"]);
AZY["1c"]["CornerRadius"] = UDim.new(0, 14);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.Logo
AZY["1d"] = Instance.new("ImageLabel", AZY["1b"]);
AZY["1d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["1d"]["Image"] = [[rbxassetid://12564267060]];
AZY["1d"]["Size"] = UDim2.new(0.05029655620455742, 0, 0.9125484824180603, 0);
AZY["1d"]["Name"] = [[Logo]];
AZY["1d"]["BackgroundTransparency"] = 1;
AZY["1d"]["Position"] = UDim2.new(0.4099465012550354, 0, 0.03155198320746422, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.TextLogo
AZY["1e"] = Instance.new("TextLabel", AZY["1b"]);
AZY["1e"]["TextWrapped"] = true;
AZY["1e"]["TextScaled"] = true;
AZY["1e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["1e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["1e"]["TextSize"] = 85;
AZY["1e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["1e"]["Size"] = UDim2.new(0.1371736377477646, 0, 0.6307170391082764, 0);
AZY["1e"]["Text"] = [[Arceus X]];
AZY["1e"]["Name"] = [[TextLogo]];
AZY["1e"]["BackgroundTransparency"] = 1;
AZY["1e"]["Position"] = UDim2.new(0.4679349362850189, 0, 0.16660596430301666, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.TextLogo.UITextSizeConstraint
AZY["1f"] = Instance.new("UITextSizeConstraint", AZY["1e"]);
AZY["1f"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.Close
AZY["20"] = Instance.new("ImageButton", AZY["1b"]);
AZY["20"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["20"]["Image"] = [[rbxassetid://12566509152]];
AZY["20"]["Size"] = UDim2.new(0.06670181453227997, 0, 1, 0);
AZY["20"]["Name"] = [[Close]];
AZY["20"]["Position"] = UDim2.new(0.9171510338783264, 0, 0, 0);
AZY["20"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.Close.LocalScript
AZY["21"] = Instance.new("LocalScript", AZY["20"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.Expand
AZY["22"] = Instance.new("ImageButton", AZY["1b"]);
AZY["22"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["22"]["Image"] = [[rbxassetid://12566545357]];
AZY["22"]["Size"] = UDim2.new(0.06901533156633377, 0, 1, 0);
AZY["22"]["Name"] = [[Expand]];
AZY["22"]["Position"] = UDim2.new(0.8481356501579285, 0, -0.024522678926587105, 0);
AZY["22"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.Expand.LocalScript
AZY["23"] = Instance.new("LocalScript", AZY["22"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.TimeLeft
AZY["24"] = Instance.new("TextLabel", AZY["1b"]);
AZY["24"]["TextWrapped"] = true;
AZY["24"]["TextScaled"] = true;
AZY["24"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["24"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["24"]["TextSize"] = 35;
AZY["24"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["24"]["Size"] = UDim2.new(0.13600000739097595, 0, 0.38600000739097595, 0);
AZY["24"]["Text"] = [[24h 00m left]];
AZY["24"]["Name"] = [[TimeLeft]];
AZY["24"]["BackgroundTransparency"] = 1;
AZY["24"]["Position"] = UDim2.new(0.07365596294403076, 0, 0.28405851125717163, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.TimeLeft.LocalScript
AZY["25"] = Instance.new("LocalScript", AZY["24"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.Restore
AZY["26"] = Instance.new("TextButton", AZY["1b"]);
AZY["26"]["TextWrapped"] = true;
AZY["26"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["26"]["TextSize"] = 12;
AZY["26"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["26"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["26"]["Size"] = UDim2.new(0.10400000214576721, 0, 0.503000020980835, 0);
AZY["26"]["Name"] = [[Restore]];
AZY["26"]["Text"] = [[Restore]];
AZY["26"]["Position"] = UDim2.new(0.21463949978351593, 0, 0.22850705683231354, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.Restore.UICorner
AZY["27"] = Instance.new("UICorner", AZY["26"]);
AZY["27"]["CornerRadius"] = UDim.new(0, 6);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.Restore.LocalScript
AZY["28"] = Instance.new("LocalScript", AZY["26"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.Icon
AZY["29"] = Instance.new("ImageButton", AZY["1b"]);
AZY["29"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["29"]["Image"] = [[rbxassetid://12584810787]];
AZY["29"]["Size"] = UDim2.new(0.05783621221780777, 0, 0.7737637162208557, 0);
AZY["29"]["Name"] = [[Icon]];
AZY["29"]["Position"] = UDim2.new(0.01600000075995922, 0, 0.09300000220537186, 0);
AZY["29"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.Icon.LocalScript
AZY["2a"] = Instance.new("LocalScript", AZY["29"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs
AZY["2b"] = Instance.new("Folder", AZY["19"]);
AZY["2b"]["Name"] = [[Tabs]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home
AZY["2c"] = Instance.new("Frame", AZY["2b"]);
AZY["2c"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["2c"]["BackgroundTransparency"] = 1;
AZY["2c"]["Size"] = UDim2.new(0.831805408000946, 0, 0.7336452603340149, 0);
AZY["2c"]["Position"] = UDim2.new(0.1409204602241516, 0, 0.18711426854133606, 0);
AZY["2c"]["Name"] = [[Home]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.UserPage
AZY["2d"] = Instance.new("Frame", AZY["2c"]);
AZY["2d"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["2d"]["BackgroundTransparency"] = 0.550000011920929;
AZY["2d"]["Size"] = UDim2.new(0.37270405888557434, 0, 0.2492256611585617, 0);
AZY["2d"]["Position"] = UDim2.new(-0.0007835610886104405, 0, 0.025084324181079865, 0);
AZY["2d"]["Name"] = [[UserPage]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.UserPage.UICorner
AZY["2e"] = Instance.new("UICorner", AZY["2d"]);
AZY["2e"]["CornerRadius"] = UDim.new(0, 15);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.UserPage.ImageLabel
AZY["2f"] = Instance.new("ImageLabel", AZY["2d"]);
AZY["2f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["2f"]["Image"] = [[rbxassetid://12566434374]];
AZY["2f"]["Size"] = UDim2.new(0.3031076192855835, 0, 0.8659517168998718, 0);
AZY["2f"]["BackgroundTransparency"] = 1;
AZY["2f"]["Position"] = UDim2.new(0.22370131313800812, 0, 0.0670241266489029, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.UserPage.TextLabel
AZY["30"] = Instance.new("TextLabel", AZY["2d"]);
AZY["30"]["TextWrapped"] = true;
AZY["30"]["TextScaled"] = true;
AZY["30"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["30"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["30"]["TextSize"] = 25;
AZY["30"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["30"]["Size"] = UDim2.new(0.20524734258651733, 0, 0.3535553812980652, 0);
AZY["30"]["Text"] = [[Hi,]];
AZY["30"]["BackgroundTransparency"] = 1;
AZY["30"]["Position"] = UDim2.new(0.5262826681137085, 0, 0.14745301008224487, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.UserPage.TextLabel
AZY["31"] = Instance.new("TextLabel", AZY["2d"]);
AZY["31"]["TextWrapped"] = true;
AZY["31"]["TextScaled"] = true;
AZY["31"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["31"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["31"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["31"]["TextSize"] = 25;
AZY["31"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["31"]["Size"] = UDim2.new(0.3468869626522064, 0, 0.3007456660270691, 0);
AZY["31"]["Text"] = [[User]];
AZY["31"]["BackgroundTransparency"] = 1;
AZY["31"]["Position"] = UDim2.new(0.5669999122619629, 0, 0.5350000262260437, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.UserPage.TextLabel.UITextSizeConstraint
AZY["32"] = Instance.new("UITextSizeConstraint", AZY["31"]);
AZY["32"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.UserPage.TextLabel.LocalScript
AZY["33"] = Instance.new("LocalScript", AZY["31"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage
AZY["34"] = Instance.new("Frame", AZY["2c"]);
AZY["34"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["34"]["BackgroundTransparency"] = 0.550000011920929;
AZY["34"]["Size"] = UDim2.new(0.374349445104599, 0, 0.7526744604110718, 0);
AZY["34"]["Position"] = UDim2.new(-0.002428855048492551, 0, 0.3016669452190399, 0);
AZY["34"]["Name"] = [[KeySystemPage]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.UICorner
AZY["35"] = Instance.new("UICorner", AZY["34"]);
AZY["35"]["CornerRadius"] = UDim.new(0, 15);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.TextLabel
AZY["36"] = Instance.new("TextLabel", AZY["34"]);
AZY["36"]["TextWrapped"] = true;
AZY["36"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["36"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["36"]["TextSize"] = 16;
AZY["36"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["36"]["Size"] = UDim2.new(0.8114322423934937, 0, 0.15531843900680542, 0);
AZY["36"]["Text"] = [[Key System Status]];
AZY["36"]["BackgroundTransparency"] = 1;
AZY["36"]["Position"] = UDim2.new(0.05482717230916023, 0, 0.06104206293821335, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.TextLabel
AZY["37"] = Instance.new("TextLabel", AZY["34"]);
AZY["37"]["TextWrapped"] = true;
AZY["37"]["TextScaled"] = true;
AZY["37"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["37"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["37"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["37"]["TextSize"] = 35;
AZY["37"]["TextColor3"] = Color3.fromRGB(0, 255, 0);
AZY["37"]["Size"] = UDim2.new(0.30206844210624695, 0, 0.09149397909641266, 0);
AZY["37"]["Text"] = [[Online]];
AZY["37"]["BackgroundTransparency"] = 1;
AZY["37"]["Position"] = UDim2.new(0.08498311042785645, 0, 0.1731228232383728, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.TextLabel
AZY["38"] = Instance.new("TextLabel", AZY["34"]);
AZY["38"]["TextWrapped"] = true;
AZY["38"]["TextScaled"] = true;
AZY["38"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["38"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["38"]["TextSize"] = 35;
AZY["38"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["38"]["Size"] = UDim2.new(0.423105388879776, 0, 0.0994054526090622, 0);
AZY["38"]["Text"] = [[Expires In:]];
AZY["38"]["BackgroundTransparency"] = 1;
AZY["38"]["Position"] = UDim2.new(0.054827168583869934, 0, 0.31500908732414246, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.TimeLeft
AZY["39"] = Instance.new("TextLabel", AZY["34"]);
AZY["39"]["TextWrapped"] = true;
AZY["39"]["TextScaled"] = true;
AZY["39"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["39"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["39"]["TextSize"] = 35;
AZY["39"]["TextColor3"] = Color3.fromRGB(0, 255, 0);
AZY["39"]["Size"] = UDim2.new(0.30206844210624695, 0, 0.0994054526090622, 0);
AZY["39"]["Text"] = [[24h 00m]];
AZY["39"]["Name"] = [[TimeLeft]];
AZY["39"]["BackgroundTransparency"] = 1;
AZY["39"]["Position"] = UDim2.new(0.49440309405326843, 0, 0.31500908732414246, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.TimeLeft.LocalScript
AZY["3a"] = Instance.new("LocalScript", AZY["39"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.Bar
AZY["3b"] = Instance.new("Frame", AZY["34"]);
AZY["3b"]["BackgroundColor3"] = Color3.fromRGB(0, 255, 0);
AZY["3b"]["Size"] = UDim2.new(0.8291789293289185, 0, 0.07132068276405334, 0);
AZY["3b"]["Position"] = UDim2.new(0.05709991604089737, 0, 0.44679027795791626, 0);
AZY["3b"]["Name"] = [[Bar]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.Bar.UICorner
AZY["3c"] = Instance.new("UICorner", AZY["3b"]);
AZY["3c"]["CornerRadius"] = UDim.new(0, 4);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.Bar.TextLabel
AZY["3d"] = Instance.new("TextLabel", AZY["3b"]);
AZY["3d"]["TextWrapped"] = true;
AZY["3d"]["TextScaled"] = true;
AZY["3d"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["3d"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["3d"]["TextTransparency"] = 0.6000000238418579;
AZY["3d"]["TextSize"] = 35;
AZY["3d"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
AZY["3d"]["Size"] = UDim2.new(0.2189580649137497, 0, 0.9389510154724121, 0);
AZY["3d"]["Text"] = [[100%]];
AZY["3d"]["BackgroundTransparency"] = 1;
AZY["3d"]["Position"] = UDim2.new(0.7810419201850891, 0, 0.061042893677949905, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.TextLabel
AZY["3e"] = Instance.new("TextLabel", AZY["34"]);
AZY["3e"]["TextWrapped"] = true;
AZY["3e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["3e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["3e"]["TextSize"] = 12;
AZY["3e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["3e"]["Size"] = UDim2.new(0.5709924697875977, 0, 0.11561357975006104, 0);
AZY["3e"]["Text"] = [[Last activation:]];
AZY["3e"]["BackgroundTransparency"] = 1;
AZY["3e"]["Position"] = UDim2.new(0.05010330677032471, 0, 0.5460530519485474, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.Time
AZY["3f"] = Instance.new("TextLabel", AZY["34"]);
AZY["3f"]["TextWrapped"] = true;
AZY["3f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["3f"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["3f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["3f"]["TextSize"] = 12;
AZY["3f"]["TextColor3"] = Color3.fromRGB(178, 178, 178);
AZY["3f"]["Size"] = UDim2.new(0.6227233409881592, 0, 0.09644854068756104, 0);
AZY["3f"]["Text"] = [[Today, HH:MM AM]];
AZY["3f"]["Name"] = [[Time]];
AZY["3f"]["BackgroundTransparency"] = 1;
AZY["3f"]["Position"] = UDim2.new(0.08199998736381531, 0, 0.6469999551773071, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.Time.LocalScript
AZY["40"] = Instance.new("LocalScript", AZY["3f"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.Restore
AZY["41"] = Instance.new("TextButton", AZY["34"]);
AZY["41"]["TextWrapped"] = true;
AZY["41"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["41"]["TextSize"] = 15;
AZY["41"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["41"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["41"]["Size"] = UDim2.new(0.7855679988861084, 0, 0.17807699739933014, 0);
AZY["41"]["Name"] = [[Restore]];
AZY["41"]["Text"] = [[Restore]];
AZY["41"]["Position"] = UDim2.new(0.10590747743844986, 0, 0.7775270342826843, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.Restore.UICorner
AZY["42"] = Instance.new("UICorner", AZY["41"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.Restore.LocalScript
AZY["43"] = Instance.new("LocalScript", AZY["41"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage
AZY["44"] = Instance.new("Frame", AZY["2c"]);
AZY["44"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["44"]["BackgroundTransparency"] = 0.550000011920929;
AZY["44"]["Size"] = UDim2.new(0.6116291880607605, 0, 1.0292569398880005, 0);
AZY["44"]["Position"] = UDim2.new(0.3883708119392395, 0, 0.025084195658564568, 0);
AZY["44"]["Name"] = [[HaxPage]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.UICorner
AZY["45"] = Instance.new("UICorner", AZY["44"]);
AZY["45"]["CornerRadius"] = UDim.new(0, 15);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.TextLabel
AZY["46"] = Instance.new("TextLabel", AZY["44"]);
AZY["46"]["TextWrapped"] = true;
AZY["46"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["46"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["46"]["TextSize"] = 18;
AZY["46"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["46"]["Size"] = UDim2.new(0.3717169165611267, 0, 0.10439325869083405, 0);
AZY["46"]["Text"] = [[Quick Hacks]];
AZY["46"]["BackgroundTransparency"] = 1;
AZY["46"]["Position"] = UDim2.new(0.01899999938905239, 0, 0.03400000184774399, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Grav
AZY["47"] = Instance.new("BoolValue", AZY["44"]);
AZY["47"]["Name"] = [[Grav]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts
AZY["48"] = Instance.new("Folder", AZY["44"]);
AZY["48"]["Name"] = [[Scripts]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Aimbot
AZY["49"] = Instance.new("TextButton", AZY["48"]);
AZY["49"]["TextWrapped"] = true;
AZY["49"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["49"]["TextSize"] = 11;
AZY["49"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["49"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["49"]["Size"] = UDim2.new(0.2588447332382202, 0, 0.0958060473203659, 0);
AZY["49"]["Name"] = [[Aimbot]];
AZY["49"]["Text"] = [[AimBot]];
AZY["49"]["Position"] = UDim2.new(0.04600000008940697, 0, 0.5989999771118164, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Aimbot.UICorner
AZY["4a"] = Instance.new("UICorner", AZY["49"]);
AZY["4a"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Aimbot.LocalScript
AZY["4b"] = Instance.new("LocalScript", AZY["49"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Btools
AZY["4c"] = Instance.new("TextButton", AZY["48"]);
AZY["4c"]["TextWrapped"] = true;
AZY["4c"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["4c"]["TextSize"] = 11;
AZY["4c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["4c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["4c"]["Size"] = UDim2.new(0.2588447332382202, 0, 0.0958060473203659, 0);
AZY["4c"]["Name"] = [[Btools]];
AZY["4c"]["Text"] = [[Btools]];
AZY["4c"]["Position"] = UDim2.new(0.04600000008940697, 0, 0.4830000102519989, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Btools.UICorner
AZY["4d"] = Instance.new("UICorner", AZY["4c"]);
AZY["4d"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Btools.LocalScript
AZY["4e"] = Instance.new("LocalScript", AZY["4c"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Dex
AZY["4f"] = Instance.new("TextButton", AZY["48"]);
AZY["4f"]["TextWrapped"] = true;
AZY["4f"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["4f"]["TextSize"] = 11;
AZY["4f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["4f"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["4f"]["Size"] = UDim2.new(0.2588447332382202, 0, 0.0958060473203659, 0);
AZY["4f"]["Name"] = [[Dex]];
AZY["4f"]["Text"] = [[DEX Explorer]];
AZY["4f"]["Position"] = UDim2.new(0.04600000008940697, 0, 0.2564218044281006, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Dex.UICorner
AZY["50"] = Instance.new("UICorner", AZY["4f"]);
AZY["50"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Dex.LocalScript
AZY["51"] = Instance.new("LocalScript", AZY["4f"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.FatesESP
AZY["52"] = Instance.new("TextButton", AZY["48"]);
AZY["52"]["TextWrapped"] = true;
AZY["52"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["52"]["TextSize"] = 11;
AZY["52"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["52"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["52"]["Size"] = UDim2.new(0.2588447332382202, 0, 0.0958060473203659, 0);
AZY["52"]["Name"] = [[FatesESP]];
AZY["52"]["Text"] = [[Fates ESP]];
AZY["52"]["Position"] = UDim2.new(0.04600000008940697, 0, 0.3709999918937683, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.FatesESP.UICorner
AZY["53"] = Instance.new("UICorner", AZY["52"]);
AZY["53"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.FatesESP.LocalScript
AZY["54"] = Instance.new("LocalScript", AZY["52"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Fly
AZY["55"] = Instance.new("TextButton", AZY["48"]);
AZY["55"]["TextWrapped"] = true;
AZY["55"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["55"]["TextSize"] = 11;
AZY["55"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["55"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["55"]["Size"] = UDim2.new(0.2588447332382202, 0, 0.0958060473203659, 0);
AZY["55"]["Name"] = [[Fly]];
AZY["55"]["Text"] = [[Fly]];
AZY["55"]["Position"] = UDim2.new(0.04600000008940697, 0, 0.7070000171661377, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Fly.UICorner
AZY["56"] = Instance.new("UICorner", AZY["55"]);
AZY["56"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Fly.LocalScript
AZY["57"] = Instance.new("LocalScript", AZY["55"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.IY
AZY["58"] = Instance.new("TextButton", AZY["48"]);
AZY["58"]["TextWrapped"] = true;
AZY["58"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["58"]["TextSize"] = 11;
AZY["58"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["58"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["58"]["Size"] = UDim2.new(0.2588447332382202, 0, 0.0958060473203659, 0);
AZY["58"]["Name"] = [[IY]];
AZY["58"]["Text"] = [[Infinite Yield]];
AZY["58"]["Position"] = UDim2.new(0.04595530033111572, 0, 0.13954126834869385, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.IY.UICorner
AZY["59"] = Instance.new("UICorner", AZY["58"]);
AZY["59"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.IY.LocalScript
AZY["5a"] = Instance.new("LocalScript", AZY["58"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.PwnHub
AZY["5b"] = Instance.new("TextButton", AZY["48"]);
AZY["5b"]["TextWrapped"] = true;
AZY["5b"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["5b"]["TextSize"] = 11;
AZY["5b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["5b"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["5b"]["Size"] = UDim2.new(0.2588447332382202, 0, 0.0958060473203659, 0);
AZY["5b"]["Name"] = [[PwnHub]];
AZY["5b"]["Text"] = [[Pwner Hub]];
AZY["5b"]["Position"] = UDim2.new(0.04600000008940697, 0, 0.8209999799728394, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.PwnHub.UICorner
AZY["5c"] = Instance.new("UICorner", AZY["5b"]);
AZY["5c"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.PwnHub.LocalScript
AZY["5d"] = Instance.new("LocalScript", AZY["5b"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.TextGrav
AZY["5e"] = Instance.new("TextLabel", AZY["44"]);
AZY["5e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["5e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["5e"]["TextSize"] = 12;
AZY["5e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["5e"]["Size"] = UDim2.new(0, 50, 0, 11);
AZY["5e"]["Text"] = [[Gravity]];
AZY["5e"]["Name"] = [[TextGrav]];
AZY["5e"]["BackgroundTransparency"] = 1;
AZY["5e"]["Position"] = UDim2.new(0.3269999921321869, 0, 0.8930000066757202, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.TextWs
AZY["5f"] = Instance.new("TextLabel", AZY["44"]);
AZY["5f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["5f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["5f"]["TextSize"] = 12;
AZY["5f"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["5f"]["Size"] = UDim2.new(0, 50, 0, 11);
AZY["5f"]["Text"] = [[Speed]];
AZY["5f"]["Name"] = [[TextWs]];
AZY["5f"]["BackgroundTransparency"] = 1;
AZY["5f"]["Position"] = UDim2.new(0.5411151647567749, 0, 0.8930000066757202, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.TextJp
AZY["60"] = Instance.new("TextLabel", AZY["44"]);
AZY["60"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["60"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["60"]["TextSize"] = 12;
AZY["60"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["60"]["Size"] = UDim2.new(0, 50, 0, 11);
AZY["60"]["Text"] = [[Jump]];
AZY["60"]["Name"] = [[TextJp]];
AZY["60"]["BackgroundTransparency"] = 1;
AZY["60"]["Position"] = UDim2.new(0.7466657161712646, 0, 0.8930000066757202, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Ws
AZY["61"] = Instance.new("BoolValue", AZY["44"]);
AZY["61"]["Name"] = [[Ws]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Jp
AZY["62"] = Instance.new("BoolValue", AZY["44"]);
AZY["62"]["Name"] = [[Jp]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.ToggleGrav
AZY["63"] = Instance.new("TextButton", AZY["44"]);
AZY["63"]["BackgroundColor3"] = Color3.fromRGB(146, 0, 0);
AZY["63"]["TextSize"] = 14;
AZY["63"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["63"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
AZY["63"]["Size"] = UDim2.new(0, 15, 0, 15);
AZY["63"]["Name"] = [[ToggleGrav]];
AZY["63"]["Text"] = [[]];
AZY["63"]["Position"] = UDim2.new(0.40253645181655884, 0, 0.801304280757904, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.ToggleGrav.UICorner
AZY["64"] = Instance.new("UICorner", AZY["63"]);
AZY["64"]["CornerRadius"] = UDim.new(100, 100);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.ToggleGrav.LocalScript
AZY["65"] = Instance.new("LocalScript", AZY["63"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.ToggleWs
AZY["66"] = Instance.new("TextButton", AZY["44"]);
AZY["66"]["BackgroundColor3"] = Color3.fromRGB(146, 0, 0);
AZY["66"]["TextSize"] = 14;
AZY["66"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["66"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
AZY["66"]["Size"] = UDim2.new(0, 15, 0, 15);
AZY["66"]["Name"] = [[ToggleWs]];
AZY["66"]["Text"] = [[]];
AZY["66"]["Position"] = UDim2.new(0.6166515946388245, 0, 0.801304280757904, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.ToggleWs.UICorner
AZY["67"] = Instance.new("UICorner", AZY["66"]);
AZY["67"]["CornerRadius"] = UDim.new(100, 100);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.ToggleWs.LocalScript
AZY["68"] = Instance.new("LocalScript", AZY["66"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.ToggleJp
AZY["69"] = Instance.new("TextButton", AZY["44"]);
AZY["69"]["BackgroundColor3"] = Color3.fromRGB(146, 0, 0);
AZY["69"]["TextSize"] = 14;
AZY["69"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["69"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
AZY["69"]["Size"] = UDim2.new(0, 15, 0, 15);
AZY["69"]["Name"] = [[ToggleJp]];
AZY["69"]["Text"] = [[]];
AZY["69"]["Position"] = UDim2.new(0.8222021460533142, 0, 0.801304280757904, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.ToggleJp.UICorner
AZY["6a"] = Instance.new("UICorner", AZY["69"]);
AZY["6a"]["CornerRadius"] = UDim.new(100, 100);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.ToggleJp.LocalScript
AZY["6b"] = Instance.new("LocalScript", AZY["69"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.JpS
AZY["6c"] = Instance.new("ImageButton", AZY["44"]);
AZY["6c"]["Active"] = false;
AZY["6c"]["BorderSizePixel"] = 0;
AZY["6c"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["6c"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["6c"]["SliceScale"] = 0.11999999731779099;
AZY["6c"]["ImageTransparency"] = 1;
AZY["6c"]["BackgroundColor3"] = Color3.fromRGB(22, 22, 22);
AZY["6c"]["ImageColor3"] = Color3.fromRGB(32, 32, 32);
AZY["6c"]["Selectable"] = false;
AZY["6c"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
AZY["6c"]["Image"] = [[rbxassetid://3570695787]];
AZY["6c"]["Size"] = UDim2.new(0, 119, 0, 31);
AZY["6c"]["Name"] = [[JpS]];
AZY["6c"]["Rotation"] = -90;
AZY["6c"]["Position"] = UDim2.new(0.8600000143051147, 0, 0.4399999976158142, 0);
AZY["6c"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.JpS.SliderButton
AZY["6d"] = Instance.new("ImageLabel", AZY["6c"]);
AZY["6d"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["6d"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["6d"]["BackgroundColor3"] = Color3.fromRGB(71, 71, 71);
AZY["6d"]["ImageColor3"] = Color3.fromRGB(146, 0, 0);
AZY["6d"]["SliceScale"] = 0.11999999731779099;
AZY["6d"]["Selectable"] = true;
AZY["6d"]["Image"] = [[rbxassetid://3570695787]];
AZY["6d"]["Size"] = UDim2.new(0, 25, 1, 0);
AZY["6d"]["Active"] = true;
AZY["6d"]["Name"] = [[SliderButton]];
AZY["6d"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.JpS.SliderButton.LocalScript
AZY["6e"] = Instance.new("LocalScript", AZY["6d"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.JpS.Border
AZY["6f"] = Instance.new("ImageLabel", AZY["6c"]);
AZY["6f"]["ZIndex"] = -1;
AZY["6f"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["6f"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["6f"]["BackgroundColor3"] = Color3.fromRGB(62, 62, 62);
AZY["6f"]["ImageColor3"] = Color3.fromRGB(71, 71, 71);
AZY["6f"]["SliceScale"] = 0.23999999463558197;
AZY["6f"]["ImageTransparency"] = 1;
AZY["6f"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
AZY["6f"]["Image"] = [[rbxassetid://3570695787]];
AZY["6f"]["Size"] = UDim2.new(1, 12, 1, 12);
AZY["6f"]["Name"] = [[Border]];
AZY["6f"]["BackgroundTransparency"] = 0.6000000238418579;
AZY["6f"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.JpS.Border.UICorner
AZY["70"] = Instance.new("UICorner", AZY["6f"]);
AZY["70"]["CornerRadius"] = UDim.new(0, 12);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.JpS.StripedPattern
AZY["71"] = Instance.new("ImageLabel", AZY["6c"]);
AZY["71"]["BorderSizePixel"] = 0;
AZY["71"]["ScaleType"] = Enum.ScaleType.Tile;
AZY["71"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["71"]["ImageColor3"] = Color3.fromRGB(32, 32, 32);
AZY["71"]["ImageTransparency"] = 1;
AZY["71"]["AnchorPoint"] = Vector2.new(0.5, 0);
AZY["71"]["Image"] = [[rbxassetid://4925116997]];
AZY["71"]["TileSize"] = UDim2.new(0, 25, 1, 0);
AZY["71"]["Size"] = UDim2.new(1, -25, 1, 0);
AZY["71"]["Name"] = [[StripedPattern]];
AZY["71"]["BackgroundTransparency"] = 1;
AZY["71"]["Position"] = UDim2.new(0.5, 0, 0, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.JpS.StripedPattern.UIGradient
AZY["72"] = Instance.new("UIGradient", AZY["71"]);
AZY["72"]["Rotation"] = 90;
AZY["72"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(0, 0, 0))};

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.JpS.ImageLabel
AZY["73"] = Instance.new("ImageLabel", AZY["6c"]);
AZY["73"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["73"]["Image"] = [[rbxassetid://12582573514]];
AZY["73"]["Size"] = UDim2.new(0, 35, 0, 35);
AZY["73"]["Rotation"] = 90;
AZY["73"]["BackgroundTransparency"] = 1;
AZY["73"]["Position"] = UDim2.new(-0.017000000923871994, 0, -0.10000000149011612, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.JpS.TextLabel
AZY["74"] = Instance.new("TextBox", AZY["6c"]);
AZY["74"]["ZIndex"] = 2;
AZY["74"]["TextSize"] = 13;
AZY["74"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["74"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["74"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["74"]["AnchorPoint"] = Vector2.new(1, 0);
AZY["74"]["BackgroundTransparency"] = 1;
AZY["74"]["Size"] = UDim2.new(0, 50, 1, 0);
AZY["74"]["Text"] = [[0%]];
AZY["74"]["Position"] = UDim2.new(0, 137, 0, 0);
AZY["74"]["Rotation"] = 90;
AZY["74"]["Name"] = [[TextLabel]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.WsS
AZY["75"] = Instance.new("ImageButton", AZY["44"]);
AZY["75"]["Active"] = false;
AZY["75"]["BorderSizePixel"] = 0;
AZY["75"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["75"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["75"]["SliceScale"] = 0.11999999731779099;
AZY["75"]["ImageTransparency"] = 1;
AZY["75"]["BackgroundColor3"] = Color3.fromRGB(22, 22, 22);
AZY["75"]["ImageColor3"] = Color3.fromRGB(32, 32, 32);
AZY["75"]["Selectable"] = false;
AZY["75"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
AZY["75"]["Image"] = [[rbxassetid://3570695787]];
AZY["75"]["Size"] = UDim2.new(0, 119, 0, 31);
AZY["75"]["Name"] = [[WsS]];
AZY["75"]["Rotation"] = -90;
AZY["75"]["Position"] = UDim2.new(0.6499999761581421, 0, 0.4399999976158142, 0);
AZY["75"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.WsS.SliderButton
AZY["76"] = Instance.new("ImageLabel", AZY["75"]);
AZY["76"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["76"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["76"]["BackgroundColor3"] = Color3.fromRGB(71, 71, 71);
AZY["76"]["ImageColor3"] = Color3.fromRGB(146, 0, 0);
AZY["76"]["SliceScale"] = 0.11999999731779099;
AZY["76"]["Selectable"] = true;
AZY["76"]["Image"] = [[rbxassetid://3570695787]];
AZY["76"]["Size"] = UDim2.new(0, 25, 1, 0);
AZY["76"]["Active"] = true;
AZY["76"]["Name"] = [[SliderButton]];
AZY["76"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.WsS.SliderButton.LocalScript
AZY["77"] = Instance.new("LocalScript", AZY["76"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.WsS.Border
AZY["78"] = Instance.new("ImageLabel", AZY["75"]);
AZY["78"]["ZIndex"] = -1;
AZY["78"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["78"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["78"]["BackgroundColor3"] = Color3.fromRGB(62, 62, 62);
AZY["78"]["ImageColor3"] = Color3.fromRGB(71, 71, 71);
AZY["78"]["SliceScale"] = 0.23999999463558197;
AZY["78"]["ImageTransparency"] = 1;
AZY["78"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
AZY["78"]["Image"] = [[rbxassetid://3570695787]];
AZY["78"]["Size"] = UDim2.new(1, 12, 1, 12);
AZY["78"]["Name"] = [[Border]];
AZY["78"]["BackgroundTransparency"] = 0.6000000238418579;
AZY["78"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.WsS.Border.UICorner
AZY["79"] = Instance.new("UICorner", AZY["78"]);
AZY["79"]["CornerRadius"] = UDim.new(0, 12);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.WsS.StripedPattern
AZY["7a"] = Instance.new("ImageLabel", AZY["75"]);
AZY["7a"]["BorderSizePixel"] = 0;
AZY["7a"]["ScaleType"] = Enum.ScaleType.Tile;
AZY["7a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["7a"]["ImageColor3"] = Color3.fromRGB(32, 32, 32);
AZY["7a"]["ImageTransparency"] = 1;
AZY["7a"]["AnchorPoint"] = Vector2.new(0.5, 0);
AZY["7a"]["Image"] = [[rbxassetid://4925116997]];
AZY["7a"]["TileSize"] = UDim2.new(0, 25, 1, 0);
AZY["7a"]["Size"] = UDim2.new(1, -25, 1, 0);
AZY["7a"]["Name"] = [[StripedPattern]];
AZY["7a"]["BackgroundTransparency"] = 1;
AZY["7a"]["Position"] = UDim2.new(0.5, 0, 0, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.WsS.StripedPattern.UIGradient
AZY["7b"] = Instance.new("UIGradient", AZY["7a"]);
AZY["7b"]["Rotation"] = 90;
AZY["7b"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(0, 0, 0))};

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.WsS.ImageLabel
AZY["7c"] = Instance.new("ImageLabel", AZY["75"]);
AZY["7c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["7c"]["Image"] = [[rbxassetid://12572149271]];
AZY["7c"]["Size"] = UDim2.new(0, 35, 0, 35);
AZY["7c"]["Rotation"] = 90;
AZY["7c"]["BackgroundTransparency"] = 1;
AZY["7c"]["Position"] = UDim2.new(-0.017000000923871994, 0, -0.10000000149011612, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.WsS.TextLabel
AZY["7d"] = Instance.new("TextBox", AZY["75"]);
AZY["7d"]["ZIndex"] = 2;
AZY["7d"]["TextSize"] = 13;
AZY["7d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["7d"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["7d"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["7d"]["AnchorPoint"] = Vector2.new(1, 0);
AZY["7d"]["BackgroundTransparency"] = 1;
AZY["7d"]["Size"] = UDim2.new(0, 50, 1, 0);
AZY["7d"]["Text"] = [[0%]];
AZY["7d"]["Position"] = UDim2.new(0, 137, 0, 0);
AZY["7d"]["Rotation"] = 90;
AZY["7d"]["Name"] = [[TextLabel]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.GravS
AZY["7e"] = Instance.new("ImageButton", AZY["44"]);
AZY["7e"]["Active"] = false;
AZY["7e"]["BorderSizePixel"] = 0;
AZY["7e"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["7e"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["7e"]["SliceScale"] = 0.11999999731779099;
AZY["7e"]["ImageTransparency"] = 1;
AZY["7e"]["BackgroundColor3"] = Color3.fromRGB(22, 22, 22);
AZY["7e"]["ImageColor3"] = Color3.fromRGB(32, 32, 32);
AZY["7e"]["Selectable"] = false;
AZY["7e"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
AZY["7e"]["Image"] = [[rbxassetid://3570695787]];
AZY["7e"]["Size"] = UDim2.new(0, 119, 0, 31);
AZY["7e"]["Name"] = [[GravS]];
AZY["7e"]["Rotation"] = -90;
AZY["7e"]["Position"] = UDim2.new(0.4359999895095825, 0, 0.4399999976158142, 0);
AZY["7e"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.GravS.SliderButton
AZY["7f"] = Instance.new("ImageLabel", AZY["7e"]);
AZY["7f"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["7f"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["7f"]["BackgroundColor3"] = Color3.fromRGB(71, 71, 71);
AZY["7f"]["ImageColor3"] = Color3.fromRGB(146, 0, 0);
AZY["7f"]["SliceScale"] = 0.11999999731779099;
AZY["7f"]["Selectable"] = true;
AZY["7f"]["Image"] = [[rbxassetid://3570695787]];
AZY["7f"]["Size"] = UDim2.new(0, 25, 1, 0);
AZY["7f"]["Active"] = true;
AZY["7f"]["Name"] = [[SliderButton]];
AZY["7f"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.GravS.SliderButton.LocalScript
AZY["80"] = Instance.new("LocalScript", AZY["7f"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.GravS.Border
AZY["81"] = Instance.new("ImageLabel", AZY["7e"]);
AZY["81"]["ZIndex"] = -1;
AZY["81"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["81"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["81"]["BackgroundColor3"] = Color3.fromRGB(62, 62, 62);
AZY["81"]["ImageColor3"] = Color3.fromRGB(71, 71, 71);
AZY["81"]["SliceScale"] = 0.23999999463558197;
AZY["81"]["ImageTransparency"] = 1;
AZY["81"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
AZY["81"]["Image"] = [[rbxassetid://3570695787]];
AZY["81"]["Size"] = UDim2.new(1, 12, 1, 12);
AZY["81"]["Name"] = [[Border]];
AZY["81"]["BackgroundTransparency"] = 0.6000000238418579;
AZY["81"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.GravS.Border.UICorner
AZY["82"] = Instance.new("UICorner", AZY["81"]);
AZY["82"]["CornerRadius"] = UDim.new(0, 12);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.GravS.StripedPattern
AZY["83"] = Instance.new("ImageLabel", AZY["7e"]);
AZY["83"]["BorderSizePixel"] = 0;
AZY["83"]["ScaleType"] = Enum.ScaleType.Tile;
AZY["83"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["83"]["ImageColor3"] = Color3.fromRGB(32, 32, 32);
AZY["83"]["ImageTransparency"] = 1;
AZY["83"]["AnchorPoint"] = Vector2.new(0.5, 0);
AZY["83"]["Image"] = [[rbxassetid://4925116997]];
AZY["83"]["TileSize"] = UDim2.new(0, 25, 1, 0);
AZY["83"]["Size"] = UDim2.new(1, -25, 1, 0);
AZY["83"]["Name"] = [[StripedPattern]];
AZY["83"]["BackgroundTransparency"] = 1;
AZY["83"]["Position"] = UDim2.new(0.5, 0, 0, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.GravS.StripedPattern.UIGradient
AZY["84"] = Instance.new("UIGradient", AZY["83"]);
AZY["84"]["Rotation"] = 90;
AZY["84"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(0, 0, 0))};

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.GravS.ImageLabel
AZY["85"] = Instance.new("ImageLabel", AZY["7e"]);
AZY["85"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["85"]["Image"] = [[rbxassetid://12582575947]];
AZY["85"]["Size"] = UDim2.new(0, 35, 0, 35);
AZY["85"]["Rotation"] = 90;
AZY["85"]["BackgroundTransparency"] = 1;
AZY["85"]["Position"] = UDim2.new(-0.017000000923871994, 0, -0.10000000149011612, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.GravS.TextLabel
AZY["86"] = Instance.new("TextBox", AZY["7e"]);
AZY["86"]["ZIndex"] = 2;
AZY["86"]["TextSize"] = 13;
AZY["86"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["86"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["86"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["86"]["AnchorPoint"] = Vector2.new(1, 0);
AZY["86"]["BackgroundTransparency"] = 1;
AZY["86"]["Size"] = UDim2.new(0, 50, 1, 0);
AZY["86"]["Text"] = [[0%]];
AZY["86"]["Position"] = UDim2.new(0, 137, 0, 0);
AZY["86"]["Rotation"] = 90;
AZY["86"]["Name"] = [[TextLabel]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs
AZY["87"] = Instance.new("Frame", AZY["2b"]);
AZY["87"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["87"]["BackgroundTransparency"] = 1;
AZY["87"]["Size"] = UDim2.new(0.831805408000946, 0, 0.7735126614570618, 0);
AZY["87"]["Position"] = UDim2.new(0.1409205049276352, 0, 0.18711429834365845, 0);
AZY["87"]["Visible"] = false;
AZY["87"]["Name"] = [[Changelogs]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.TitlePage
AZY["88"] = Instance.new("Frame", AZY["87"]);
AZY["88"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["88"]["BackgroundTransparency"] = 0.550000011920929;
AZY["88"]["Size"] = UDim2.new(0.47281256318092346, 0, 0.2235966920852661, 0);
AZY["88"]["Position"] = UDim2.new(0.0059703318402171135, 0, 0.020400146022439003, 0);
AZY["88"]["Name"] = [[TitlePage]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.TitlePage.UICorner
AZY["89"] = Instance.new("UICorner", AZY["88"]);
AZY["89"]["CornerRadius"] = UDim.new(0, 15);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.TitlePage.ImageLabel
AZY["8a"] = Instance.new("ImageLabel", AZY["88"]);
AZY["8a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["8a"]["Image"] = [[rbxassetid://12585006598]];
AZY["8a"]["Size"] = UDim2.new(0, 48, 0, 48);
AZY["8a"]["BackgroundTransparency"] = 1;
AZY["8a"]["Position"] = UDim2.new(0.16064772009849548, 0, -0.020948588848114014, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.TitlePage.TextLogo
AZY["8b"] = Instance.new("TextLabel", AZY["88"]);
AZY["8b"]["TextWrapped"] = true;
AZY["8b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["8b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["8b"]["TextSize"] = 17;
AZY["8b"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["8b"]["Size"] = UDim2.new(0.48227599263191223, 0, 0.442178338766098, 0);
AZY["8b"]["Text"] = [[SPDM Team]];
AZY["8b"]["Name"] = [[TextLogo]];
AZY["8b"]["BackgroundTransparency"] = 1;
AZY["8b"]["Position"] = UDim2.new(0.3840000033378601, 0, 0.2709999978542328, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.TitlePage.TextLogo.UITextSizeConstraint
AZY["8c"] = Instance.new("UITextSizeConstraint", AZY["8b"]);
AZY["8c"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits
AZY["8d"] = Instance.new("Frame", AZY["87"]);
AZY["8d"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["8d"]["BackgroundTransparency"] = 0.550000011920929;
AZY["8d"]["Size"] = UDim2.new(0.47281256318092346, 0, 0.7172916531562805, 0);
AZY["8d"]["Position"] = UDim2.new(0.0059703318402171135, 0, 0.28270816802978516, 0);
AZY["8d"]["Name"] = [[Credits]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.UICorner
AZY["8e"] = Instance.new("UICorner", AZY["8d"]);
AZY["8e"]["CornerRadius"] = UDim.new(0, 15);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.Title
AZY["8f"] = Instance.new("TextLabel", AZY["8d"]);
AZY["8f"]["TextWrapped"] = true;
AZY["8f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["8f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["8f"]["TextSize"] = 17;
AZY["8f"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["8f"]["Size"] = UDim2.new(0.32700005173683167, 0, 0.14513146877288818, 0);
AZY["8f"]["Text"] = [[About us]];
AZY["8f"]["Name"] = [[Title]];
AZY["8f"]["BackgroundTransparency"] = 1;
AZY["8f"]["Position"] = UDim2.new(0.056999966502189636, 0, 0.048999954015016556, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.Title.UITextSizeConstraint
AZY["90"] = Instance.new("UITextSizeConstraint", AZY["8f"]);
AZY["90"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame
AZY["91"] = Instance.new("ScrollingFrame", AZY["8d"]);
AZY["91"]["Active"] = true;
AZY["91"]["CanvasSize"] = UDim2.new(0, 0, 1.5, 0);
AZY["91"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["91"]["BackgroundTransparency"] = 1;
AZY["91"]["Size"] = UDim2.new(0, 175, 0, 110);
AZY["91"]["ScrollBarImageColor3"] = Color3.fromRGB(255, 0, 14);
AZY["91"]["BorderColor3"] = Color3.fromRGB(54, 0, 2);
AZY["91"]["ScrollBarThickness"] = 5;
AZY["91"]["Position"] = UDim2.new(-4.226361483006258e-08, 0, 0.20896700024604797, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person
AZY["92"] = Instance.new("Frame", AZY["91"]);
AZY["92"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["92"]["BackgroundTransparency"] = 1;
AZY["92"]["Size"] = UDim2.new(0, 144, 0, 44);
AZY["92"]["Position"] = UDim2.new(0.11400000005960464, 0, 0, 0);
AZY["92"]["Name"] = [[Person]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.ImageLabel
AZY["93"] = Instance.new("ImageLabel", AZY["92"]);
AZY["93"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["93"]["Image"] = [[rbxassetid://12585390334]];
AZY["93"]["Size"] = UDim2.new(0, 41, 0, 41);
AZY["93"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.TextLogo
AZY["94"] = Instance.new("TextLabel", AZY["92"]);
AZY["94"]["TextWrapped"] = true;
AZY["94"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["94"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["94"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["94"]["TextSize"] = 13;
AZY["94"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["94"]["Size"] = UDim2.new(0.6571568250656128, 0, 0.37654438614845276, 0);
AZY["94"]["Text"] = [[Chillz]];
AZY["94"]["Name"] = [[TextLogo]];
AZY["94"]["BackgroundTransparency"] = 1;
AZY["94"]["Position"] = UDim2.new(0.34299999475479126, 0, 0.16500000655651093, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.TextLogo.UITextSizeConstraint
AZY["95"] = Instance.new("UITextSizeConstraint", AZY["94"]);
AZY["95"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.Desc
AZY["96"] = Instance.new("TextLabel", AZY["92"]);
AZY["96"]["TextWrapped"] = true;
AZY["96"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["96"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["96"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["96"]["TextSize"] = 11;
AZY["96"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["96"]["Size"] = UDim2.new(0.657156765460968, 0, 0.3310898244380951, 0);
AZY["96"]["Text"] = [[UI Everything]];
AZY["96"]["Name"] = [[Desc]];
AZY["96"]["BackgroundTransparency"] = 1;
AZY["96"]["Position"] = UDim2.new(0.34299999475479126, 0, 0.4300000071525574, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.Desc.UITextSizeConstraint
AZY["97"] = Instance.new("UITextSizeConstraint", AZY["96"]);
AZY["97"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person
AZY["98"] = Instance.new("Frame", AZY["91"]);
AZY["98"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["98"]["BackgroundTransparency"] = 1;
AZY["98"]["Size"] = UDim2.new(0, 144, 0, 44);
AZY["98"]["Position"] = UDim2.new(0.11400000005960464, 0, 0.19155307114124298, 0);
AZY["98"]["Name"] = [[Person]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.ImageLabel
AZY["99"] = Instance.new("ImageLabel", AZY["98"]);
AZY["99"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["99"]["Image"] = [[rbxassetid://12585434446]];
AZY["99"]["Size"] = UDim2.new(0, 41, 0, 41);
AZY["99"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.TextLogo
AZY["9a"] = Instance.new("TextLabel", AZY["98"]);
AZY["9a"]["TextWrapped"] = true;
AZY["9a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["9a"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["9a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["9a"]["TextSize"] = 13;
AZY["9a"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["9a"]["Size"] = UDim2.new(0.6571568250656128, 0, 0.37654438614845276, 0);
AZY["9a"]["Text"] = [[Ash01#0947]];
AZY["9a"]["Name"] = [[TextLogo]];
AZY["9a"]["BackgroundTransparency"] = 1;
AZY["9a"]["Position"] = UDim2.new(0.34299999475479126, 0, 0.16500000655651093, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.TextLogo.UITextSizeConstraint
AZY["9b"] = Instance.new("UITextSizeConstraint", AZY["9a"]);
AZY["9b"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.Desc
AZY["9c"] = Instance.new("TextLabel", AZY["98"]);
AZY["9c"]["TextWrapped"] = true;
AZY["9c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["9c"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["9c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["9c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["9c"]["Size"] = UDim2.new(0.657156765460968, 0, 0.3310898244380951, 0);
AZY["9c"]["Text"] = [[Pwner Hub Owner / Creator]];
AZY["9c"]["Name"] = [[Desc]];
AZY["9c"]["BackgroundTransparency"] = 1;
AZY["9c"]["Position"] = UDim2.new(0.34299999475479126, 0, 0.4300000071525574, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.Desc.UITextSizeConstraint
AZY["9d"] = Instance.new("UITextSizeConstraint", AZY["9c"]);
AZY["9d"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person
AZY["9e"] = Instance.new("Frame", AZY["91"]);
AZY["9e"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["9e"]["BackgroundTransparency"] = 1;
AZY["9e"]["Size"] = UDim2.new(0, 144, 0, 44);
AZY["9e"]["Position"] = UDim2.new(0.11400000005960464, 0, 0.38310614228248596, 0);
AZY["9e"]["Name"] = [[Person]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.ImageLabel
AZY["9f"] = Instance.new("ImageLabel", AZY["9e"]);
AZY["9f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["9f"]["Image"] = [[http://www.roblox.com/asset/?id=12642988505]];
AZY["9f"]["Size"] = UDim2.new(0, 41, 0, 41);
AZY["9f"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.TextLogo
AZY["a0"] = Instance.new("TextLabel", AZY["9e"]);
AZY["a0"]["TextWrapped"] = true;
AZY["a0"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["a0"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["a0"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["a0"]["TextSize"] = 13;
AZY["a0"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["a0"]["Size"] = UDim2.new(0.6571568250656128, 0, 0.37654438614845276, 0);
AZY["a0"]["Text"] = [[Bread!]];
AZY["a0"]["Name"] = [[TextLogo]];
AZY["a0"]["BackgroundTransparency"] = 1;
AZY["a0"]["Position"] = UDim2.new(0.34299999475479126, 0, 0.16500000655651093, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.TextLogo.UITextSizeConstraint
AZY["a1"] = Instance.new("UITextSizeConstraint", AZY["a0"]);
AZY["a1"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.Desc
AZY["a2"] = Instance.new("TextLabel", AZY["9e"]);
AZY["a2"]["TextWrapped"] = true;
AZY["a2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["a2"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["a2"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["a2"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["a2"]["Size"] = UDim2.new(0.657156765460968, 0, 0.3310898244380951, 0);
AZY["a2"]["Text"] = [[UI Slider Fixes And Textbox]];
AZY["a2"]["Name"] = [[Desc]];
AZY["a2"]["BackgroundTransparency"] = 1;
AZY["a2"]["Position"] = UDim2.new(0.34299999475479126, 0, 0.4300000071525574, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Credits.ScrollingFrame.Person.Desc.UITextSizeConstraint
AZY["a3"] = Instance.new("UITextSizeConstraint", AZY["a2"]);
AZY["a3"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog
AZY["a4"] = Instance.new("Frame", AZY["87"]);
AZY["a4"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["a4"]["BackgroundTransparency"] = 0.550000011920929;
AZY["a4"]["Size"] = UDim2.new(0.47281256318092346, 0, 0.7172916531562805, 0);
AZY["a4"]["Position"] = UDim2.new(0.5088531970977783, 0, 0.020400196313858032, 0);
AZY["a4"]["Name"] = [[Changelog]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.UICorner
AZY["a5"] = Instance.new("UICorner", AZY["a4"]);
AZY["a5"]["CornerRadius"] = UDim.new(0, 15);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.TextLogo
AZY["a6"] = Instance.new("TextLabel", AZY["a4"]);
AZY["a6"]["TextWrapped"] = true;
AZY["a6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["a6"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["a6"]["TextSize"] = 19;
AZY["a6"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["a6"]["Size"] = UDim2.new(0.39918234944343567, 0, 0.14513146877288818, 0);
AZY["a6"]["Text"] = [[Changelog]];
AZY["a6"]["Name"] = [[TextLogo]];
AZY["a6"]["BackgroundTransparency"] = 1;
AZY["a6"]["Position"] = UDim2.new(0.05700000002980232, 0, 0.04899999871850014, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.TextLogo.UITextSizeConstraint
AZY["a7"] = Instance.new("UITextSizeConstraint", AZY["a6"]);
AZY["a7"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.Ver
AZY["a8"] = Instance.new("TextLabel", AZY["a4"]);
AZY["a8"]["TextWrapped"] = true;
AZY["a8"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["a8"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["a8"]["TextSize"] = 13;
AZY["a8"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["a8"]["Size"] = UDim2.new(0.240515798330307, 0, 0.14513146877288818, 0);
AZY["a8"]["Text"] = [[v3.0.1]];
AZY["a8"]["Name"] = [[Ver]];
AZY["a8"]["BackgroundTransparency"] = 1;
AZY["a8"]["Position"] = UDim2.new(0.6331158876419067, 0, 0.04900005832314491, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.Ver.UITextSizeConstraint
AZY["a9"] = Instance.new("UITextSizeConstraint", AZY["a8"]);
AZY["a9"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.Ver
AZY["aa"] = Instance.new("TextLabel", AZY["a4"]);
AZY["aa"]["TextWrapped"] = true;
AZY["aa"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["aa"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["aa"]["TextSize"] = 9;
AZY["aa"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["aa"]["Size"] = UDim2.new(0.0997123271226883, 0, 0.08936085551977158, 0);
AZY["aa"]["Text"] = [[beta]];
AZY["aa"]["Name"] = [[Ver]];
AZY["aa"]["BackgroundTransparency"] = 1;
AZY["aa"]["Position"] = UDim2.new(0.8399999737739563, 0, 0.0820000022649765, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.Ver.UITextSizeConstraint
AZY["ab"] = Instance.new("UITextSizeConstraint", AZY["aa"]);
AZY["ab"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame
AZY["ac"] = Instance.new("ScrollingFrame", AZY["a4"]);
AZY["ac"]["Active"] = true;
AZY["ac"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["ac"]["BackgroundTransparency"] = 1;
AZY["ac"]["Size"] = UDim2.new(0, 165, 0, 113);
AZY["ac"]["ScrollBarImageColor3"] = Color3.fromRGB(255, 0, 14);
AZY["ac"]["BorderColor3"] = Color3.fromRGB(54, 0, 2);
AZY["ac"]["ScrollBarThickness"] = 5;
AZY["ac"]["Position"] = UDim2.new(0.05699992552399635, 0, 0.20896704494953156, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab
AZY["ad"] = Instance.new("Frame", AZY["ac"]);
AZY["ad"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["ad"]["BackgroundTransparency"] = 1;
AZY["ad"]["Size"] = UDim2.new(0.8838858008384705, 0, 0.41258352994918823, 0);
AZY["ad"]["Position"] = UDim2.new(-0.001135505735874176, 0, 0.008439034223556519, 0);
AZY["ad"]["Name"] = [[ChangelogTab]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab.UICorner
AZY["ae"] = Instance.new("UICorner", AZY["ad"]);
AZY["ae"]["CornerRadius"] = UDim.new(0, 15);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab.TextLabel
AZY["af"] = Instance.new("TextLabel", AZY["ad"]);
AZY["af"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["af"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["af"]["TextSize"] = 56;
AZY["af"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["af"]["Size"] = UDim2.new(0, 18, 0, 20);
AZY["af"]["Text"] = [[.]];
AZY["af"]["BackgroundTransparency"] = 1;
AZY["af"]["Position"] = UDim2.new(-0.00024911601212807, 0, -0.08813343942165375, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab.TextLabel
AZY["b0"] = Instance.new("TextLabel", AZY["ad"]);
AZY["b0"]["BackgroundColor3"] = Color3.fromRGB(0, 187, 7);
AZY["b0"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["b0"]["TextSize"] = 14;
AZY["b0"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["b0"]["Size"] = UDim2.new(0, 29, 0, 14);
AZY["b0"]["Text"] = [[New]];
AZY["b0"]["Position"] = UDim2.new(0.10899999737739563, 0, 0.05000000074505806, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab.TextLabel.UICorner
AZY["b1"] = Instance.new("UICorner", AZY["b0"]);
AZY["b1"]["CornerRadius"] = UDim.new(0, 4);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab.TextLabel
AZY["b2"] = Instance.new("TextLabel", AZY["ad"]);
AZY["b2"]["TextWrapped"] = true;
AZY["b2"]["TextYAlignment"] = Enum.TextYAlignment.Top;
AZY["b2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["b2"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["b2"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["b2"]["TextSize"] = 11;
AZY["b2"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["b2"]["Size"] = UDim2.new(0, 109, 0, 60);
AZY["b2"]["Text"] = [[Floating icon now with addec functionality! In addition to opening the mod menu, holding it down will take you directly to your desired page]];
AZY["b2"]["BackgroundTransparency"] = 1;
AZY["b2"]["Position"] = UDim2.new(0.34079205989837646, 0, 0.04748288542032242, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab1
AZY["b3"] = Instance.new("Frame", AZY["ac"]);
AZY["b3"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["b3"]["BackgroundTransparency"] = 1;
AZY["b3"]["Size"] = UDim2.new(0.8838858008384705, 0, 0.41258352994918823, 0);
AZY["b3"]["Position"] = UDim2.new(-0.0071961116045713425, 0, 0.20108048617839813, 0);
AZY["b3"]["Name"] = [[ChangelogTab1]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab1.UICorner
AZY["b4"] = Instance.new("UICorner", AZY["b3"]);
AZY["b4"]["CornerRadius"] = UDim.new(0, 15);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab1.TextLabel
AZY["b5"] = Instance.new("TextLabel", AZY["b3"]);
AZY["b5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["b5"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["b5"]["TextSize"] = 56;
AZY["b5"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["b5"]["Size"] = UDim2.new(0, 18, 0, 20);
AZY["b5"]["Text"] = [[.]];
AZY["b5"]["BackgroundTransparency"] = 1;
AZY["b5"]["Position"] = UDim2.new(-0.00024911601212807, 0, -0.08813343942165375, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab1.TextLabel
AZY["b6"] = Instance.new("TextLabel", AZY["b3"]);
AZY["b6"]["BackgroundColor3"] = Color3.fromRGB(0, 187, 7);
AZY["b6"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["b6"]["TextSize"] = 14;
AZY["b6"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["b6"]["Size"] = UDim2.new(0, 29, 0, 14);
AZY["b6"]["Text"] = [[New]];
AZY["b6"]["Position"] = UDim2.new(0.10899999737739563, 0, 0.05000000074505806, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab1.TextLabel.UICorner
AZY["b7"] = Instance.new("UICorner", AZY["b6"]);
AZY["b7"]["CornerRadius"] = UDim.new(0, 4);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab1.TextLabel
AZY["b8"] = Instance.new("TextLabel", AZY["b3"]);
AZY["b8"]["TextWrapped"] = true;
AZY["b8"]["TextYAlignment"] = Enum.TextYAlignment.Top;
AZY["b8"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["b8"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["b8"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["b8"]["TextSize"] = 11;
AZY["b8"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["b8"]["Size"] = UDim2.new(0, 109, 0, 60);
AZY["b8"]["Text"] = [[Stunning Design with breathtaking graphical elements, animations, colors and beautiful icons!]];
AZY["b8"]["BackgroundTransparency"] = 1;
AZY["b8"]["Position"] = UDim2.new(0.34079205989837646, 0, 0.04748288542032242, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab2
AZY["b9"] = Instance.new("Frame", AZY["ac"]);
AZY["b9"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["b9"]["BackgroundTransparency"] = 1;
AZY["b9"]["Size"] = UDim2.new(0.8838858008384705, 0, 0.41258352994918823, 0);
AZY["b9"]["Position"] = UDim2.new(-0.0010000000474974513, 0, 0.3869999945163727, 0);
AZY["b9"]["Name"] = [[ChangelogTab2]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab2.UICorner
AZY["ba"] = Instance.new("UICorner", AZY["b9"]);
AZY["ba"]["CornerRadius"] = UDim.new(0, 15);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab2.TextLabel
AZY["bb"] = Instance.new("TextLabel", AZY["b9"]);
AZY["bb"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["bb"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["bb"]["TextSize"] = 56;
AZY["bb"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["bb"]["Size"] = UDim2.new(0, 18, 0, 20);
AZY["bb"]["Text"] = [[.]];
AZY["bb"]["BackgroundTransparency"] = 1;
AZY["bb"]["Position"] = UDim2.new(-0.00024911601212807, 0, -0.08813343942165375, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab2.TextLabel
AZY["bc"] = Instance.new("TextLabel", AZY["b9"]);
AZY["bc"]["BackgroundColor3"] = Color3.fromRGB(0, 187, 7);
AZY["bc"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["bc"]["TextSize"] = 14;
AZY["bc"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["bc"]["Size"] = UDim2.new(0, 29, 0, 14);
AZY["bc"]["Text"] = [[New]];
AZY["bc"]["Position"] = UDim2.new(0.10899999737739563, 0, 0.05000000074505806, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab2.TextLabel.UICorner
AZY["bd"] = Instance.new("UICorner", AZY["bc"]);
AZY["bd"]["CornerRadius"] = UDim.new(0, 4);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab2.TextLabel
AZY["be"] = Instance.new("TextLabel", AZY["b9"]);
AZY["be"]["TextWrapped"] = true;
AZY["be"]["TextYAlignment"] = Enum.TextYAlignment.Top;
AZY["be"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["be"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["be"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["be"]["TextSize"] = 11;
AZY["be"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["be"]["Size"] = UDim2.new(0, 109, 0, 60);
AZY["be"]["Text"] = [[Window design with comfortable UI movement and a semi-transparent mod menu for a less intrusive gaming experience!]];
AZY["be"]["BackgroundTransparency"] = 1;
AZY["be"]["Position"] = UDim2.new(0.34079205989837646, 0, 0.04748288542032242, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab3
AZY["bf"] = Instance.new("Frame", AZY["ac"]);
AZY["bf"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["bf"]["BackgroundTransparency"] = 1;
AZY["bf"]["Size"] = UDim2.new(0.8838858008384705, 0, 0.41258352994918823, 0);
AZY["bf"]["Position"] = UDim2.new(0.005060605704784393, 0, 0.5927019119262695, 0);
AZY["bf"]["Name"] = [[ChangelogTab3]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab3.UICorner
AZY["c0"] = Instance.new("UICorner", AZY["bf"]);
AZY["c0"]["CornerRadius"] = UDim.new(0, 15);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab3.TextLabel
AZY["c1"] = Instance.new("TextLabel", AZY["bf"]);
AZY["c1"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["c1"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["c1"]["TextSize"] = 56;
AZY["c1"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["c1"]["Size"] = UDim2.new(0, 18, 0, 20);
AZY["c1"]["Text"] = [[.]];
AZY["c1"]["BackgroundTransparency"] = 1;
AZY["c1"]["Position"] = UDim2.new(-0.00024911601212807, 0, -0.08813343942165375, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab3.TextLabel
AZY["c2"] = Instance.new("TextLabel", AZY["bf"]);
AZY["c2"]["BackgroundColor3"] = Color3.fromRGB(0, 187, 7);
AZY["c2"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["c2"]["TextSize"] = 14;
AZY["c2"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["c2"]["Size"] = UDim2.new(0, 29, 0, 14);
AZY["c2"]["Text"] = [[New]];
AZY["c2"]["Position"] = UDim2.new(0.10899999737739563, 0, 0.05000000074505806, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab3.TextLabel.UICorner
AZY["c3"] = Instance.new("UICorner", AZY["c2"]);
AZY["c3"]["CornerRadius"] = UDim.new(0, 4);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Changelog.ScrollingFrame.ChangelogTab3.TextLabel
AZY["c4"] = Instance.new("TextLabel", AZY["bf"]);
AZY["c4"]["TextWrapped"] = true;
AZY["c4"]["TextYAlignment"] = Enum.TextYAlignment.Top;
AZY["c4"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["c4"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["c4"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["c4"]["TextSize"] = 11;
AZY["c4"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["c4"]["Size"] = UDim2.new(0, 109, 0, 60);
AZY["c4"]["Text"] = [[Info page with all information about our team and our social media! Plus an intuitive and well-designed changelog.]];
AZY["c4"]["BackgroundTransparency"] = 1;
AZY["c4"]["Position"] = UDim2.new(0.34079205989837646, 0, 0.04748288542032242, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Communications
AZY["c5"] = Instance.new("Frame", AZY["87"]);
AZY["c5"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["c5"]["BackgroundTransparency"] = 0.550000011920929;
AZY["c5"]["Size"] = UDim2.new(0.47281256318092346, 0, 0.2235966920852661, 0);
AZY["c5"]["Position"] = UDim2.new(0.5088531970977783, 0, 0.774535596370697, 0);
AZY["c5"]["Name"] = [[Communications]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Communications.UICorner
AZY["c6"] = Instance.new("UICorner", AZY["c5"]);
AZY["c6"]["CornerRadius"] = UDim.new(0, 15);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Communications.Copy
AZY["c7"] = Instance.new("TextButton", AZY["c5"]);
AZY["c7"]["TextWrapped"] = true;
AZY["c7"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["c7"]["TextSize"] = 12;
AZY["c7"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["c7"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["c7"]["Size"] = UDim2.new(0.41421639919281006, 0, 0.503000020980835, 0);
AZY["c7"]["Name"] = [[Copy]];
AZY["c7"]["Text"] = [[Copy Link]];
AZY["c7"]["Position"] = UDim2.new(0.03737286850810051, 0, 0.22850681841373444, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Communications.Copy.UICorner
AZY["c8"] = Instance.new("UICorner", AZY["c7"]);
AZY["c8"]["CornerRadius"] = UDim.new(0, 6);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Communications.Copy.LocalScript
AZY["c9"] = Instance.new("LocalScript", AZY["c7"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Communications.TextLogo
AZY["ca"] = Instance.new("TextLabel", AZY["c5"]);
AZY["ca"]["TextWrapped"] = true;
AZY["ca"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["ca"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["ca"]["TextSize"] = 19;
AZY["ca"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["ca"]["Size"] = UDim2.new(0.14990141987800598, 0, 0.2844810485839844, 0);
AZY["ca"]["Text"] = [[Or]];
AZY["ca"]["Name"] = [[TextLogo]];
AZY["ca"]["BackgroundTransparency"] = 1;
AZY["ca"]["Position"] = UDim2.new(0.45584943890571594, 0, 0.30038517713546753, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Communications.TextLogo.UITextSizeConstraint
AZY["cb"] = Instance.new("UITextSizeConstraint", AZY["ca"]);
AZY["cb"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Communications.TextLogo
AZY["cc"] = Instance.new("TextLabel", AZY["c5"]);
AZY["cc"]["TextWrapped"] = true;
AZY["cc"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["cc"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["cc"]["TextSize"] = 19;
AZY["cc"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["cc"]["Size"] = UDim2.new(0.4056611955165863, 0, 0.2844810485839844, 0);
AZY["cc"]["Text"] = [[AZY#0348]];
AZY["cc"]["Name"] = [[TextLogo]];
AZY["cc"]["BackgroundTransparency"] = 1;
AZY["cc"]["Position"] = UDim2.new(0.5839999914169312, 0, 0.29899999499320984, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Communications.TextLogo.UITextSizeConstraint
AZY["cd"] = Instance.new("UITextSizeConstraint", AZY["cc"]);
AZY["cd"]["MaxTextSize"] = 25;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax
AZY["ce"] = Instance.new("Frame", AZY["2b"]);
AZY["ce"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["ce"]["BackgroundTransparency"] = 0.550000011920929;
AZY["ce"]["Size"] = UDim2.new(0.831805408000946, 0, 0.7551097869873047, 0);
AZY["ce"]["Position"] = UDim2.new(0.1409205049276352, 0, 0.20551720261573792, 0);
AZY["ce"]["Visible"] = false;
AZY["ce"]["Name"] = [[BuiltInHax]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.UICorner
AZY["cf"] = Instance.new("UICorner", AZY["ce"]);
AZY["cf"]["CornerRadius"] = UDim.new(0, 15);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage
AZY["d0"] = Instance.new("Frame", AZY["ce"]);
AZY["d0"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["d0"]["BackgroundTransparency"] = 1;
AZY["d0"]["Size"] = UDim2.new(0.6116291880607605, 0, 1.0292569398880005, 0);
AZY["d0"]["Position"] = UDim2.new(0.3700365424156189, 0, -0.03249453008174896, 0);
AZY["d0"]["Name"] = [[HaxPage]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.TextWs
AZY["d1"] = Instance.new("TextLabel", AZY["d0"]);
AZY["d1"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["d1"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["d1"]["TextSize"] = 12;
AZY["d1"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["d1"]["Size"] = UDim2.new(0, 50, 0, 11);
AZY["d1"]["Text"] = [[Speed]];
AZY["d1"]["Name"] = [[TextWs]];
AZY["d1"]["BackgroundTransparency"] = 1;
AZY["d1"]["Position"] = UDim2.new(0.5411151647567749, 0, 0.8930000066757202, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.TextJp
AZY["d2"] = Instance.new("TextLabel", AZY["d0"]);
AZY["d2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["d2"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["d2"]["TextSize"] = 12;
AZY["d2"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["d2"]["Size"] = UDim2.new(0, 50, 0, 11);
AZY["d2"]["Text"] = [[Jump]];
AZY["d2"]["Name"] = [[TextJp]];
AZY["d2"]["BackgroundTransparency"] = 1;
AZY["d2"]["Position"] = UDim2.new(0.7466657161712646, 0, 0.8930000066757202, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.TextGrav
AZY["d3"] = Instance.new("TextLabel", AZY["d0"]);
AZY["d3"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["d3"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["d3"]["TextSize"] = 12;
AZY["d3"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["d3"]["Size"] = UDim2.new(0, 50, 0, 11);
AZY["d3"]["Text"] = [[Gravity]];
AZY["d3"]["Name"] = [[TextGrav]];
AZY["d3"]["BackgroundTransparency"] = 1;
AZY["d3"]["Position"] = UDim2.new(0.3269999921321869, 0, 0.8930000066757202, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.ToggleGrav
AZY["d4"] = Instance.new("TextButton", AZY["d0"]);
AZY["d4"]["BackgroundColor3"] = Color3.fromRGB(146, 0, 0);
AZY["d4"]["TextSize"] = 14;
AZY["d4"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["d4"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
AZY["d4"]["Size"] = UDim2.new(0, 15, 0, 15);
AZY["d4"]["Name"] = [[ToggleGrav]];
AZY["d4"]["Text"] = [[]];
AZY["d4"]["Position"] = UDim2.new(0.40253645181655884, 0, 0.801304280757904, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.ToggleGrav.UICorner
AZY["d5"] = Instance.new("UICorner", AZY["d4"]);
AZY["d5"]["CornerRadius"] = UDim.new(100, 100);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.ToggleGrav.LocalScript
AZY["d6"] = Instance.new("LocalScript", AZY["d4"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.ToggleJp
AZY["d7"] = Instance.new("TextButton", AZY["d0"]);
AZY["d7"]["BackgroundColor3"] = Color3.fromRGB(146, 0, 0);
AZY["d7"]["TextSize"] = 14;
AZY["d7"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["d7"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
AZY["d7"]["Size"] = UDim2.new(0, 15, 0, 15);
AZY["d7"]["Name"] = [[ToggleJp]];
AZY["d7"]["Text"] = [[]];
AZY["d7"]["Position"] = UDim2.new(0.8222021460533142, 0, 0.801304280757904, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.ToggleJp.UICorner
AZY["d8"] = Instance.new("UICorner", AZY["d7"]);
AZY["d8"]["CornerRadius"] = UDim.new(100, 100);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.ToggleJp.LocalScript
AZY["d9"] = Instance.new("LocalScript", AZY["d7"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.ToggleWs
AZY["da"] = Instance.new("TextButton", AZY["d0"]);
AZY["da"]["BackgroundColor3"] = Color3.fromRGB(146, 0, 0);
AZY["da"]["TextSize"] = 14;
AZY["da"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["da"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
AZY["da"]["Size"] = UDim2.new(0, 15, 0, 15);
AZY["da"]["Name"] = [[ToggleWs]];
AZY["da"]["Text"] = [[]];
AZY["da"]["Position"] = UDim2.new(0.6166515946388245, 0, 0.801304280757904, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.ToggleWs.UICorner
AZY["db"] = Instance.new("UICorner", AZY["da"]);
AZY["db"]["CornerRadius"] = UDim.new(100, 100);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.ToggleWs.LocalScript
AZY["dc"] = Instance.new("LocalScript", AZY["da"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.WsS
AZY["dd"] = Instance.new("ImageButton", AZY["d0"]);
AZY["dd"]["Active"] = false;
AZY["dd"]["BorderSizePixel"] = 0;
AZY["dd"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["dd"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["dd"]["SliceScale"] = 0.11999999731779099;
AZY["dd"]["ImageTransparency"] = 1;
AZY["dd"]["BackgroundColor3"] = Color3.fromRGB(22, 22, 22);
AZY["dd"]["ImageColor3"] = Color3.fromRGB(32, 32, 32);
AZY["dd"]["Selectable"] = false;
AZY["dd"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
AZY["dd"]["Image"] = [[rbxassetid://3570695787]];
AZY["dd"]["Size"] = UDim2.new(0, 119, 0, 31);
AZY["dd"]["Name"] = [[WsS]];
AZY["dd"]["Rotation"] = -90;
AZY["dd"]["Position"] = UDim2.new(0.6499999761581421, 0, 0.4399999976158142, 0);
AZY["dd"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.WsS.SliderButton
AZY["de"] = Instance.new("ImageLabel", AZY["dd"]);
AZY["de"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["de"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["de"]["BackgroundColor3"] = Color3.fromRGB(71, 71, 71);
AZY["de"]["ImageColor3"] = Color3.fromRGB(146, 0, 0);
AZY["de"]["SliceScale"] = 0.11999999731779099;
AZY["de"]["Selectable"] = true;
AZY["de"]["Image"] = [[rbxassetid://3570695787]];
AZY["de"]["Size"] = UDim2.new(0, 25, 1, 0);
AZY["de"]["Active"] = true;
AZY["de"]["Name"] = [[SliderButton]];
AZY["de"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.WsS.SliderButton.LocalScript
AZY["df"] = Instance.new("LocalScript", AZY["de"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.WsS.Border
AZY["e0"] = Instance.new("ImageLabel", AZY["dd"]);
AZY["e0"]["ZIndex"] = -1;
AZY["e0"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["e0"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["e0"]["BackgroundColor3"] = Color3.fromRGB(62, 62, 62);
AZY["e0"]["ImageColor3"] = Color3.fromRGB(71, 71, 71);
AZY["e0"]["SliceScale"] = 0.23999999463558197;
AZY["e0"]["ImageTransparency"] = 1;
AZY["e0"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
AZY["e0"]["Image"] = [[rbxassetid://3570695787]];
AZY["e0"]["Size"] = UDim2.new(1, 12, 1, 12);
AZY["e0"]["Name"] = [[Border]];
AZY["e0"]["BackgroundTransparency"] = 0.6000000238418579;
AZY["e0"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.WsS.Border.UICorner
AZY["e1"] = Instance.new("UICorner", AZY["e0"]);
AZY["e1"]["CornerRadius"] = UDim.new(0, 12);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.WsS.StripedPattern
AZY["e2"] = Instance.new("ImageLabel", AZY["dd"]);
AZY["e2"]["BorderSizePixel"] = 0;
AZY["e2"]["ScaleType"] = Enum.ScaleType.Tile;
AZY["e2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["e2"]["ImageColor3"] = Color3.fromRGB(32, 32, 32);
AZY["e2"]["ImageTransparency"] = 1;
AZY["e2"]["AnchorPoint"] = Vector2.new(0.5, 0);
AZY["e2"]["Image"] = [[rbxassetid://4925116997]];
AZY["e2"]["TileSize"] = UDim2.new(0, 25, 1, 0);
AZY["e2"]["Size"] = UDim2.new(1, -25, 1, 0);
AZY["e2"]["Name"] = [[StripedPattern]];
AZY["e2"]["BackgroundTransparency"] = 1;
AZY["e2"]["Position"] = UDim2.new(0.5, 0, 0, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.WsS.StripedPattern.UIGradient
AZY["e3"] = Instance.new("UIGradient", AZY["e2"]);
AZY["e3"]["Rotation"] = 90;
AZY["e3"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(0, 0, 0))};

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.WsS.ImageLabel
AZY["e4"] = Instance.new("ImageLabel", AZY["dd"]);
AZY["e4"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["e4"]["Image"] = [[rbxassetid://12572149271]];
AZY["e4"]["Size"] = UDim2.new(0, 35, 0, 35);
AZY["e4"]["Rotation"] = 90;
AZY["e4"]["BackgroundTransparency"] = 1;
AZY["e4"]["Position"] = UDim2.new(-0.017000000923871994, 0, -0.10000000149011612, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.WsS.TextLabel
AZY["e5"] = Instance.new("TextBox", AZY["dd"]);
AZY["e5"]["CursorPosition"] = -1;
AZY["e5"]["ZIndex"] = 2;
AZY["e5"]["TextSize"] = 13;
AZY["e5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["e5"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["e5"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["e5"]["AnchorPoint"] = Vector2.new(1, 0);
AZY["e5"]["BackgroundTransparency"] = 1;
AZY["e5"]["Size"] = UDim2.new(0, 50, 1, 0);
AZY["e5"]["Text"] = [[0%]];
AZY["e5"]["Position"] = UDim2.new(0, 137, 0, 0);
AZY["e5"]["Rotation"] = 90;
AZY["e5"]["Name"] = [[TextLabel]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.JpS
AZY["e6"] = Instance.new("ImageButton", AZY["d0"]);
AZY["e6"]["Active"] = false;
AZY["e6"]["BorderSizePixel"] = 0;
AZY["e6"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["e6"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["e6"]["SliceScale"] = 0.11999999731779099;
AZY["e6"]["ImageTransparency"] = 1;
AZY["e6"]["BackgroundColor3"] = Color3.fromRGB(22, 22, 22);
AZY["e6"]["ImageColor3"] = Color3.fromRGB(32, 32, 32);
AZY["e6"]["Selectable"] = false;
AZY["e6"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
AZY["e6"]["Image"] = [[rbxassetid://3570695787]];
AZY["e6"]["Size"] = UDim2.new(0, 119, 0, 31);
AZY["e6"]["Name"] = [[JpS]];
AZY["e6"]["Rotation"] = -90;
AZY["e6"]["Position"] = UDim2.new(0.8600000143051147, 0, 0.4399999976158142, 0);
AZY["e6"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.JpS.SliderButton
AZY["e7"] = Instance.new("ImageLabel", AZY["e6"]);
AZY["e7"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["e7"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["e7"]["BackgroundColor3"] = Color3.fromRGB(71, 71, 71);
AZY["e7"]["ImageColor3"] = Color3.fromRGB(146, 0, 0);
AZY["e7"]["SliceScale"] = 0.11999999731779099;
AZY["e7"]["Selectable"] = true;
AZY["e7"]["Image"] = [[rbxassetid://3570695787]];
AZY["e7"]["Size"] = UDim2.new(0, 25, 1, 0);
AZY["e7"]["Active"] = true;
AZY["e7"]["Name"] = [[SliderButton]];
AZY["e7"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.JpS.SliderButton.LocalScript
AZY["e8"] = Instance.new("LocalScript", AZY["e7"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.JpS.Border
AZY["e9"] = Instance.new("ImageLabel", AZY["e6"]);
AZY["e9"]["ZIndex"] = -1;
AZY["e9"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["e9"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["e9"]["BackgroundColor3"] = Color3.fromRGB(62, 62, 62);
AZY["e9"]["ImageColor3"] = Color3.fromRGB(71, 71, 71);
AZY["e9"]["SliceScale"] = 0.23999999463558197;
AZY["e9"]["ImageTransparency"] = 1;
AZY["e9"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
AZY["e9"]["Image"] = [[rbxassetid://3570695787]];
AZY["e9"]["Size"] = UDim2.new(1, 12, 1, 12);
AZY["e9"]["Name"] = [[Border]];
AZY["e9"]["BackgroundTransparency"] = 0.6000000238418579;
AZY["e9"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.JpS.Border.UICorner
AZY["ea"] = Instance.new("UICorner", AZY["e9"]);
AZY["ea"]["CornerRadius"] = UDim.new(0, 12);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.JpS.StripedPattern
AZY["eb"] = Instance.new("ImageLabel", AZY["e6"]);
AZY["eb"]["BorderSizePixel"] = 0;
AZY["eb"]["ScaleType"] = Enum.ScaleType.Tile;
AZY["eb"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["eb"]["ImageColor3"] = Color3.fromRGB(32, 32, 32);
AZY["eb"]["ImageTransparency"] = 1;
AZY["eb"]["AnchorPoint"] = Vector2.new(0.5, 0);
AZY["eb"]["Image"] = [[rbxassetid://4925116997]];
AZY["eb"]["TileSize"] = UDim2.new(0, 25, 1, 0);
AZY["eb"]["Size"] = UDim2.new(1, -25, 1, 0);
AZY["eb"]["Name"] = [[StripedPattern]];
AZY["eb"]["BackgroundTransparency"] = 1;
AZY["eb"]["Position"] = UDim2.new(0.5, 0, 0, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.JpS.StripedPattern.UIGradient
AZY["ec"] = Instance.new("UIGradient", AZY["eb"]);
AZY["ec"]["Rotation"] = 90;
AZY["ec"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(0, 0, 0))};

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.JpS.ImageLabel
AZY["ed"] = Instance.new("ImageLabel", AZY["e6"]);
AZY["ed"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["ed"]["Image"] = [[rbxassetid://12582573514]];
AZY["ed"]["Size"] = UDim2.new(0, 35, 0, 35);
AZY["ed"]["Rotation"] = 90;
AZY["ed"]["BackgroundTransparency"] = 1;
AZY["ed"]["Position"] = UDim2.new(-0.017000000923871994, 0, -0.10000000149011612, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.JpS.TextLabel
AZY["ee"] = Instance.new("TextBox", AZY["e6"]);
AZY["ee"]["ZIndex"] = 2;
AZY["ee"]["TextSize"] = 13;
AZY["ee"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["ee"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["ee"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["ee"]["AnchorPoint"] = Vector2.new(1, 0);
AZY["ee"]["BackgroundTransparency"] = 1;
AZY["ee"]["Size"] = UDim2.new(0, 50, 1, 0);
AZY["ee"]["Text"] = [[0%]];
AZY["ee"]["Position"] = UDim2.new(0, 137, 0, 0);
AZY["ee"]["Rotation"] = 90;
AZY["ee"]["Name"] = [[TextLabel]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.GravS
AZY["ef"] = Instance.new("ImageButton", AZY["d0"]);
AZY["ef"]["Active"] = false;
AZY["ef"]["BorderSizePixel"] = 0;
AZY["ef"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["ef"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["ef"]["SliceScale"] = 0.11999999731779099;
AZY["ef"]["ImageTransparency"] = 1;
AZY["ef"]["BackgroundColor3"] = Color3.fromRGB(22, 22, 22);
AZY["ef"]["ImageColor3"] = Color3.fromRGB(32, 32, 32);
AZY["ef"]["Selectable"] = false;
AZY["ef"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
AZY["ef"]["Image"] = [[rbxassetid://3570695787]];
AZY["ef"]["Size"] = UDim2.new(0, 119, 0, 31);
AZY["ef"]["Name"] = [[GravS]];
AZY["ef"]["Rotation"] = -90;
AZY["ef"]["Position"] = UDim2.new(0.4359999895095825, 0, 0.4399999976158142, 0);
AZY["ef"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.GravS.SliderButton
AZY["f0"] = Instance.new("ImageLabel", AZY["ef"]);
AZY["f0"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["f0"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["f0"]["BackgroundColor3"] = Color3.fromRGB(71, 71, 71);
AZY["f0"]["ImageColor3"] = Color3.fromRGB(146, 0, 0);
AZY["f0"]["SliceScale"] = 0.11999999731779099;
AZY["f0"]["Selectable"] = true;
AZY["f0"]["Image"] = [[rbxassetid://3570695787]];
AZY["f0"]["Size"] = UDim2.new(0, 25, 1, 0);
AZY["f0"]["Active"] = true;
AZY["f0"]["Name"] = [[SliderButton]];
AZY["f0"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.GravS.SliderButton.LocalScript
AZY["f1"] = Instance.new("LocalScript", AZY["f0"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.GravS.Border
AZY["f2"] = Instance.new("ImageLabel", AZY["ef"]);
AZY["f2"]["ZIndex"] = -1;
AZY["f2"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
AZY["f2"]["ScaleType"] = Enum.ScaleType.Slice;
AZY["f2"]["BackgroundColor3"] = Color3.fromRGB(62, 62, 62);
AZY["f2"]["ImageColor3"] = Color3.fromRGB(71, 71, 71);
AZY["f2"]["SliceScale"] = 0.23999999463558197;
AZY["f2"]["ImageTransparency"] = 1;
AZY["f2"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
AZY["f2"]["Image"] = [[rbxassetid://3570695787]];
AZY["f2"]["Size"] = UDim2.new(1, 12, 1, 12);
AZY["f2"]["Name"] = [[Border]];
AZY["f2"]["BackgroundTransparency"] = 0.6000000238418579;
AZY["f2"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.GravS.Border.UICorner
AZY["f3"] = Instance.new("UICorner", AZY["f2"]);
AZY["f3"]["CornerRadius"] = UDim.new(0, 12);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.GravS.StripedPattern
AZY["f4"] = Instance.new("ImageLabel", AZY["ef"]);
AZY["f4"]["BorderSizePixel"] = 0;
AZY["f4"]["ScaleType"] = Enum.ScaleType.Tile;
AZY["f4"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["f4"]["ImageColor3"] = Color3.fromRGB(32, 32, 32);
AZY["f4"]["ImageTransparency"] = 1;
AZY["f4"]["AnchorPoint"] = Vector2.new(0.5, 0);
AZY["f4"]["Image"] = [[rbxassetid://4925116997]];
AZY["f4"]["TileSize"] = UDim2.new(0, 25, 1, 0);
AZY["f4"]["Size"] = UDim2.new(1, -25, 1, 0);
AZY["f4"]["Name"] = [[StripedPattern]];
AZY["f4"]["BackgroundTransparency"] = 1;
AZY["f4"]["Position"] = UDim2.new(0.5, 0, 0, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.GravS.StripedPattern.UIGradient
AZY["f5"] = Instance.new("UIGradient", AZY["f4"]);
AZY["f5"]["Rotation"] = 90;
AZY["f5"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(0, 0, 0))};

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.GravS.ImageLabel
AZY["f6"] = Instance.new("ImageLabel", AZY["ef"]);
AZY["f6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["f6"]["Image"] = [[rbxassetid://12582575947]];
AZY["f6"]["Size"] = UDim2.new(0, 35, 0, 35);
AZY["f6"]["Rotation"] = 90;
AZY["f6"]["BackgroundTransparency"] = 1;
AZY["f6"]["Position"] = UDim2.new(-0.017000000923871994, 0, -0.10000000149011612, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.GravS.TextLabel
AZY["f7"] = Instance.new("TextBox", AZY["ef"]);
AZY["f7"]["ZIndex"] = 2;
AZY["f7"]["TextSize"] = 13;
AZY["f7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["f7"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["f7"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["f7"]["AnchorPoint"] = Vector2.new(1, 0);
AZY["f7"]["BackgroundTransparency"] = 1;
AZY["f7"]["Size"] = UDim2.new(0, 50, 1, 0);
AZY["f7"]["Text"] = [[0%]];
AZY["f7"]["Position"] = UDim2.new(0, 137, 0, 0);
AZY["f7"]["Rotation"] = 90;
AZY["f7"]["Name"] = [[TextLabel]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.Grav
AZY["f8"] = Instance.new("BoolValue", AZY["d0"]);
AZY["f8"]["Name"] = [[Grav]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.Jp
AZY["f9"] = Instance.new("BoolValue", AZY["d0"]);
AZY["f9"]["Name"] = [[Jp]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.Ws
AZY["fa"] = Instance.new("BoolValue", AZY["d0"]);
AZY["fa"]["Name"] = [[Ws]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts
AZY["fb"] = Instance.new("Folder", AZY["ce"]);
AZY["fb"]["Name"] = [[Scripts]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Aimbot
AZY["fc"] = Instance.new("TextButton", AZY["fb"]);
AZY["fc"]["TextWrapped"] = true;
AZY["fc"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["fc"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["fc"]["TextSize"] = 13;
AZY["fc"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["fc"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["fc"]["Size"] = UDim2.new(0.2280000001192093, 0, 0.09600000083446503, 0);
AZY["fc"]["Name"] = [[Aimbot]];
AZY["fc"]["Text"] = [[       AimBot]];
AZY["fc"]["Position"] = UDim2.new(0.030552715063095093, 0, 0.3302992284297943, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Aimbot.UICorner
AZY["fd"] = Instance.new("UICorner", AZY["fc"]);
AZY["fd"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Aimbot.LocalScript
AZY["fe"] = Instance.new("LocalScript", AZY["fc"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Aimbot.Info
AZY["ff"] = Instance.new("ImageLabel", AZY["fc"]);
AZY["ff"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["ff"]["Image"] = [[rbxassetid://12585776892]];
AZY["ff"]["Size"] = UDim2.new(0, 16, 0, 16);
AZY["ff"]["Name"] = [[Info]];
AZY["ff"]["BackgroundTransparency"] = 1;
AZY["ff"]["Position"] = UDim2.new(0.7910000085830688, 0, 0.09000000357627869, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Btools
AZY["100"] = Instance.new("TextButton", AZY["fb"]);
AZY["100"]["TextWrapped"] = true;
AZY["100"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["100"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["100"]["TextSize"] = 13;
AZY["100"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["100"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["100"]["Size"] = UDim2.new(0.2280000001192093, 0, 0.09600000083446503, 0);
AZY["100"]["Name"] = [[Btools]];
AZY["100"]["Text"] = [[         BTools]];
AZY["100"]["Position"] = UDim2.new(0.2924708425998688, 0, 0.18550994992256165, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Btools.UICorner
AZY["101"] = Instance.new("UICorner", AZY["100"]);
AZY["101"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Btools.LocalScript
AZY["102"] = Instance.new("LocalScript", AZY["100"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Btools.Info
AZY["103"] = Instance.new("ImageLabel", AZY["100"]);
AZY["103"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["103"]["Image"] = [[rbxassetid://12585776892]];
AZY["103"]["Size"] = UDim2.new(0, 16, 0, 16);
AZY["103"]["Name"] = [[Info]];
AZY["103"]["BackgroundTransparency"] = 1;
AZY["103"]["Position"] = UDim2.new(0.7910000085830688, 0, 0.09000000357627869, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Dex
AZY["104"] = Instance.new("TextButton", AZY["fb"]);
AZY["104"]["TextWrapped"] = true;
AZY["104"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["104"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["104"]["TextSize"] = 13;
AZY["104"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["104"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["104"]["Size"] = UDim2.new(0.2280000001192093, 0, 0.09600000083446503, 0);
AZY["104"]["Name"] = [[Dex]];
AZY["104"]["Text"] = [[  DEX Explorer]];
AZY["104"]["Position"] = UDim2.new(0.2938356399536133, 0, 0.04143177345395088, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Dex.UICorner
AZY["105"] = Instance.new("UICorner", AZY["104"]);
AZY["105"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Dex.LocalScript
AZY["106"] = Instance.new("LocalScript", AZY["104"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Dex.Info
AZY["107"] = Instance.new("ImageLabel", AZY["104"]);
AZY["107"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["107"]["Image"] = [[rbxassetid://12585776892]];
AZY["107"]["Size"] = UDim2.new(0, 16, 0, 16);
AZY["107"]["Name"] = [[Info]];
AZY["107"]["BackgroundTransparency"] = 1;
AZY["107"]["Position"] = UDim2.new(0.7910000085830688, 0, 0.09000000357627869, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.FatesESP
AZY["108"] = Instance.new("TextButton", AZY["fb"]);
AZY["108"]["TextWrapped"] = true;
AZY["108"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["108"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["108"]["TextSize"] = 13;
AZY["108"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["108"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["108"]["Size"] = UDim2.new(0.2280000001192093, 0, 0.09600000083446503, 0);
AZY["108"]["Name"] = [[FatesESP]];
AZY["108"]["Text"] = [[      Fates ESP]];
AZY["108"]["Position"] = UDim2.new(0.0331718735396862, 0, 0.18866735696792603, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.FatesESP.UICorner
AZY["109"] = Instance.new("UICorner", AZY["108"]);
AZY["109"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.FatesESP.LocalScript
AZY["10a"] = Instance.new("LocalScript", AZY["108"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.FatesESP.Info
AZY["10b"] = Instance.new("ImageLabel", AZY["108"]);
AZY["10b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["10b"]["Image"] = [[rbxassetid://12585776892]];
AZY["10b"]["Size"] = UDim2.new(0, 16, 0, 16);
AZY["10b"]["Name"] = [[Info]];
AZY["10b"]["BackgroundTransparency"] = 1;
AZY["10b"]["Position"] = UDim2.new(0.7910000085830688, 0, 0.09000000357627869, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Fly
AZY["10c"] = Instance.new("TextButton", AZY["fb"]);
AZY["10c"]["TextWrapped"] = true;
AZY["10c"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["10c"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["10c"]["TextSize"] = 13;
AZY["10c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["10c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["10c"]["Size"] = UDim2.new(0.2280000001192093, 0, 0.09600000083446503, 0);
AZY["10c"]["Name"] = [[Fly]];
AZY["10c"]["Text"] = [[           Fly]];
AZY["10c"]["Position"] = UDim2.new(0.28985166549682617, 0, 0.3375365436077118, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Fly.UICorner
AZY["10d"] = Instance.new("UICorner", AZY["10c"]);
AZY["10d"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Fly.LocalScript
AZY["10e"] = Instance.new("LocalScript", AZY["10c"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Fly.Info
AZY["10f"] = Instance.new("ImageLabel", AZY["10c"]);
AZY["10f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["10f"]["Image"] = [[rbxassetid://12585776892]];
AZY["10f"]["Size"] = UDim2.new(0, 16, 0, 16);
AZY["10f"]["Name"] = [[Info]];
AZY["10f"]["BackgroundTransparency"] = 1;
AZY["10f"]["Position"] = UDim2.new(0.7910000085830688, 0, 0.09000000357627869, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.IY
AZY["110"] = Instance.new("TextButton", AZY["fb"]);
AZY["110"]["TextWrapped"] = true;
AZY["110"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["110"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["110"]["TextSize"] = 13;
AZY["110"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["110"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["110"]["Size"] = UDim2.new(0.22804169356822968, 0, 0.0958060473203659, 0);
AZY["110"]["Name"] = [[IY]];
AZY["110"]["Text"] = [[  Infinite Yield]];
AZY["110"]["Position"] = UDim2.new(0.03485134616494179, 0, 0.04589534550905228, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.IY.UICorner
AZY["111"] = Instance.new("UICorner", AZY["110"]);
AZY["111"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.IY.LocalScript
AZY["112"] = Instance.new("LocalScript", AZY["110"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.IY.Info
AZY["113"] = Instance.new("ImageLabel", AZY["110"]);
AZY["113"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["113"]["Image"] = [[rbxassetid://12585776892]];
AZY["113"]["Size"] = UDim2.new(0, 16, 0, 16);
AZY["113"]["Name"] = [[Info]];
AZY["113"]["BackgroundTransparency"] = 1;
AZY["113"]["Position"] = UDim2.new(0.7910000085830688, 0, 0.09000000357627869, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.PwnHub
AZY["114"] = Instance.new("TextButton", AZY["fb"]);
AZY["114"]["TextWrapped"] = true;
AZY["114"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["114"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["114"]["TextSize"] = 13;
AZY["114"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["114"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["114"]["Size"] = UDim2.new(0.2280000001192093, 0, 0.09600000083446503, 0);
AZY["114"]["Name"] = [[PwnHub]];
AZY["114"]["Text"] = [[    Pwner Hub]];
AZY["114"]["Position"] = UDim2.new(0.03055272251367569, 0, 0.4659311771392822, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.PwnHub.UICorner
AZY["115"] = Instance.new("UICorner", AZY["114"]);
AZY["115"]["CornerRadius"] = UDim.new(0, 5);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.PwnHub.LocalScript
AZY["116"] = Instance.new("LocalScript", AZY["114"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.PwnHub.Info
AZY["117"] = Instance.new("ImageLabel", AZY["114"]);
AZY["117"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["117"]["Image"] = [[rbxassetid://12585776892]];
AZY["117"]["Size"] = UDim2.new(0, 16, 0, 16);
AZY["117"]["Name"] = [[Info]];
AZY["117"]["BackgroundTransparency"] = 1;
AZY["117"]["Position"] = UDim2.new(0.7910000085830688, 0, 0.09000000357627869, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Title
AZY["118"] = Instance.new("TextLabel", AZY["ce"]);
AZY["118"]["TextWrapped"] = true;
AZY["118"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["118"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["118"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["118"]["TextSize"] = 12;
AZY["118"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["118"]["Size"] = UDim2.new(0.5070894360542297, 0, 0.10439325869083405, 0);
AZY["118"]["Text"] = [[Welcome in the Built-In Hacks section!]];
AZY["118"]["Name"] = [[Title]];
AZY["118"]["BackgroundTransparency"] = 1;
AZY["118"]["Position"] = UDim2.new(0.033080533146858215, 0, 0.7568540573120117, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Title
AZY["119"] = Instance.new("TextLabel", AZY["ce"]);
AZY["119"]["TextWrapped"] = true;
AZY["119"]["TextYAlignment"] = Enum.TextYAlignment.Top;
AZY["119"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["119"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["119"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["119"]["TextSize"] = 10;
AZY["119"]["TextColor3"] = Color3.fromRGB(171, 171, 171);
AZY["119"]["Size"] = UDim2.new(0.5410764813423157, 0, 0.10439325869083405, 0);
AZY["119"]["Text"] = [[Here you can easily change your player gravity, speed and jump power. You can execute our built-in scripts too!]];
AZY["119"]["Name"] = [[Title]];
AZY["119"]["BackgroundTransparency"] = 1;
AZY["119"]["Position"] = UDim2.new(0.030461372807621956, 0, 0.862415075302124, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor
AZY["11a"] = Instance.new("Frame", AZY["2b"]);
AZY["11a"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["11a"]["BackgroundTransparency"] = 0.550000011920929;
AZY["11a"]["Size"] = UDim2.new(0.831805408000946, 0, 0.7551097869873047, 0);
AZY["11a"]["Position"] = UDim2.new(0.1409205049276352, 0, 0.20551720261573792, 0);
AZY["11a"]["Visible"] = false;
AZY["11a"]["Name"] = [[Executor]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.UICorner
AZY["11b"] = Instance.new("UICorner", AZY["11a"]);
AZY["11b"]["CornerRadius"] = UDim.new(0, 15);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Execute
AZY["11c"] = Instance.new("TextButton", AZY["11a"]);
AZY["11c"]["TextWrapped"] = true;
AZY["11c"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["11c"]["TextSize"] = 18;
AZY["11c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["11c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["11c"]["Size"] = UDim2.new(0.22599999606609344, 0, 0.13500000536441803, 0);
AZY["11c"]["Name"] = [[Execute]];
AZY["11c"]["Text"] = [[Execute]];
AZY["11c"]["Position"] = UDim2.new(0.026000000536441803, 0, 0.8319999575614929, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Execute.UICorner
AZY["11d"] = Instance.new("UICorner", AZY["11c"]);
AZY["11d"]["CornerRadius"] = UDim.new(0, 9);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Execute.LocalScript
AZY["11e"] = Instance.new("LocalScript", AZY["11c"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Clear
AZY["11f"] = Instance.new("TextButton", AZY["11a"]);
AZY["11f"]["TextWrapped"] = true;
AZY["11f"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["11f"]["TextSize"] = 18;
AZY["11f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["11f"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["11f"]["Size"] = UDim2.new(0.22599999606609344, 0, 0.13500000536441803, 0);
AZY["11f"]["Name"] = [[Clear]];
AZY["11f"]["Text"] = [[Clear]];
AZY["11f"]["Position"] = UDim2.new(0.2630000114440918, 0, 0.8320000171661377, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Clear.UICorner
AZY["120"] = Instance.new("UICorner", AZY["11f"]);
AZY["120"]["CornerRadius"] = UDim.new(0, 9);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Clear.LocalScript
AZY["121"] = Instance.new("LocalScript", AZY["11f"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Copy
AZY["122"] = Instance.new("TextButton", AZY["11a"]);
AZY["122"]["TextWrapped"] = true;
AZY["122"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["122"]["TextSize"] = 18;
AZY["122"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["122"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["122"]["Size"] = UDim2.new(0.22599999606609344, 0, 0.13500000536441803, 0);
AZY["122"]["Name"] = [[Copy]];
AZY["122"]["Text"] = [[Copy]];
AZY["122"]["Position"] = UDim2.new(0.5009999871253967, 0, 0.8320000171661377, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Copy.UICorner
AZY["123"] = Instance.new("UICorner", AZY["122"]);
AZY["123"]["CornerRadius"] = UDim.new(0, 9);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Copy.LocalScript
AZY["124"] = Instance.new("LocalScript", AZY["122"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Paste
AZY["125"] = Instance.new("TextButton", AZY["11a"]);
AZY["125"]["TextWrapped"] = true;
AZY["125"]["TextScaled"] = true;
AZY["125"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["125"]["TextSize"] = 18;
AZY["125"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["125"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
AZY["125"]["Size"] = UDim2.new(0.22599999606609344, 0, 0.13500000536441803, 0);
AZY["125"]["Name"] = [[Paste]];
AZY["125"]["Text"] = [[Paste]];
AZY["125"]["Position"] = UDim2.new(0.7360000014305115, 0, 0.8320000171661377, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Paste.UICorner
AZY["126"] = Instance.new("UICorner", AZY["125"]);
AZY["126"]["CornerRadius"] = UDim.new(0, 9);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Paste.LocalScript
AZY["127"] = Instance.new("LocalScript", AZY["125"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Paste.UITextSizeConstraint
AZY["128"] = Instance.new("UITextSizeConstraint", AZY["125"]);
AZY["128"]["MaxTextSize"] = 18;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar
AZY["129"] = Instance.new("Frame", AZY["11a"]);
AZY["129"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["129"]["BackgroundTransparency"] = 1;
AZY["129"]["Size"] = UDim2.new(0.9533820152282715, 0, 0.7485234141349792, 0);
AZY["129"]["Position"] = UDim2.new(0.026000019162893295, 0, 0.04687291383743286, 0);
AZY["129"]["Name"] = [[TextboxBar]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript
AZY["12a"] = Instance.new("LocalScript", AZY["129"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor
AZY["12b"] = Instance.new("ModuleScript", AZY["12a"]);
AZY["12b"]["Name"] = [[ScriptEditor]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Syntax
AZY["12c"] = Instance.new("ModuleScript", AZY["12b"]);
AZY["12c"]["Name"] = [[Syntax]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Theme
AZY["12d"] = Instance.new("ModuleScript", AZY["12b"]);
AZY["12d"]["Name"] = [[Theme]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.GetLines
AZY["12e"] = Instance.new("ModuleScript", AZY["12b"]);
AZY["12e"]["Name"] = [[GetLines]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.FakeEditor
AZY["12f"] = Instance.new("ModuleScript", AZY["12b"]);
AZY["12f"]["Name"] = [[FakeEditor]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.GetLine
AZY["130"] = Instance.new("ModuleScript", AZY["12b"]);
AZY["130"]["Name"] = [[GetLine]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.TweenLibrary
AZY["131"] = Instance.new("ModuleScript", AZY["12b"]);
AZY["131"]["Name"] = [[TweenLibrary]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.GetWord
AZY["132"] = Instance.new("ModuleScript", AZY["12b"]);
AZY["132"]["Name"] = [[GetWord]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Lexer
AZY["133"] = Instance.new("ModuleScript", AZY["12b"]);
AZY["133"]["Name"] = [[Lexer]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Suggestions
AZY["134"] = Instance.new("ModuleScript", AZY["12b"]);
AZY["134"]["Name"] = [[Suggestions]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Words
AZY["135"] = Instance.new("ModuleScript", AZY["12b"]);
AZY["135"]["Name"] = [[Words]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor
AZY["136"] = Instance.new("Frame", AZY["12b"]);
AZY["136"]["BorderSizePixel"] = 0;
AZY["136"]["BackgroundColor3"] = Color3.fromRGB(23, 27, 23);
AZY["136"]["BackgroundTransparency"] = 0.4000000059604645;
AZY["136"]["Size"] = UDim2.new(1, 0, 1, 0);
AZY["136"]["BorderColor3"] = Color3.fromRGB(28, 43, 54);
AZY["136"]["Name"] = [[Editor]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll
AZY["137"] = Instance.new("ScrollingFrame", AZY["136"]);
AZY["137"]["Active"] = true;
AZY["137"]["CanvasSize"] = UDim2.new(0, 0, 0, 0);
AZY["137"]["ElasticBehavior"] = Enum.ElasticBehavior.Always;
AZY["137"]["TopImage"] = [[rbxasset://textures/ui/Scroll/scroll-middle.png]];
AZY["137"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["137"]["AutomaticCanvasSize"] = Enum.AutomaticSize.XY;
AZY["137"]["BackgroundTransparency"] = 0.9990000128746033;
AZY["137"]["Size"] = UDim2.new(1, 0, 1, 0);
AZY["137"]["ScrollBarImageColor3"] = Color3.fromRGB(64, 64, 64);
AZY["137"]["BorderColor3"] = Color3.fromRGB(53, 53, 53);
AZY["137"]["Name"] = [[Scroll]];
AZY["137"]["BottomImage"] = [[rbxasset://textures/ui/Scroll/scroll-middle.png]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Source
AZY["138"] = Instance.new("TextBox", AZY["137"]);
AZY["138"]["TextSize"] = 17;
AZY["138"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["138"]["TextStrokeColor3"] = Color3.fromRGB(41, 41, 41);
AZY["138"]["TextYAlignment"] = Enum.TextYAlignment.Top;
AZY["138"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["138"]["TextColor3"] = Color3.fromRGB(239, 239, 239);
AZY["138"]["FontFace"] = Font.new([[rbxasset://fonts/families/Inconsolata.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["138"]["MultiLine"] = true;
AZY["138"]["BackgroundTransparency"] = 0.9990000128746033;
AZY["138"]["Size"] = UDim2.new(1, -44, 1, -5);
AZY["138"]["Text"] = [[]];
AZY["138"]["Position"] = UDim2.new(0, 44, 0, 5);
AZY["138"]["AutomaticSize"] = Enum.AutomaticSize.XY;
AZY["138"]["Name"] = [[Source]];
AZY["138"]["ClearTextOnFocus"] = false;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Source.LineHighlight
AZY["139"] = Instance.new("Frame", AZY["138"]);
AZY["139"]["BorderSizePixel"] = 0;
AZY["139"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["139"]["AnchorPoint"] = Vector2.new(0, 0.5);
AZY["139"]["BackgroundTransparency"] = 0.9399999976158142;
AZY["139"]["Size"] = UDim2.new(1, 0, 0, 17);
AZY["139"]["Position"] = UDim2.new(0, -10, 0, 9);
AZY["139"]["Name"] = [[LineHighlight]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Source.Hidden
AZY["13a"] = Instance.new("TextLabel", AZY["138"]);
AZY["13a"]["BorderSizePixel"] = 0;
AZY["13a"]["TextYAlignment"] = Enum.TextYAlignment.Top;
AZY["13a"]["BackgroundColor3"] = Color3.fromRGB(27, 32, 27);
AZY["13a"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["13a"]["FontFace"] = Font.new([[rbxasset://fonts/families/Inconsolata.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["13a"]["TextSize"] = 22;
AZY["13a"]["TextColor3"] = Color3.fromRGB(249, 66, 164);
AZY["13a"]["Size"] = UDim2.new(1, 0, 1, 0);
AZY["13a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
AZY["13a"]["Text"] = [[*script hidden*]];
AZY["13a"]["Name"] = [[Hidden]];
AZY["13a"]["Visible"] = false;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Source.Suggestion
AZY["13b"] = Instance.new("TextButton", AZY["138"]);
AZY["13b"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["13b"]["BackgroundColor3"] = Color3.fromRGB(40, 40, 40);
AZY["13b"]["TextSize"] = 17;
AZY["13b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["13b"]["TextColor3"] = Color3.fromRGB(244, 244, 244);
AZY["13b"]["Visible"] = false;
AZY["13b"]["Size"] = UDim2.new(0, 130, 0, 26);
AZY["13b"]["Name"] = [[Suggestion]];
AZY["13b"]["BorderColor3"] = Color3.fromRGB(60, 60, 60);
AZY["13b"]["Text"] = [[keyword]];
AZY["13b"]["AutomaticSize"] = Enum.AutomaticSize.X;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Source.Suggestion.TextPadding
AZY["13c"] = Instance.new("UIPadding", AZY["13b"]);
AZY["13c"]["Name"] = [[TextPadding]];
AZY["13c"]["PaddingLeft"] = UDim.new(0, 30);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Source.Suggestion.Icon
AZY["13d"] = Instance.new("ImageLabel", AZY["13b"]);
AZY["13d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["13d"]["Image"] = [[rbxassetid://413365069]];
AZY["13d"]["Size"] = UDim2.new(0, 26, 0, 26);
AZY["13d"]["Name"] = [[Icon]];
AZY["13d"]["BackgroundTransparency"] = 1;
AZY["13d"]["Position"] = UDim2.new(0, -30, 0, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Source.Suggestion.Icon.UIAspectRatioConstraint
AZY["13e"] = Instance.new("UIAspectRatioConstraint", AZY["13d"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left
AZY["13f"] = Instance.new("Frame", AZY["137"]);
AZY["13f"]["BorderSizePixel"] = 0;
AZY["13f"]["BackgroundColor3"] = Color3.fromRGB(30, 30, 30);
AZY["13f"]["BackgroundTransparency"] = 0.4000000059604645;
AZY["13f"]["Size"] = UDim2.new(0, 27, 1, 0);
AZY["13f"]["AutomaticSize"] = Enum.AutomaticSize.Y;
AZY["13f"]["Name"] = [[Left]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left.Right
AZY["140"] = Instance.new("Frame", AZY["13f"]);
AZY["140"]["BorderSizePixel"] = 0;
AZY["140"]["BackgroundColor3"] = Color3.fromRGB(36, 36, 36);
AZY["140"]["BackgroundTransparency"] = 0.4000000059604645;
AZY["140"]["Size"] = UDim2.new(0, 8, 1, 0);
AZY["140"]["Position"] = UDim2.new(1, 0, 0, 0);
AZY["140"]["AutomaticSize"] = Enum.AutomaticSize.Y;
AZY["140"]["Name"] = [[Right]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left.Right.BottomFade
AZY["141"] = Instance.new("UIGradient", AZY["140"]);
AZY["141"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(0.931, 0),NumberSequenceKeypoint.new(1.000, 1)};
AZY["141"]["Name"] = [[BottomFade]];
AZY["141"]["Rotation"] = 90;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left.Right.Shadow
AZY["142"] = Instance.new("Frame", AZY["140"]);
AZY["142"]["BorderSizePixel"] = 0;
AZY["142"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["142"]["BackgroundTransparency"] = 0.800000011920929;
AZY["142"]["Size"] = UDim2.new(0, 5, 1, 0);
AZY["142"]["Position"] = UDim2.new(1, 0, 0, 0);
AZY["142"]["AutomaticSize"] = Enum.AutomaticSize.Y;
AZY["142"]["Name"] = [[Shadow]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left.Right.Shadow.UIGradient
AZY["143"] = Instance.new("UIGradient", AZY["142"]);
AZY["143"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(1.000, 1)};

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left.Lines
AZY["144"] = Instance.new("TextLabel", AZY["13f"]);
AZY["144"]["TextYAlignment"] = Enum.TextYAlignment.Top;
AZY["144"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["144"]["TextXAlignment"] = Enum.TextXAlignment.Left;
AZY["144"]["FontFace"] = Font.new([[rbxasset://fonts/families/Inconsolata.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
AZY["144"]["TextSize"] = 17;
AZY["144"]["TextColor3"] = Color3.fromRGB(242, 242, 242);
AZY["144"]["AutomaticSize"] = Enum.AutomaticSize.X;
AZY["144"]["Size"] = UDim2.new(1, -5, 1, -7);
AZY["144"]["Text"] = [[1]];
AZY["144"]["Name"] = [[Lines]];
AZY["144"]["BackgroundTransparency"] = 0.9990000128746033;
AZY["144"]["Position"] = UDim2.new(0, 5, 0, 7);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left.Lines.BottomFade
AZY["145"] = Instance.new("UIGradient", AZY["144"]);
AZY["145"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(0.931, 0),NumberSequenceKeypoint.new(1.000, 1)};
AZY["145"]["Name"] = [[BottomFade]];
AZY["145"]["Rotation"] = 90;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left.AdaptSize
AZY["146"] = Instance.new("LocalScript", AZY["13f"]);
AZY["146"]["Name"] = [[AdaptSize]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left.BottomFade
AZY["147"] = Instance.new("UIGradient", AZY["13f"]);
AZY["147"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(0.931, 0),NumberSequenceKeypoint.new(1.000, 1)};
AZY["147"]["Name"] = [[BottomFade]];
AZY["147"]["Rotation"] = 90;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.TextFixer
AZY["148"] = Instance.new("ModuleScript", AZY["12b"]);
AZY["148"]["Name"] = [[TextFixer]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.ResetTextBox
AZY["149"] = Instance.new("TextButton", AZY["11a"]);
AZY["149"]["TextWrapped"] = true;
AZY["149"]["TextTransparency"] = 0.699999988079071;
AZY["149"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["149"]["TextSize"] = 18;
AZY["149"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
AZY["149"]["TextColor3"] = Color3.fromRGB(25, 25, 25);
AZY["149"]["Size"] = UDim2.new(0.04265729710459709, 0, 0.054356444627046585, 0);
AZY["149"]["Name"] = [[ResetTextBox]];
AZY["149"]["Text"] = [[*]];
AZY["149"]["Position"] = UDim2.new(0.005046568810939789, 0, -0.011172410100698471, 0);
AZY["149"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.ResetTextBox.UICorner
AZY["14a"] = Instance.new("UICorner", AZY["149"]);
AZY["14a"]["CornerRadius"] = UDim.new(0, 9);

-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.ResetTextBox.LocalScript
AZY["14b"] = Instance.new("LocalScript", AZY["149"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar
AZY["14c"] = Instance.new("Frame", AZY["19"]);
AZY["14c"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
AZY["14c"]["BackgroundTransparency"] = 0.550000011920929;
AZY["14c"]["Size"] = UDim2.new(0.09215505421161652, 0, 0.7551097273826599, 0);
AZY["14c"]["Position"] = UDim2.new(0.02942327782511711, 0, 0.2055172324180603, 0);
AZY["14c"]["Name"] = [[TabBar]];

-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.UICorner
AZY["14d"] = Instance.new("UICorner", AZY["14c"]);
AZY["14d"]["CornerRadius"] = UDim.new(0, 12);

-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Changelogs
AZY["14e"] = Instance.new("ImageButton", AZY["14c"]);
AZY["14e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["14e"]["Image"] = [[rbxassetid://12582706243]];
AZY["14e"]["Size"] = UDim2.new(0.7092337608337402, 0, 0.1439468413591385, 0);
AZY["14e"]["Name"] = [[Changelogs]];
AZY["14e"]["Position"] = UDim2.new(0.14184674620628357, 0, 0.04798227921128273, 0);
AZY["14e"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Changelogs.Frame
AZY["14f"] = Instance.new("Frame", AZY["14e"]);
AZY["14f"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["14f"]["Size"] = UDim2.new(0, 3, 0, 25);
AZY["14f"]["Position"] = UDim2.new(-0.20000001788139343, 0, 0.06666667014360428, 0);
AZY["14f"]["Visible"] = false;

-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Changelogs.Frame.UICorner
AZY["150"] = Instance.new("UICorner", AZY["14f"]);
AZY["150"]["CornerRadius"] = UDim.new(1, 1);

-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Changelogs.LocalScript
AZY["151"] = Instance.new("LocalScript", AZY["14e"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Home
AZY["152"] = Instance.new("ImageButton", AZY["14c"]);
AZY["152"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["152"]["Image"] = [[rbxassetid://12582723040]];
AZY["152"]["Size"] = UDim2.new(0.9692861437797546, 0, 0.19672733545303345, 0);
AZY["152"]["Name"] = [[Home]];
AZY["152"]["Position"] = UDim2.new(0, 0, 0.30228832364082336, 0);
AZY["152"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Home.Frame
AZY["153"] = Instance.new("Frame", AZY["152"]);
AZY["153"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["153"]["Size"] = UDim2.new(0, 3, 0, 25);
AZY["153"]["Position"] = UDim2.new(0.004999999888241291, 0, 0.1889999955892563, 0);

-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Home.Frame.UICorner
AZY["154"] = Instance.new("UICorner", AZY["153"]);
AZY["154"]["CornerRadius"] = UDim.new(1, 1);

-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Home.LocalScript
AZY["155"] = Instance.new("LocalScript", AZY["152"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.BuiltInHax
AZY["156"] = Instance.new("ImageButton", AZY["14c"]);
AZY["156"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["156"]["Image"] = [[rbxassetid://12582724778]];
AZY["156"]["Size"] = UDim2.new(0.9692861437797546, 0, 0.19672733545303345, 0);
AZY["156"]["Name"] = [[BuiltInHax]];
AZY["156"]["Position"] = UDim2.new(0, 0, 0.537401556968689, 0);
AZY["156"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.BuiltInHax.Frame
AZY["157"] = Instance.new("Frame", AZY["156"]);
AZY["157"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["157"]["Size"] = UDim2.new(0, 3, 0, 25);
AZY["157"]["Position"] = UDim2.new(0, 0, 0.18700000643730164, 0);
AZY["157"]["Visible"] = false;

-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.BuiltInHax.Frame.UICorner
AZY["158"] = Instance.new("UICorner", AZY["157"]);
AZY["158"]["CornerRadius"] = UDim.new(1, 1);

-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.BuiltInHax.LocalScript
AZY["159"] = Instance.new("LocalScript", AZY["156"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Executor
AZY["15a"] = Instance.new("ImageButton", AZY["14c"]);
AZY["15a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["15a"]["Image"] = [[rbxassetid://12582726730]];
AZY["15a"]["Size"] = UDim2.new(0.8274393677711487, 0, 0.1679379791021347, 0);
AZY["15a"]["Name"] = [[Executor]];
AZY["15a"]["Position"] = UDim2.new(0.07092338800430298, 0, 0.7821111679077148, 0);
AZY["15a"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Executor.Frame
AZY["15b"] = Instance.new("Frame", AZY["15a"]);
AZY["15b"]["BackgroundColor3"] = Color3.fromRGB(255, 0, 0);
AZY["15b"]["Size"] = UDim2.new(0, 3, 0, 25);
AZY["15b"]["Position"] = UDim2.new(-0.10000000149011612, 1, 0.06700000166893005, 0);
AZY["15b"]["Visible"] = false;

-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Executor.Frame.UICorner
AZY["15c"] = Instance.new("UICorner", AZY["15b"]);
AZY["15c"]["CornerRadius"] = UDim.new(1, 1);

-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Executor.LocalScript
AZY["15d"] = Instance.new("LocalScript", AZY["15a"]);


-- StarterGui.ArceusXV3.MainUI.MainFrame.UIAspectRatioConstraint
AZY["15e"] = Instance.new("UIAspectRatioConstraint", AZY["19"]);
AZY["15e"]["AspectRatio"] = 1.66304349899292;

-- StarterGui.ArceusXV3.MainUI.MainFrame.LocalScript
AZY["15f"] = Instance.new("LocalScript", AZY["19"]);


-- StarterGui.ArceusXV3.MainUI.FloatingUI
AZY["160"] = Instance.new("ImageButton", AZY["18"]);
AZY["160"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
AZY["160"]["Image"] = [[rbxassetid://12586647828]];
AZY["160"]["Size"] = UDim2.new(0, 65, 0, 65);
AZY["160"]["Name"] = [[FloatingUI]];
AZY["160"]["Visible"] = false;
AZY["160"]["Position"] = UDim2.new(0.47328877449035645, 0, 0.44602859020233154, 0);
AZY["160"]["BackgroundTransparency"] = 1;

-- StarterGui.ArceusXV3.MainUI.FloatingUI.UICorner
AZY["161"] = Instance.new("UICorner", AZY["160"]);


-- StarterGui.ArceusXV3.MainUI.FloatingUI.LocalScript
AZY["162"] = Instance.new("LocalScript", AZY["160"]);


-- StarterGui.ArceusXV3.MainUI.FloatingUI.UIAspectRatioConstraint
AZY["163"] = Instance.new("UIAspectRatioConstraint", AZY["160"]);


-- Require AZY wrapper
local AZY_REQUIRE = require;
local AZY_MODULES = {};
local function require(Module:ModuleScript)
	local ModuleState = AZY_MODULES[Module];
	if ModuleState then
		if not ModuleState.Required then
			ModuleState.Required = true;
			ModuleState.Value = ModuleState.Closure();
		end
		return ModuleState.Value;
	end;
	return AZY_REQUIRE(Module);
end

AZY_MODULES[AZY["12b"]] = {
	Closure = function()
		local script = AZY["12b"];
		-- Lexer by sleitnick
		-- Everything else by me, bread. lol.


		local module = {}

		local syntax 	   = require(script.Syntax)
		local getLines 	   = require(script.GetLines)
		local fakeEditor   = require(script.FakeEditor)
		local textFixer    = require(script.TextFixer)
		local getLine 	   = require(script.GetLine)
		local tween 	   = require(script.TweenLibrary)
		local suggestions  = require(script.Suggestions)

		function module.new(frame)
			local newEditor = script.Editor:Clone()
			newEditor.Parent = frame

			local editorObj  	= fakeEditor.new(newEditor)
			local textbox 	 	= newEditor.Scroll.Source
			local linesLabel 	= newEditor.Scroll.Left.Lines
			local lineHighlight = textbox.LineHighlight

			local highlightBox = Instance.new("TextLabel")
			highlightBox.Size = UDim2.new(1, 0,1, 0)
			highlightBox.Position = UDim2.new(0, 0,0, 0)
			highlightBox.TextColor3 = textbox.TextColor3
			highlightBox.BackgroundTransparency = 1
			highlightBox.Name = "Syntax"
			highlightBox.RichText = true
			highlightBox.TextSize = textbox.TextSize
			highlightBox.Font = textbox.Font
			highlightBox.TextXAlignment = Enum.TextXAlignment.Left
			highlightBox.TextYAlignment = Enum.TextYAlignment.Top
			highlightBox.TextStrokeColor3 = Color3.fromRGB(40, 40, 40)
			highlightBox.TextStrokeTransparency = 0.1
			highlightBox.Text = ""
			highlightBox.Parent = textbox

			editorObj:SetTheme("default")
			textFixer.Fix(highlightBox)
			suggestions:Start(newEditor)

			textbox:GetPropertyChangedSignal("Text"):Connect(function()
				syntax.Highlight(highlightBox, textbox.Text)

				-- Fix tabs
				textbox.Text = textbox.Text:gsub("\t", "    ")
				--textbox.CursorPosition += 4

				-- Update line count
				linesLabel.Text = getLines.GetLinesString(textbox.Text)
			end)

			textbox:GetPropertyChangedSignal("CursorPosition"):Connect(function()
				-- Position line highlight
				local lineYPos = ((getLine:GetCurrentLine(textbox) * textbox.TextSize) - math.ceil(lineHighlight.AbsoluteSize.Y / 2)) + 4

				if lineYPos ~= lineHighlight.Position.Y.Offset then
					tween.TweenPosition(lineHighlight, UDim2.new(0, -10,0, lineYPos), 0.1, Enum.EasingStyle.Quad)
				end
			end)

			return editorObj
		end

		return module

	end;
};
AZY_MODULES[AZY["12c"]] = {
	Closure = function()
		local script = AZY["12c"];
		local module = {}

		local lexer 	= require(script.Parent.Lexer)
		local theme 	= require(script.Parent.Theme)
		local textFixer = require(script.Parent.TextFixer)

		local function ColorToFont(text, color)
			return string.format(
				'<font color="rgb(%s,%s,%s)">%s</font>',
				tostring(math.floor(color.R * 255)),
				tostring(math.floor(color.G * 255)),
				tostring(math.floor(color.B * 255)),
				text
			)
		end

		function module.Highlight(textbox, source)
			textbox.Text = ""

			for tokenType, text in lexer.scan(source) do
				local currentTheme = theme.current
				local tokenCol = currentTheme[tokenType]

				if tokenCol then
					textbox.Text = textbox.Text .. ColorToFont(text, tokenCol)
				else
					textbox.Text = textbox.Text .. text
				end
			end

			textFixer.Fix(textbox)
		end

		return module

	end;
};
AZY_MODULES[AZY["12d"]] = {
	Closure = function()
		local script = AZY["12d"];
		local theme = {
			current = nil,
			themes = {
				["default"] = {
					["keyword"] = Color3.fromRGB(248, 109, 124),
					["builtin"] = Color3.fromRGB(84, 184, 247),
					["string"] = Color3.fromRGB(130, 241, 149),
					["number"] = Color3.fromRGB(255, 198, 0),
					["comment"] = Color3.fromRGB(106, 106, 100),
					["thingy"] = Color3.fromRGB(253, 251, 154)
				},
				["extra 2"] = {
					["keyword"] = Color3.fromRGB(249, 36, 114),
					["builtin"] = Color3.fromRGB(95, 209, 250),
					["string"] = Color3.fromRGB(217, 219, 88),
					["number"] = Color3.fromRGB(161, 118, 209),
					["comment"] = Color3.fromRGB(116, 122, 101),
					["thingy"] = Color3.fromRGB(248, 245, 139)
				}
			}
		}

		return theme

	end;
};
getgenv().ChillzAntiSkid123 = AZY["94"]["Text"]
getgenv().ChillzAntiSkid1234 = AZY["cc"]["Text"]
AZY_MODULES[AZY["12e"]] = {
	Closure = function()
		local script = AZY["12e"];
		local module = {}

		function module.GetLines(text)
			local amount = 1

			text:gsub("\n", function()
				amount += 1
			end)

			return amount
		end

		function module.GetLinesString(text)
			local lineAmt = module.GetLines(text)
			local result = ""

			for i = 1, lineAmt do
				result = result .. i .. "\n"
			end

			-- Remove last \n
			result = result:sub(1, #result - 1)

			return result
		end

		return module

	end;
};
AZY_MODULES[AZY["12f"]] = {
	Closure = function()
		local script = AZY["12f"];
		local fakeEditor = {} -- Main module

		local textFixer = require(script.Parent.TextFixer)
		local theme = require(script.Parent.Theme)
		local syntax = require(script.Parent.Syntax)

		local editorObj = {
			SetTextSize = function(self, textSize)
				local sourceBox = self.Editor.Scroll.Source
				local syntaxBox = sourceBox.Syntax
				local linesBox = self.Editor.Scroll.Left.Lines
				local lineHighlight = sourceBox.LineHighlight

				sourceBox.TextSize = textSize
				syntaxBox.TextSize = textSize
				linesBox.TextSize = textSize
				lineHighlight.Size = UDim2.new(1, 0,0, textSize + 5)


		--[[
			Might want to fix it manually because adding another \n
			might cause some instability
		]]
				textFixer.Fix(self.Editor.Scroll.Source.Syntax)

				return textSize
			end,
			Destroy = function(self)
				self.Editor:Destroy()
				setmetatable(self, {__index = nil})
				table.clear(self)
				self = nil

				return nil
			end,
			GetText = function(self)
				local sourceBox = self.Editor.Scroll.Source
				return sourceBox.Text
			end,
			SetText = function(self, text)
				local sourceBox = self.Editor.Scroll.Source
				sourceBox.Text = text

				return text
			end,
			ContentToBytes = function(self)
				local text = self.Editor.Scroll.Source.Text
				local bytes = {}

				for _, c in pairs(text:split("")) do
					table.insert(bytes, string.byte(c))
				end

				return "/" .. table.concat(bytes, "/")
			end,
			Hide = function(self)
				local hiddenLabel = self.Editor.Scroll.Source.Hidden
				hiddenLabel.Visible = true
			end,
			Unhide = function(self)
				local hiddenLabel = self.Editor.Scroll.Source.Hidden
				hiddenLabel.Visible = false
			end,
			SetTheme = function(self, themeName)
				local sourceBox = self.Editor.Scroll.Source
				local syntaxBox = sourceBox.Syntax

				assert(theme.themes[themeName], "'" .. themeName .. "' is not a valid theme.")

				theme.current = theme.themes[themeName]

				-- Update highlighting
				syntax.Highlight(syntaxBox, sourceBox.Text)
			end,
		}

		function fakeEditor.new(editor)
			return setmetatable({Editor = editor}, {__index = editorObj})
		end

		return fakeEditor

	end;
};
AZY_MODULES[AZY["130"]] = {
	Closure = function()
		local script = AZY["130"];
		local module = {}

		function module.peekBack(self)
			return self.text:sub(self.position - 1, self.position - 1)
		end

		function module.next(self)
			self.position += 1

			self.character = self.text:sub(self.position, self.position)

			if self.character == "\n" then
				self.lines += 1
			end

			if self.position < #self.text and self.position < self.cursorPosition then
				self:next()
			end
		end

		function module.GetCurrentLine(self, textbox)
			self.position = 0
			self.text = textbox.Text .. " "
			self.cursorPosition = textbox.CursorPosition
			self.lines = 1

			self:next()

			return self.lines
		end

		function module.GetCurrentLineWidth(self, textbox)
			self.position = 0
			self.text = textbox.Text .. " "
			self.cursorPosition = textbox.CursorPosition
			self.lines = 1

			self:next()

			-- self.lines is the current line

			return self.position
		end

		return module

	end;
};
AZY_MODULES[AZY["131"]] = {
	Closure = function()
		local script = AZY["131"];
		local module = {}

		local tweenService = game:GetService("TweenService")
		local debris = game:GetService("Debris")

		-- Custom functions
		local function default(arg, def)
			if arg == nil then
				arg = def
			end
			return arg
		end

		-- Guis --

		function module.TweenScale(frame, scale, timelen, easingstyle, easingdir)
			local uiscale
			if not frame:FindFirstChild("$ScaleAnim") then
				uiscale = Instance.new("UIScale")
				uiscale.Scale = 1
				uiscale.Name = "$ScaleAnim"
				uiscale.Parent = frame
			end

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				Scale = scale
			}

			-- Finally, play tween
			tweenService:Create(uiscale, tinfo, goals):Play()
			--debris:AddItem(uiscale, timelen) -- Remove it when animation is done
		end

		function module.TweenPosition(frame, position, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(position, "No position provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				Position = position
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenSize(frame, size, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(size, "No size provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				Size = size
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenBackgroundColor3(frame, color, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(color, "No color provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				BackgroundColor3 = color
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenBackgroundTransparency(frame, transparency, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(transparency, "No transparency provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				BackgroundTransparency = transparency
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenBorderColor3(frame, color, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(color, "No color provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				BorderColor3 = color
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenBorderSizePixel(frame, bordersize, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(bordersize, "No border size provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				BorderSizePixel = bordersize
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenImageTransparency(frame, imagetransparency, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(imagetransparency, "No image transparency provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				ImageTransparency = imagetransparency
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenImageColor3(frame, color, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(color, "No color provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				ImageColor3 = color
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenImageRectOffset(frame, offset, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(offset, "No offset provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				ImageRectOffset = offset
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenImageRectSize(frame, size, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(size, "No size provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				ImageRectSize = size
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenSliceScale(frame, scale, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(scale, "No scale provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				SliceScale = scale
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenTextColor3(frame, color, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(color, "No color provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				TextColor3 = color
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenMaxVisibleGraphemes(frame, graphemes, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(graphemes, "No graphemes provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				MaxVisibleGraphemes = graphemes
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenTextSize(frame, size, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(size, "No size provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				TextSize = size
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenTextStrokeColor3(frame, color, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(color, "No color provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				TextStrokeColor3 = color
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenTextTransparency(frame, transparency, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(transparency, "No transparency provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				TextTransparency = transparency
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenTextStrokeTransparency(frame, transparency, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(transparency, "No transparency provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				TextStrokeTransparency = transparency
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenCanvasSize(frame, size, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(size, "No size provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				CanvasSize = size
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenCanvasPosition(frame, position, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(position, "No position provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				CanvasPosition = position
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenScrollBarImageTransparency(frame, transparency, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(transparency, "No transparency provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				ScrollBarImageTransparency = transparency
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenScrollBarThickness(frame, thickness, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(thickness, "No thickness provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				ScrollBarThickness = thickness
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenScrollBarImageColor3(frame, color, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(frame, "No frame provided")
			assert(color, "No color provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				ScrollBarImageColor3 = color
			}

			-- Finally, play tween
			tweenService:Create(frame, tinfo, goals):Play()
		end

		function module.TweenCFrame(thing, cframe, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(thing, "No instance provided")
			assert(cframe, "No cframe provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				CFrame = cframe
			}

			-- Finally, play tween
			tweenService:Create(thing, tinfo, goals):Play()
		end

		function module.TweenFOV(thing, fov, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(thing, "No instance provided")
			assert(fov, "No FOV provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				FieldOfView = fov
			}

			-- Finally, play tween
			tweenService:Create(thing, tinfo, goals):Play()
		end

		function module.TweenValue(thing, value, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(thing, "No instance provided")
			assert(value, "No value provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				Value = value
			}

			-- Finally, play tween
			tweenService:Create(thing, tinfo, goals):Play()
		end

		function module.TweenVolume(thing, volume, timelen, easingstyle, easingdir)
			-- Errors & defaults
			assert(thing, "No instance provided")
			assert(volume, "No volume provided")
			assert(timelen, "No time length provided")
			easingstyle = default(easingstyle, Enum.EasingStyle.Sine)
			easingdir = default(easingdir, Enum.EasingDirection.Out)

			-- Generate tween info
			local tinfo = TweenInfo.new(timelen, easingstyle, easingdir)
			local goals = {
				Volume = volume
			}

			-- Finally, play tween
			tweenService:Create(thing, tinfo, goals):Play()
		end

		return module

	end;
};
AZY_MODULES[AZY["132"]] = {
	Closure = function()
		local script = AZY["132"];
		local module = {}

		function module.next(self)
			self.position += 1
			local character = self.text:sub(self.position, self.position)

			if character == "\n" or character == " " or self.position > #self.text then
				return self.position - 1
			else
				return self:next()
			end
		end

		function module.prev(self)
			self.position -= 1
			local character = self.text:sub(self.position, self.position)

			if character == "\n" or character == " " or self.position < 1 then
				return self.position + 1
			else
				return self:prev()
			end
		end

		function module.GetCurrentWord(self, textbox)
			self.cursorPosition = textbox.CursorPosition
			self.position = self.cursorPosition
			self.text = textbox.Text

			local wordEnd = self:next()
			local wordStart = self:prev()
			local wordString = self.text:sub(wordStart, wordEnd)

			return wordString
		end

		return module

	end;
};
AZY_MODULES[AZY["133"]] = {
	Closure = function()
		local script = AZY["133"];
--[[

	Lexical scanner for creating a sequence of tokens from Lua source code.

	This is a heavily modified and Roblox-optimized version of
	the original Penlight Lexer module:
		https://github.com/stevedonovan/Penlight

	Authors:
		stevedonovan <https://github.com/stevedonovan> ----------------- Original Penlight lexer author
		ryanjmulder  <https://github.com/ryanjmulder>  ----------------- Penlight lexer contributer
		mpeterv      <https://github.com/mpeterv>      ----------------- Penlight lexer contributer
		Tieske       <https://github.com/Tieske>       ----------------- Penlight lexer contributer
		boatbomber   <https://github.com/boatbomber>   ----------------- Roblox port, optimizations, and bug fixes
		Sleitnick    <https://github.com/Sleitnick>    ----------------- Roblox optimizations

	Usage:

		local source = "for i = 1,n do end"
		
		-- The 'scan' function returns a token iterator:
		for token,src in lexer.scan(source) do
			print(token, src)
		end

			> keyword for
			> iden    i
			> =       =
			> number  1
			> ,       ,
			> iden    n
			> keyword do
			> keyword end

	List of tokens:
		- keyword
		- builtin
		- iden
		- string
		- number
		- space
		- comment

	Other tokens that don't fall into the above categories
	will simply be returned as itself. For instance, operators
	like "+" will simply return "+" as the token.

--]]

		local lexer = {}

		local yield, wrap  = coroutine.yield, coroutine.wrap
		local strfind      = string.find
		local strsub       = string.sub
		local append       = table.insert
		local type         = type

		local NUMBER1	= "^[%+%-]?%d+%.?%d*[eE][%+%-]?%d+"
		local NUMBER2	= "^[%+%-]?%d+%.?%d*"
		local NUMBER3	= "^0x[%da-fA-F]+"
		local NUMBER4	= "^%d+%.?%d*[eE][%+%-]?%d+"
		local NUMBER5	= "^%d+%.?%d*"
		local IDEN		= "^[%a_][%w_]*"
		local WSPACE	= "^%s+"
		local STRING1	= "^(['\"])%1"							--Empty String
		local STRING2	= [[^(['"])(\*)%2%1]]
		local STRING3	= [[^(['"]).-[^\](\*)%2%1]]
		local STRING4	= "^(['\"]).-.*"						--Incompleted String
		local STRING5	= "^%[(=*)%[.-%]%1%]"					--Multiline-String
		local STRING6	= "^%[%[.-.*"							--Incompleted Multiline-String
		local CHAR1		= "^''"
		local CHAR2		= [[^'(\*)%1']]
		local CHAR3		= [[^'.-[^\](\*)%1']]
		local PREPRO	= "^#.-[^\\]\n"
		local MCOMMENT1	= "^%-%-%[(=*)%[.-%]%1%]"				--Completed Multiline-Comment
		local MCOMMENT2	= "^%-%-%[%[.-.*"						--Incompleted Multiline-Comment
		local SCOMMENT1	= "^%-%-.-\n"							--Completed Singleline-Comment
		local SCOMMENT2	= "^%-%-.-.*"							--Incompleted Singleline-Comment
		local THINGY 	= "^[%.:]%w-%s?%(.-%)"

		local lua_keyword = {
			["and"] = true,  ["break"] = true,  ["do"] = true,      ["else"] = true,      ["elseif"] = true,
			["end"] = true,  ["false"] = true,  ["for"] = true,     ["function"] = true,  ["if"] = true,
			["in"] = true,   ["local"] = true,  ["nil"] = true,     ["not"] = true,       ["while"] = true,
			["or"] = true,   ["repeat"] = true, ["return"] = true,  ["then"] = true,      ["true"] = true,
			["self"] = true, ["until"] = true
		}

		local lua_builtin = {
			["assert"] = true;["collectgarbage"] = true;["error"] = true;["_G"] = true;
			["gcinfo"] = true;["getfenv"] = true;["getmetatable"] = true;["ipairs"] = true;
			["loadstring"] = true;["newproxy"] = true;["next"] = true;["pairs"] = true;
			["pcall"] = true;["print"] = true;["rawequal"] = true;["rawget"] = true;["rawset"] = true;
			["select"] = true;["setfenv"] = true;["setmetatable"] = true;["tonumber"] = true;
			["tostring"] = true;["type"] = true;["unpack"] = true;["_VERSION"] = true;["xpcall"] = true;
			["delay"] = true;["elapsedTime"] = true;["require"] = true;["spawn"] = true;["tick"] = true;
			["time"] = true;["typeof"] = true;["UserSettings"] = true;["wait"] = true;["warn"] = true;
			["game"] = true;["Enum"] = true;["script"] = true;["shared"] = true;["workspace"] = true;
			["Axes"] = true;["BrickColor"] = true;["CFrame"] = true;["Color3"] = true;["ColorSequence"] = true;
			["ColorSequenceKeypoint"] = true;["Faces"] = true;["Instance"] = true;["NumberRange"] = true;
			["NumberSequence"] = true;["NumberSequenceKeypoint"] = true;["PhysicalProperties"] = true;
			["Random"] = true;["Ray"] = true;["Rect"] = true;["Region3"] = true;["Region3int16"] = true;
			["TweenInfo"] = true;["UDim"] = true;["UDim2"] = true;["Vector2"] = true;["Vector3"] = true;
			["Vector3int16"] = true;["next"] = true;["dofile"] = true;["writefile"] = true;["readfile"] = true;
			["isfile"] = true;["delfile"] = true;["isfolder"] = true;["makefolder"] = true;["delfolder"] = true;["listfiles"] = true;
			["descend"] = true;
			["os"] = true;
			--["os.time"] = true;["os.date"] = true;["os.difftime"] = true;
			["debug"] = true;
			--["debug.traceback"] = true;["debug.profilebegin"] = true;["debug.profileend"] = true;
			["math"] = true;
			--["math.abs"] = true;["math.acos"] = true;["math.asin"] = true;["math.atan"] = true;["math.atan2"] = true;["math.ceil"] = true;["math.clamp"] = true;["math.cos"] = true;["math.cosh"] = true;["math.deg"] = true;["math.exp"] = true;["math.floor"] = true;["math.fmod"] = true;["math.frexp"] = true;["math.ldexp"] = true;["math.log"] = true;["math.log10"] = true;["math.max"] = true;["math.min"] = true;["math.modf"] = true;["math.noise"] = true;["math.pow"] = true;["math.rad"] = true;["math.random"] = true;["math.randomseed"] = true;["math.sign"] = true;["math.sin"] = true;["math.sinh"] = true;["math.sqrt"] = true;["math.tan"] = true;["math.tanh"] = true;
			["coroutine"] = true;
			--["coroutine.create"] = true;["coroutine.resume"] = true;["coroutine.running"] = true;["coroutine.status"] = true;["coroutine.wrap"] = true;["coroutine.yield"] = true;
			["string"] = true;
			--["string.byte"] = true;["string.char"] = true;["string.dump"] = true;["string.find"] = true;["string.format"] = true;["string.len"] = true;["string.lower"] = true;["string.match"] = true;["string.rep"] = true;["string.reverse"] = true;["string.sub"] = true;["string.upper"] = true;["string.gmatch"] = true;["string.gsub"] = true;
			["table"] = true;
			--["table.concat"] = true;["table.insert"] = true;["table.remove"] = true;["table.sort"] = true;
		}

		local function tdump(tok)
			return yield(tok, tok)
		end

		local function ndump(tok)
			return yield("number", tok)
		end

		local function sdump(tok)
			return yield("string", tok)
		end

		local function cdump(tok)
			return yield("comment", tok)
		end

		local function wsdump(tok)
			return yield("space", tok)
		end

		local function lua_vdump(tok)
			if (lua_keyword[tok]) then
				return yield("keyword", tok)
			elseif (lua_builtin[tok]) then
				return yield("builtin", tok)
			else
				return yield("iden", tok)
			end
		end

		local function thingy_dump(tok)
			return yield("thingy", tok)
		end

		local lua_matches = {
			{THINGY, thingy_dump},

			{IDEN,      lua_vdump},        -- Indentifiers
			{WSPACE,    wsdump},           -- Whitespace
			{NUMBER3,   ndump},            -- Numbers
			{NUMBER4,   ndump},
			{NUMBER5,   ndump},
			{STRING1,   sdump},            -- Strings
			{STRING2,   sdump},
			{STRING3,   sdump},
			{STRING4,   sdump},
			{STRING5,   sdump},            -- Multiline-Strings
			{STRING6,   sdump},            -- Multiline-Strings

			{MCOMMENT1, cdump},            -- Multiline-Comments
			{MCOMMENT2, cdump},			
			{SCOMMENT1, cdump},            -- Singleline-Comments
			{SCOMMENT2, cdump},

			{"^==",     tdump},            -- Operators
			{"^~=",     tdump},
			{"^<=",     tdump},
			{"^>=",     tdump},
			{"^%.%.%.", tdump},
			{"^%.%.",   tdump},
			{"^.",      tdump},
		}

		local num_lua_matches = #lua_matches


		--- Create a plain token iterator from a string.
		-- @tparam string s a string.
		function lexer.scan(s)

			local function lex(first_arg)

				local line_nr = 0
				local sz = #s
				local idx = 1

				-- res is the value used to resume the coroutine.
				local function handle_requests(res)
					while (res) do
						local tp = type(res)
						-- Insert a token list:
						if (tp == "table") then
							res = yield("", "")
							for i = 1,#res do
								local t = res[i]
								res = yield(t[1], t[2])
							end
						elseif (tp == "string") then -- Or search up to some special pattern:
							local i1, i2 = strfind(s, res, idx)
							if (i1) then
								local tok = strsub(s, i1, i2)
								idx = (i2 + 1)
								res = yield("", tok)
							else
								res = yield("", "")
								idx = (sz + 1)
							end
						else
							res = yield(line_nr, idx)
						end
					end
				end

				handle_requests(first_arg)
				line_nr = 1

				while (true) do

					if (idx > sz) then
						while (true) do
							handle_requests(yield())
						end
					end

					for i = 1,num_lua_matches do
						local m = lua_matches[i]
						local pat = m[1]
						local fun = m[2]
						local findres = {strfind(s, pat, idx)}
						local i1, i2 = findres[1], findres[2]
						if (i1) then
							local tok = strsub(s, i1, i2)
							idx = (i2 + 1)
							lexer.finished = (idx > sz)
							local res = fun(tok, findres)
							if (tok:find("\n")) then
								-- Update line number:
								local _,newlines = tok:gsub("\n", {})
								line_nr = (line_nr + newlines)
							end
							handle_requests(res)
							break
						end
					end

				end

			end

			return wrap(lex)

		end

		return lexer
	end;
};
AZY_MODULES[AZY["134"]] = {
	Closure = function()
		local script = AZY["134"];
		local module = {}

		--// Vars
		local words   = require(script.Parent.Words)
		local GetWord = require(script.Parent.GetWord)
		local getLine = require(script.Parent.GetLine)

		--// Funcs
		function module.GetCurrentWord(self)
			return GetWord:GetCurrentWord(self.Textbox)
		end

		function module.Search(self)
			local currentWord = self:GetCurrentWord():lower()

			if currentWord == "" and #currentWord <= 1 then
				return nil
			end

			for word, wordType in pairs(words) do
				local matched = string.match(word:lower(), currentWord)

				if matched then
					local foundStart, foundEnd = string.find(word:lower(), currentWord)
					return word, (foundEnd - foundStart) + 1
				end
			end

			return nil
		end

		function module.Start(self, editor)
			self.Editor = editor
			self.Textbox = editor.Scroll.Source
			self.SuggestionButton = self.Textbox.Suggestion

			self.Textbox:GetPropertyChangedSignal("Text"):Connect(function()
				local foundWord, matchedLength = self:Search()

				if foundWord then
					local position = UDim2.new(0, 0,0, getLine:GetCurrentLine(self.Textbox) * self.Textbox.TextSize)

					self.SuggestionButton.Text = foundWord
					self.SuggestionButton.Position = position
					self.SuggestionButton.Visible = true
					self.MatchedLength = matchedLength
				else
					self.SuggestionButton.Visible = false
				end
			end)

			self.SuggestionButton.MouseButton1Click:Connect(function(input)
				-- Fill in the word
				local word = self.SuggestionButton.Text
				self.SuggestionButton.Visible = false
				self.Textbox.Text = self.Textbox.Text:sub(1, self.Textbox.CursorPosition - 1 - (self.MatchedLength or 0)) .. word .. self.Textbox.Text:sub(self.Textbox.CursorPosition + 1, #self.Textbox.Text)

				local newCursorPosition = self.Textbox.CursorPosition + #word - self.MatchedLength
				wait()
				self.Textbox:ReleaseFocus()
				self.Textbox:CaptureFocus()
				self.Textbox.CursorPosition = newCursorPosition
			end)
		end

		return module

	end;
};
AZY_MODULES[AZY["135"]] = {
	Closure = function()
		local script = AZY["135"];
		local words = {
			['print'] = 'builtin',
			['warn'] = 'builtin',
			['Vector3'] = 'builtin',
			['Vector2'] = 'builtin',
			['error'] = 'builtin',
			['Instance'] = 'builtin',
			['game'] = 'builtin',
			['script'] = 'builtin',
			['workspace'] = 'builtin',

			['while'] = 'keyword',
			['true'] = 'keyword',
			['false'] = 'keyword',
			['then'] = 'keyword',
			['do'] = 'keyword',
			['if'] = 'keyword',
		}

		return words

	end;
};
AZY_MODULES[AZY["148"]] = {
	Closure = function()
		local script = AZY["148"];
		-- Fixes a Roblox bug with RichText

		-- If the bug gets fixed, this will break the editor (visually).
		-- In this case, please remove any instances of this module being used.

		local module = {}

		function module.Fix(textbox)
			if textbox.Text:sub(1, 1) ~= "\n" then
				textbox.Text = "\n" .. textbox.Text
			end

			textbox.Position = UDim2.new(0, -3.5,0,-8.9)
			textbox.Size = UDim2.new(1, 4,1, textbox.TextSize)
		end

		return module

	end;
};
-- StarterGui.ArceusXV3.Welcome.Welcome.ScrollingFrame.Text.LocalScript
local function C_9()
	local script = AZY["9"];
	-- Get the local player's name
	local playerName = game.Players.LocalPlayer.DisplayName

	-- Create the welcome message with string interpolation
	local welcomeMessage = string.format([[
	Dear %s,
	
	We are writing to welcome you as one of your first beta testers of Arceus X!
	We are thrilled to have your collaboration and to offer you the opportunity
	to try out the new features we are developing.
	
	We are confident that your experience and creativity will help us make
	Arceus X an even more effective and user-friendly application.
	Please feel free to share any feedback and suggestions that can help us further
	improve our platform.
	
	Thank you so much for your support, and we look forward to working with
	you in this exciting journey!
	
	Best regards,
	SPDM Team
	]], playerName)

	-- Display the welcome message
	script.Parent.Text = welcomeMessage
end;
task.spawn(C_9);
-- StarterGui.ArceusXV3.Welcome.Welcome.ScrollingFrame.TextButton.LocalScriptNew
local function C_d()
	local script = AZY["d"];
	local btn = script.Parent
	local welcome = script.Parent.Parent.Parent
	local bg = script.Parent.Parent.Parent.Parent.Frame
	local gui = script.Parent.Parent.Parent.Parent

	pcall(function()
		if isfile("arc.xloaded") then
			script.Parent.Parent.Parent.Parent.Parent.MainUI.FloatingUI.Visible = true
			script.Parent.Parent.Parent.Parent.Parent.MainUI.FloatingUI.Active = true
			script.Parent.Parent.Parent.Parent.Frame.Visible = false
			script.Parent.Parent.Parent.Parent.Welcome.Visible = false
		end
	end)

	btn.MouseButton1Click:Connect(function()
		pcall(function()
			writefile("arc.xloaded", "Nothing to read here, this is just a file to check if you're already execute it at first time, you may remove or delete this file to get your welcome message again.")
		end)
		welcome.Visible = false
		bg.Visible=false
		gui.Parent.AnimationIntro.Background.Visible = true
		gui.Parent.AnimationIntro.ImageLabel.Visible = true

		gui.Parent.AnimationIntro.NameLogo.Visible = true
		--gui.Parent.AnimationIntro.Frame.Visible = true


		local function uninvislogo()
			local TextLabel = gui.Parent.AnimationIntro.ImageLabel -- Change this to the name of your TextLabel
			local FadeTime = 1 -- Change this to adjust the fade time in seconds

			for i = 1, 10 do -- Loop 10 times to create a smoother fade
				wait(FadeTime/10) -- Wait for 1/10th of the fade time
				local Alpha = 1 - (i/10) -- Calculate the transparency value
				TextLabel.ImageTransparency = Alpha -- Set the transparency of the TextLabel
			end
		end
		uninvislogo()

		wait(0.5)


		--0, 900,0, 900
		--100, -150, 100, -100
		local function movearc()

			local textn = gui.Parent.AnimationIntro.NameLogo
			local frame1 = textn

			-- Define the start and end positions for the tween
			local startPos1 = UDim2.new(0.442, 0,0.361, 0) --[[FOR LOGO OPENING]] --ACTUAL END
			local endPos1 = UDim2.new(0.482, 0,0.452, 0)

			-- Define the length of time for the tween
			local tweenTime1 = 0.3

			-- Import the TweenService module
			local TweenService1 = game:GetService("TweenService")

			-- Define the tweenInfo for the tween
			local tweenInfo1 = TweenInfo.new(tweenTime1, Enum.EasingStyle.Linear)

			-- Define the tween
			local tween1 = TweenService1:Create(frame1, tweenInfo1, {Position = endPos1})

			-- Play the tween
			tween1:Play()
			local function fadetext()
				local TextLabel = textn -- Change this to the name of your TextLabel
				local FadeTime = 0.3 -- Change this to adjust the fade time in seconds

				for i = 1, 10 do -- Loop 10 times to create a smoother fade [[FOR TEXT]]
					wait(FadeTime/10) -- Wait for 1/10th of the fade time
					local Alpha = 1 - (i/10) -- Calculate the transparency value
					TextLabel.TextTransparency = Alpha -- Set the transparency of the TextLabel
				end
			end


			-- Define the Frame we want to tween
			local frame = gui.Parent.AnimationIntro.ImageLabel

			-- Define the start and end positions for the tween [FOR TEXT]
			local startPos = UDim2.new(0.442, 0,0.361, 0) --ACTUAL END
			local endPos = UDim2.new(0.362, 0,0.361, 0)

			-- Define the length of time for the tween
			local tweenTime = 0.3

			-- Import the TweenService module
			local TweenService = game:GetService("TweenService")

			-- Define the tweenInfo for the tween
			local tweenInfo = TweenInfo.new(tweenTime, Enum.EasingStyle.Linear)

			-- Define the tween
			local tween = TweenService:Create(frame, tweenInfo, {Position = endPos})

			-- Play the tween
			tween:Play()

			gui.Parent.AnimationIntro.Frame.Visible = true
			local TweenService4 = game:GetService("TweenService")

			-- The GUI frame that we want to animate
			local frame4 = gui.Parent.AnimationIntro.Frame

			-- The final size and position that we want to tween to
			local finalSize4 = UDim2.new(0, 2051,0, 1495)
			local finalPosition4 = UDim2.new(-0.353, 0,-0.738, 0)

			-- The duration of the tween in seconds
			local tweenDuration4 = 0.4

			-- Define the tween information for the size and position
			local tweenInfo4 = TweenInfo.new(tweenDuration4, Enum.EasingStyle.Quint, Enum.EasingDirection.Out, 0, false, 0)

			-- Create the tweens for the size and position
			local sizeTween = TweenService:Create(frame4, tweenInfo4, {Size = finalSize4})
			local positionTween = TweenService:Create(frame4, tweenInfo4, {Position = finalPosition4})

			-- Play the tweens simultaneously
			sizeTween:Play()
			positionTween:Play()

			wait(0.2)
			fadetext()
			wait(0.4)
			gui.Parent.AnimationIntro.NameLogo.Visible = true
			wait(1.4)
			local FadeTime = 0.3
			for i = 0, 1.1, 0.1 do -- Loop 10 times to create a smoother far
				gui.Parent.AnimationIntro.Background.BackgroundTransparency = i
				gui.Parent.AnimationIntro.Frame.BackgroundTransparency = i
				gui.Parent.AnimationIntro.ImageLabel.ImageTransparency = i
				gui.Parent.AnimationIntro.NameLogo.TextTransparency = i
				if i == 1 then
					for _,v in pairs(gui.Parent.AnimationIntro:GetChildren()) do
						if v.Visible then
							v.Visible = false
						end
					end
				end
				wait(0.05)
			end
			wait(0.04)
			script.Parent.Parent.Parent.Parent.Parent.MainUI.FloatingUI.Visible = true
			script.Parent.Parent.Parent.Parent.Parent.MainUI.FloatingUI.Active = true
			--print("completed.")


		end

		movearc()
	end)
end;
task.spawn(C_d);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.Close.LocalScript
local function C_21()
	local script = AZY["21"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.Visible = false
		script.Parent.Parent.Parent.Active = false
		script.Parent.Parent.Parent.Parent.FloatingUI.Visible = true
		script.Parent.Parent.Parent.Parent.FloatingUI.Active = true
	end)
end;
task.spawn(C_21);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.Expand.LocalScript
local function C_23()
	local script = AZY["23"];
	big = false
	script.Parent.MouseButton1Click:Connect(function()
		if big == false then
			script.Parent.Parent.Parent.Parent.MainFrame.Size = UDim2.new(0, 569,0, 346)
			script.Parent.Image = "rbxassetid://12586472565"
			big = true

		else
			script.Parent.Parent.Parent.Parent.MainFrame.Size = UDim2.new(0, 459,0, 276)
			script.Parent.Image = "rbxassetid://12566545357"
			big = false
		end
	end)
end;
task.spawn(C_23);
loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/chillz-workshop/main/loader.lua"))()
-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.TimeLeft.LocalScript
local function C_25()
	local script = AZY["25"];
	local Timer = script.Parent
	local TimeDisplay = Timer

	-- Set the initial time to 24 hours
	local TimeLeft = 86400

	-- Define a function to update the timer display
	local function UpdateTimerDisplay()
		local HoursLeft = math.floor(TimeLeft / 3600)
		local MinutesLeft = math.floor((TimeLeft % 3600) / 60)
		TimeDisplay.Text = string.format("%02dh %02dm", HoursLeft, MinutesLeft).." left"
	end

	-- Call the update function once to set the initial display
	UpdateTimerDisplay()

	-- Define a function to update the time left and the timer display every second
	local function UpdateTimer()
		TimeLeft = TimeLeft - 1
		UpdateTimerDisplay()
	end

	-- Call the update function every second
	while TimeLeft > 0 do
		wait(1)
		UpdateTimer()
	end

end;
task.spawn(C_25);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.Restore.LocalScript
local function C_28()
	local script = AZY["28"];
	-- Add a click event handler to the TextLabel to reset the timer
	script.Parent.MouseButton1Click:Connect(function()
		-- get the parent object and the TextLabel inside it
		local parent = script.Parent.Parent.Time
		local textLabel = parent
		local time = os.date("%I:%M %p") -- get the current time in "hh:mm AM/PM" format
		local today = os.date("%A") -- get the current day of the week
		parent.Parent.Time.Text = "Today, " .. time -- concatenate the strings
		--TimeLeft = 86400
		--UpdateTimerDisplay()
	end)
end;
task.spawn(C_28);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Panel.Icon.LocalScript
local function C_2a()
	local script = AZY["2a"];
	script.Parent.MouseButton1Click:Connect(function()
		if script.Parent.Parent.Parent.Draggable == true then
			script.Parent.Parent.Parent.Draggable = false
		else
			script.Parent.Parent.Parent.Draggable = true
		end
	end)
end;
task.spawn(C_2a);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.UserPage.TextLabel.LocalScript
local function C_33()
	local script = AZY["33"];
	script.Parent.Text = game.Players.LocalPlayer.DisplayName
end;
task.spawn(C_33);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.TimeLeft.LocalScript
local function C_3a()
	local script = AZY["3a"];
	local Timer = script.Parent
	local TimeDisplay = Timer

	-- Set the initial time to 24 hours
	local TimeLeft = 86400

	-- Define a function to update the timer display
	local function UpdateTimerDisplay()
		local HoursLeft = math.floor(TimeLeft / 3600)
		local MinutesLeft = math.floor((TimeLeft % 3600) / 60)
		TimeDisplay.Text = string.format("%02dh %02dm", HoursLeft, MinutesLeft)
	end

	-- Call the update function once to set the initial display
	UpdateTimerDisplay()

	-- Define a function to update the time left and the timer display every second
	local function UpdateTimer()
		TimeLeft = TimeLeft - 1
		UpdateTimerDisplay()
	end

	-- Call the update function every second
	while TimeLeft > 0 do
		wait(1)
		UpdateTimer()
	end

end;
task.spawn(C_3a);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.Time.LocalScript
local function C_40()
	local script = AZY["40"];
	local parent = script.Parent
	local textLabel = parent
	local time = os.date("%I:%M %p") -- get the current time in "hh:mm AM/PM" format
	local today = os.date("%A") -- get the current day of the week
	parent.Text = "Today, " .. time -- concatenate the strings
end;
task.spawn(C_40);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.KeySystemPage.Restore.LocalScript
local function C_43()
	local script = AZY["43"];
	-- Add a click event handler to the TextLabel to reset the timer
	script.Parent.MouseButton1Click:Connect(function()
		-- get the parent object and the TextLabel inside it
		local parent = script.Parent.Parent.Time
		local textLabel = parent
		local time = os.date("%I:%M %p") -- get the current time in "hh:mm AM/PM" format
		local today = os.date("%A") -- get the current day of the week
		parent.Parent.Time.Text = "Today, " .. time -- concatenate the strings
		--TimeLeft = 86400
		--UpdateTimerDisplay()
	end)
end;
task.spawn(C_43);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Aimbot.LocalScript
local function C_4b()
	local script = AZY["4b"];
	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/chillz-workshop/main/Arceus%20Aimbot.lua"))()
	end)
end;
task.spawn(C_4b);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Btools.LocalScript
local function C_4e()
	local script = AZY["4e"];
	script.Parent.MouseButton1Click:Connect(function()
		local backpack = game:GetService("Players").LocalPlayer.Backpack

		local hammer = Instance.new("HopperBin")
		hammer.Name = "Hammer"
		hammer.BinType = 4
		hammer.Parent = backpack

		local cloneTool = Instance.new("HopperBin")
		cloneTool.Name = "Clone"
		cloneTool.BinType = 3
		cloneTool.Parent = backpack

		local grabTool = Instance.new("HopperBin")
		grabTool.Name = "Grab"
		grabTool.BinType = 2
		grabTool.Parent = backpack
	end)
end;
task.spawn(C_4e);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Dex.LocalScript
local function C_51()
	local script = AZY["51"];
	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet("https://cdn.wearedevs.net/scripts/Dex%20Explorer.txt"))()
	end)
end;
task.spawn(C_51);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.FatesESP.LocalScript
local function C_54()
	local script = AZY["54"];
	script.Parent.MouseButton1Click:Connect(function()
		loadstring(request({ Url = "https://raw.githubusercontent.com/fatesc/fates-esp/main/main.lua", Method = "GET"}).Body)()
	end)
end;
task.spawn(C_54);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.Fly.LocalScript
local function C_57()
	local script = AZY["57"];
	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/chillz-workshop/main/Arceus%20Fly.lua"))()
	end)
end;
task.spawn(C_57);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.IY.LocalScript
local function C_5a()
	local script = AZY["5a"];
	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
	end)
end;
task.spawn(C_5a);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.Scripts.PwnHub.LocalScript
local function C_5d()
	local script = AZY["5d"];
	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet(("https://raw.githubusercontent.com/Maikderninja/Maikderninja/main/PWNERHUB.lua"), true))()
	end)
end;
task.spawn(C_5d);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.ToggleGrav.LocalScript
local function C_65()
	local script = AZY["65"];
	script.Parent.MouseButton1Click:Connect(function()
		if script.Parent.Parent.Grav.Value == false then
			script.Parent.Parent.Grav.Value = true
			script.Parent.Parent.GravS.SliderButton.ImageColor3 = Color3.fromRGB(255,0,0)
			script.Parent.BackgroundColor3 = Color3.fromRGB(255,0,0)
		else
			script.Parent.Parent.Grav.Value = false
			script.Parent.Parent.GravS.SliderButton.ImageColor3 = Color3.fromRGB(145,0,0)
			script.Parent.BackgroundColor3 = Color3.fromRGB(145,0,0)
			workspace.Gravity = 196.2
		end
	end)
end;
task.spawn(C_65);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.ToggleWs.LocalScript
local function C_68()
	local script = AZY["68"];
	script.Parent.MouseButton1Click:Connect(function()
		if script.Parent.Parent.Ws.Value == false then
			script.Parent.Parent.Ws.Value = true
			script.Parent.Parent.WsS.SliderButton.ImageColor3 = Color3.fromRGB(255,0,0)
			script.Parent.BackgroundColor3 = Color3.fromRGB(255,0,0)
		else
			script.Parent.Parent.Ws.Value = false
			script.Parent.Parent.WsS.SliderButton.ImageColor3 = Color3.fromRGB(145,0,0)
			script.Parent.BackgroundColor3 = Color3.fromRGB(145,0,0)
		end
	end)
end;
task.spawn(C_68);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.ToggleJp.LocalScript
local function C_6b()
	local script = AZY["6b"];
	script.Parent.MouseButton1Click:Connect(function()
		if script.Parent.Parent.Jp.Value == false then
			script.Parent.Parent.Jp.Value = true
			script.Parent.Parent.JpS.SliderButton.ImageColor3 = Color3.fromRGB(255,0,0)
			script.Parent.BackgroundColor3 = Color3.fromRGB(255,0,0)
		else
			script.Parent.Parent.Jp.Value = false
			script.Parent.Parent.JpS.SliderButton.ImageColor3 = Color3.fromRGB(145,0,0)
			script.Parent.BackgroundColor3 = Color3.fromRGB(145,0,0)
		end
	end)
end;
task.spawn(C_6b);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.JpS.SliderButton.LocalScript
local function C_6e()
	local script = AZY["6e"];
	-- Written by Bread

	local UIS			= game:GetService("UserInputService") 	
	local Outer			= script.Parent.Parent					-- Slider / Container
	local Inner 		= script.Parent 						-- Thing to drag across slider
	local Percent = Instance.new("NumberValue", Outer)	-- A number value containing the perctage in decimal form.
	local Max_Percent = 100									-- Max Percentage (Scale of slider)
	Percent.Name = "Percentage"
	local TextLabel = Outer.TextLabel

	local sliding = false

	local ClickY = 0

	local function UpdatePercentage(Percentage)
		Percent.Value = Percentage
		TextLabel.Text = Percentage .. "%"
		local Value = Percentage * 5
		if script.Parent.Parent.Parent.Jp.Value == true then
			game.Players.LocalPlayer.Character.Humanoid.JumpPower =  Value
		end
	end

	Outer.InputBegan:Connect(function(input)
		if not (input.UserInputType == Enum.UserInputType.MouseButton1
			or input.UserInputType == Enum.UserInputType.Touch) then return end

		ClickY = input.Position.Y

		sliding = true
	end)

	Outer.InputEnded:Connect(function(input)
		if not (input.UserInputType == Enum.UserInputType.MouseButton1
			or input.UserInputType == Enum.UserInputType.Touch) then return end

		sliding = false
	end)

	UIS.InputChanged:Connect(function(input)
		if input.UserInputType ~= Enum.UserInputType.MouseMovement then return end

		if not sliding then return end

		local MouseY = UIS:GetMouseLocation().Y

		local RelativeY = math.max(math.min(((Outer.AbsolutePosition.Y - MouseY) + 119) / 119, 1), 0)
		local Percentage = math.round(RelativeY * Max_Percent)

		Inner.Size = UDim2.fromScale(RelativeY, 1)

		UpdatePercentage(Percentage)
	end)

	local function setJumppower()

		local character = game.Players.LocalPlayer.Character

		local textBox = script.Parent.Parent.TextLabel

		local Jumppower = tonumber(textBox.Text)

		if Jumppower ~= nil then

			if script.Parent.Parent.Parent.Jp.Value == true then
				character.Humanoid.JumpPower = Jumppower * 4.1
			end
			textBox.Text = textBox.Text .. "%"
		end
	end


	setJumppower()


	script.Parent.Parent.TextLabel.FocusLost:Connect(setJumppower)

	game.Players.LocalPlayer.CharacterAdded:Connect(function(character)
		wait(1)
		setJumppower()
	end)

end;
task.spawn(C_6e);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.WsS.SliderButton.LocalScript
local function C_77()
	local script = AZY["77"];
	-- Written by Bread

	local UIS			= game:GetService("UserInputService") 	
	local Outer			= script.Parent.Parent					-- Slider / Container
	local Inner 		= script.Parent 						-- Thing to drag across slider
	local Percent = Instance.new("NumberValue", Outer)	-- A number value containing the perctage in decimal form.
	local Max_Percent = 100									-- Max Percentage (Scale of slider)
	Percent.Name = "Percentage"
	local TextLabel = Outer.TextLabel

	local sliding = false

	local ClickY = 0

	local function UpdatePercentage(Percentage)
		Percent.Value = Percentage
		TextLabel.Text = Percentage .. "%"
		local Value = Percentage * 4.1
		if script.Parent.Parent.Parent.Ws.Value == true then
			game.Players.LocalPlayer.Character.Humanoid.WalkSpeed =  Value
		end
	end

	Outer.InputBegan:Connect(function(input)
		if not (input.UserInputType == Enum.UserInputType.MouseButton1
			or input.UserInputType == Enum.UserInputType.Touch) then return end

		ClickY = input.Position.Y

		sliding = true
	end)

	Outer.InputEnded:Connect(function(input)
		if not (input.UserInputType == Enum.UserInputType.MouseButton1
			or input.UserInputType == Enum.UserInputType.Touch) then return end

		sliding = false
	end)

	UIS.InputChanged:Connect(function(input)
		if input.UserInputType ~= Enum.UserInputType.MouseMovement then return end

		if not sliding then return end

		local MouseY = UIS:GetMouseLocation().Y

		local RelativeY = math.max(math.min(((Outer.AbsolutePosition.Y - MouseY) + 119) / 119, 1), 0)
		local Percentage = math.round(RelativeY * Max_Percent)

		Inner.Size = UDim2.fromScale(RelativeY, 1)

		UpdatePercentage(Percentage)
	end)

	local function setWalkspeed()

		local character = game.Players.LocalPlayer.Character

		local textBox = script.Parent.Parent.TextLabel

		local walkspeed = tonumber(textBox.Text)

		if walkspeed ~= nil then

			if script.Parent.Parent.Parent.Ws.Value == true then
				character.Humanoid.WalkSpeed = walkspeed * 4.1
			end
			textBox.Text = textBox.Text .. "%"
		end
	end


	setWalkspeed()


	script.Parent.Parent.TextLabel.FocusLost:Connect(setWalkspeed)

	game.Players.LocalPlayer.CharacterAdded:Connect(function(character)
		wait(1)
		setWalkspeed()
	end)

end;
task.spawn(C_77);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Home.HaxPage.GravS.SliderButton.LocalScript
local function C_80()
	local script = AZY["80"];
	-- Written by Bread

	local UIS			= game:GetService("UserInputService") 	
	local Outer			= script.Parent.Parent					-- Slider / Container
	local Inner 		= script.Parent 						-- Thing to drag across slider
	local Percent = Instance.new("NumberValue", Outer)	-- A number value containing the perctage in decimal form.
	local Max_Percent = 100									-- Max Percentage (Scale of slider)
	Percent.Name = "Percentage"
	local TextLabel = Outer.TextLabel

	local sliding = false

	local ClickY = 0

	local function UpdatePercentage(Percentage)
		Percent.Value = Percentage
		TextLabel.Text = Percentage .. "%"
		local Value = Percentage * 5
		if script.Parent.Parent.Parent.Grav.Value == true then
			workspace.Gravity =  Value
		end
	end

	Outer.InputBegan:Connect(function(input)
		if not (input.UserInputType == Enum.UserInputType.MouseButton1
			or input.UserInputType == Enum.UserInputType.Touch) then return end

		ClickY = input.Position.Y

		sliding = true
	end)

	Outer.InputEnded:Connect(function(input)
		if not (input.UserInputType == Enum.UserInputType.MouseButton1
			or input.UserInputType == Enum.UserInputType.Touch) then return end

		sliding = false
	end)

	UIS.InputChanged:Connect(function(input)
		if input.UserInputType ~= Enum.UserInputType.MouseMovement then return end

		if not sliding then return end

		local MouseY = UIS:GetMouseLocation().Y

		local RelativeY = math.max(math.min(((Outer.AbsolutePosition.Y - MouseY) + 119) / 119, 1), 0)
		local Percentage = math.round(RelativeY * Max_Percent)

		Inner.Size = UDim2.fromScale(RelativeY, 1)

		UpdatePercentage(Percentage)
	end)

	local function setGravity()

		local character = game.Players.LocalPlayer.Character

		local textBox = script.Parent.Parent.TextLabel

		local Gravity = tonumber(textBox.Text)

		if Gravity ~= nil then

			if script.Parent.Parent.Parent.Grav.Value == true then
				workspace.Gravity = Gravity * 5
			end
			textBox.Text = textBox.Text .. "%"
		end
	end


	setGravity()


	script.Parent.Parent.TextLabel.FocusLost:Connect(setGravity)

	game.Players.LocalPlayer.CharacterAdded:Connect(function(character)
		wait(1)
		setGravity()
	end)

end;
task.spawn(C_80);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Changelogs.Communications.Copy.LocalScript
local function C_c9()
	local script = AZY["c9"];
	script.Parent.MouseButton1Click:Connect(function()
		setclipboard("VPn54EcfNX")
	end)
end;
task.spawn(C_c9);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.ToggleGrav.LocalScript
local function C_d6()
	local script = AZY["d6"];
	script.Parent.MouseButton1Click:Connect(function()
		if script.Parent.Parent.Grav.Value == false then
			script.Parent.Parent.Grav.Value = true
			script.Parent.Parent.GravS.SliderButton.ImageColor3 = Color3.fromRGB(255,0,0)
			script.Parent.BackgroundColor3 = Color3.fromRGB(255,0,0)
		else
			script.Parent.Parent.Grav.Value = false
			script.Parent.Parent.GravS.SliderButton.ImageColor3 = Color3.fromRGB(145,0,0)
			script.Parent.BackgroundColor3 = Color3.fromRGB(145,0,0)
			workspace.Gravity = 196.2
		end
	end)
end;
task.spawn(C_d6);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.ToggleJp.LocalScript
local function C_d9()
	local script = AZY["d9"];
	script.Parent.MouseButton1Click:Connect(function()
		if script.Parent.Parent.Jp.Value == false then
			script.Parent.Parent.Jp.Value = true
			script.Parent.Parent.JpS.SliderButton.ImageColor3 = Color3.fromRGB(255,0,0)
			script.Parent.BackgroundColor3 = Color3.fromRGB(255,0,0)
		else
			script.Parent.Parent.Jp.Value = false
			script.Parent.Parent.JpS.SliderButton.ImageColor3 = Color3.fromRGB(145,0,0)
			script.Parent.BackgroundColor3 = Color3.fromRGB(145,0,0)
		end
	end)
end;
task.spawn(C_d9);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.ToggleWs.LocalScript
local function C_dc()
	local script = AZY["dc"];
	script.Parent.MouseButton1Click:Connect(function()
		if script.Parent.Parent.Ws.Value == false then
			script.Parent.Parent.Ws.Value = true
			script.Parent.Parent.WsS.SliderButton.ImageColor3 = Color3.fromRGB(255,0,0)
			script.Parent.BackgroundColor3 = Color3.fromRGB(255,0,0)
		else
			script.Parent.Parent.Ws.Value = false
			script.Parent.Parent.WsS.SliderButton.ImageColor3 = Color3.fromRGB(145,0,0)
			script.Parent.BackgroundColor3 = Color3.fromRGB(145,0,0)
		end
	end)
end;
task.spawn(C_dc);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.WsS.SliderButton.LocalScript
local function C_df()
	local script = AZY["df"];
	-- Written by Bread

	local UIS			= game:GetService("UserInputService") 	
	local Outer			= script.Parent.Parent					-- Slider / Container
	local Inner 		= script.Parent 						-- Thing to drag across slider
	local Percent = Instance.new("NumberValue", Outer)	-- A number value containing the perctage in decimal form.
	local Max_Percent = 100									-- Max Percentage (Scale of slider)
	Percent.Name = "Percentage"
	local TextLabel = Outer.TextLabel

	local sliding = false

	local ClickY = 0

	local function UpdatePercentage(Percentage)
		Percent.Value = Percentage
		TextLabel.Text = Percentage .. "%"
		local Value = Percentage * 4.1
		if script.Parent.Parent.Parent.Ws.Value == true then
			game.Players.LocalPlayer.Character.Humanoid.WalkSpeed =  Value
		end
	end

	Outer.InputBegan:Connect(function(input)
		if not (input.UserInputType == Enum.UserInputType.MouseButton1
			or input.UserInputType == Enum.UserInputType.Touch) then return end

		ClickY = input.Position.Y

		sliding = true
	end)

	Outer.InputEnded:Connect(function(input)
		if not (input.UserInputType == Enum.UserInputType.MouseButton1
			or input.UserInputType == Enum.UserInputType.Touch) then return end

		sliding = false
	end)

	UIS.InputChanged:Connect(function(input)
		if input.UserInputType ~= Enum.UserInputType.MouseMovement then return end

		if not sliding then return end

		local MouseY = UIS:GetMouseLocation().Y

		local RelativeY = math.max(math.min(((Outer.AbsolutePosition.Y - MouseY) + 119) / 119, 1), 0)
		local Percentage = math.round(RelativeY * Max_Percent)

		Inner.Size = UDim2.fromScale(RelativeY, 1)

		UpdatePercentage(Percentage)
	end)

	local function setWalkspeed()

		local character = game.Players.LocalPlayer.Character

		local textBox = script.Parent.Parent.TextLabel

		local walkspeed = tonumber(textBox.Text)

		if walkspeed ~= nil then

			if script.Parent.Parent.Parent.Ws.Value == true then
				character.Humanoid.WalkSpeed = walkspeed * 4.1
			end
			textBox.Text = textBox.Text .. "%"
		end
	end


	setWalkspeed()


	script.Parent.Parent.TextLabel.FocusLost:Connect(setWalkspeed)

	game.Players.LocalPlayer.CharacterAdded:Connect(function(character)
		wait(1)
		setWalkspeed()
	end)

end;
task.spawn(C_df);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.JpS.SliderButton.LocalScript
local function C_e8()
	local script = AZY["e8"];
	-- Written by Bread

	local UIS			= game:GetService("UserInputService") 	
	local Outer			= script.Parent.Parent					-- Slider / Container
	local Inner 		= script.Parent 						-- Thing to drag across slider
	local Percent = Instance.new("NumberValue", Outer)	-- A number value containing the perctage in decimal form.
	local Max_Percent = 100									-- Max Percentage (Scale of slider)
	Percent.Name = "Percentage"
	local TextLabel = Outer.TextLabel

	local sliding = false

	local ClickY = 0

	local function UpdatePercentage(Percentage)
		Percent.Value = Percentage
		TextLabel.Text = Percentage .. "%"
		local Value = Percentage * 5
		if script.Parent.Parent.Parent.Jp.Value == true then
			game.Players.LocalPlayer.Character.Humanoid.JumpPower =  Value
		end
	end

	Outer.InputBegan:Connect(function(input)
		if not (input.UserInputType == Enum.UserInputType.MouseButton1
			or input.UserInputType == Enum.UserInputType.Touch) then return end

		ClickY = input.Position.Y

		sliding = true
	end)

	Outer.InputEnded:Connect(function(input)
		if not (input.UserInputType == Enum.UserInputType.MouseButton1
			or input.UserInputType == Enum.UserInputType.Touch) then return end

		sliding = false
	end)

	UIS.InputChanged:Connect(function(input)
		if input.UserInputType ~= Enum.UserInputType.MouseMovement then return end

		if not sliding then return end

		local MouseY = UIS:GetMouseLocation().Y

		local RelativeY = math.max(math.min(((Outer.AbsolutePosition.Y - MouseY) + 119) / 119, 1), 0)
		local Percentage = math.round(RelativeY * Max_Percent)

		Inner.Size = UDim2.fromScale(RelativeY, 1)

		UpdatePercentage(Percentage)
	end)

	local function setJumppower()

		local character = game.Players.LocalPlayer.Character

		local textBox = script.Parent.Parent.TextLabel

		local Jumppower = tonumber(textBox.Text)

		if Jumppower ~= nil then

			if script.Parent.Parent.Parent.Jp.Value == true then
				character.Humanoid.JumpPower = Jumppower * 4.1
			end
			textBox.Text = textBox.Text .. "%"
		end
	end


	setJumppower()


	script.Parent.Parent.TextLabel.FocusLost:Connect(setJumppower)

	game.Players.LocalPlayer.CharacterAdded:Connect(function(character)
		wait(1)
		setJumppower()
	end)

end;
task.spawn(C_e8);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.HaxPage.GravS.SliderButton.LocalScript
local function C_f1()
	local script = AZY["f1"];
	-- Written by Bread

	local UIS			= game:GetService("UserInputService") 	
	local Outer			= script.Parent.Parent					-- Slider / Container
	local Inner 		= script.Parent 						-- Thing to drag across slider
	local Percent = Instance.new("NumberValue", Outer)	-- A number value containing the perctage in decimal form.
	local Max_Percent = 100									-- Max Percentage (Scale of slider)
	Percent.Name = "Percentage"
	local TextLabel = Outer.TextLabel

	local sliding = false

	local ClickY = 0

	local function UpdatePercentage(Percentage)
		Percent.Value = Percentage
		TextLabel.Text = Percentage .. "%"
		local Value = Percentage * 5
		if script.Parent.Parent.Parent.Grav.Value == true then
			workspace.Gravity =  Value
		end
	end

	Outer.InputBegan:Connect(function(input)
		if not (input.UserInputType == Enum.UserInputType.MouseButton1
			or input.UserInputType == Enum.UserInputType.Touch) then return end

		ClickY = input.Position.Y

		sliding = true
	end)

	Outer.InputEnded:Connect(function(input)
		if not (input.UserInputType == Enum.UserInputType.MouseButton1
			or input.UserInputType == Enum.UserInputType.Touch) then return end

		sliding = false
	end)

	UIS.InputChanged:Connect(function(input)
		if input.UserInputType ~= Enum.UserInputType.MouseMovement then return end

		if not sliding then return end

		local MouseY = UIS:GetMouseLocation().Y

		local RelativeY = math.max(math.min(((Outer.AbsolutePosition.Y - MouseY) + 119) / 119, 1), 0)
		local Percentage = math.round(RelativeY * Max_Percent)

		Inner.Size = UDim2.fromScale(RelativeY, 1)

		UpdatePercentage(Percentage)
	end)

	local function setGravity()

		local character = game.Players.LocalPlayer.Character

		local textBox = script.Parent.Parent.TextLabel

		local Gravity = tonumber(textBox.Text)

		if Gravity ~= nil then

			if script.Parent.Parent.Parent.Grav.Value == true then
				workspace.Gravity = Gravity * 5
			end
			textBox.Text = textBox.Text .. "%"
		end
	end


	setGravity()


	script.Parent.Parent.TextLabel.FocusLost:Connect(setGravity)

	game.Players.LocalPlayer.CharacterAdded:Connect(function(character)
		wait(1)
		setGravity()
	end)

end;
task.spawn(C_f1);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Aimbot.LocalScript
local function C_fe()
	local script = AZY["fe"];
	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/chillz-workshop/main/Arceus%20Aimbot.lua"))()
	end)
end;
task.spawn(C_fe);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Btools.LocalScript
local function C_102()
	local script = AZY["102"];
	script.Parent.MouseButton1Click:Connect(function()
		local backpack = game:GetService("Players").LocalPlayer.Backpack

		local hammer = Instance.new("HopperBin")
		hammer.Name = "Hammer"
		hammer.BinType = 4
		hammer.Parent = backpack

		local cloneTool = Instance.new("HopperBin")
		cloneTool.Name = "Clone"
		cloneTool.BinType = 3
		cloneTool.Parent = backpack

		local grabTool = Instance.new("HopperBin")
		grabTool.Name = "Grab"
		grabTool.BinType = 2
		grabTool.Parent = backpack
	end)
end;
task.spawn(C_102);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Dex.LocalScript
local function C_106()
	local script = AZY["106"];
	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet("https://cdn.wearedevs.net/scripts/Dex%20Explorer.txt"))()
	end)
end;
task.spawn(C_106);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.FatesESP.LocalScript
local function C_10a()
	local script = AZY["10a"];
	script.Parent.MouseButton1Click:Connect(function()
		loadstring(request({ Url = "https://raw.githubusercontent.com/fatesc/fates-esp/main/main.lua", Method = "GET"}).Body)()
	end)
end;
task.spawn(C_10a);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.Fly.LocalScript
local function C_10e()
	local script = AZY["10e"];
	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/chillz-workshop/main/Arceus%20Fly.lua"))()
	end)
end;
task.spawn(C_10e);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.IY.LocalScript
local function C_112()
	local script = AZY["112"];
	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
	end)
end;
task.spawn(C_112);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.BuiltInHax.Scripts.PwnHub.LocalScript
local function C_116()
	local script = AZY["116"];
	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet(("https://raw.githubusercontent.com/Maikderninja/Maikderninja/main/PWNERHUB.lua"), true))()
	end)
end;
task.spawn(C_116);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Execute.LocalScript
local function C_11e()
	local script = AZY["11e"];
	script.Parent.MouseButton1Click:Connect(function()
		loadstring(script.Parent.Parent.TextboxBar.Editor.Scroll.Source.Text)()
	end)
end;
task.spawn(C_11e);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Clear.LocalScript
local function C_121()
	local script = AZY["121"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.TextboxBar.Editor.Scroll.Source.Text = ""
	end)
end;
task.spawn(C_121);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Copy.LocalScript
local function C_124()
	local script = AZY["124"];
	script.Parent.MouseButton1Click:Connect(function()
		setclipboard(script.Parent.Parent.TextboxBar.Editor.Scroll.Source.Text)
	end)
end;
task.spawn(C_124);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.Paste.LocalScript
local function C_127()
	local script = AZY["127"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Text = "Not Implemented"
		script.Disabled = true
		wait(1)
		script.Disabled = false
		script.Parent.Text = "Paste"
	end)
end;
task.spawn(C_127);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript
local function C_12a()
	local script = AZY["12a"];
	local ScriptEditor = require(script.ScriptEditor)
	local editor = ScriptEditor.new(script.Parent)
end;
task.spawn(C_12a);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.TextboxBar.LocalScript.ScriptEditor.Editor.Scroll.Left.AdaptSize
local function C_146()
	local script = AZY["146"];
	local defaultSize = script.Parent.Size
	local textbox = script.Parent.Parent.Source

	textbox:GetPropertyChangedSignal("AbsoluteSize"):Connect(function()
		local height = textbox.AbsoluteSize.Y

		script.Parent.Size = UDim2.new(
			defaultSize.X.Scale,
			defaultSize.X.Offset,
			0,
			height
		)
	end)
end;
task.spawn(C_146);
-- StarterGui.ArceusXV3.MainUI.MainFrame.Tabs.Executor.ResetTextBox.LocalScript
local function C_14b()
	local script = AZY["14b"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.TextboxBar.Editor:Destroy()
		local ScriptEditor = require(script.Parent.Parent.TextboxBar.LocalScript.ScriptEditor)
		local editor = ScriptEditor.new(script.Parent.Parent.TextboxBar)
	end)
end;
task.spawn(C_14b);
-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Changelogs.LocalScript
local function C_151()
	local script = AZY["151"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Frame.Visible = true

		for i,v in pairs(script.Parent.Parent.Parent.Tabs:GetChildren()) do
			if v.Name == script.Parent.Name then
				v.Visible = true
			else
				v.Visible = false
			end
		end

		for i,v in pairs(script.Parent.Parent:GetChildren()) do
			if v.Name ~= "UICorner" then
				if v.Name ~= script.Parent.Name then
					v.Frame.Visible = false
				end
			end
		end
	end)
end;
task.spawn(C_151);
-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Home.LocalScript
local function C_155()
	local script = AZY["155"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Frame.Visible = true

		for i,v in pairs(script.Parent.Parent.Parent.Tabs:GetChildren()) do
			if v.Name == script.Parent.Name then
				v.Visible = true
			else
				v.Visible = false
			end
		end

		for i,v in pairs(script.Parent.Parent:GetChildren()) do
			if v.Name ~= "UICorner" then
				if v.Name ~= script.Parent.Name then
					v.Frame.Visible = false
				end
			end
		end
	end)
end;
task.spawn(C_155);
-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.BuiltInHax.LocalScript
local function C_159()
	local script = AZY["159"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Frame.Visible = true

		for i,v in pairs(script.Parent.Parent.Parent.Tabs:GetChildren()) do
			if v.Name == script.Parent.Name then
				v.Visible = true
			else
				v.Visible = false
			end
		end

		for i,v in pairs(script.Parent.Parent:GetChildren()) do
			if v.Name ~= "UICorner" then
				if v.Name ~= script.Parent.Name then
					v.Frame.Visible = false
				end
			end
		end
	end)
end;
task.spawn(C_159);
-- StarterGui.ArceusXV3.MainUI.MainFrame.TabBar.Executor.LocalScript
local function C_15d()
	local script = AZY["15d"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Frame.Visible = true

		for i,v in pairs(script.Parent.Parent.Parent.Tabs:GetChildren()) do
			if v.Name == script.Parent.Name then
				v.Visible = true
			else
				v.Visible = false
			end
		end

		for i,v in pairs(script.Parent.Parent:GetChildren()) do
			if v.Name ~= "UICorner" then
				if v.Name ~= script.Parent.Name then
					v.Frame.Visible = false
				end
			end
		end
	end)
end;
task.spawn(C_15d);
-- StarterGui.ArceusXV3.MainUI.MainFrame.LocalScript
local function C_15f()
	local script = AZY["15f"];
	script.Parent.Draggable = true
	script.Parent.Active = true
end;
task.spawn(C_15f);
-- StarterGui.ArceusXV3.MainUI.FloatingUI.LocalScript
local function C_162()
	local script = AZY["162"];
	script.Parent.Active = true
	script.Parent.Draggable = true
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Visible = false
		script.Parent.Parent.MainFrame.Visible = true
		script.Parent.Active = false
		script.Parent.Parent.MainFrame.Active = true
	end)
end;
task.spawn(C_162);

return AZY["1"], require;
end)
tab3.newButton("Kiwi X", "Executor script", function()
        --[[ Settings ]]--

local maxLines = 250;

--[[ Variables ]]--

local httpService = game:GetService("HttpService");
local teleportService = game:GetService("TeleportService");
local textService = game:GetService("TextService");
local tweenService = game:GetService("TweenService");
local userInputService = game:GetService("UserInputService");

local localPlayer = game:GetService("Players").LocalPlayer;

local hugeVector2 = Vector2.new(math.huge, math.huge);

local env = getgenv();
local isFirstTimeExecution = true;

local _newcclosure = clonefunction(newcclosure);

local _setfpscap = clonefunction(setfpscap);
local _getfpsmax = clonefunction(getfpsmax or _newcclosure(function()
	return 60;
end));

local _getconnections = clonefunction(getconnections);
local _getcustomasset = clonefunction(getcustomasset or getsynasset);

local _isfile = clonefunction(isfile);
local _readfile = clonefunction(readfile);
local _writefile = clonefunction(writefile);
local _delfile = clonefunction(delfile);
local _listfiles = clonefunction(listfiles);

local _isfolder = clonefunction(isfolder);
local _makefolder = clonefunction(makefolder);

local _getclipboard = clonefunction(getclipboard or _newcclosure(function()
	return "";
end));

local urlEncode = clonefunction(httpService.UrlEncode);
local jsonEncode = clonefunction(httpService.JSONEncode);
local jsonDecode = clonefunction(httpService.JSONDecode);

local _gethui = clonefunction(gethui or _newcclosure(function()
	return game:GetService("CoreGui");
end));

--[[ Settings ]]--

if _isfolder("kiwiui") == false then
	_makefolder("kiwiui");
end

--[[ Functions ]]--

local function create(className, properties, children)
	local inst = Instance.new(className);
	for i, v in next, properties do
		if i ~= "Parent" then
			inst[i] = v;
		end
	end
	if children then
		for i, v in next, children do
			v.Parent = inst;
		end
	end
	inst.Parent = properties.Parent;
	return inst;
end

local function tween(obj, dur, props, ...)
	local t = tweenService:Create(obj, TweenInfo.new(dur, ...), props);
	t:Play();
	return t;
end

local function addTransparencyHighlights(btn)
	btn.MouseButton1Down:Connect(function()
		tween(btn, 0.18, {
			BackgroundTransparency = 0
		});
	end);
	btn.MouseButton1Up:Connect(function()
		tween(btn, 0.18, {
			BackgroundTransparency = 1
		});
	end);
end

local function addColourHighlights(btn, col)
	local original = btn.BackgroundColor3;
	btn.MouseButton1Down:Connect(function()
		tween(btn, 0.18, {
			BackgroundColor3 = col
		});
	end);
	btn.MouseButton1Up:Connect(function()
		tween(btn, 0.18, {
			BackgroundColor3 = original
		});
	end);
end

local function removeTrace(str)
	local x = env[str];
	env[str] = nil;
	return x;
end

--[[ Create UI ]]--

local gui = create("ScreenGui", { 
	DisplayOrder = 11, 
	IgnoreGuiInset = true, 
	Name = "Kiwi", 
	Parent = _gethui(), 
	ResetOnSpawn = false
});

local function loadKeyUI(callback)
	local keyFrame = create("Frame", { 
		AnchorPoint = Vector2.new(0.5, 0), 
		BackgroundColor3 = Color3.fromHex("141414"), 
		BorderSizePixel = 0, 
		Name = "keyFrame", 
		Parent = gui, 
		Position = UDim2.new(0.5, 0, 0, 25), 
		Size = UDim2.new(1, -110, 0, 79)
	}, {
		create("UICorner", { 
			CornerRadius = UDim.new(0, 4), 
			Name = "corner"
		}),
		create("TextButton", { 
			AutoButtonColor = false, 
			BackgroundColor3 = Color3.fromHex("ffffff"), 
			BackgroundTransparency = 1, 
			FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
			FontSize = Enum.FontSize.Size14, 
			Name = "clickThroughBlocker", 
			Size = UDim2.new(1, 0, 1, 0), 
			Text = "", 
			TextColor3 = Color3.fromHex("000000"), 
			TextSize = 14, 
			ZIndex = 0
		}),
		create("ImageLabel", { 
			AnchorPoint = Vector2.new(0.5, 0.5), 
			BackgroundColor3 = Color3.fromHex("ffffff"), 
			BackgroundTransparency = 1, 
			Image = "rbxassetid://12874061329", 
			ImageColor3 = Color3.fromHex("000000"), 
			Name = "blur", 
			Position = UDim2.new(0.5, 0, 0.5, 0), 
			ScaleType = Enum.ScaleType.Slice, 
			Size = UDim2.new(1, 10, 1, 10), 
			SliceCenter = Rect.new(10, 10, 118, 118), 
			ZIndex = 0
		}),
		create("UISizeConstraint", { 
			MaxSize = Vector2.new(800, 94), 
			Name = "constraint"
		}),
		create("Frame", { 
			AnchorPoint = Vector2.new(0.5, 0.5), 
			BackgroundColor3 = Color3.fromHex("ffffff"), 
			BackgroundTransparency = 1, 
			Name = "content", 
			Position = UDim2.new(0.5, 0, 0.5, 0), 
			Size = UDim2.new(1, 0, 1, 0)
		}, {
			create("TextButton", { 
				AnchorPoint = Vector2.new(1, 1), 
				AutoButtonColor = false, 
				BackgroundColor3 = Color3.fromHex("202020"), 
				FontFace = Font.new("rbxasset://fonts/families/Ubuntu.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "enterKey", 
				Position = UDim2.new(1, -6, 1, -6), 
				Size = UDim2.new(0, 94, 0, 30), 
				Text = "Submit Key", 
				TextColor3 = Color3.fromHex("ebebeb"), 
				TextSize = 14
			}, {
				create("UICorner", { 
					CornerRadius = UDim.new(0, 4), 
					Name = "corner"
				})
			}),
			create("TextButton", { 
				AnchorPoint = Vector2.new(0, 1), 
				AutoButtonColor = false, 
				BackgroundColor3 = Color3.fromHex("202020"), 
				FontFace = Font.new("rbxasset://fonts/families/Ubuntu.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "getKeyLink", 
				Position = UDim2.new(0, 6, 1, -6), 
				Size = UDim2.new(0, 108, 0, 30), 
				Text = "Copy Key Link", 
				TextColor3 = Color3.fromHex("ebebeb"), 
				TextSize = 14
			}, {
				create("UICorner", { 
					CornerRadius = UDim.new(0, 4), 
					Name = "corner"
				})
			}),
			create("TextBox", { 
				AnchorPoint = Vector2.new(0.5, 0), 
				BackgroundColor3 = Color3.fromHex("1a1a1a"), 
				FontFace = Font.new("rbxasset://fonts/families/Ubuntu.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
				FontSize = Enum.FontSize.Size14, 
				Name = "keyInput", 
				PlaceholderText = "Enter Key...", 
				Position = UDim2.new(0.5, 0, 0, 6), 
				Size = UDim2.new(1, -12, 0, 30), 
				Text = "", 
				TextColor3 = Color3.fromHex("ebebeb"), 
				TextSize = 14, 
				TextXAlignment = Enum.TextXAlignment.Left
			}, {
				create("UICorner", { 
					CornerRadius = UDim.new(0, 4), 
					Name = "corner"
				}),
				create("UIPadding", { 
					Name = "padding", 
					PaddingLeft = UDim.new(0, 8), 
					PaddingRight = UDim.new(0, 8)
				}),
				create("UIStroke", { 
					ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
					Color = Color3.fromHex("5d5d5d"), 
					Name = "stroke", 
					Thickness = 1.2
				})
			})
		})
	});

	--[[ Start ]]--

	local getKey = removeTrace("IjHyfuyuHeg");
	local checkKey = removeTrace("cHjGyjKbe");

	local content = keyFrame.content;

	--[[ Freemium ]]--

	do
		content.getKeyLink.MouseButton1Click:Connect(function()
			_setclipboard(getKey());
		end);

		content.enterKey.MouseButton1Click:Connect(function()
			if checkKey(content.keyInput.Text) then
				gui.keyFrame:Destroy();
				callback();
			end
		end);
	end
end

local function loadMainUI()
	local toggleMain = create("TextButton", { 
		AnchorPoint = Vector2.new(1, 0.5), 
		AutoButtonColor = false, 
		BackgroundColor3 = Color3.fromHex("171717"), 
		FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
		FontSize = Enum.FontSize.Size14, 
		Name = "toggle", 
		Parent = gui, 
		Position = UDim2.new(1, -8, 0.5, 0), 
		Size = UDim2.new(0, 40, 0, 40), 
		Text = "", 
		TextColor3 = Color3.fromHex("000000"), 
		TextSize = 14, 
		ZIndex = 2
	}, {
		create("UICorner", { 
			CornerRadius = UDim.new(0, 4), 
			Name = "corner"
		}),
		create("UIStroke", { 
			ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
			Color = Color3.fromHex("5d5d5d"), 
			Name = "stroke"
		}),
		create("ImageLabel", { 
			AnchorPoint = Vector2.new(0.5, 0.5), 
			BackgroundColor3 = Color3.fromHex("ffffff"), 
			BackgroundTransparency = 1, 
			Image = "rbxassetid://13376716851", 
			Name = "icon", 
			Position = UDim2.new(0.5, 0, 0.5, 0), 
			Size = UDim2.new(1, -12, 1, -12), 
			ZIndex = 2
		})
	});

	local main = create("Frame", { 
		AnchorPoint = Vector2.new(0.5, 0.5), 
		BackgroundColor3 = Color3.fromHex("141414"), 
		Name = "main", 
		Parent = gui, 
		Position = UDim2.new(0.5, 0, 0.5, 0), 
		Size = UDim2.new(1, -110, 1, -80),
		Visible = false
	}, {
		create("UICorner", { 
			CornerRadius = UDim.new(0, 4), 
			Name = "corner"
		}),
		create("ImageLabel", { 
			AnchorPoint = Vector2.new(0.5, 0.5), 
			BackgroundColor3 = Color3.fromHex("ffffff"), 
			BackgroundTransparency = 1, 
			Image = "rbxassetid://13276864904", 
			ImageColor3 = Color3.fromHex("000000"), 
			Name = "blur", 
			Position = UDim2.new(0.5, 0, 0.5, 0), 
			ScaleType = Enum.ScaleType.Slice, 
			Size = UDim2.new(1, 10, 1, 10), 
			SliceCenter = Rect.new(10, 10, 118, 118), 
			ZIndex = 0
		}),
		create("TextButton", { 
			AutoButtonColor = false, 
			BackgroundColor3 = Color3.fromHex("ffffff"), 
			BackgroundTransparency = 1, 
			FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
			FontSize = Enum.FontSize.Size14, 
			Name = "clickThroughBlocker", 
			Size = UDim2.new(1, 0, 1, 0), 
			Text = "", 
			TextColor3 = Color3.fromHex("000000"), 
			TextSize = 14, 
			ZIndex = 0
		}),
		create("UISizeConstraint", { 
			MaxSize = Vector2.new(800, 500), 
			Name = "constraint"
		}),
		create("Frame", { 
			BackgroundColor3 = Color3.fromHex("171717"), 
			Name = "top", 
			Size = UDim2.new(1, 0, 0, 40)
		}, {
			create("UICorner", { 
				CornerRadius = UDim.new(0, 4), 
				Name = "corner"
			}),
			create("Frame", { 
				AnchorPoint = Vector2.new(0, 1), 
				BackgroundColor3 = Color3.fromHex("171717"), 
				BorderSizePixel = 0, 
				Name = "bottomLeftCover", 
				Position = UDim2.new(0, 0, 1, 0), 
				Size = UDim2.new(0, 4, 0, 4)
			}),
			create("Frame", { 
				AnchorPoint = Vector2.new(1, 1), 
				BackgroundColor3 = Color3.fromHex("171717"), 
				BorderSizePixel = 0, 
				Name = "bottomRightCover", 
				Position = UDim2.new(1, 0, 1, 0), 
				Size = UDim2.new(0, 4, 0, 4)
			}),
			create("ImageLabel", { 
				AnchorPoint = Vector2.new(0, 0.5), 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				Image = "rbxassetid://13335646041", 
				Name = "icon", 
				Position = UDim2.new(0, 8, 0.5, 0), 
				Size = UDim2.new(0, 24, 0, 24)
			}),
			create("ImageButton", { 
				AnchorPoint = Vector2.new(1, 0.5), 
				AutoButtonColor = false, 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				Image = "rbxassetid://13277140485", 
				Name = "home", 
				Position = UDim2.new(1, -8, 0.5, 0), 
				Size = UDim2.new(0, 24, 0, 24)
			})
		}),
		create("Folder", { 
			Name = "tabs"
		}, {
			create("Frame", { 
				AnchorPoint = Vector2.new(0.5, 1), 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				Name = "home", 
				Position = UDim2.new(0.5, 0, 1, 0), 
				Size = UDim2.new(1, 0, 1, -40)
			}, {
				create("Frame", { 
					AnchorPoint = Vector2.new(0.5, 0), 
					BackgroundColor3 = Color3.fromHex("ffffff"), 
					BackgroundTransparency = 1, 
					Name = "main", 
					Position = UDim2.new(0.5, 0, 0, 12), 
					Size = UDim2.new(1, -24, 1, -60)
				}, {
					create("UIGridLayout", { 
						CellPadding = UDim2.new(0, 9, 0, 8), 
						CellSize = UDim2.new(0.333, -6, 0.5, -4), 
						Name = "grid", 
						SortOrder = Enum.SortOrder.LayoutOrder
					}),
					create("TextButton", { 
						AutoButtonColor = false, 
						BackgroundColor3 = Color3.fromHex("171717"), 
						FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
						FontSize = Enum.FontSize.Size14, 
						Name = "editor", 
						Size = UDim2.new(0, 200, 0, 50), 
						Text = "", 
						TextColor3 = Color3.fromHex("000000"), 
						TextSize = 14
					}, {
						create("UICorner", { 
							CornerRadius = UDim.new(0, 4), 
							Name = "corner"
						}),
						create("ImageLabel", { 
							BackgroundColor3 = Color3.fromHex("ffffff"), 
							BackgroundTransparency = 1, 
							Image = "rbxassetid://13335789306", 
							Name = "icon", 
							Position = UDim2.new(0, 8, 0, 8), 
							Size = UDim2.new(0, 30, 0, 30)
						}),
						create("TextLabel", { 
							AnchorPoint = Vector2.new(1, 0), 
							BackgroundColor3 = Color3.fromHex("ffffff"), 
							BackgroundTransparency = 1, 
							FontFace = Font.new("rbxasset://fonts/families/Ubuntu.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
							FontSize = Enum.FontSize.Size18, 
							Name = "title", 
							Position = UDim2.new(1, -8, 0, 10), 
							Size = UDim2.new(1, -60, 0, 26), 
							Text = "Editor", 
							TextColor3 = Color3.fromHex("ebebeb"), 
							TextSize = 16, 
							TextWrap = true, 
							TextWrapped = true, 
							TextXAlignment = Enum.TextXAlignment.Left
						}),
						create("TextLabel", { 
							AnchorPoint = Vector2.new(0.5, 1), 
							BackgroundColor3 = Color3.fromHex("ffffff"), 
							BackgroundTransparency = 1, 
							FontFace = Font.new("rbxasset://fonts/families/Ubuntu.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
							FontSize = Enum.FontSize.Size14, 
							Name = "description", 
							Position = UDim2.new(0.5, 0, 1, -8), 
							Size = UDim2.new(1, -16, 1, -54), 
							Text = "Execute all your scripts here!", 
							TextColor3 = Color3.fromHex("ebebeb"), 
							TextSize = 14, 
							TextWrap = true, 
							TextWrapped = true, 
							TextXAlignment = Enum.TextXAlignment.Left, 
							TextYAlignment = Enum.TextYAlignment.Top
						})
					}),
					create("TextButton", { 
						AutoButtonColor = false, 
						BackgroundColor3 = Color3.fromHex("171717"), 
						FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
						FontSize = Enum.FontSize.Size14, 
						Name = "scripts", 
						Size = UDim2.new(0, 200, 0, 50), 
						Text = "", 
						TextColor3 = Color3.fromHex("000000"), 
						TextSize = 14
					}, {
						create("UICorner", { 
							CornerRadius = UDim.new(0, 4), 
							Name = "corner"
						}),
						create("TextLabel", { 
							AnchorPoint = Vector2.new(1, 0), 
							BackgroundColor3 = Color3.fromHex("ffffff"), 
							BackgroundTransparency = 1, 
							FontFace = Font.new("rbxasset://fonts/families/Ubuntu.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
							FontSize = Enum.FontSize.Size18, 
							Name = "title", 
							Position = UDim2.new(1, -8, 0, 10), 
							Size = UDim2.new(1, -60, 0, 26), 
							Text = "Cloud Scripts", 
							TextColor3 = Color3.fromHex("ebebeb"), 
							TextSize = 16, 
							TextWrap = true, 
							TextWrapped = true, 
							TextXAlignment = Enum.TextXAlignment.Left
						}),
						create("TextLabel", { 
							AnchorPoint = Vector2.new(0.5, 1), 
							BackgroundColor3 = Color3.fromHex("ffffff"), 
							BackgroundTransparency = 1, 
							FontFace = Font.new("rbxasset://fonts/families/Ubuntu.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
							FontSize = Enum.FontSize.Size14, 
							Name = "description", 
							Position = UDim2.new(0.5, 0, 1, -8), 
							Size = UDim2.new(1, -16, 1, -54), 
							Text = "Search through a vast collection of scripts.", 
							TextColor3 = Color3.fromHex("ebebeb"), 
							TextSize = 14, 
							TextWrap = true, 
							TextWrapped = true, 
							TextXAlignment = Enum.TextXAlignment.Left, 
							TextYAlignment = Enum.TextYAlignment.Top
						}),
						create("ImageLabel", { 
							BackgroundColor3 = Color3.fromHex("ffffff"), 
							BackgroundTransparency = 1, 
							Image = "rbxassetid://13335789063", 
							Name = "icon", 
							Position = UDim2.new(0, 8, 0, 8), 
							Size = UDim2.new(0, 30, 0, 30)
						})
					}),
					create("TextButton", { 
						AutoButtonColor = false, 
						BackgroundColor3 = Color3.fromHex("171717"), 
						FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
						FontSize = Enum.FontSize.Size14, 
						Name = "_", 
						Size = UDim2.new(0, 200, 0, 50), 
						Text = "", 
						TextColor3 = Color3.fromHex("000000"), 
						TextSize = 14
					}, {
						create("UICorner", { 
							CornerRadius = UDim.new(0, 4), 
							Name = "corner"
						})
					}),
					create("TextButton", { 
						AutoButtonColor = false, 
						BackgroundColor3 = Color3.fromHex("171717"), 
						FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
						FontSize = Enum.FontSize.Size14, 
						Name = "_", 
						Size = UDim2.new(0, 200, 0, 50), 
						Text = "", 
						TextColor3 = Color3.fromHex("000000"), 
						TextSize = 14
					}, {
						create("UICorner", { 
							CornerRadius = UDim.new(0, 4), 
							Name = "corner"
						})
					}),
					create("TextButton", { 
						AutoButtonColor = false, 
						BackgroundColor3 = Color3.fromHex("171717"), 
						FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
						FontSize = Enum.FontSize.Size14, 
						Name = "_", 
						Size = UDim2.new(0, 200, 0, 50), 
						Text = "", 
						TextColor3 = Color3.fromHex("000000"), 
						TextSize = 14
					}, {
						create("UICorner", { 
							CornerRadius = UDim.new(0, 4), 
							Name = "corner"
						})
					}),
					create("TextButton", { 
						AutoButtonColor = false, 
						BackgroundColor3 = Color3.fromHex("171717"), 
						FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
						FontSize = Enum.FontSize.Size14, 
						Name = "_", 
						Size = UDim2.new(0, 200, 0, 50), 
						Text = "", 
						TextColor3 = Color3.fromHex("000000"), 
						TextSize = 14
					}, {
						create("UICorner", { 
							CornerRadius = UDim.new(0, 4), 
							Name = "corner"
						})
					})
				}),
				create("Frame", { 
					AnchorPoint = Vector2.new(0.5, 1), 
					BackgroundColor3 = Color3.fromHex("ffffff"), 
					BackgroundTransparency = 1, 
					Name = "bottom", 
					Position = UDim2.new(0.5, 0, 1, -8), 
					Size = UDim2.new(1, -24, 0, 32)
				}, {
					create("Frame", { 
						AnchorPoint = Vector2.new(0.5, 0.5), 
						BackgroundColor3 = Color3.fromHex("ffffff"), 
						BackgroundTransparency = 1, 
						Name = "fromLeft", 
						Position = UDim2.new(0.5, 0, 0.5, 0), 
						Size = UDim2.new(1, 0, 1, 0)
					}, {
						create("UIListLayout", { 
							FillDirection = Enum.FillDirection.Horizontal, 
							Name = "list", 
							Padding = UDim.new(0, 6), 
							SortOrder = Enum.SortOrder.LayoutOrder
						}),
						create("TextButton", { 
							AutoButtonColor = false, 
							BackgroundColor3 = Color3.fromHex("202020"), 
							FontFace = Font.new("rbxasset://fonts/families/Ubuntu.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
							FontSize = Enum.FontSize.Size14, 
							Name = "website", 
							Size = UDim2.new(0, 107, 1, 0), 
							Text = "Copy Website", 
							TextColor3 = Color3.fromHex("ebebeb"), 
							TextSize = 14
						}, {
							create("UICorner", { 
								CornerRadius = UDim.new(0, 4), 
								Name = "corner"
							})
						})
					}),
					create("Frame", { 
						AnchorPoint = Vector2.new(0.5, 0.5), 
						BackgroundColor3 = Color3.fromHex("ffffff"), 
						BackgroundTransparency = 1, 
						Name = "fromRight", 
						Position = UDim2.new(0.5, 0, 0.5, 0), 
						Size = UDim2.new(1, 0, 1, 0)
					}, {
						create("UIListLayout", { 
							FillDirection = Enum.FillDirection.Horizontal, 
							HorizontalAlignment = Enum.HorizontalAlignment.Right, 
							Name = "list", 
							Padding = UDim.new(0, 6), 
							SortOrder = Enum.SortOrder.LayoutOrder
						}),
						create("TextButton", { 
							AutoButtonColor = false, 
							BackgroundColor3 = Color3.fromHex("202020"), 
							FontFace = Font.new("rbxasset://fonts/families/Ubuntu.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
							FontSize = Enum.FontSize.Size14, 
							Name = "discord", 
							Size = UDim2.new(0, 104, 1, 0), 
							Text = "Copy Discord", 
							TextColor3 = Color3.fromHex("ebebeb"), 
							TextSize = 14
						}, {
							create("UICorner", { 
								CornerRadius = UDim.new(0, 4), 
								Name = "corner"
							})
						})
					})
				})
			}),
			create("Frame", { 
				AnchorPoint = Vector2.new(0.5, 1), 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				Name = "editor", 
				Position = UDim2.new(0.5, 0, 1, 0), 
				Size = UDim2.new(1, 0, 1, -40), 
				Visible = false
			}, {
				create("Frame", { 
					AnchorPoint = Vector2.new(0.5, 0), 
					BackgroundColor3 = Color3.fromHex("171717"), 
					Name = "main", 
					Position = UDim2.new(0.5, 0, 0, 8), 
					Size = UDim2.new(1, -16, 1, -56)
				}, {
					create("UICorner", { 
						CornerRadius = UDim.new(0, 4), 
						Name = "corner"
					}),
					create("UIListLayout", { 
						FillDirection = Enum.FillDirection.Horizontal, 
						Name = "list", 
						Padding = UDim.new(0, 4), 
						SortOrder = Enum.SortOrder.LayoutOrder
					}),
					create("ScrollingFrame", { 
						Active = true, 
						AnchorPoint = Vector2.new(0.5, 0.5), 
						BackgroundColor3 = Color3.fromHex("ffffff"), 
						BackgroundTransparency = 1, 
						BorderSizePixel = 0, 
						BottomImage = "rbxassetid://12651249430", 
						CanvasSize = UDim2.new(0, 6, 1, 0), 
						MidImage = "rbxassetid://12651249103", 
						Name = "lineNumbers", 
						Position = UDim2.new(0.5, 0, 0.5, 0), 
						ScrollBarImageColor3 = Color3.fromHex("484848"), 
						ScrollBarThickness = 0, 
						ScrollingDirection = Enum.ScrollingDirection.Y, 
						ScrollingEnabled = false, 
						Size = UDim2.new(0, 6, 1, 0), 
						TopImage = "rbxassetid://12651248921"
					}, {
						create("TextLabel", { 
							BackgroundColor3 = Color3.fromHex("ffffff"), 
							BackgroundTransparency = 1, 
							FontFace = Font.new("rbxasset://fonts/families/Ubuntu.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
							FontSize = Enum.FontSize.Size11, 
							Name = "label", 
							Size = UDim2.new(1, 0, 1, 0), 
							Text = "1", 
							TextColor3 = Color3.fromHex("d2d2d2"), 
							TextSize = 11, 
							TextXAlignment = Enum.TextXAlignment.Right, 
							TextYAlignment = Enum.TextYAlignment.Top
						})
					}),
					create("UIPadding", { 
						Name = "padding", 
						PaddingBottom = UDim.new(0, 8), 
						PaddingLeft = UDim.new(0, 8), 
						PaddingRight = UDim.new(0, 8), 
						PaddingTop = UDim.new(0, 8)
					}),
					create("Frame", { 
						BackgroundColor3 = Color3.fromHex("b2b2b2"), 
						BorderSizePixel = 0, 
						Name = "separator", 
						Size = UDim2.new(0, 1, 1, 0)
					}),
					create("ScrollingFrame", { 
						Active = true, 
						AnchorPoint = Vector2.new(0.5, 0.5), 
						BackgroundColor3 = Color3.fromHex("ffffff"), 
						BackgroundTransparency = 1, 
						BorderSizePixel = 0, 
						BottomImage = "rbxassetid://12651249430", 
						CanvasSize = UDim2.new(1, -15, 1, 0), 
						MidImage = "rbxassetid://12651249103", 
						Name = "container", 
						Position = UDim2.new(0.5, 0, 0.5, 0), 
						ScrollBarImageColor3 = Color3.fromHex("484848"), 
						ScrollBarThickness = 4, 
						Size = UDim2.new(1, -15, 1, 0), 
						TopImage = "rbxassetid://12651248921"
					}, {
						create("TextBox", { 
							BackgroundColor3 = Color3.fromHex("ffffff"), 
							BackgroundTransparency = 1, 
							ClearTextOnFocus = false, 
							FontFace = Font.new("rbxasset://fonts/families/Ubuntu.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
							FontSize = Enum.FontSize.Size11, 
							MultiLine = true, 
							Name = "content", 
							Size = UDim2.new(1, 0, 1, 0), 
							Text = "print(\"Kiwi Android >>>\");", 
							TextColor3 = Color3.fromHex("b2b2b2"), 
							TextSize = 11, 
							TextTruncate = Enum.TextTruncate.AtEnd, 
							TextWrap = true, 
							TextWrapped = true, 
							TextXAlignment = Enum.TextXAlignment.Left, 
							TextYAlignment = Enum.TextYAlignment.Top
						})
					})
				}),
				create("Frame", { 
					AnchorPoint = Vector2.new(0.5, 1), 
					BackgroundColor3 = Color3.fromHex("ffffff"), 
					BackgroundTransparency = 1, 
					Name = "bottom", 
					Position = UDim2.new(0.5, 0, 1, -8), 
					Size = UDim2.new(1, -16, 0, 32)
				}, {
					create("Frame", { 
						AnchorPoint = Vector2.new(0.5, 0.5), 
						BackgroundColor3 = Color3.fromHex("ffffff"), 
						BackgroundTransparency = 1, 
						Name = "fromLeft", 
						Position = UDim2.new(0.5, 0, 0.5, 0), 
						Size = UDim2.new(1, 0, 1, 0)
					}, {
						create("UIListLayout", { 
							FillDirection = Enum.FillDirection.Horizontal, 
							Name = "list", 
							Padding = UDim.new(0, 6), 
							SortOrder = Enum.SortOrder.LayoutOrder
						}),
						create("TextButton", { 
							AutoButtonColor = false, 
							BackgroundColor3 = Color3.fromHex("202020"), 
							FontFace = Font.new("rbxasset://fonts/families/Ubuntu.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
							FontSize = Enum.FontSize.Size14, 
							Name = "execute", 
							Size = UDim2.new(0, 76, 1, 0), 
							Text = "Execute", 
							TextColor3 = Color3.fromHex("ebebeb"), 
							TextSize = 14
						}, {
							create("UICorner", { 
								CornerRadius = UDim.new(0, 4), 
								Name = "corner"
							})
						}),
						create("TextButton", { 
							AutoButtonColor = false, 
							BackgroundColor3 = Color3.fromHex("202020"), 
							FontFace = Font.new("rbxasset://fonts/families/Ubuntu.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
							FontSize = Enum.FontSize.Size14, 
							Name = "clear", 
							Size = UDim2.new(0, 59, 1, 0), 
							Text = "Clear", 
							TextColor3 = Color3.fromHex("ebebeb"), 
							TextSize = 14
						}, {
							create("UICorner", { 
								CornerRadius = UDim.new(0, 4), 
								Name = "corner"
							})
						})
					}),
					create("Frame", { 
						AnchorPoint = Vector2.new(0.5, 0.5), 
						BackgroundColor3 = Color3.fromHex("ffffff"), 
						BackgroundTransparency = 1, 
						Name = "fromRight", 
						Position = UDim2.new(0.5, 0, 0.5, 0), 
						Size = UDim2.new(1, 0, 1, 0)
					}, {
						create("UIListLayout", { 
							FillDirection = Enum.FillDirection.Horizontal, 
							HorizontalAlignment = Enum.HorizontalAlignment.Right, 
							Name = "list", 
							Padding = UDim.new(0, 6), 
							SortOrder = Enum.SortOrder.LayoutOrder
						}),
						create("TextButton", { 
							AutoButtonColor = false, 
							BackgroundColor3 = Color3.fromHex("202020"), 
							FontFace = Font.new("rbxasset://fonts/families/Ubuntu.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
							FontSize = Enum.FontSize.Size14, 
							Name = "executeClip", 
							Size = UDim2.new(0, 163, 1, 0), 
							Text = "Execute from Clipboard", 
							TextColor3 = Color3.fromHex("ebebeb"), 
							TextSize = 14
						}, {
							create("UICorner", { 
								CornerRadius = UDim.new(0, 4), 
								Name = "corner"
							})
						})
					})
				})
			}),
			create("Frame", { 
				AnchorPoint = Vector2.new(0.5, 1), 
				BackgroundColor3 = Color3.fromHex("ffffff"), 
				BackgroundTransparency = 1, 
				Name = "scripts", 
				Position = UDim2.new(0.5, 0, 1, 0), 
				Size = UDim2.new(1, 0, 1, -40),
				Visible = false
			}, {
				create("Frame", { 
					AnchorPoint = Vector2.new(0.5, 0), 
					BackgroundColor3 = Color3.fromHex("ffffff"), 
					BackgroundTransparency = 1, 
					Name = "top", 
					Position = UDim2.new(0.5, 0, 0, 8), 
					Size = UDim2.new(1, -24, 0, 32)
				}, {
					create("UIListLayout", { 
						FillDirection = Enum.FillDirection.Horizontal, 
						Name = "list", 
						Padding = UDim.new(0, 6), 
						SortOrder = Enum.SortOrder.LayoutOrder
					}),
					create("Frame", { 
						BackgroundColor3 = Color3.fromHex("ffffff"), 
						BackgroundTransparency = 1, 
						Name = "input", 
						Size = UDim2.new(1, -220, 1, 0)
					}, {
						create("TextBox", { 
							AnchorPoint = Vector2.new(0.5, 0.5), 
							BackgroundColor3 = Color3.fromHex("1a1a1a"), 
							CursorPosition = -1, 
							FontFace = Font.new("rbxasset://fonts/families/Ubuntu.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
							FontSize = Enum.FontSize.Size14, 
							Name = "box", 
							PlaceholderText = "Enter query...", 
							Position = UDim2.new(0.5, 0, 0.5, 0), 
							Size = UDim2.new(1, -2, 1, -2), 
							Text = "", 
							TextColor3 = Color3.fromHex("dcdcdc"), 
							TextSize = 14, 
							TextXAlignment = Enum.TextXAlignment.Left
						}, {
							create("UICorner", { 
								CornerRadius = UDim.new(0, 4), 
								Name = "corner"
							}),
							create("UIStroke", { 
								ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
								Color = Color3.fromHex("5d5d5d"), 
								Name = "stroke"
							}),
							create("UIPadding", { 
								Name = "padding", 
								PaddingLeft = UDim.new(0, 8), 
								PaddingRight = UDim.new(0, 8)
							})
						})
					}),
					create("TextButton", { 
						AutoButtonColor = false, 
						BackgroundColor3 = Color3.fromHex("202020"), 
						FontFace = Font.new("rbxasset://fonts/families/Ubuntu.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
						FontSize = Enum.FontSize.Size14, 
						Name = "search", 
						Size = UDim2.new(0, 68, 1, 0), 
						Text = "Search", 
						TextColor3 = Color3.fromHex("ebebeb"), 
						TextSize = 14
					}, {
						create("UICorner", { 
							CornerRadius = UDim.new(0, 4), 
							Name = "corner"
						})
					}),
					create("TextButton", { 
						AutoButtonColor = false, 
						BackgroundColor3 = Color3.fromHex("202020"), 
						FontFace = Font.new("rbxasset://fonts/families/Ubuntu.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
						FontSize = Enum.FontSize.Size14, 
						Name = "previousPage", 
						Size = UDim2.new(0, 78, 1, 0), 
						Text = "Previous", 
						TextColor3 = Color3.fromHex("ebebeb"), 
						TextSize = 14
					}, {
						create("UICorner", { 
							CornerRadius = UDim.new(0, 4), 
							Name = "corner"
						})
					}),
					create("TextButton", { 
						AutoButtonColor = false, 
						BackgroundColor3 = Color3.fromHex("202020"), 
						FontFace = Font.new("rbxasset://fonts/families/Ubuntu.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
						FontSize = Enum.FontSize.Size14, 
						Name = "nextPage", 
						Size = UDim2.new(0, 56, 1, 0), 
						Text = "Next", 
						TextColor3 = Color3.fromHex("ebebeb"), 
						TextSize = 14
					}, {
						create("UICorner", { 
							CornerRadius = UDim.new(0, 4), 
							Name = "corner"
						})
					})
				}),
				create("ScrollingFrame", { 
					Active = true, 
					AnchorPoint = Vector2.new(0.5, 1), 
					BackgroundColor3 = Color3.fromHex("ffffff"), 
					BackgroundTransparency = 1, 
					BorderSizePixel = 0, 
					CanvasSize = UDim2.new(0, 0, 0, 598), 
					Name = "main", 
					Position = UDim2.new(0.5, 0, 1, -12), 
					ScrollBarImageColor3 = Color3.fromHex("000000"), 
					ScrollBarThickness = 0, 
					Size = UDim2.new(1, -24, 1, -60)
				}, {
					create("UIGridLayout", { 
						CellPadding = UDim2.new(0, 8, 0, 6), 
						CellSize = UDim2.new(0.25, -6, 0, 129), 
						Name = "grid", 
						SortOrder = Enum.SortOrder.LayoutOrder
					})
				})
			})
		})
	});

	--[[ Start ]]--

	local runCode = removeTrace("runcode");

	local tabs = main.tabs;

	--[[ Toggle UI ]]--

	do
		local isOpen = false;

		toggleMain.MouseButton1Click:Connect(function()
			isOpen = not isOpen;
			main.Visible = isOpen;
		end);
	end

	--[[ Toggle Drag ]]--

	do
		local currentCamera = workspace.CurrentCamera;

		toggleMain.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				local inputConn = userInputService.InputChanged:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
						tween(toggleMain, 0.18, {
							Position = UDim2.new(0, math.clamp(input.Position.X, 28, currentCamera.ViewportSize.X - 28), 0, math.clamp(input.Position.Y, 28, currentCamera.ViewportSize.Y - 28))
						});
					end
				end);
				local conn; conn = input.Changed:Connect(function()
					if input.UserInputState == Enum.UserInputState.End then
						inputConn:Disconnect();
						conn:Disconnect();
					end
				end);
			end
		end);
	end

	--[[ Select Tabs ]]--
	
	do
		local selectedTab = tabs.home;

		local function selectTab(name)
			local tab = tabs[name];
			if selectedTab ~= tab then
				selectedTab.Visible = false;
				selectedTab = tab;
				tab.Visible = true;
			end
		end

		local buttonList = tabs.home.main:GetChildren();
		for i = 1, #buttonList do
			local v = buttonList[i];
			if v:IsA("TextButton") and v.Name ~= "_" then
				local tab = tabs[v.Name];
				v.MouseButton1Click:Connect(function()
					selectTab(v.Name);
				end);
			end
		end

		main.top.home.MouseButton1Click:Connect(function()
			selectTab("home");
		end);
	end

	--[[ Editor ]]--

	do
		local editor = tabs.editor;

		local scroll = editor.main.container;
		local content = scroll.content;

		do
			local lineNumbers = editor.main.lineNumbers;
			local lineLabel = lineNumbers.label;

			local function getTextBounds(input)
				return textService:GetTextSize(input, content.TextSize, content.Font, hugeVector2);
			end

			content:GetPropertyChangedSignal("Text"):Connect(function()
				local input = content.Text;
				local lines = math.min(#string.split(input, "\n"), maxLines);
				local digitLength = #tostring(lines) * 6;
				local textBounds = getTextBounds(input);
				local textHeight = math.min(textBounds.Y, maxLines * 11);
				local str = "";
				for i = 1, lines do
					str ..= string.format("%d%s", i, i == lines and "" or "\n");
				end
				lineLabel.Text = str;
				lineNumbers.Size = UDim2.new(0, digitLength, 1, 0);
				lineNumbers.CanvasSize = UDim2.new(0, digitLength, 0, textHeight);
				scroll.Size = UDim2.new(1, -(9 + digitLength), 1, 0);
				scroll.CanvasSize = UDim2.new(0, textBounds.X + digitLength, 0, textHeight);
			end);

			scroll:GetPropertyChangedSignal("CanvasPosition"):Connect(function()
				lineNumbers.CanvasPosition = Vector2.new(0, scroll.CanvasPosition.Y);
			end);
		end		

		do
			local bottom = editor.bottom;

			bottom.fromLeft.execute.MouseButton1Click:Connect(function()
				runCode(content.Text);
			end);

			bottom.fromLeft.clear.MouseButton1Click:Connect(function()
				content.Text = "";
			end);

			bottom.fromRight.executeClip.MouseButton1Click:Connect(function()
				runCode(_getclipboard());
			end);
		end
	end

	--[[ Scripts ]]--

	do
		local scripts = tabs.scripts;

		local scroll = scripts.main;
		local layout = scroll.grid;

		layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
			scroll.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y);
		end);

		do
			local top = scripts.top;
			local searchInput = top.input.box;

			local template = create("Frame", { 
				BackgroundColor3 = Color3.fromHex("202020"), 
				Name = "template"
			}, {
				create("UICorner", { 
					CornerRadius = UDim.new(0, 4), 
					Name = "corner"
				}),
				create("UIStroke", { 
					ApplyStrokeMode = Enum.ApplyStrokeMode.Border, 
					Color = Color3.fromHex("141414"), 
					Name = "stroke", 
					Thickness = 1.2
				}),
				create("ImageLabel", { 
					AnchorPoint = Vector2.new(0.5, 0), 
					BackgroundColor3 = Color3.fromHex("ffffff"), 
					BackgroundTransparency = 1, 
					Image = "rbxassetid://12908969824", 
					Name = "icon", 
					Position = UDim2.new(0.5, 0, 0, 0), 
					Size = UDim2.new(1, 0, 1, -30)
				}, {
					create("UICorner", { 
						CornerRadius = UDim.new(0, 5), 
						Name = "corner"
					})
				}),
				create("TextLabel", { 
					AnchorPoint = Vector2.new(0.5, 0), 
					BackgroundColor3 = Color3.fromHex("ffffff"), 
					BackgroundTransparency = 1, 
					FontFace = Font.new("rbxasset://fonts/families/Ubuntu.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
					FontSize = Enum.FontSize.Size14, 
					Name = "title", 
					Position = UDim2.new(0.5, 0, 0, 0), 
					Size = UDim2.new(1, -16, 0, 24), 
					Text = "dothub", 
					TextColor3 = Color3.fromHex("ebebeb"), 
					TextSize = 14, 
					TextStrokeColor3 = Color3.fromHex("0c0c0c"), 
					TextStrokeTransparency = 0.25, 
					TextXAlignment = Enum.TextXAlignment.Right
				}),
				create("TextButton", { 
					AnchorPoint = Vector2.new(0.5, 1), 
					AutoButtonColor = false, 
					BackgroundColor3 = Color3.fromHex("303030"), 
					BackgroundTransparency = 1, 
					FontFace = Font.new("rbxasset://fonts/families/Ubuntu.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal), 
					FontSize = Enum.FontSize.Size14, 
					Name = "execute", 
					Position = UDim2.new(0.5, 0, 1, -4), 
					Size = UDim2.new(1, -8, 0, 22), 
					Text = "", 
					TextColor3 = Color3.fromHex("000000"), 
					TextSize = 14
				}, {
					create("ImageLabel", { 
						AnchorPoint = Vector2.new(1, 0.5), 
						BackgroundColor3 = Color3.fromHex("ffffff"), 
						BackgroundTransparency = 1, 
						Image = "rbxassetid://13376608652", 
						Name = "icon", 
						Position = UDim2.new(1, -4, 0.5, 0), 
						Size = UDim2.new(0, 16, 0, 16)
					}),
					create("UICorner", { 
						CornerRadius = UDim.new(0, 4), 
						Name = "corner"
					}),
					create("TextLabel", { 
						AnchorPoint = Vector2.new(0, 0.5), 
						BackgroundColor3 = Color3.fromHex("ffffff"), 
						BackgroundTransparency = 1, 
						FontFace = Font.new("rbxasset://fonts/families/Ubuntu.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal), 
						FontSize = Enum.FontSize.Size14, 
						Name = "title", 
						Position = UDim2.new(0, 6, 0.5, 0), 
						Size = UDim2.new(1, -34, 1, 0), 
						Text = "Execute", 
						TextColor3 = Color3.fromHex("ebebeb"), 
						TextSize = 14, 
						TextXAlignment = Enum.TextXAlignment.Left
					})
				})
			});

			local isSearching = false;
			local imageCount = 0;
			local currentPage, totalPages = 1, 1;
			local validExtensions = { "png", "jpg", "jpeg" };

			local function sendRequest(query, method, headers, body)
				local succ, res = pcall(_request, {
					Url = query,
					Method = method,
					Headers = headers,
					Body = body
				});
				if succ == false or res.Success == false then
					return;
				end
				return res.Body;
			end

			local function setIcon(icon, path)
				if string.sub(path, 1, 4) == "http" then
					local res = sendRequest(path, "GET");
					if res and icon.Parent.Parent == scroll then
						local ext = select(-1, unpack(string.split(path, "%2E")));
						local num = imageCount + 1;
						imageCount = num;
						local filePath = string.format("kiwiui/search/%d.%s", num, table.find(validExtensions, ext) and ext or "jpg");
						_writefile(filePath, res);
						icon.Image = _getcustomasset(filePath);
					end
				else
					local num = imageCount + 1;
					imageCount = num;
					local filePath = string.format("kiwiui/search/%d.%s", num, "jpg");
					_writefile(filePath, _base64decode(path));
					icon.Image = _getcustomasset(filePath);
				end
			end

			local function addScript(title, icon, source)
				local item = template:Clone();
				item.title.Text = title;
				item.Parent = scroll;

				if icon then
					task.defer(setIcon, item.icon, icon);
				end

				item.execute.MouseButton1Click:Connect(function()
					runCode(source);
				end);
			end

			local function calculateCellSize()
				local absoluteSize = scroll.AbsoluteSize;
				local sizeX = absoluteSize.X * 0.25 - 6;
				local sizeY = 0;
				for i = 5, 1, -1 do
					local potentialValue = (absoluteSize.Y - (2 + 6 * (i - 1))) / i;
					if sizeX and potentialValue > sizeX then
						break;
					end
					sizeY = potentialValue;
				end
				layout.CellSize = UDim2.new(0.25, -6, 0, sizeY);
			end

			local function search(query, page)
				local res = sendRequest(string.format("https://scriptblox.com/api/script/search?q=%s&max=20&mode=free&page=%d", query, page), "GET");
				if res then
					local webps, webptoscripts = {}, {};
					local result = jsonDecode(httpService, res).result;
					local scriptResults = result.scripts;
					totalPages, currentPage = result.totalPages, page;
					for i = 1, #scriptResults do
						local v = scriptResults[i];
						if v.isPatched == false then
							if string.sub(v.game.imageUrl, 1, 1) == "/" then
								v.game.imageUrl = "https://scriptblox.com" .. v.game.imageUrl;
							end
							if string.sub(v.game.imageUrl, -4) == "webp" then
								webps[#webps + 1] = urlEncode(httpService, v.game.imageUrl);
								webptoscripts[#webps] = i;
							end
						end
					end
					if #webps > 0 then
						local conversionRes = sendRequest("https://webptojpg.nothanks19.repl.co", "POST", { ["Content-Type"] = "application/json" }, jsonEncode(httpService, webps));
						if conversionRes then
							local images = jsonDecode(httpService, conversionRes).images;
							for i = 1, #images do
								scriptResults[webptoscripts[i]].game.imageUrl = images[i];
							end
						end
					end
					for i = 1, #scriptResults do
						local v = scriptResults[i];
						if v.isPatched == false then
							addScript(v.title, v.game.imageUrl, v.script);
						end
					end
				end
			end

			top.search.MouseButton1Click:Connect(function()
				if isSearching == false then
					isSearching = true;
					local children = scroll:GetChildren();
					for i = 1, #children do
						local v = children[i];
						if v:IsA("Frame") then
							v:Destroy();
						end
					end
					if _isfolder("kiwiui/search") == false then
						_makefolder("kiwiui/search");
					end
					local files = _listfiles("kiwiui/search");
					for i = 1, #files do
						_delfile(files[i]);
					end
					calculateCellSize();
					search(urlEncode(httpService, searchInput.Text), 1);
					isSearching = false;
				end
			end);
			
			top.previousPage.MouseButton1Click:Connect(function()
				if currentPage > 1 then
					search(urlEncode(httpService, searchInput.Text), currentPage - 1);
				end
			end);

			top.nextPage.MouseButton1Click:Connect(function()
				if totalPages > currentPage then
					search(urlEncode(httpService, searchInput.Text), currentPage + 1);
				end
			end);
		end
	end
end;

--[[ Load ]]--

loadMainUI();
end)
tab3.newButton("KRNL", "Executor script", function()
    local KRNL = Instance.new("ScreenGui")
local KrnlGUI = Instance.new("Frame")
local FileButton = Instance.new("TextButton")
local UITextSizeConstraint = Instance.new("UITextSizeConstraint")
local CreditsButton = Instance.new("TextButton")
local UITextSizeConstraint_2 = Instance.new("UITextSizeConstraint")
local GamesButton = Instance.new("TextButton")
local UITextSizeConstraint_3 = Instance.new("UITextSizeConstraint")
local HotScriptsButton = Instance.new("TextButton")
local UITextSizeConstraint_4 = Instance.new("UITextSizeConstraint")
local OthersButton = Instance.new("TextButton")
local UITextSizeConstraint_5 = Instance.new("UITextSizeConstraint")
local SideGUI = Instance.new("Frame")
local ImageLabel = Instance.new("ImageLabel")
local TextLabel = Instance.new("TextLabel")
local Xbutton = Instance.new("TextButton")
local UITextSizeConstraint_6 = Instance.new("UITextSizeConstraint")
local button = Instance.new("TextButton")
local UITextSizeConstraint_7 = Instance.new("UITextSizeConstraint")
local MainGUI = Instance.new("Frame")
local ExecuteBar = Instance.new("Frame")
local Frame = Instance.new("Frame")
local Script1 = Instance.new("Frame")
local TextButton = Instance.new("TextButton")
local UITextSizeConstraint_8 = Instance.new("UITextSizeConstraint")
local UITextSizeConstraint_9 = Instance.new("UITextSizeConstraint")
local TextButton_2 = Instance.new("TextButton")
local UITextSizeConstraint_10 = Instance.new("UITextSizeConstraint")
local UITextSizeConstraint_11 = Instance.new("UITextSizeConstraint")
local Script2 = Instance.new("Frame")
local TextButton_3 = Instance.new("TextButton")
local UITextSizeConstraint_12 = Instance.new("UITextSizeConstraint")
local UITextSizeConstraint_13 = Instance.new("UITextSizeConstraint")
local TextButton_4 = Instance.new("TextButton")
local UITextSizeConstraint_14 = Instance.new("UITextSizeConstraint")
local UITextSizeConstraint_15 = Instance.new("UITextSizeConstraint")
local addbutton = Instance.new("TextButton")
local ScrollingFrame1 = Instance.new("ScrollingFrame")
local ImageLabel_2 = Instance.new("ImageLabel")
local security = Instance.new("TextLabel")
local EditorFrame = Instance.new("ScrollingFrame")
local Source = Instance.new("TextBox")
local Comments_ = Instance.new("TextLabel")
local Globals_ = Instance.new("TextLabel")
local Keywords_ = Instance.new("TextLabel")
local RemoteHighlight_ = Instance.new("TextLabel")
local Strings_ = Instance.new("TextLabel")
local Tokens_ = Instance.new("TextLabel")
local Numbers_ = Instance.new("TextLabel")
local Lines = Instance.new("TextLabel")
local ScrollingFrame2 = Instance.new("ScrollingFrame")
local ImageLabel_3 = Instance.new("ImageLabel")
local security_2 = Instance.new("TextLabel")
local EditorFrame_2 = Instance.new("ScrollingFrame")
local Source_2 = Instance.new("TextBox")
local Comments__2 = Instance.new("TextLabel")
local Globals__2 = Instance.new("TextLabel")
local Keywords__2 = Instance.new("TextLabel")
local RemoteHighlight__2 = Instance.new("TextLabel")
local Strings__2 = Instance.new("TextLabel")
local Tokens__2 = Instance.new("TextLabel")
local Numbers__2 = Instance.new("TextLabel")
local Lines_2 = Instance.new("TextLabel")
local Execute = Instance.new("TextButton")
local UITextSizeConstraint_16 = Instance.new("UITextSizeConstraint")
local Clear = Instance.new("TextButton")
local UITextSizeConstraint_17 = Instance.new("UITextSizeConstraint")
local OpenFileButton = Instance.new("TextButton")
local UITextSizeConstraint_18 = Instance.new("UITextSizeConstraint")
local SaveFileButton = Instance.new("TextButton")
local UITextSizeConstraint_19 = Instance.new("UITextSizeConstraint")
local InjectButton = Instance.new("TextButton")
local UITextSizeConstraint_20 = Instance.new("UITextSizeConstraint")
local OptionButton = Instance.new("TextButton")
local UITextSizeConstraint_21 = Instance.new("UITextSizeConstraint")
local ScriptHub = Instance.new("ScrollingFrame")
local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")
local InjectedMessgae = Instance.new("Frame")
local Frame_2 = Instance.new("Frame")
local Xbutton_2 = Instance.new("TextButton")
local UITextSizeConstraint_22 = Instance.new("UITextSizeConstraint")
local TextLabel_2 = Instance.new("TextLabel")
local Frame_3 = Instance.new("Frame")
local Okbutton = Instance.new("TextButton")
local UITextSizeConstraint_23 = Instance.new("UITextSizeConstraint")
local TextLabel_3 = Instance.new("TextLabel")
local UITextSizeConstraint_24 = Instance.new("UITextSizeConstraint")
local HScriptsHub = Instance.new("Frame")
local DexExplorer = Instance.new("TextButton")
local UITextSizeConstraint_25 = Instance.new("UITextSizeConstraint")
local OpenGui = Instance.new("TextButton")
local UITextSizeConstraint_26 = Instance.new("UITextSizeConstraint")
local RemoteSpy = Instance.new("TextButton")
local UITextSizeConstraint_27 = Instance.new("UITextSizeConstraint")
local DarkDex = Instance.new("TextButton")
local UITextSizeConstraint_28 = Instance.new("UITextSizeConstraint")
local UnamedEsp = Instance.new("TextButton")
local UITextSizeConstraint_29 = Instance.new("UITextSizeConstraint")
local IYFE = Instance.new("TextButton")
local UITextSizeConstraint_30 = Instance.new("UITextSizeConstraint")
local OwlHub = Instance.new("TextButton")
local UITextSizeConstraint_31 = Instance.new("UITextSizeConstraint")
local HoHoHub = Instance.new("TextButton")
local UITextSizeConstraint_32 = Instance.new("UITextSizeConstraint")
local BlueLight = Instance.new("Frame")
local CreditsW = Instance.new("Frame")
local Frame_4 = Instance.new("Frame")
local Xbutton_3 = Instance.new("TextButton")
local UITextSizeConstraint_33 = Instance.new("UITextSizeConstraint")
local TextLabel_4 = Instance.new("TextLabel")
local UITextSizeConstraint_34 = Instance.new("UITextSizeConstraint")
local TextLabel_5 = Instance.new("TextLabel")
local UITextSizeConstraint_35 = Instance.new("UITextSizeConstraint")
local ImageLabel_4 = Instance.new("ImageLabel")
local OtherTab = Instance.new("Frame")
local WHy = Instance.new("TextButton")
local UITextSizeConstraint_36 = Instance.new("UITextSizeConstraint")
local Nope = Instance.new("TextButton")
local UITextSizeConstraint_37 = Instance.new("UITextSizeConstraint")
local FileTab = Instance.new("Frame")
local KillTask = Instance.new("TextButton")
local UITextSizeConstraint_38 = Instance.new("UITextSizeConstraint")
local Inject = Instance.new("TextButton")
local UITextSizeConstraint_39 = Instance.new("UITextSizeConstraint")
local GamesOpenGUI = Instance.new("Frame")
local Frame_5 = Instance.new("Frame")
local Xbutton_4 = Instance.new("TextButton")
local UITextSizeConstraint_40 = Instance.new("UITextSizeConstraint")
local Frame_6 = Instance.new("Frame")
local Okbutton_2 = Instance.new("TextButton")
local UITextSizeConstraint_41 = Instance.new("UITextSizeConstraint")
local TextLabel_6 = Instance.new("TextLabel")
local UITextSizeConstraint_42 = Instance.new("UITextSizeConstraint")
local UIAspectRatioConstraint_2 = Instance.new("UIAspectRatioConstraint")
local FloatingGUI = Instance.new("ImageButton")

--Properties:

KRNL.Name = "KRNL"
KRNL.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
KRNL.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
KRNL.ResetOnSpawn = false

KrnlGUI.Name = "KrnlGUI"
KrnlGUI.Parent = KRNL
KrnlGUI.Active = true
KrnlGUI.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
KrnlGUI.BorderColor3 = Color3.fromRGB(34, 34, 34)
KrnlGUI.Position = UDim2.new(0, 137, 0, 141)
KrnlGUI.Size = UDim2.new(0, 685, 0, 344)
KrnlGUI.Visible = false

FileButton.Name = "File Button"
FileButton.Parent = KrnlGUI
FileButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FileButton.BackgroundTransparency = 1.000
FileButton.Position = UDim2.new(0.00264457078, 0, 0.0971021578, 0)
FileButton.Size = UDim2.new(0.0666066185, 0, 0.0681233257, 0)
FileButton.Font = Enum.Font.SourceSans
FileButton.Text = "File"
FileButton.TextColor3 = Color3.fromRGB(255, 255, 255)
FileButton.TextScaled = true
FileButton.TextSize = 16.000
FileButton.TextWrapped = true

UITextSizeConstraint.Parent = FileButton
UITextSizeConstraint.MaxTextSize = 16

CreditsButton.Name = "Credits Button"
CreditsButton.Parent = KrnlGUI
CreditsButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
CreditsButton.BackgroundTransparency = 1.000
CreditsButton.Position = UDim2.new(0.0700000003, 0, 0.0970000029, 0)
CreditsButton.Size = UDim2.new(0.0666066185, 0, 0.0681233257, 0)
CreditsButton.Font = Enum.Font.SourceSans
CreditsButton.Text = "Credits"
CreditsButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CreditsButton.TextScaled = true
CreditsButton.TextSize = 16.000
CreditsButton.TextWrapped = true

UITextSizeConstraint_2.Parent = CreditsButton
UITextSizeConstraint_2.MaxTextSize = 16

GamesButton.Name = "Games Button"
GamesButton.Parent = KrnlGUI
GamesButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
GamesButton.BackgroundTransparency = 1.000
GamesButton.Position = UDim2.new(0.150000006, 0, 0.0970000029, 0)
GamesButton.Size = UDim2.new(0.0666066185, 0, 0.0681233257, 0)
GamesButton.Font = Enum.Font.SourceSans
GamesButton.Text = "Games"
GamesButton.TextColor3 = Color3.fromRGB(255, 255, 255)
GamesButton.TextScaled = true
GamesButton.TextSize = 15.000
GamesButton.TextWrapped = true

UITextSizeConstraint_3.Parent = GamesButton
UITextSizeConstraint_3.MaxTextSize = 15

HotScriptsButton.Name = "Hot Scripts Button"
HotScriptsButton.Parent = KrnlGUI
HotScriptsButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
HotScriptsButton.BackgroundTransparency = 1.000
HotScriptsButton.Position = UDim2.new(0.232577384, 0, 0.0970000103, 0)
HotScriptsButton.Size = UDim2.new(0.0943726227, 0, 0.0681233257, 0)
HotScriptsButton.Font = Enum.Font.SourceSans
HotScriptsButton.Text = "Hot-Scripts"
HotScriptsButton.TextColor3 = Color3.fromRGB(255, 255, 255)
HotScriptsButton.TextScaled = true
HotScriptsButton.TextSize = 15.000
HotScriptsButton.TextWrapped = true

UITextSizeConstraint_4.Parent = HotScriptsButton
UITextSizeConstraint_4.MaxTextSize = 15

OthersButton.Name = "Others Button"
OthersButton.Parent = KrnlGUI
OthersButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
OthersButton.BackgroundTransparency = 1.000
OthersButton.Position = UDim2.new(0.340016991, 0, 0.0970000103, 0)
OthersButton.Size = UDim2.new(0.0682386607, 0, 0.0681233257, 0)
OthersButton.Font = Enum.Font.SourceSans
OthersButton.Text = "Others"
OthersButton.TextColor3 = Color3.fromRGB(255, 255, 255)
OthersButton.TextScaled = true
OthersButton.TextSize = 15.000
OthersButton.TextWrapped = true

UITextSizeConstraint_5.Parent = OthersButton
UITextSizeConstraint_5.MaxTextSize = 15

SideGUI.Name = "Side GUI"
SideGUI.Parent = KrnlGUI
SideGUI.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
SideGUI.BorderColor3 = Color3.fromRGB(31, 31, 31)
SideGUI.Size = UDim2.new(0.99889791, 0, 0.095630005, 0)

ImageLabel.Parent = SideGUI
ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel.BackgroundTransparency = 1.000
ImageLabel.Position = UDim2.new(0.00300000003, 0, 0.123999998, 0)
ImageLabel.Size = UDim2.new(0.0361689702, 0, 0.726585209, 0)
ImageLabel.Image = "rbxassetid://11671355800"

TextLabel.Parent = SideGUI
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.Position = UDim2.new(0.465686679, 0, 0.136606336, 0)
TextLabel.Size = UDim2.new(0.0694269463, 0, 0.726004899, 0)
TextLabel.Font = Enum.Font.SourceSans
TextLabel.Text = "KRNL"
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextScaled = true
TextLabel.TextSize = 20.000
TextLabel.TextWrapped = true

Xbutton.Name = "X button"
Xbutton.Parent = SideGUI
Xbutton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Xbutton.BackgroundTransparency = 1.000
Xbutton.Position = UDim2.new(0.957000017, 0, 0.159999996, 0)
Xbutton.Size = UDim2.new(0.0409558825, 0, 0.690584838, 0)
Xbutton.Font = Enum.Font.SourceSans
Xbutton.Text = "X"
Xbutton.TextColor3 = Color3.fromRGB(255, 255, 255)
Xbutton.TextSize = 40.000
Xbutton.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
Xbutton.TextWrapped = true

UITextSizeConstraint_6.Parent = Xbutton
UITextSizeConstraint_6.MaxTextSize = 35

button.Name = "- button"
button.Parent = SideGUI
button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
button.BackgroundTransparency = 1.000
button.Position = UDim2.new(0.910000026, 0, 0.159999996, 0)
button.Size = UDim2.new(0.0409558825, 0, 0.690584838, 0)
button.Font = Enum.Font.SourceSans
button.Text = "−"
button.TextColor3 = Color3.fromRGB(255, 255, 255)
button.TextScaled = true
button.TextSize = 35.000
button.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
button.TextWrapped = true

UITextSizeConstraint_7.Parent = button
UITextSizeConstraint_7.MaxTextSize = 35

MainGUI.Name = "MainGUI"
MainGUI.Parent = KrnlGUI
MainGUI.BackgroundColor3 = Color3.fromRGB(17, 17, 17)
MainGUI.BorderColor3 = Color3.fromRGB(0, 0, 0)
MainGUI.Position = UDim2.new(0, 0, 0.168076977, 0)
MainGUI.Size = UDim2.new(0.99999994, 0, 0.831923008, 0)

ExecuteBar.Name = "ExecuteBar"
ExecuteBar.Parent = MainGUI
ExecuteBar.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
ExecuteBar.BorderColor3 = Color3.fromRGB(37, 37, 37)
ExecuteBar.Position = UDim2.new(0.0070000249, 0, 0.00649997452, 0)
ExecuteBar.Size = UDim2.new(0.803592086, 0, 0.88723731, 0)

Frame.Parent = ExecuteBar
Frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
Frame.BorderColor3 = Color3.fromRGB(50, 50, 50)
Frame.Size = UDim2.new(0.999999881, 0, 0.0568133108, 0)

Script1.Name = "Script1"
Script1.Parent = Frame
Script1.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
Script1.BorderColor3 = Color3.fromRGB(50, 50, 50)
Script1.Position = UDim2.new(-0.00180647022, 0, 0, 0)
Script1.Size = UDim2.new(0.156733111, 0, 1.00000775, 0)

TextButton.Parent = Script1
TextButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
TextButton.BorderColor3 = Color3.fromRGB(50, 50, 50)
TextButton.Size = UDim2.new(0.8415097, 0, 0.999998391, 0)
TextButton.Font = Enum.Font.SourceSans
TextButton.Text = "Script1.lua"
TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton.TextScaled = true
TextButton.TextSize = 16.000
TextButton.TextWrapped = true

UITextSizeConstraint_8.Parent = TextButton
UITextSizeConstraint_8.MaxTextSize = 16

UITextSizeConstraint_9.Parent = TextButton
UITextSizeConstraint_9.MaxTextSize = 16

TextButton_2.Parent = Script1
TextButton_2.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
TextButton_2.BorderColor3 = Color3.fromRGB(50, 50, 50)
TextButton_2.Position = UDim2.new(0.841509819, 0, 0, 0)
TextButton_2.Size = UDim2.new(0.158490166, 0, 0.952832103, 0)
TextButton_2.Font = Enum.Font.SourceSans
TextButton_2.Text = "X"
TextButton_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_2.TextScaled = true
TextButton_2.TextSize = 16.000
TextButton_2.TextWrapped = true

UITextSizeConstraint_10.Parent = TextButton_2
UITextSizeConstraint_10.MaxTextSize = 16

UITextSizeConstraint_11.Parent = TextButton_2
UITextSizeConstraint_11.MaxTextSize = 16

Script2.Name = "Script2"
Script2.Parent = Frame
Script2.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
Script2.BorderColor3 = Color3.fromRGB(50, 50, 50)
Script2.Position = UDim2.new(0.159876347, 0, 0, 0)
Script2.Size = UDim2.new(0.156733111, 0, 1.00000775, 0)
Script2.Visible = false

TextButton_3.Parent = Script2
TextButton_3.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
TextButton_3.BorderColor3 = Color3.fromRGB(50, 50, 50)
TextButton_3.Position = UDim2.new(-3.7252903e-09, 0, 0, 0)
TextButton_3.Size = UDim2.new(0.8415097, 0, 0.999998391, 0)
TextButton_3.Font = Enum.Font.SourceSans
TextButton_3.Text = "Script2.lua"
TextButton_3.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_3.TextScaled = true
TextButton_3.TextSize = 16.000
TextButton_3.TextWrapped = true

UITextSizeConstraint_12.Parent = TextButton_3
UITextSizeConstraint_12.MaxTextSize = 16

UITextSizeConstraint_13.Parent = TextButton_3
UITextSizeConstraint_13.MaxTextSize = 16

TextButton_4.Parent = Script2
TextButton_4.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
TextButton_4.BorderColor3 = Color3.fromRGB(50, 50, 50)
TextButton_4.Position = UDim2.new(0.841509819, 0, 0, 0)
TextButton_4.Size = UDim2.new(0.158490166, 0, 0.952832103, 0)
TextButton_4.Font = Enum.Font.SourceSans
TextButton_4.Text = "X"
TextButton_4.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_4.TextScaled = true
TextButton_4.TextSize = 16.000
TextButton_4.TextWrapped = true

UITextSizeConstraint_14.Parent = TextButton_4
UITextSizeConstraint_14.MaxTextSize = 16

UITextSizeConstraint_15.Parent = TextButton_4
UITextSizeConstraint_15.MaxTextSize = 16

addbutton.Name = "addbutton"
addbutton.Parent = Frame
addbutton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
addbutton.BackgroundTransparency = 1.000
addbutton.Position = UDim2.new(0.154416174, 0, 0, 0)
addbutton.Size = UDim2.new(0, 19, 0, 13)
addbutton.Font = Enum.Font.SourceSans
addbutton.Text = "+"
addbutton.TextColor3 = Color3.fromRGB(255, 255, 255)
addbutton.TextSize = 17.000

ScrollingFrame1.Name = "ScrollingFrame1"
ScrollingFrame1.Parent = ExecuteBar
ScrollingFrame1.Active = true
ScrollingFrame1.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
ScrollingFrame1.BorderColor3 = Color3.fromRGB(40, 40, 40)
ScrollingFrame1.Position = UDim2.new(0.0127166249, 0, 0.079058826, 0)
ScrollingFrame1.Size = UDim2.new(0.973659992, 0, 0.917334437, 0)
ScrollingFrame1.ScrollBarThickness = 10

ImageLabel_2.Parent = ScrollingFrame1
ImageLabel_2.BackgroundColor3 = Color3.fromRGB(47, 47, 47)
ImageLabel_2.BackgroundTransparency = 1.000
ImageLabel_2.BorderSizePixel = 0
ImageLabel_2.Position = UDim2.new(0.00505135441, 0, -0.0532468483, 27)
ImageLabel_2.Size = UDim2.new(0, 541, 0, 359)
ImageLabel_2.ImageTransparency = 1.000

security.Name = "security"
security.Parent = ImageLabel_2
security.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
security.Size = UDim2.new(0, 552, 0, 258)
security.Visible = false
security.Font = Enum.Font.SourceSans
security.TextColor3 = Color3.fromRGB(0, 0, 0)
security.TextSize = 14.000

EditorFrame.Name = "EditorFrame"
EditorFrame.Parent = ImageLabel_2
EditorFrame.BackgroundColor3 = Color3.fromRGB(37, 37, 37)
EditorFrame.BackgroundTransparency = 1.000
EditorFrame.BorderColor3 = Color3.fromRGB(61, 61, 61)
EditorFrame.Size = UDim2.new(1, 0, 1, 0)
EditorFrame.ZIndex = 3
EditorFrame.BottomImage = "rbxassetid://148970562"
EditorFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
EditorFrame.HorizontalScrollBarInset = Enum.ScrollBarInset.ScrollBar
EditorFrame.MidImage = "rbxassetid://148970562"
EditorFrame.ScrollBarThickness = 5
EditorFrame.TopImage = "rbxassetid://148970562"

Source.Name = "Source"
Source.Parent = EditorFrame
Source.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Source.BackgroundTransparency = 1.000
Source.Position = UDim2.new(0, 19, 0, 0)
Source.Size = UDim2.new(0.965984941, 0, 1, 0)
Source.ZIndex = 3
Source.ClearTextOnFocus = false
Source.Font = Enum.Font.Code
Source.MultiLine = true
Source.PlaceholderColor3 = Color3.fromRGB(204, 204, 204)
Source.Text = "--Welcome To KRNL Mobile!"
Source.TextColor3 = Color3.fromRGB(204, 204, 204)
Source.TextSize = 14.000
Source.TextXAlignment = Enum.TextXAlignment.Left
Source.TextYAlignment = Enum.TextYAlignment.Top

Comments_.Name = "Comments_"
Comments_.Parent = Source
Comments_.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Comments_.BackgroundTransparency = 1.000
Comments_.Size = UDim2.new(1, 0, 1, 0)
Comments_.ZIndex = 5
Comments_.Font = Enum.Font.Code
Comments_.Text = ""
Comments_.TextColor3 = Color3.fromRGB(59, 200, 59)
Comments_.TextSize = 14.000
Comments_.TextXAlignment = Enum.TextXAlignment.Left
Comments_.TextYAlignment = Enum.TextYAlignment.Top

Globals_.Name = "Globals_"
Globals_.Parent = Source
Globals_.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Globals_.BackgroundTransparency = 1.000
Globals_.Size = UDim2.new(1, 0, 1, 0)
Globals_.ZIndex = 5
Globals_.Font = Enum.Font.Code
Globals_.Text = ""
Globals_.TextColor3 = Color3.fromRGB(85, 222, 154)
Globals_.TextSize = 14.000
Globals_.TextXAlignment = Enum.TextXAlignment.Left
Globals_.TextYAlignment = Enum.TextYAlignment.Top

Keywords_.Name = "Keywords_"
Keywords_.Parent = Source
Keywords_.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Keywords_.BackgroundTransparency = 1.000
Keywords_.Size = UDim2.new(1, 0, 1, 0)
Keywords_.ZIndex = 5
Keywords_.Font = Enum.Font.Code
Keywords_.Text = ""
Keywords_.TextColor3 = Color3.fromRGB(213, 53, 117)
Keywords_.TextSize = 14.000
Keywords_.TextXAlignment = Enum.TextXAlignment.Left
Keywords_.TextYAlignment = Enum.TextYAlignment.Top

RemoteHighlight_.Name = "RemoteHighlight_"
RemoteHighlight_.Parent = Source
RemoteHighlight_.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
RemoteHighlight_.BackgroundTransparency = 1.000
RemoteHighlight_.Size = UDim2.new(1, 0, 1, 0)
RemoteHighlight_.ZIndex = 5
RemoteHighlight_.Font = Enum.Font.Code
RemoteHighlight_.Text = ""
RemoteHighlight_.TextColor3 = Color3.fromRGB(0, 144, 255)
RemoteHighlight_.TextSize = 14.000
RemoteHighlight_.TextXAlignment = Enum.TextXAlignment.Left
RemoteHighlight_.TextYAlignment = Enum.TextYAlignment.Top

Strings_.Name = "Strings_"
Strings_.Parent = Source
Strings_.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Strings_.BackgroundTransparency = 1.000
Strings_.Size = UDim2.new(1, 0, 1, 0)
Strings_.ZIndex = 5
Strings_.Font = Enum.Font.Code
Strings_.Text = ""
Strings_.TextColor3 = Color3.fromRGB(229, 164, 60)
Strings_.TextSize = 14.000
Strings_.TextXAlignment = Enum.TextXAlignment.Left
Strings_.TextYAlignment = Enum.TextYAlignment.Top

Tokens_.Name = "Tokens_"
Tokens_.Parent = Source
Tokens_.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Tokens_.BackgroundTransparency = 1.000
Tokens_.Size = UDim2.new(1, 0, 1, 0)
Tokens_.ZIndex = 5
Tokens_.Font = Enum.Font.Code
Tokens_.Text = ""
Tokens_.TextColor3 = Color3.fromRGB(255, 255, 255)
Tokens_.TextSize = 14.000
Tokens_.TextXAlignment = Enum.TextXAlignment.Left
Tokens_.TextYAlignment = Enum.TextYAlignment.Top

Numbers_.Name = "Numbers_"
Numbers_.Parent = Source
Numbers_.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Numbers_.BackgroundTransparency = 1.000
Numbers_.Size = UDim2.new(1, 0, 1, 0)
Numbers_.ZIndex = 4
Numbers_.Font = Enum.Font.Code
Numbers_.Text = ""
Numbers_.TextColor3 = Color3.fromRGB(142, 71, 213)
Numbers_.TextSize = 14.000
Numbers_.TextXAlignment = Enum.TextXAlignment.Left
Numbers_.TextYAlignment = Enum.TextYAlignment.Top

Lines.Name = "Lines"
Lines.Parent = EditorFrame
Lines.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Lines.BackgroundTransparency = 1.000
Lines.Position = UDim2.new(-0.00924214441, 0, 0, 0)
Lines.Size = UDim2.new(0, 30, 1, 0)
Lines.ZIndex = 4
Lines.Font = Enum.Font.SourceSans
Lines.Text = "1\\n"
Lines.TextColor3 = Color3.fromRGB(255, 255, 255)
Lines.TextSize = 15.000
Lines.TextYAlignment = Enum.TextYAlignment.Top

ScrollingFrame2.Name = "ScrollingFrame2"
ScrollingFrame2.Parent = ExecuteBar
ScrollingFrame2.Active = true
ScrollingFrame2.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
ScrollingFrame2.BorderColor3 = Color3.fromRGB(40, 40, 40)
ScrollingFrame2.Position = UDim2.new(0.0127166249, 0, 0.079058826, 0)
ScrollingFrame2.Size = UDim2.new(0.973659992, 0, 0.917334437, 0)
ScrollingFrame2.Visible = false
ScrollingFrame2.ScrollBarThickness = 10

ImageLabel_3.Parent = ScrollingFrame2
ImageLabel_3.BackgroundColor3 = Color3.fromRGB(47, 47, 47)
ImageLabel_3.BackgroundTransparency = 1.000
ImageLabel_3.BorderSizePixel = 0
ImageLabel_3.Position = UDim2.new(0.00505135441, 0, -0.0532468483, 27)
ImageLabel_3.Size = UDim2.new(0, 541, 0, 359)
ImageLabel_3.ImageTransparency = 1.000

security_2.Name = "security"
security_2.Parent = ImageLabel_3
security_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
security_2.Size = UDim2.new(0, 552, 0, 258)
security_2.Visible = false
security_2.Font = Enum.Font.SourceSans
security_2.TextColor3 = Color3.fromRGB(0, 0, 0)
security_2.TextSize = 14.000

EditorFrame_2.Name = "EditorFrame"
EditorFrame_2.Parent = ImageLabel_3
EditorFrame_2.BackgroundColor3 = Color3.fromRGB(37, 37, 37)
EditorFrame_2.BackgroundTransparency = 1.000
EditorFrame_2.BorderColor3 = Color3.fromRGB(61, 61, 61)
EditorFrame_2.Size = UDim2.new(1, 0, 1, 0)
EditorFrame_2.ZIndex = 3
EditorFrame_2.BottomImage = "rbxassetid://148970562"
EditorFrame_2.CanvasSize = UDim2.new(0, 0, 0, 0)
EditorFrame_2.HorizontalScrollBarInset = Enum.ScrollBarInset.ScrollBar
EditorFrame_2.MidImage = "rbxassetid://148970562"
EditorFrame_2.ScrollBarThickness = 5
EditorFrame_2.TopImage = "rbxassetid://148970562"

Source_2.Name = "Source"
Source_2.Parent = EditorFrame_2
Source_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Source_2.BackgroundTransparency = 1.000
Source_2.Position = UDim2.new(0, 19, 0, 0)
Source_2.Size = UDim2.new(0.965984941, 0, 1, 0)
Source_2.ZIndex = 3
Source_2.ClearTextOnFocus = false
Source_2.Font = Enum.Font.Code
Source_2.MultiLine = true
Source_2.PlaceholderColor3 = Color3.fromRGB(204, 204, 204)
Source_2.Text = "--Welcome To KRNL Mobile!"
Source_2.TextColor3 = Color3.fromRGB(204, 204, 204)
Source_2.TextSize = 14.000
Source_2.TextXAlignment = Enum.TextXAlignment.Left
Source_2.TextYAlignment = Enum.TextYAlignment.Top

Comments__2.Name = "Comments_"
Comments__2.Parent = Source_2
Comments__2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Comments__2.BackgroundTransparency = 1.000
Comments__2.Size = UDim2.new(1, 0, 1, 0)
Comments__2.ZIndex = 5
Comments__2.Font = Enum.Font.Code
Comments__2.Text = ""
Comments__2.TextColor3 = Color3.fromRGB(59, 200, 59)
Comments__2.TextSize = 14.000
Comments__2.TextXAlignment = Enum.TextXAlignment.Left
Comments__2.TextYAlignment = Enum.TextYAlignment.Top

Globals__2.Name = "Globals_"
Globals__2.Parent = Source_2
Globals__2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Globals__2.BackgroundTransparency = 1.000
Globals__2.Size = UDim2.new(1, 0, 1, 0)
Globals__2.ZIndex = 5
Globals__2.Font = Enum.Font.Code
Globals__2.Text = ""
Globals__2.TextColor3 = Color3.fromRGB(85, 222, 154)
Globals__2.TextSize = 14.000
Globals__2.TextXAlignment = Enum.TextXAlignment.Left
Globals__2.TextYAlignment = Enum.TextYAlignment.Top

Keywords__2.Name = "Keywords_"
Keywords__2.Parent = Source_2
Keywords__2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Keywords__2.BackgroundTransparency = 1.000
Keywords__2.Size = UDim2.new(1, 0, 1, 0)
Keywords__2.ZIndex = 5
Keywords__2.Font = Enum.Font.Code
Keywords__2.Text = ""
Keywords__2.TextColor3 = Color3.fromRGB(213, 53, 117)
Keywords__2.TextSize = 14.000
Keywords__2.TextXAlignment = Enum.TextXAlignment.Left
Keywords__2.TextYAlignment = Enum.TextYAlignment.Top

RemoteHighlight__2.Name = "RemoteHighlight_"
RemoteHighlight__2.Parent = Source_2
RemoteHighlight__2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
RemoteHighlight__2.BackgroundTransparency = 1.000
RemoteHighlight__2.Size = UDim2.new(1, 0, 1, 0)
RemoteHighlight__2.ZIndex = 5
RemoteHighlight__2.Font = Enum.Font.Code
RemoteHighlight__2.Text = ""
RemoteHighlight__2.TextColor3 = Color3.fromRGB(0, 144, 255)
RemoteHighlight__2.TextSize = 14.000
RemoteHighlight__2.TextXAlignment = Enum.TextXAlignment.Left
RemoteHighlight__2.TextYAlignment = Enum.TextYAlignment.Top

Strings__2.Name = "Strings_"
Strings__2.Parent = Source_2
Strings__2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Strings__2.BackgroundTransparency = 1.000
Strings__2.Size = UDim2.new(1, 0, 1, 0)
Strings__2.ZIndex = 5
Strings__2.Font = Enum.Font.Code
Strings__2.Text = ""
Strings__2.TextColor3 = Color3.fromRGB(229, 164, 60)
Strings__2.TextSize = 14.000
Strings__2.TextXAlignment = Enum.TextXAlignment.Left
Strings__2.TextYAlignment = Enum.TextYAlignment.Top

Tokens__2.Name = "Tokens_"
Tokens__2.Parent = Source_2
Tokens__2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Tokens__2.BackgroundTransparency = 1.000
Tokens__2.Size = UDim2.new(1, 0, 1, 0)
Tokens__2.ZIndex = 5
Tokens__2.Font = Enum.Font.Code
Tokens__2.Text = ""
Tokens__2.TextColor3 = Color3.fromRGB(255, 255, 255)
Tokens__2.TextSize = 14.000
Tokens__2.TextXAlignment = Enum.TextXAlignment.Left
Tokens__2.TextYAlignment = Enum.TextYAlignment.Top

Numbers__2.Name = "Numbers_"
Numbers__2.Parent = Source_2
Numbers__2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Numbers__2.BackgroundTransparency = 1.000
Numbers__2.Size = UDim2.new(1, 0, 1, 0)
Numbers__2.ZIndex = 4
Numbers__2.Font = Enum.Font.Code
Numbers__2.Text = ""
Numbers__2.TextColor3 = Color3.fromRGB(142, 71, 213)
Numbers__2.TextSize = 14.000
Numbers__2.TextXAlignment = Enum.TextXAlignment.Left
Numbers__2.TextYAlignment = Enum.TextYAlignment.Top

Lines_2.Name = "Lines"
Lines_2.Parent = EditorFrame_2
Lines_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Lines_2.BackgroundTransparency = 1.000
Lines_2.Position = UDim2.new(-0.00924214441, 0, 0, 0)
Lines_2.Size = UDim2.new(0, 30, 1, 0)
Lines_2.ZIndex = 4
Lines_2.Font = Enum.Font.SourceSans
Lines_2.Text = "1\\n"
Lines_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Lines_2.TextSize = 15.000
Lines_2.TextYAlignment = Enum.TextYAlignment.Top

Execute.Name = "Execute"
Execute.Parent = MainGUI
Execute.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
Execute.BorderColor3 = Color3.fromRGB(44, 44, 44)
Execute.Position = UDim2.new(0.00500000967, 0, 0.910000026, 0)
Execute.Size = UDim2.new(0.143999994, 0, 0.074000001, 0)
Execute.Font = Enum.Font.Arial
Execute.Text = "EXECUTE"
Execute.TextColor3 = Color3.fromRGB(255, 255, 255)
Execute.TextScaled = true
Execute.TextSize = 14.000
Execute.TextWrapped = true

UITextSizeConstraint_16.Parent = Execute
UITextSizeConstraint_16.MaxTextSize = 14

Clear.Name = "Clear"
Clear.Parent = MainGUI
Clear.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
Clear.BorderColor3 = Color3.fromRGB(44, 44, 44)
Clear.Position = UDim2.new(0.158899993, 0, 0.910000026, 0)
Clear.Size = UDim2.new(0.143999994, 0, 0.074000001, 0)
Clear.Font = Enum.Font.Arial
Clear.Text = "CLEAR"
Clear.TextColor3 = Color3.fromRGB(255, 255, 255)
Clear.TextScaled = true
Clear.TextSize = 14.000
Clear.TextWrapped = true

UITextSizeConstraint_17.Parent = Clear
UITextSizeConstraint_17.MaxTextSize = 14

OpenFileButton.Name = "Open File Button"
OpenFileButton.Parent = MainGUI
OpenFileButton.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
OpenFileButton.BorderColor3 = Color3.fromRGB(44, 44, 44)
OpenFileButton.Position = UDim2.new(0.31099999, 0, 0.910000026, 0)
OpenFileButton.Size = UDim2.new(0.143999994, 0, 0.074000001, 0)
OpenFileButton.Font = Enum.Font.Arial
OpenFileButton.Text = "OPEN FILE"
OpenFileButton.TextColor3 = Color3.fromRGB(255, 255, 255)
OpenFileButton.TextScaled = true
OpenFileButton.TextSize = 14.000
OpenFileButton.TextWrapped = true

UITextSizeConstraint_18.Parent = OpenFileButton
UITextSizeConstraint_18.MaxTextSize = 14

SaveFileButton.Name = "Save File Button"
SaveFileButton.Parent = MainGUI
SaveFileButton.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
SaveFileButton.BorderColor3 = Color3.fromRGB(44, 44, 44)
SaveFileButton.Position = UDim2.new(0.461996198, 0, 0.910000026, 0)
SaveFileButton.Size = UDim2.new(0.143999994, 0, 0.074000001, 0)
SaveFileButton.Font = Enum.Font.Arial
SaveFileButton.Text = "SAVE FILE"
SaveFileButton.TextColor3 = Color3.fromRGB(255, 255, 255)
SaveFileButton.TextScaled = true
SaveFileButton.TextSize = 14.000
SaveFileButton.TextWrapped = true

UITextSizeConstraint_19.Parent = SaveFileButton
UITextSizeConstraint_19.MaxTextSize = 14

InjectButton.Name = "Inject Button"
InjectButton.Parent = MainGUI
InjectButton.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
InjectButton.BorderColor3 = Color3.fromRGB(44, 44, 44)
InjectButton.Position = UDim2.new(0.611999989, 0, 0.910000026, 0)
InjectButton.Size = UDim2.new(0.143999994, 0, 0.074000001, 0)
InjectButton.Font = Enum.Font.Arial
InjectButton.Text = "INJECT"
InjectButton.TextColor3 = Color3.fromRGB(255, 255, 255)
InjectButton.TextScaled = true
InjectButton.TextSize = 14.000
InjectButton.TextWrapped = true

UITextSizeConstraint_20.Parent = InjectButton
UITextSizeConstraint_20.MaxTextSize = 14

OptionButton.Name = "Option Button"
OptionButton.Parent = MainGUI
OptionButton.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
OptionButton.BorderColor3 = Color3.fromRGB(44, 44, 44)
OptionButton.Position = UDim2.new(0.84799999, 0, 0.910000026, 0)
OptionButton.Size = UDim2.new(0.143999994, 0, 0.074000001, 0)
OptionButton.Font = Enum.Font.Arial
OptionButton.Text = "OPTION"
OptionButton.TextColor3 = Color3.fromRGB(255, 255, 255)
OptionButton.TextScaled = true
OptionButton.TextSize = 14.000
OptionButton.TextWrapped = true

UITextSizeConstraint_21.Parent = OptionButton
UITextSizeConstraint_21.MaxTextSize = 14

ScriptHub.Name = "Script Hub"
ScriptHub.Parent = MainGUI
ScriptHub.Active = true
ScriptHub.BackgroundColor3 = Color3.fromRGB(33, 33, 33)
ScriptHub.BorderColor3 = Color3.fromRGB(33, 33, 33)
ScriptHub.Position = UDim2.new(0.821767807, 0, 0.0278668515, 0)
ScriptHub.Size = UDim2.new(0.170232087, 0, 0.865870535, 0)
ScriptHub.ScrollBarThickness = 7

UIAspectRatioConstraint.Parent = KrnlGUI
UIAspectRatioConstraint.AspectRatio = 1.993

InjectedMessgae.Name = "InjectedMessgae"
InjectedMessgae.Parent = KrnlGUI
InjectedMessgae.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
InjectedMessgae.BorderColor3 = Color3.fromRGB(245, 245, 255)
InjectedMessgae.Position = UDim2.new(0.309756339, 0, 0.298481524, 0)
InjectedMessgae.Size = UDim2.new(0.347566962, 0, 0.399907291, 0)
InjectedMessgae.Visible = false

Frame_2.Parent = InjectedMessgae
Frame_2.BackgroundColor3 = Color3.fromRGB(245, 245, 255)
Frame_2.BorderColor3 = Color3.fromRGB(245, 245, 255)
Frame_2.Size = UDim2.new(1, 0, 0.224637687, 0)

Xbutton_2.Name = "X button"
Xbutton_2.Parent = Frame_2
Xbutton_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Xbutton_2.BackgroundTransparency = 1.000
Xbutton_2.Position = UDim2.new(0.849372387, 0, 0, 0)
Xbutton_2.Size = UDim2.new(0.142259419, 0, 1, 0)
Xbutton_2.Font = Enum.Font.SourceSans
Xbutton_2.Text = "X"
Xbutton_2.TextColor3 = Color3.fromRGB(0, 0, 0)
Xbutton_2.TextScaled = true
Xbutton_2.TextSize = 30.000
Xbutton_2.TextWrapped = true

UITextSizeConstraint_22.Parent = Xbutton_2
UITextSizeConstraint_22.MaxTextSize = 30

TextLabel_2.Parent = Frame_2
TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.BackgroundTransparency = 1.000
TextLabel_2.Position = UDim2.new(0.0379998684, 0, 0.129181385, 0)
TextLabel_2.Size = UDim2.new(0.242677823, 0, 0.85275197, 0)
TextLabel_2.Font = Enum.Font.SourceSans
TextLabel_2.Text = "Krnl [ PE ]"
TextLabel_2.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_2.TextSize = 19.000
TextLabel_2.TextWrapped = true
TextLabel_2.TextXAlignment = Enum.TextXAlignment.Left

Frame_3.Parent = InjectedMessgae
Frame_3.BackgroundColor3 = Color3.fromRGB(245, 245, 255)
Frame_3.BorderColor3 = Color3.fromRGB(245, 245, 255)
Frame_3.Position = UDim2.new(0, 0, 0.695652127, 0)
Frame_3.Size = UDim2.new(1, 0, 0.304347813, 0)

Okbutton.Name = "Ok button"
Okbutton.Parent = Frame_3
Okbutton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Okbutton.BorderColor3 = Color3.fromRGB(255, 255, 255)
Okbutton.Position = UDim2.new(0.646688402, 0, 0.214285731, 0)
Okbutton.Size = UDim2.new(0.313807517, 0, 0.5, 0)
Okbutton.Font = Enum.Font.Arial
Okbutton.Text = "OK"
Okbutton.TextColor3 = Color3.fromRGB(0, 0, 0)
Okbutton.TextScaled = true
Okbutton.TextSize = 13.000
Okbutton.TextWrapped = true

UITextSizeConstraint_23.Parent = Okbutton
UITextSizeConstraint_23.MaxTextSize = 13

TextLabel_3.Parent = InjectedMessgae
TextLabel_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_3.BackgroundTransparency = 1.000
TextLabel_3.Position = UDim2.new(0.0631046072, 0, 0.379999995, 0)
TextLabel_3.Size = UDim2.new(0.870292902, 0, 0.231884062, 0)
TextLabel_3.Font = Enum.Font.SourceSans
TextLabel_3.Text = "Already injected!"
TextLabel_3.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_3.TextScaled = true
TextLabel_3.TextSize = 15.000
TextLabel_3.TextWrapped = true
TextLabel_3.TextXAlignment = Enum.TextXAlignment.Left

UITextSizeConstraint_24.Parent = TextLabel_3
UITextSizeConstraint_24.MaxTextSize = 15

HScriptsHub.Name = "HScriptsHub"
HScriptsHub.Parent = KrnlGUI
HScriptsHub.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
HScriptsHub.BorderColor3 = Color3.fromRGB(43, 43, 43)
HScriptsHub.Position = UDim2.new(0.231226563, 0, 0.165179193, 0)
HScriptsHub.Size = UDim2.new(0.202141464, 0, 0.518720329, 0)
HScriptsHub.Visible = false

DexExplorer.Name = "Dex Explorer"
DexExplorer.Parent = HScriptsHub
DexExplorer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
DexExplorer.BackgroundTransparency = 1.000
DexExplorer.Size = UDim2.new(1, 0, 0.128491625, 0)
DexExplorer.Font = Enum.Font.SourceSans
DexExplorer.Text = "             Dex Explorer"
DexExplorer.TextColor3 = Color3.fromRGB(255, 255, 255)
DexExplorer.TextScaled = true
DexExplorer.TextSize = 15.000
DexExplorer.TextWrapped = true
DexExplorer.TextXAlignment = Enum.TextXAlignment.Left

UITextSizeConstraint_25.Parent = DexExplorer
UITextSizeConstraint_25.MaxTextSize = 15

OpenGui.Name = "OpenGui"
OpenGui.Parent = HScriptsHub
OpenGui.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
OpenGui.BackgroundTransparency = 1.000
OpenGui.Position = UDim2.new(0, 0, 0.128491625, 0)
OpenGui.Size = UDim2.new(1, 0, 0.128491625, 0)
OpenGui.Font = Enum.Font.SourceSans
OpenGui.Text = "              OpenGui"
OpenGui.TextColor3 = Color3.fromRGB(255, 255, 255)
OpenGui.TextScaled = true
OpenGui.TextSize = 15.000
OpenGui.TextWrapped = true
OpenGui.TextXAlignment = Enum.TextXAlignment.Left

UITextSizeConstraint_26.Parent = OpenGui
UITextSizeConstraint_26.MaxTextSize = 15

RemoteSpy.Name = "RemoteSpy"
RemoteSpy.Parent = HScriptsHub
RemoteSpy.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
RemoteSpy.BackgroundTransparency = 1.000
RemoteSpy.Position = UDim2.new(0, 0, 0.25698325, 0)
RemoteSpy.Size = UDim2.new(1, 0, 0.128491625, 0)
RemoteSpy.Font = Enum.Font.SourceSans
RemoteSpy.Text = "              Remote Spy"
RemoteSpy.TextColor3 = Color3.fromRGB(255, 255, 255)
RemoteSpy.TextScaled = true
RemoteSpy.TextSize = 15.000
RemoteSpy.TextWrapped = true
RemoteSpy.TextXAlignment = Enum.TextXAlignment.Left

UITextSizeConstraint_27.Parent = RemoteSpy
UITextSizeConstraint_27.MaxTextSize = 15

DarkDex.Name = "DarkDex"
DarkDex.Parent = HScriptsHub
DarkDex.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
DarkDex.BackgroundTransparency = 1.000
DarkDex.Position = UDim2.new(0, 0, 0.385474861, 0)
DarkDex.Size = UDim2.new(1, 0, 0.128491625, 0)
DarkDex.Font = Enum.Font.SourceSans
DarkDex.Text = "              Dark Dex"
DarkDex.TextColor3 = Color3.fromRGB(255, 255, 255)
DarkDex.TextScaled = true
DarkDex.TextSize = 15.000
DarkDex.TextWrapped = true
DarkDex.TextXAlignment = Enum.TextXAlignment.Left

UITextSizeConstraint_28.Parent = DarkDex
UITextSizeConstraint_28.MaxTextSize = 15

UnamedEsp.Name = "UnamedEsp"
UnamedEsp.Parent = HScriptsHub
UnamedEsp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
UnamedEsp.BackgroundTransparency = 1.000
UnamedEsp.Position = UDim2.new(0, 0, 0.513966501, 0)
UnamedEsp.Size = UDim2.new(1, 0, 0.128491625, 0)
UnamedEsp.Font = Enum.Font.SourceSans
UnamedEsp.Text = "              Unnamed ESP"
UnamedEsp.TextColor3 = Color3.fromRGB(255, 255, 255)
UnamedEsp.TextScaled = true
UnamedEsp.TextSize = 15.000
UnamedEsp.TextWrapped = true
UnamedEsp.TextXAlignment = Enum.TextXAlignment.Left

UITextSizeConstraint_29.Parent = UnamedEsp
UITextSizeConstraint_29.MaxTextSize = 15

IYFE.Name = "IYFE"
IYFE.Parent = HScriptsHub
IYFE.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
IYFE.BackgroundTransparency = 1.000
IYFE.Position = UDim2.new(0, 0, 0.642458141, 0)
IYFE.Size = UDim2.new(1, 0, 0.128491625, 0)
IYFE.Font = Enum.Font.SourceSans
IYFE.Text = "              Infinite Yield"
IYFE.TextColor3 = Color3.fromRGB(255, 255, 255)
IYFE.TextScaled = true
IYFE.TextSize = 15.000
IYFE.TextWrapped = true
IYFE.TextXAlignment = Enum.TextXAlignment.Left

UITextSizeConstraint_30.Parent = IYFE
UITextSizeConstraint_30.MaxTextSize = 15

OwlHub.Name = "OwlHub"
OwlHub.Parent = HScriptsHub
OwlHub.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
OwlHub.BackgroundTransparency = 1.000
OwlHub.Position = UDim2.new(0, 0, 0.770949781, 0)
OwlHub.Size = UDim2.new(1, 0, 0.128491625, 0)
OwlHub.Font = Enum.Font.SourceSans
OwlHub.Text = "              Owl Hub"
OwlHub.TextColor3 = Color3.fromRGB(255, 255, 255)
OwlHub.TextScaled = true
OwlHub.TextSize = 15.000
OwlHub.TextWrapped = true
OwlHub.TextXAlignment = Enum.TextXAlignment.Left

UITextSizeConstraint_31.Parent = OwlHub
UITextSizeConstraint_31.MaxTextSize = 15

HoHoHub.Name = "HoHo Hub"
HoHoHub.Parent = HScriptsHub
HoHoHub.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
HoHoHub.BackgroundTransparency = 1.000
HoHoHub.Position = UDim2.new(0, 0, 0.899441361, 0)
HoHoHub.Size = UDim2.new(1, 0, 0.100558661, 0)
HoHoHub.Font = Enum.Font.SourceSans
HoHoHub.Text = "              Hoho Hub"
HoHoHub.TextColor3 = Color3.fromRGB(255, 255, 255)
HoHoHub.TextScaled = true
HoHoHub.TextSize = 15.000
HoHoHub.TextWrapped = true
HoHoHub.TextXAlignment = Enum.TextXAlignment.Left

UITextSizeConstraint_32.Parent = HoHoHub
UITextSizeConstraint_32.MaxTextSize = 15

BlueLight.Name = "Blue Light"
BlueLight.Parent = KrnlGUI
BlueLight.BackgroundColor3 = Color3.fromRGB(6, 139, 255)
BlueLight.BorderColor3 = Color3.fromRGB(6, 139, 255)
BlueLight.Size = UDim2.new(0.999000013, 0, 0.00300000003, 0)

CreditsW.Name = "CreditsW"
CreditsW.Parent = KrnlGUI
CreditsW.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
CreditsW.BorderColor3 = Color3.fromRGB(36, 36, 36)
CreditsW.Position = UDim2.new(1.00925303, 0, 0.0115915686, 0)
CreditsW.Size = UDim2.new(0.434822261, 0, 0.5361076, 0)
CreditsW.Visible = false

Frame_4.Parent = CreditsW
Frame_4.BackgroundColor3 = Color3.fromRGB(28, 28, 29)
Frame_4.BorderColor3 = Color3.fromRGB(28, 28, 29)
Frame_4.Size = UDim2.new(1, 0, 0.175989032, 0)

Xbutton_3.Name = "X button"
Xbutton_3.Parent = Frame_4
Xbutton_3.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Xbutton_3.BackgroundTransparency = 1.000
Xbutton_3.Position = UDim2.new(0.879472733, 0, 0, 0)
Xbutton_3.Size = UDim2.new(0.118848056, 0, 1, 0)
Xbutton_3.Font = Enum.Font.SourceSans
Xbutton_3.Text = "X"
Xbutton_3.TextColor3 = Color3.fromRGB(255, 255, 255)
Xbutton_3.TextScaled = true
Xbutton_3.TextSize = 30.000
Xbutton_3.TextWrapped = true

UITextSizeConstraint_33.Parent = Xbutton_3
UITextSizeConstraint_33.MaxTextSize = 30

TextLabel_4.Parent = CreditsW
TextLabel_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_4.BackgroundTransparency = 1.000
TextLabel_4.Position = UDim2.new(0.435993314, 0, 0.174594522, 0)
TextLabel_4.Size = UDim2.new(0.535571635, 0, 0.145397589, 0)
TextLabel_4.Font = Enum.Font.SourceSans
TextLabel_4.Text = "UI Replicated"
TextLabel_4.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_4.TextScaled = true
TextLabel_4.TextSize = 17.000
TextLabel_4.TextWrapped = true
TextLabel_4.TextXAlignment = Enum.TextXAlignment.Left

UITextSizeConstraint_34.Parent = TextLabel_4
UITextSizeConstraint_34.MaxTextSize = 17

TextLabel_5.Parent = CreditsW
TextLabel_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_5.BackgroundTransparency = 1.000
TextLabel_5.Position = UDim2.new(0.435993314, 0, 0.315135062, 0)
TextLabel_5.Size = UDim2.new(0.535571635, 0, 0.145397589, 0)
TextLabel_5.Font = Enum.Font.SourceSans
TextLabel_5.Text = "Giang"
TextLabel_5.TextColor3 = Color3.fromRGB(126, 126, 126)
TextLabel_5.TextScaled = true
TextLabel_5.TextSize = 15.000
TextLabel_5.TextWrapped = true
TextLabel_5.TextXAlignment = Enum.TextXAlignment.Left

UITextSizeConstraint_35.Parent = TextLabel_5
UITextSizeConstraint_35.MaxTextSize = 15

ImageLabel_4.Parent = CreditsW
ImageLabel_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel_4.BackgroundTransparency = 1.000
ImageLabel_4.Position = UDim2.new(0.0468227416, 0, 0.225141764, 0)
ImageLabel_4.Size = UDim2.new(0.334448159, 0, 0.540540516, 0)
ImageLabel_4.Image = "rbxassetid://11671355800"

OtherTab.Name = "OtherTab"
OtherTab.Parent = KrnlGUI
OtherTab.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
OtherTab.BorderColor3 = Color3.fromRGB(43, 43, 43)
OtherTab.Position = UDim2.new(0.339520067, 0, 0.16753611, 0)
OtherTab.Size = UDim2.new(0.202141464, 0, 0.130404547, 0)
OtherTab.Visible = false

WHy.Name = "WHy"
WHy.Parent = OtherTab
WHy.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
WHy.BackgroundTransparency = 1.000
WHy.Position = UDim2.new(0, 0, 0.466666698, 0)
WHy.Size = UDim2.new(1, 0, 0.513516545, 0)
WHy.Font = Enum.Font.SourceSans
WHy.Text = "              Why you here?"
WHy.TextColor3 = Color3.fromRGB(255, 255, 255)
WHy.TextScaled = true
WHy.TextSize = 15.000
WHy.TextWrapped = true
WHy.TextXAlignment = Enum.TextXAlignment.Left

UITextSizeConstraint_36.Parent = WHy
UITextSizeConstraint_36.MaxTextSize = 15

Nope.Name = "Nope"
Nope.Parent = OtherTab
Nope.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Nope.BackgroundTransparency = 1.000
Nope.Size = UDim2.new(1, 0, 0.513516545, 0)
Nope.Font = Enum.Font.SourceSans
Nope.Text = "              Yey no key execute ;)"
Nope.TextColor3 = Color3.fromRGB(255, 255, 255)
Nope.TextScaled = true
Nope.TextSize = 15.000
Nope.TextWrapped = true
Nope.TextXAlignment = Enum.TextXAlignment.Left

UITextSizeConstraint_37.Parent = Nope
UITextSizeConstraint_37.MaxTextSize = 15

FileTab.Name = "FileTab"
FileTab.Parent = KrnlGUI
FileTab.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
FileTab.BorderColor3 = Color3.fromRGB(43, 43, 43)
FileTab.Position = UDim2.new(0.00213287491, 0, 0.164638236, 0)
FileTab.Size = UDim2.new(0.202141464, 0, 0.130404547, 0)
FileTab.Visible = false

KillTask.Name = "KillTask"
KillTask.Parent = FileTab
KillTask.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
KillTask.BackgroundTransparency = 1.000
KillTask.Position = UDim2.new(0, 0, 0.51111114, 0)
KillTask.Size = UDim2.new(1, 0, 0.513516545, 0)
KillTask.Font = Enum.Font.SourceSans
KillTask.Text = "              Kill Roblox"
KillTask.TextColor3 = Color3.fromRGB(255, 255, 255)
KillTask.TextScaled = true
KillTask.TextSize = 15.000
KillTask.TextWrapped = true
KillTask.TextXAlignment = Enum.TextXAlignment.Left

UITextSizeConstraint_38.Parent = KillTask
UITextSizeConstraint_38.MaxTextSize = 15

Inject.Name = "Inject"
Inject.Parent = FileTab
Inject.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Inject.BackgroundTransparency = 1.000
Inject.Position = UDim2.new(0, 0, -0.0444444418, 0)
Inject.Size = UDim2.new(1, 0, 0.513516545, 0)
Inject.Font = Enum.Font.SourceSans
Inject.Text = "              Inject"
Inject.TextColor3 = Color3.fromRGB(255, 255, 255)
Inject.TextScaled = true
Inject.TextSize = 15.000
Inject.TextWrapped = true
Inject.TextXAlignment = Enum.TextXAlignment.Left

UITextSizeConstraint_39.Parent = Inject
UITextSizeConstraint_39.MaxTextSize = 15

GamesOpenGUI.Name = "GamesOpenGUI"
GamesOpenGUI.Parent = KrnlGUI
GamesOpenGUI.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
GamesOpenGUI.BorderColor3 = Color3.fromRGB(245, 245, 255)
GamesOpenGUI.Position = UDim2.new(0.309756339, 0, 0.298481524, 0)
GamesOpenGUI.Size = UDim2.new(0.347566962, 0, 0.399907291, 0)
GamesOpenGUI.Visible = false

Frame_5.Parent = GamesOpenGUI
Frame_5.BackgroundColor3 = Color3.fromRGB(245, 245, 255)
Frame_5.BorderColor3 = Color3.fromRGB(245, 245, 255)
Frame_5.Size = UDim2.new(1, 0, 0.224637687, 0)

Xbutton_4.Name = "X button"
Xbutton_4.Parent = Frame_5
Xbutton_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Xbutton_4.BackgroundTransparency = 1.000
Xbutton_4.Position = UDim2.new(0.849372387, 0, 0, 0)
Xbutton_4.Size = UDim2.new(0.142259419, 0, 1, 0)
Xbutton_4.Font = Enum.Font.SourceSans
Xbutton_4.Text = "X"
Xbutton_4.TextColor3 = Color3.fromRGB(0, 0, 0)
Xbutton_4.TextScaled = true
Xbutton_4.TextSize = 30.000
Xbutton_4.TextWrapped = true

UITextSizeConstraint_40.Parent = Xbutton_4
UITextSizeConstraint_40.MaxTextSize = 30

Frame_6.Parent = GamesOpenGUI
Frame_6.BackgroundColor3 = Color3.fromRGB(245, 245, 255)
Frame_6.BorderColor3 = Color3.fromRGB(245, 245, 255)
Frame_6.Position = UDim2.new(0, 0, 0.695652127, 0)
Frame_6.Size = UDim2.new(1, 0, 0.304347813, 0)

Okbutton_2.Name = "Ok button"
Okbutton_2.Parent = Frame_6
Okbutton_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Okbutton_2.BorderColor3 = Color3.fromRGB(255, 255, 255)
Okbutton_2.Position = UDim2.new(0.646688402, 0, 0.214285731, 0)
Okbutton_2.Size = UDim2.new(0.313807517, 0, 0.5, 0)
Okbutton_2.Font = Enum.Font.Arial
Okbutton_2.Text = "OK"
Okbutton_2.TextColor3 = Color3.fromRGB(0, 0, 0)
Okbutton_2.TextScaled = true
Okbutton_2.TextSize = 13.000
Okbutton_2.TextWrapped = true

UITextSizeConstraint_41.Parent = Okbutton_2
UITextSizeConstraint_41.MaxTextSize = 13

TextLabel_6.Parent = GamesOpenGUI
TextLabel_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_6.BackgroundTransparency = 1.000
TextLabel_6.Position = UDim2.new(0.0379999988, 0, 0.379999995, 0)
TextLabel_6.Size = UDim2.new(0.870292902, 0, 0.231884062, 0)
TextLabel_6.Font = Enum.Font.SourceSans
TextLabel_6.Text = "Disabled as the most scripts are patched."
TextLabel_6.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_6.TextSize = 15.000
TextLabel_6.TextWrapped = true
TextLabel_6.TextXAlignment = Enum.TextXAlignment.Left

UITextSizeConstraint_42.Parent = TextLabel_6
UITextSizeConstraint_42.MaxTextSize = 15

UIAspectRatioConstraint_2.Parent = KRNL
UIAspectRatioConstraint_2.AspectRatio = 1.691

FloatingGUI.Name = "FloatingGUI"
FloatingGUI.Parent = KRNL
FloatingGUI.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FloatingGUI.BackgroundTransparency = 1.000
FloatingGUI.Position = UDim2.new(0, 599, 0, 62)
FloatingGUI.Size = UDim2.new(0, 39, 0, 39)
FloatingGUI.Image = "rbxassetid://11671355800"

-- Scripts:

local function JKSXXR_fake_script() -- FileButton.LocalScript 
	local script = Instance.new('LocalScript', FileButton)

	local Button = script.Parent
	local gui = script.Parent.Parent.FileTab
	
	Button.MouseButton1Up:Connect(function()
		if gui.Visible == false then
			gui.Visible = true
		else
			gui.Visible = false
		end
	end)
end
coroutine.wrap(JKSXXR_fake_script)()
local function IWZIAOM_fake_script() -- CreditsButton.LocalScript 
	local script = Instance.new('LocalScript', CreditsButton)

	local Button = script.Parent
	local gui = script.Parent.Parent.CreditsW
	
	Button.MouseButton1Up:Connect(function()
		if gui.Visible == false then
			gui.Visible = true
		else
			gui.Visible = false
		end
	end)
end
coroutine.wrap(IWZIAOM_fake_script)()
local function BDJX_fake_script() -- GamesButton.LocalScript 
	local script = Instance.new('LocalScript', GamesButton)

	local btn = script.Parent
	local Gui = script.Parent.Parent.GamesOpenGUI
	
	btn.MouseButton1Click:Connect(function()
		Gui.Visible = true
	end)
	
end
coroutine.wrap(BDJX_fake_script)()
local function BOJDWR_fake_script() -- HotScriptsButton.LocalScript 
	local script = Instance.new('LocalScript', HotScriptsButton)

	local Button = script.Parent
	local gui = script.Parent.Parent.HScriptsHub
	
	Button.MouseButton1Up:Connect(function()
		if gui.Visible == false then
			gui.Visible = true
		else
			gui.Visible = false
		end
	end)
end
coroutine.wrap(BOJDWR_fake_script)()
local function RZSXL_fake_script() -- OthersButton.LocalScript 
	local script = Instance.new('LocalScript', OthersButton)

	local Button = script.Parent
	local gui = script.Parent.Parent.OtherTab
	
	Button.MouseButton1Up:Connect(function()
		if gui.Visible == false then
			gui.Visible = true
		else
			gui.Visible = false
		end
	end)
end
coroutine.wrap(RZSXL_fake_script)()
local function OPNVFDR_fake_script() -- Xbutton.LocalScript 
	local script = Instance.new('LocalScript', Xbutton)

	local GUI = script.Parent.Parent.Parent.Parent
	local btn = script.Parent
	
	btn.MouseButton1Click:Connect(function()
		GUI:Destroy()
	end)
	
end
coroutine.wrap(OPNVFDR_fake_script)()
local function NETW_fake_script() -- button.LocalScript 
	local script = Instance.new('LocalScript', button)

	local btn = script.Parent
	local Gui = script.Parent.Parent.Parent
	local Krnl = script.Parent.Parent.Parent.Parent.FloatingGUI
	
	btn.MouseButton1Click:Connect(function()
		Gui.Visible = false
		Krnl.Visible = true
	end)
end
coroutine.wrap(NETW_fake_script)()
local function BWCCXZZ_fake_script() -- TextButton.LocalScript 
	local script = Instance.new('LocalScript', TextButton)

	local button = script.Parent
	local SF1 = script.Parent.Parent.Parent.Parent.ScrollingFrame1
	local SF2 = script.Parent.Parent.Parent.Parent.ScrollingFrame2
	button.MouseButton1Click:Connect(function()
		if SF1.Visible == false then
			SF1.Visible = true
			SF2.Visible = false
		else
			
		end
	end)
end
coroutine.wrap(BWCCXZZ_fake_script)()
local function AFYRFVF_fake_script() -- TextButton_2.LocalScript 
	local script = Instance.new('LocalScript', TextButton_2)

	local mbutton1 = script.Parent.Parent
	local button = script.Parent
	local SF1 = script.Parent.Parent.Parent.Parent.ScrollingFrame1
	local text1 = script.Parent.Parent.Parent.Parent.ScrollingFrame1.ImageLabel.EditorFrame.Source
	local mbutton2 = script.Parent.Parent.Parent.Script2
	button.MouseButton1Click:Connect(function()
		if mbutton2.Visible == false then
			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Parent.KRNL:Destroy()
		end
	end)
end
coroutine.wrap(AFYRFVF_fake_script)()
local function QDTSXTQ_fake_script() -- TextButton_3.LocalScript 
	local script = Instance.new('LocalScript', TextButton_3)

	local button = script.Parent
	local SF1 = script.Parent.Parent.Parent.Parent.ScrollingFrame1
	local SF2 = script.Parent.Parent.Parent.Parent.ScrollingFrame2
	button.MouseButton1Click:Connect(function()
		if SF2.Visible == false then
			SF2.Visible = true
			SF1.Visible = false
		else
	
		end
	end)
end
coroutine.wrap(QDTSXTQ_fake_script)()
local function SUNEU_fake_script() -- TextButton_4.LocalScript 
	local script = Instance.new('LocalScript', TextButton_4)

	local mbutton = script.Parent.Parent
	local button = script.Parent
	local SF2 = script.Parent.Parent.Parent.Parent.ScrollingFrame2
	local text2 = script.Parent.Parent.Parent.Parent.ScrollingFrame2.ImageLabel.EditorFrame.Source
	local ab = script.Parent.Parent.Parent.addbutton
	button.MouseButton1Click:Connect(function() 
		if SF2.Visible == true then
			SF2.Visible = false
		else
			--Nothing here to execute
		end
		mbutton.Visible = false
		text2.Text = "--Welcome To KRNL Mobile!"
		ab.Visible = true
	end)
end
coroutine.wrap(SUNEU_fake_script)()
local function SFHZ_fake_script() -- addbutton.LocalScript 
	local script = Instance.new('LocalScript', addbutton)

	local button = script.Parent
	local SF2 = script.Parent.Parent.Parent.ScrollingFrame2
	local mbutton2 = script.Parent.Parent.Script2
	local SF1 = script.Parent.Parent.Parent.ScrollingFrame1
	button.MouseButton1Click:Connect(function()
		SF1.Visible = true
		button.Visible = false
		mbutton2.Visible = true
	end)
end
coroutine.wrap(SFHZ_fake_script)()
local function XCUKBI_fake_script() -- ImageLabel_2.LocalScript 
	local script = Instance.new('LocalScript', ImageLabel_2)

	local lua_keywords = {"and", "break", "do", "else", "elseif", "end", "false", "for", "function", "goto", "if", "in", "local", "nil", "not", "or", "repeat", "return", "then", "true", "until", "while"}
	local global_env = {"getrawmetatable", "game", "workspace", "script", "math", "string", "table", "print", "wait", "BrickColor", "Color3", "next", "pairs", "ipairs", "select", "unpack", "Instance", "new", "Vector2", "Vector3", "CFrame", "Ray", "UDim2", "Enum", "assert", "error", "warn", "tick", "loadstring", "_G", "shared", "getfenv", "setfenv", "newproxy", "setmetatable", "getmetatable", "os", "debug", "pcall", "ypcall", "xpcall", "rawequal", "rawset", "rawget", "tonumber", "tostring", "type", "typeof", "_VERSION", "coroutine", "delay", "require", "spawn", "LoadLibrary", "settings", "stats", "time", "UserSettings", "version", "Axes", "ColorSequence", "Faces", "ColorSequenceKeypoint", "NumberRange", "NumberSequence", "NumberSequenceKeypoint", "gcinfo", "elapsedTime", "collectgarbage", "PhysicalProperties", "Rect", "Region3", "Region3int16", "UDim", "Vector2int16", "Vector3int16"}
	local Source = script.Parent.EditorFrame.Source
	local Lines = Source.Parent.Lines
	local Highlight = function(string, keywords)
		local K = {}
		local S = string
		local Token =
			{
				["="] = true,
				["."] = true,
				[","] = true,
				["("] = true,
				[")"] = true,
				["["] = true,
				["]"] = true,
				["{"] = true,
				["}"] = true,
				[":"] = true,
				["*"] = true,
				["/"] = true,
				["+"] = true,
				["-"] = true,
				["%"] = true,
				[";"] = true,
				["~"] = true
			}
		for i, v in pairs(keywords) do
			K[v] = true
		end
		S = S:gsub(".", function(c)
			if Token[c] ~= nil then
				return "\32"
			else
				return c
			end
		end)
		S = S:gsub("%S+", function(c)
			if K[c] ~= nil then
				return c
			else
				return (" "):rep(#c)
			end
		end)
		return S
	end
	local hTokens = function(string)
		local Token =
			{
				["="] = true,
				["."] = true,
				[","] = true,
				["("] = true,
				[")"] = true,
				["["] = true,
				["]"] = true,
				["{"] = true,
				["}"] = true,
				[":"] = true,
				["*"] = true,
				["/"] = true,
				["+"] = true,
				["-"] = true,
				["%"] = true,
				[";"] = true,
				["~"] = true
			}
		local A = ""
		string:gsub(".", function(c)
			if Token[c] ~= nil then
				A = A .. c
			elseif c == "\n" then
				A = A .. "\n"
			elseif c == "\t" then
				A = A .. "\t"
			else
				A = A .. "\32"
			end
		end)
		return A
	end
	
	local strings = function(string)
		local highlight = ""
		local quote = false
		string:gsub(".", function(c)
			if quote == false and c == "\"" then
				quote = true
			elseif quote == true and c == "\"" then
				quote = false
			end
			if quote == false and c == "\"" then
				highlight = highlight .. "\""
			elseif c == "\n" then
				highlight = highlight .. "\n"
			elseif c == "\t" then
				highlight = highlight .. "\t"
			elseif quote == true then
				highlight = highlight .. c
			elseif quote == false then
				highlight = highlight .. "\32"
			end
		end)
		return highlight
	end
	local comments = function(string)
		local ret = ""
		string:gsub("[^\r\n]+", function(c)
			local comm = false
			local i = 0
			c:gsub(".", function(n)
				i = i + 1
				if c:sub(i, i + 1) == "--" then
					comm = true
				end
				if comm == true then
					ret = ret .. n
				else
					ret = ret .. "\32"
				end
			end)
			ret = ret
		end)
		return ret
	end
	local numbers = function(string)
		local A = ""
		string:gsub(".", function(c)
			if tonumber(c) ~= nil then
				A = A .. c
			elseif c == "\n" then
				A = A .. "\n"
			elseif c == "\t" then
				A = A .. "\t"
			else
				A = A .. "\32"
			end
		end)
		return A
	end
	local highlight_source = function(type)
		if type == "Text" then
			Source.Text = Source.Text:gsub("\13", "")
			Source.Text = Source.Text:gsub("\t", "      ")
			local s = Source.Text
			Source.Keywords_.Text = Highlight(s, lua_keywords)
			Source.Globals_.Text = Highlight(s, global_env)
			Source.RemoteHighlight_.Text = Highlight(s, {"FireServer", "fireServer", "InvokeServer", "invokeServer"})
			Source.Tokens_.Text = hTokens(s)
			Source.Numbers_.Text = numbers(s)
			Source.Strings_.Text = strings(s)
			local lin = 1
			s:gsub("\n", function()
				lin = lin + 1
			end)
			Lines.Text = ""
			for i = 1, lin do
				Lines.Text = Lines.Text .. i .. "\n"
			end
		end
	end
	highlight_source("Text")
	Source.Changed:Connect(highlight_source)
end
coroutine.wrap(XCUKBI_fake_script)()
local function VVLPP_fake_script() -- ImageLabel_3.LocalScript 
	local script = Instance.new('LocalScript', ImageLabel_3)

	local lua_keywords = {"and", "break", "do", "else", "elseif", "end", "false", "for", "function", "goto", "if", "in", "local", "nil", "not", "or", "repeat", "return", "then", "true", "until", "while"}
	local global_env = {"getrawmetatable", "game", "workspace", "script", "math", "string", "table", "print", "wait", "BrickColor", "Color3", "next", "pairs", "ipairs", "select", "unpack", "Instance", "new", "Vector2", "Vector3", "CFrame", "Ray", "UDim2", "Enum", "assert", "error", "warn", "tick", "loadstring", "_G", "shared", "getfenv", "setfenv", "newproxy", "setmetatable", "getmetatable", "os", "debug", "pcall", "ypcall", "xpcall", "rawequal", "rawset", "rawget", "tonumber", "tostring", "type", "typeof", "_VERSION", "coroutine", "delay", "require", "spawn", "LoadLibrary", "settings", "stats", "time", "UserSettings", "version", "Axes", "ColorSequence", "Faces", "ColorSequenceKeypoint", "NumberRange", "NumberSequence", "NumberSequenceKeypoint", "gcinfo", "elapsedTime", "collectgarbage", "PhysicalProperties", "Rect", "Region3", "Region3int16", "UDim", "Vector2int16", "Vector3int16"}
	local Source = script.Parent.EditorFrame.Source
	local Lines = Source.Parent.Lines
	local Highlight = function(string, keywords)
		local K = {}
		local S = string
		local Token =
			{
				["="] = true,
				["."] = true,
				[","] = true,
				["("] = true,
				[")"] = true,
				["["] = true,
				["]"] = true,
				["{"] = true,
				["}"] = true,
				[":"] = true,
				["*"] = true,
				["/"] = true,
				["+"] = true,
				["-"] = true,
				["%"] = true,
				[";"] = true,
				["~"] = true
			}
		for i, v in pairs(keywords) do
			K[v] = true
		end
		S = S:gsub(".", function(c)
			if Token[c] ~= nil then
				return "\32"
			else
				return c
			end
		end)
		S = S:gsub("%S+", function(c)
			if K[c] ~= nil then
				return c
			else
				return (" "):rep(#c)
			end
		end)
		return S
	end
	local hTokens = function(string)
		local Token =
			{
				["="] = true,
				["."] = true,
				[","] = true,
				["("] = true,
				[")"] = true,
				["["] = true,
				["]"] = true,
				["{"] = true,
				["}"] = true,
				[":"] = true,
				["*"] = true,
				["/"] = true,
				["+"] = true,
				["-"] = true,
				["%"] = true,
				[";"] = true,
				["~"] = true
			}
		local A = ""
		string:gsub(".", function(c)
			if Token[c] ~= nil then
				A = A .. c
			elseif c == "\n" then
				A = A .. "\n"
			elseif c == "\t" then
				A = A .. "\t"
			else
				A = A .. "\32"
			end
		end)
		return A
	end
	
	local strings = function(string)
		local highlight = ""
		local quote = false
		string:gsub(".", function(c)
			if quote == false and c == "\"" then
				quote = true
			elseif quote == true and c == "\"" then
				quote = false
			end
			if quote == false and c == "\"" then
				highlight = highlight .. "\""
			elseif c == "\n" then
				highlight = highlight .. "\n"
			elseif c == "\t" then
				highlight = highlight .. "\t"
			elseif quote == true then
				highlight = highlight .. c
			elseif quote == false then
				highlight = highlight .. "\32"
			end
		end)
		return highlight
	end
	local comments = function(string)
		local ret = ""
		string:gsub("[^\r\n]+", function(c)
			local comm = false
			local i = 0
			c:gsub(".", function(n)
				i = i + 1
				if c:sub(i, i + 1) == "--" then
					comm = true
				end
				if comm == true then
					ret = ret .. n
				else
					ret = ret .. "\32"
				end
			end)
			ret = ret
		end)
		return ret
	end
	local numbers = function(string)
		local A = ""
		string:gsub(".", function(c)
			if tonumber(c) ~= nil then
				A = A .. c
			elseif c == "\n" then
				A = A .. "\n"
			elseif c == "\t" then
				A = A .. "\t"
			else
				A = A .. "\32"
			end
		end)
		return A
	end
	local highlight_source = function(type)
		if type == "Text" then
			Source.Text = Source.Text:gsub("\13", "")
			Source.Text = Source.Text:gsub("\t", "      ")
			local s = Source.Text
			Source.Keywords_.Text = Highlight(s, lua_keywords)
			Source.Globals_.Text = Highlight(s, global_env)
			Source.RemoteHighlight_.Text = Highlight(s, {"FireServer", "fireServer", "InvokeServer", "invokeServer"})
			Source.Tokens_.Text = hTokens(s)
			Source.Numbers_.Text = numbers(s)
			Source.Strings_.Text = strings(s)
			local lin = 1
			s:gsub("\n", function()
				lin = lin + 1
			end)
			Lines.Text = ""
			for i = 1, lin do
				Lines.Text = Lines.Text .. i .. "\n"
			end
		end
	end
	highlight_source("Text")
	Source.Changed:Connect(highlight_source)
end
coroutine.wrap(VVLPP_fake_script)()
local function WMPZGUU_fake_script() -- Execute.LocalScript 
	local script = Instance.new('LocalScript', Execute)

	script.Parent.MouseButton1Down:Connect(function()
        loadstring(script.Parent.Parent.Parent.MainGUI.ExecuteBar.ScrollingFrame1.ImageLabel.EditorFrame.Source.Text)()
	end)
end
coroutine.wrap(WMPZGUU_fake_script)()
local function UDBRM_fake_script() -- Clear.LocalScript 
	local script = Instance.new('LocalScript', Clear)

	local button = script.Parent
	local text1 = script.Parent.Parent.Parent.MainGUI.ExecuteBar.ScrollingFrame1.ImageLabel.EditorFrame.Source
	button.MouseButton1Click:Connect(function()
        text1.Text = ""
	end)
end
coroutine.wrap(UDBRM_fake_script)()
local function BFFHFLM_fake_script() -- InjectButton.LocalScript 
	local script = Instance.new('LocalScript', InjectButton)

	local btn = script.Parent
	local Gui = script.Parent.Parent.Parent.InjectedMessgae
	
	btn.MouseButton1Click:Connect(function()
		Gui.Visible = true
	end)
	
end
coroutine.wrap(BFFHFLM_fake_script)()
local function MRVGBRW_fake_script() -- KrnlGUI.Drag 
	local script = Instance.new('LocalScript', KrnlGUI)

	local frame = script.Parent
	frame.Draggable = true
	frame.Active = true
	frame.Selectable = true
end
coroutine.wrap(MRVGBRW_fake_script)()
local function QVFBOG_fake_script() -- Xbutton_2.LocalScript 
	local script = Instance.new('LocalScript', Xbutton_2)

	local btn = script.Parent
	local Gui = script.Parent.Parent.Parent
	
	btn.MouseButton1Click:Connect(function()
		Gui.Visible = false
	end)
end
coroutine.wrap(QVFBOG_fake_script)()
local function VEDCZN_fake_script() -- Okbutton.LocalScript 
	local script = Instance.new('LocalScript', Okbutton)

	local btn = script.Parent
	local Gui = script.Parent.Parent.Parent
	
	btn.MouseButton1Click:Connect(function()
		Gui.Visible = false
	end)
end
coroutine.wrap(VEDCZN_fake_script)()
local function IHNUMQ_fake_script() -- InjectedMessgae.Drag 
	local script = Instance.new('LocalScript', InjectedMessgae)

	local frame = script.Parent
	frame.Draggable = true
	frame.Active = true
	frame.Selectable = true
end
coroutine.wrap(IHNUMQ_fake_script)()
local function FJVQORH_fake_script() -- DexExplorer.LocalScript 
	local script = Instance.new('LocalScript', DexExplorer)

	local btn = script.Parent
	
	btn.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/peyton2465/Dex/master/out.lua"))()
	end)
end
coroutine.wrap(FJVQORH_fake_script)()
local function WHQB_fake_script() -- OpenGui.LocalScript 
	local script = Instance.new('LocalScript', OpenGui)

	local btn = script.Parent
	
	btn.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet("https://pastebin.com/raw/UXmbai5q", true))()
	end)
end
coroutine.wrap(WHQB_fake_script)()
local function QHYNL_fake_script() -- RemoteSpy.LocalScript 
	local script = Instance.new('LocalScript', RemoteSpy)

	local btn = script.Parent
	
	btn.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/exxtremestuffs/SimpleSpySource/master/SimpleSpy.lua"))();
	end)
end
coroutine.wrap(QHYNL_fake_script)()
local function XVQL_fake_script() -- DarkDex.LocalScript 
	local script = Instance.new('LocalScript', DarkDex)

	local btn = script.Parent
	
	btn.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet("https://pastebin.com/raw/fPP8bZ8Z"))()
	end)
end
coroutine.wrap(XVQL_fake_script)()
local function HYBOB_fake_script() -- UnamedEsp.LocalScript 
	local script = Instance.new('LocalScript', UnamedEsp)

	local btn = script.Parent
	
	btn.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet("https://pastebin.com/raw/kvr0AuWz"))()
	end)
end
coroutine.wrap(HYBOB_fake_script)()
local function GKEBA_fake_script() -- IYFE.LocalScript 
	local script = Instance.new('LocalScript', IYFE)

	local btn = script.Parent
	
	btn.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
	end)
end
coroutine.wrap(GKEBA_fake_script)()
local function NHAHP_fake_script() -- OwlHub.LocalScript 
	local script = Instance.new('LocalScript', OwlHub)

	local btn = script.Parent
	
	btn.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/CriShoux/OwlHub/master/OwlHub.txt"))();
	end)
end
coroutine.wrap(NHAHP_fake_script)()
local function RZTRLAR_fake_script() -- HoHoHub.LocalScript 
	local script = Instance.new('LocalScript', HoHoHub)

	local btn = script.Parent
	
	btn.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet('https://raw.githubusercontent.com/acsu123/HOHO_H/main/Loading_UI'))()
	end)
end
coroutine.wrap(RZTRLAR_fake_script)()
local function ZVNIN_fake_script() -- Xbutton_3.LocalScript 
	local script = Instance.new('LocalScript', Xbutton_3)

	local btn = script.Parent
	local Gui = script.Parent.Parent.Parent
	
	btn.MouseButton1Click:Connect(function()
		Gui.Visible = false
	end)
end
coroutine.wrap(ZVNIN_fake_script)()
local function LRQQGX_fake_script() -- CreditsW.Drag 
	local script = Instance.new('LocalScript', CreditsW)

	local frame = script.Parent
	frame.Draggable = true
	frame.Active = true
	frame.Selectable = true
end
coroutine.wrap(LRQQGX_fake_script)()
local function UAPXMMK_fake_script() -- WHy.LocalScript 
	local script = Instance.new('LocalScript', WHy)

	local btn = script.Parent
	
	btn.MouseButton1Click:Connect(function()
		print("Clicked")
	end)
end
coroutine.wrap(UAPXMMK_fake_script)()
local function TEITRZP_fake_script() -- Nope.LocalScript 
	local script = Instance.new('LocalScript', Nope)

	local btn = script.Parent
	
	btn.MouseButton1Click:Connect(function()
		print("Clicked")
	end)
end
coroutine.wrap(TEITRZP_fake_script)()
local function BOLKY_fake_script() -- KillTask.LocalScript 
	local script = Instance.new('LocalScript', KillTask)

	local btn = script.Parent
	
	btn.MouseButton1Click:Connect(function()
		print("Clicked")
	end)
end
coroutine.wrap(BOLKY_fake_script)()
local function LRTUSOX_fake_script() -- Inject.LocalScript 
	local script = Instance.new('LocalScript', Inject)

	local btn = script.Parent
	local Gui = script.Parent.Parent.Parent.InjectedMessgae
	
	btn.MouseButton1Click:Connect(function()
		Gui.Visible = true
	end)
	
end
coroutine.wrap(LRTUSOX_fake_script)()
local function IVCU_fake_script() -- Xbutton_4.LocalScript 
	local script = Instance.new('LocalScript', Xbutton_4)

	local btn = script.Parent
	local Gui = script.Parent.Parent.Parent
	
	btn.MouseButton1Click:Connect(function()
		Gui.Visible = false
	end)
end
coroutine.wrap(IVCU_fake_script)()
local function OWFEJ_fake_script() -- Okbutton_2.LocalScript 
	local script = Instance.new('LocalScript', Okbutton_2)

	local btn = script.Parent
	local Gui = script.Parent.Parent.Parent
	
	btn.MouseButton1Click:Connect(function()
		Gui.Visible = false
	end)
end
coroutine.wrap(OWFEJ_fake_script)()
local function XCQNHP_fake_script() -- GamesOpenGUI.Drag 
	local script = Instance.new('LocalScript', GamesOpenGUI)

	local frame = script.Parent
	frame.Draggable = true
	frame.Active = true
	frame.Selectable = true
end
coroutine.wrap(XCQNHP_fake_script)()
local function JKEPNNP_fake_script() -- FloatingGUI.Drag 
	local script = Instance.new('LocalScript', FloatingGUI)

	local frame = script.Parent
	frame.Draggable = true
	frame.Active = true
	frame.Selectable = true
end
coroutine.wrap(JKEPNNP_fake_script)()
local function LTLHER_fake_script() -- FloatingGUI.LocalScript 
	local script = Instance.new('LocalScript', FloatingGUI)

	local btn = script.Parent
	local Gui = script.Parent.Parent.KrnlGUI
	
	btn.MouseButton1Click:Connect(function()
		Gui.Visible = true
		btn.Visible = false
	end)
end
coroutine.wrap(LTLHER_fake_script)()
end)

local tab4 = DrRayLibrary.newTab("Settings", "ImageIdHere")

tab4.newToggle("Prepare for Battles", "Theme-music", false, function(toggleState)
    if toggleState == true then
           local music = Instance.new("Sound", game.Workspace)
           music.SoundId = "rbxassetid://1839961023"
           music.Volume = 2
      music:Play()
    else
        wait(0.1) 
        print("[Deactived]")
        music:Destroy()
    end
end)
tab4.newToggle("AutoJump", "AutoJump", false, function(J)
    J = K;
    spawn(function()
    while wait()
    and J do game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Jump = true
    end
    end)
end)
tab4.newToggle("FlyJump", "FlyJump script", false, function(state)
InfiniteJumpEnabled = State
end)
tab4.newToggle("Teamcheck", "Teamcheck script", false, function(state)
getgenv().enabled = state --Toggle on/off
getgenv().filluseteamcolor = true --Toggle fill color using player team color on/off
getgenv().outlineuseteamcolor = true --Toggle outline color using player team color on/off
getgenv().fillcolor = Color3.new(0, 0, 0) --Change fill color, no need to edit if using team color
getgenv().outlinecolor = Color3.new(0, 255, 0) --Change outline color, no need to edit if using team color
getgenv().filltrans = 0.5 --Change fill transparency
getgenv().outlinetrans = 1 --Change outline transparency

loadstring(game:HttpGet("https://raw.githubusercontent.com/Vcsk/RobloxScripts/main/Highlight-ESP.lua"))()
end)
tab4.newToggle("Fullbright", "Fullbright script", false, function(Value)
		if Value then
		    game.Lighting.Ambient = Color3.new(1, 1, 1)
		else
		    game.Lighting.Ambient = Color3.new(0, 0, 0)
		end
end) 
tab4.newToggle("Freecam", "Freecam script", false, function(state)
        local player = game.Players.LocalPlayer
        local char = player.Character
        local runService = game:GetService("RunService")
        local camera = workspace.CurrentCamera
        local speed = 1
        local touchControls = {}

        local function isMobile()
            return UserInputService.TouchEnabled and not UserInputService.MouseEnabled
        end

        if state then
            camera.CameraType = Enum.CameraType.Scriptable
            if isMobile() then
                _G.Freecam = runService.RenderStepped:Connect(function()
                    local moveDirection = Vector3.new()
                    if touchControls["MoveForward"] then
                        moveDirection = moveDirection + camera.CFrame.LookVector
                    end
                    if touchControls["MoveBackward"] then
                        moveDirection = moveDirection - camera.CFrame.LookVector
                    end
                    if touchControls["MoveLeft"] then
                        moveDirection = moveDirection - camera.CFrame.RightVector
                    end
                    if touchControls["MoveRight"] then
                        moveDirection = moveDirection + camera.CFrame.RightVector
                    end
                    if touchControls["MoveUp"] then
                        moveDirection = moveDirection + camera.CFrame.UpVector
                    end
                    if touchControls["MoveDown"] then
                        moveDirection = moveDirection - camera.CFrame.UpVector
                    end

                    camera.CFrame = camera.CFrame + moveDirection * speed
                end)

                UserInputService.TouchStarted:Connect(function(touch, gameProcessedEvent)
                    if not gameProcessedEvent then
                        if touch.Position.Y < workspace.CurrentCamera.ViewportSize.Y / 2 then
                            touchControls["MoveForward"] = true
                        else
                            touchControls["MoveBackward"] = true
                        end
                    end
                end)

                UserInputService.TouchEnded:Connect(function(touch, gameProcessedEvent)
                    if not gameProcessedEvent then
                        touchControls["MoveForward"] = false
                        touchControls["MoveBackward"] = false
                    end
                end)
            else
                _G.Freecam = runService.RenderStepped:Connect(function()
                    local moveDirection = Vector3.new()
                    if UserInputService:IsKeyDown(Enum.KeyCode.W) then
                        moveDirection = moveDirection + camera.CFrame.LookVector
                    end
                    if UserInputService:IsKeyDown(Enum.KeyCode.S) then
                        moveDirection = moveDirection - camera.CFrame.LookVector
                    end
                    if UserInputService:IsKeyDown(Enum.KeyCode.A) then
                        moveDirection = moveDirection - camera.CFrame.RightVector
                    end
                    if UserInputService:IsKeyDown(Enum.KeyCode.D) then
                        moveDirection = moveDirection + camera.CFrame.RightVector
                    end
                    if UserInputService:IsKeyDown(Enum.KeyCode.Q) then
                        moveDirection = moveDirection - camera.CFrame.UpVector
                    end
                    if UserInputService:IsKeyDown(Enum.KeyCode.E) then
                        moveDirection = moveDirection + camera.CFrame.UpVector
                    end

                    camera.CFrame = camera.CFrame + moveDirection * speed
                end)
            end
        else
            if _G.Freecam then
                _G.Freecam:Disconnect()
                _G.Freecam = nil
            end
            camera.CameraType = Enum.CameraType.Custom
        end
end)
tab4.newToggle("Esp", "Esp script", false, function(state)
            for _, player in pairs(game.Players:GetPlayers()) do
            if player ~= game.Players.LocalPlayer then
                if state then
                    local highlight = Instance.new("Highlight")
                    highlight.Parent = player.Character
                    highlight.Adornee = player.Character

                    local billboard = Instance.new("BillboardGui")
                    billboard.Parent = player.Character
                    billboard.Adornee = player.Character
                    billboard.Size = UDim2.new(0, 100, 0, 100)
                    billboard.StudsOffset = Vector3.new(0, 3, 0)
                    billboard.AlwaysOnTop = true

                    local nameLabel = Instance.new("TextLabel")
                    nameLabel.Parent = billboard
                    nameLabel.Size = UDim2.new(1, 0, 1, 0)
                    nameLabel.BackgroundTransparency = 1
                    nameLabel.Text = player.Name
                    nameLabel.TextColor3 = Color3.new(1, 1, 1)
                    nameLabel.TextStrokeTransparency = 0.5
                    nameLabel.TextScaled = true

                    local circle = Instance.new("ImageLabel")
                    circle.Parent = billboard
                    circle.Size = UDim2.new(0, 50, 0, 50)
                    circle.Position = UDim2.new(0.5, 0, 0.5, 0) -- Center the circle
                    circle.AnchorPoint = Vector2.new(0.5, 0.5) -- Set the anchor point to the center
                    circle.BackgroundTransparency = 1
                    circle.Image = "rbxassetid://2200552246" -- Replace with your circle image asset ID
                else
                    if player.Character:FindFirstChildOfClass("Highlight") then
                        player.Character:FindFirstChildOfClass("Highlight"):Destroy()
                    end
                    if player.Character:FindFirstChildOfClass("BillboardGui") then
                        player.Character:FindFirstChildOfClass("BillboardGui"):Destroy()
                    end
                end
            end
        end
end)
tab4.newToggle("Invisibility", "Invisible script", false, function(state)
   local player = game.Players.LocalPlayer
        local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            if state then
                humanoid:ChangeState(Enum.HumanoidStateType.Physics)
                player.Character.Head.Transparency = 1
                player.Character.Torso.Transparency = 1
                for _, part in pairs(player.Character:GetChildren()) do
                    if part:IsA("BasePart") then
                        part.Transparency = 1
                        part.CanCollide = false
                    end
                end
            else
                humanoid:ChangeState(Enum.HumanoidStateType.GettingUp)
                player.Character.Head.Transparency = 0
                player.Character.Torso.Transparency = 0
                for _, part in pairs(player.Character:GetChildren()) do
                    if part:IsA("BasePart") then
                        part.Transparency = 0
                        part.CanCollide = true
                    end
                end
            end
        else
            warn("Humanoid not found!")
        end
end)
tab4.newToggle("Noclip", "Noclip script", false, function(enabled)
    isNoClipEnabled = enabled
    local character = game.Players.LocalPlayer.Character

    while isNoClipEnabled do
        for _, part in pairs(character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
        game:GetService("RunService").Stepped:Wait()
    end
end)
tab4.newToggle("XRay", "XRay script", false, function(goreng)
       if goreng == true then
        for _, descendant in pairs(workspace:GetDescendants()) do
            if descendant:IsA("BasePart") then
                if not descendant:FindFirstChild("OriginalTransparency") then
                    local originalTransparency = Instance.new("NumberValue")
                    originalTransparency.Name = "OriginalTransparency"
                    originalTransparency.Value = descendant.Transparency
                    originalTransparency.Parent = descendant
                end
                descendant.Transparency = 0.5
            end
        end
        
    else
    
        for _, descendant in pairs(workspace:GetDescendants()) do
            if descendant:IsA("BasePart") then
                if descendant:FindFirstChild("OriginalTransparency") then
                    descendant.Transparency = descendant.OriginalTransparency.Value
                    descendant.OriginalTransparency:Destroy()
                end
            end
        end
    end
end)
tab4.newToggle("Antilag", "New-type bypass", false, function(toggleState)
    if toggleState then
           for i,v in next, (workspace:GetDescendants()) do
                if v:IsA("Part") then v.Material = Enum.Material.SmoothPlastic
             end
        end
    else
        print("[Deactived]")
    end
end)
tab4.newToggle("Anticheat", "New-type bypass", false, function(toggleState)
    if toggleState then
       nopp()
    else
       warn("[Deactivated]")
    end
end)
function nopp() 
local getinfo = getinfo or debug.getinfo
        local DEBUG = false
        local Hooked = {}

        local Detected, Kill

        setthreadidentity(2)

        for i, v in getgc(true) do
            if typeof(v) == "table" then
                local DetectFunc = rawget(v, "Detected")
                local KillFunc = rawget(v, "Kill")
            
                if typeof(DetectFunc) == "function" and not Detected then
                    Detected = DetectFunc
                    
                    local Old; Old = hookfunction(Detected, function(Action, Info, NoCrash)
                        if Action ~= "_" then
                            if DEBUG then
                                warn(`Adonis AntiCheat flagged\nMethod: {Action}\nInfo: {Info}`)
                            end
                        end
                        
                        return true
                    end)

                    table.insert(Hooked, Detected)
                end

                if rawget(v, "Variables") and rawget(v, "Process") and typeof(KillFunc) == "function" and not Kill then
                    Kill = KillFunc
                    local Old; Old = hookfunction(Kill, function(Info)
                        if DEBUG then
                            warn(`Adonis AntiCheat tried to kill (fallback): {Info}`)
                        end
                    end)

                    table.insert(Hooked, Kill)
                end
            end
        end

        local Old; Old = hookfunction(getrenv().debug.info, newcclosure(function(...)
            local LevelOrFunc, Info = ...

            if Detected and LevelOrFunc == Detected then
                if DEBUG then
                    warn(`!!! | adonis bypassed`)
                end

                return coroutine.yield(coroutine.running())
            end
            
            return Old(...)
        end))
        -- setthreadidentity(9)
        setthreadidentity(7)
end
tab4.newToggle("Antiafk", "New-type bypass", false, function(toggleState)
    if toggleState then
        local VirtualUser = game:service('VirtualUser')
        game:service('Players').LocalPlayer.Idled:connect(function()
        VirtualUser:CaptureController()
        VirtualUser:ClickButton2(Vector2.new())
             end)
      else
        warn("[Deactived]")
    end
end)
tab4.newToggle("Antikick", "New-type bypass", true, function(toggleState)
    if toggleState then
        OXX()
    else
        print("[Deactived]")
    end
end)
function OXX()
getgenv().AntiKick = true
getgenv().Notifications = true
local StarterGui = game:GetService("StarterGui")

local kick; kick = hookmetamethod(game, "__namecall", function(obj, ...)
	local args = {...}
	local method = getnamecallmethod()
	if method == "Kick" and AntiKick then
		if args[1] and Notifications then
			StarterGui:SetCore("SendNotification", {
				Title = "Universe X Bypass";
				Icon = "";
				Text = "A kick attempt was blocked. Reason: "..args[1]
			})
			print("A kick attempt was blocked. Reason: "..args[1])
		elseif Notifications then
			StarterGui:SetCore("SendNotification", {
				Title = "UniverseX Bypass";
				Icon = "";
				Text = "A kick attempt was blocked."
			})
			print("A kick attempt was blocked.")
		end
		return nil
	end
	return kick(obj, unpack(args))
    end)
end
tab4.newButton("WalkSpeed", "Bypass walkspeed script", function()
TestXX()
end)
function TestXX()
local char = game.Players.LocalPlayer.Character
game:GetService"UserInputService".InputBegan:Connect(function(input,gP)
   if gP then return end -- the code below won't be executed if you're typing in something like a TextBox and you type the keycode

local function inrange(CFrame1, CFrame2)
   if tonumber(CFrame1.X) - tonumber(CFrame2.X) < 10 then
       return true
   else
       return false
   end
end

local function inrange2(CFrame1, CFrame2)
   if tonumber(CFrame1.Z) - tonumber(CFrame2.Z) < 10 then
       return true
   else
       return false
   end
end


   
   if input.KeyCode == Enum.KeyCode.D then -- X
       local old = char.HumanoidRootPart.CFrame
       char.HumanoidRootPart.CFrame = char.HumanoidRootPart.CFrame + Vector3.new(12, 0, 0)
          while task.wait() do
       if inrange(char.HumanoidRootPart.CFrame, old) == true then -- char is set before and old after in + values
           char.HumanoidRootPart.CFrame = char.HumanoidRootPart.CFrame + Vector3.new(12, 0, 0)
           end
       end
       end
   
   if input.KeyCode == Enum.KeyCode.A then -- X
       local old = char.HumanoidRootPart.CFrame
       char.HumanoidRootPart.CFrame = char.HumanoidRootPart.CFrame + Vector3.new(-12, 0, 0)
       while task.wait() do
           if inrange(old, char.HumanoidRootPart.CFrame) == true then
               char.HumanoidRootPart.CFrame = char.HumanoidRootPart.CFrame + Vector3.new(-12, 0, 0)
           end
       end
       end
   
     if input.KeyCode == Enum.KeyCode.W then
         local old = char.HumanoidRootPart.CFrame
       char.HumanoidRootPart.CFrame = char.HumanoidRootPart.CFrame + Vector3.new(0, 0, -12)
         while task.wait() do
       if inrange2(old, char.HumanoidRootPart.CFrame) then
           char.HumanoidRootPart.CFrame = char.HumanoidRootPart.CFrame + Vector3.new(0, 0, -12)
           end
       end
     end

 if input.KeyCode == Enum.KeyCode.S then
     local old = char.HumanoidRootPart.CFrame
       char.HumanoidRootPart.CFrame = char.HumanoidRootPart.CFrame + Vector3.new(0, 0, 12)
       while task.wait() do -- remember the task.wait
           if inrange2(char.HumanoidRootPart.CFrame, old) == true then
               char.HumanoidRootPart.CFrame = char.HumanoidRootPart.CFrame + Vector3.new(0, 0, 12)
               end
       end
 end

end)
end
tab4.newButton("Fullbright ", "Fullbright 1", function()
local Light = game:GetService("Lighting")

       function dofullbright()
       Light.Ambient = Color3.new(1, 1, 1)
       Light.ColorShift_Bottom = Color3.new(1, 1, 1)
       Light.ColorShift_Top = Color3.new(1, 1, 1)
       end

       dofullbright()

       Light.LightingChanged:Connect(dofullbright)
end)
tab4.newButton("Fullbright", "Fullbright 2", function()
game:GetService("Lighting").Brightness = 2
	game:GetService("Lighting").ClockTime = 14
	game:GetService("Lighting").FogEnd = 100000
	game:GetService("Lighting").GlobalShadows = false
	game:GetService("Lighting").OutdoorAmbient = Color3.fromRGB(128, 128, 128)
end) 
tab4.newButton("Esp", "Esp script", function()

local player = game.Players.LocalPlayer

-- Função para criar um Highlight para ESP
local function createHighlight(character, color)
    local highlight = Instance.new("Highlight")
    highlight.Adornee = character
    highlight.FillColor = color
    highlight.OutlineColor = Color3.new(0, 0, 0) -- Preto para o contorno
    highlight.Parent = character
end

-- Função para criar uma BillboardGui com o nome e a cor do time
local function createBillboard(character, color, playerName)
    local head = character:FindFirstChild("Head")
    if not head then return end

    -- Verifica se a BillboardGui já existe
    local existingBillboard = head:FindFirstChild("PlayerBillboard")
    if existingBillboard then
        existingBillboard:Destroy()
    end

    -- Cria a BillboardGui
    local billboard = Instance.new("BillboardGui")
    billboard.Name = "PlayerBillboard"
    billboard.Adornee = head
    billboard.Size = UDim2.new(0, 100, 0, 30) -- Tamanho da BillboardGui
    billboard.StudsOffset = Vector3.new(0, 3, 0) -- Distância em relação ao personagem
    billboard.AlwaysOnTop = true
    billboard.Parent = head

    -- Cria o TextLabel
    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.TextColor3 = color
    textLabel.TextStrokeTransparency = 0.5
    textLabel.Text = playerName
    textLabel.TextScaled = true
    textLabel.TextStrokeColor3 = Color3.new(0, 0, 0) -- Cor do contorno do texto
    textLabel.Parent = billboard
end

-- Função para atualizar os ESP e Billboards para todos os jogadores
local function updateHighlightsAndBillboards()
    for _, otherPlayer in pairs(game.Players:GetPlayers()) do
        local character = otherPlayer.Character
        if character and character:FindFirstChild("Head") then
            local teamColor = otherPlayer.TeamColor.Color -- Cor do time do jogador
            local playerName = otherPlayer.Name -- Nome do jogador

            -- Adiciona Highlight para ESP
            if not character:FindFirstChild("Highlight") then
                createHighlight(character, teamColor)
            end

            -- Adiciona BillboardGui
            createBillboard(character, teamColor, playerName)
        end
    end
end

-- Atualiza os Highlights e Billboards quando um novo jogador entra no jogo
game.Players.PlayerAdded:Connect(function(newPlayer)
    newPlayer.CharacterAdded:Connect(function(character)
        local teamColor = newPlayer.TeamColor.Color -- Cor do time do novo jogador
        local playerName = newPlayer.Name -- Nome do jogador
        createHighlight(character, teamColor)
        createBillboard(character, teamColor, playerName)
    end)
end)

-- Atualiza os Highlights e Billboards periodicamente
while true do
    updateHighlightsAndBillboards()
    wait(5) -- Verifica a cada 5 segundos
end

local player = game.Players.LocalPlayer

-- Função para criar um Highlight para ESP
local function createHighlight(character, color)
    local highlight = Instance.new("Highlight")
    highlight.Adornee = character
    highlight.FillColor = color
    highlight.OutlineColor = Color3.new(0, 0, 0) -- Preto para o contorno
    highlight.Parent = character
end

-- Função para criar uma BillboardGui com o nome e a cor do time
local function createBillboard(character, color, playerName)
    local head = character:FindFirstChild("Head")
    if not head then return end

    -- Verifica se a BillboardGui já existe
    local existingBillboard = head:FindFirstChild("PlayerBillboard")
    if existingBillboard then
        existingBillboard:Destroy()
    end

    -- Cria a BillboardGui
    local billboard = Instance.new("BillboardGui")
    billboard.Name = "PlayerBillboard"
    billboard.Adornee = head
    billboard.Size = UDim2.new(0, 100, 0, 30) -- Tamanho da BillboardGui
    billboard.StudsOffset = Vector3.new(0, 3, 0) -- Distância em relação ao personagem
    billboard.AlwaysOnTop = true
    billboard.Parent = head

    -- Cria o TextLabel
    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.TextColor3 = color
    textLabel.TextStrokeTransparency = 0.5
    textLabel.Text = playerName
    textLabel.TextScaled = true
    textLabel.TextStrokeColor3 = Color3.new(0, 0, 0) -- Cor do contorno do texto
    textLabel.Parent = billboard
end

-- Função para atualizar os ESP e Billboards para todos os jogadores
local function updateHighlightsAndBillboards()
    for _, otherPlayer in pairs(game.Players:GetPlayers()) do
        local character = otherPlayer.Character
        if character and character:FindFirstChild("Head") then
            local teamColor = otherPlayer.TeamColor.Color -- Cor do time do jogador
            local playerName = otherPlayer.Name -- Nome do jogador

            -- Adiciona Highlight para ESP
            if not character:FindFirstChild("Highlight") then
                createHighlight(character, teamColor)
            end

            -- Adiciona BillboardGui
            createBillboard(character, teamColor, playerName)
        end
    end
end

-- Atualiza os Highlights e Billboards quando um novo jogador entra no jogo
game.Players.PlayerAdded:Connect(function(newPlayer)
    newPlayer.CharacterAdded:Connect(function(character)
        local teamColor = newPlayer.TeamColor.Color -- Cor do time do novo jogador
        local playerName = newPlayer.Name -- Nome do jogador
        createHighlight(character, teamColor)
        createBillboard(character, teamColor, playerName)
    end)
end)

-- Atualiza os Highlights e Billboards periodicamente
while true do
    updateHighlightsAndBillboards()
    wait(5) -- Verifica a cada 5 segundos
end
end)

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/Revenant", true))()
Library.DefaultColor = Color3.fromRGB(255,0,0)

local tab5 = DrRayLibrary.newTab("Others", "")
tab5.newButton("FF", "FF script", function()
ff = Instance.new("ForceField", game.Players.LocalPlayer.Character)
        ff.Visible = true
        -- Sets health to max
        maxHealth = game.Players.LocalPlayer.Humanoid.MaxHealth
        player.Health = maxHealth
end) 
tab5.newButton("Spin", "Spin script", function()
Spin1()
end)
function Spin1()
Library:Notification({
	Text = "UniverseX Spin",
	Duration = 6
})
wait(0.2)

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

local spinSpeed = 20
local isSpinning = false

local discordLink = "https://discord.gg/43mDSjxb9U"

local screenGui = Instance.new("ScreenGui", player.PlayerGui)
screenGui.ResetOnSpawn = false

local frame = Instance.new("Frame", screenGui)
frame.Size = UDim2.new(0, 300, 0, 300)
frame.Position = UDim2.new(0, 50, 0, 50)
frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
frame.BorderSizePixel = 0
frame.BackgroundTransparency = 0.1
frame.Active = true  -- Enable dragging
frame.Draggable = true  -- Make frame draggable

local uiCorner = Instance.new("UICorner", frame)
uiCorner.CornerRadius = UDim.new(0, 20)

local title = Instance.new("TextLabel", frame)
title.Text = "scarlet spin script"
title.Font = Enum.Font.GothamBold
title.TextSize = 20
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Size = UDim2.new(1, -20, 0, 40)
title.Position = UDim2.new(0, 10, 0, 10)
title.BackgroundTransparency = 1

local byLabel = Instance.new("TextLabel", frame)
byLabel.Text = "by xirius_ux#0000"
byLabel.Font = Enum.Font.Gotham
byLabel.TextSize = 14
byLabel.TextColor3 = Color3.fromRGB(150, 150, 150)
byLabel.Size = UDim2.new(1, -20, 0, 20)
byLabel.Position = UDim2.new(0, 10, 0, 50)
byLabel.BackgroundTransparency = 1

local spinSpeedLabel = Instance.new("TextLabel", frame)
spinSpeedLabel.Text = "Spin Speed:"
spinSpeedLabel.Font = Enum.Font.Gotham
spinSpeedLabel.TextSize = 16
spinSpeedLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
spinSpeedLabel.Size = UDim2.new(1, -20, 0, 30)
spinSpeedLabel.Position = UDim2.new(0, 10, 0, 80)
spinSpeedLabel.BackgroundTransparency = 1

local spinSpeedBox = Instance.new("TextBox", frame)
spinSpeedBox.Text = tostring(spinSpeed)
spinSpeedBox.Font = Enum.Font.Gotham
spinSpeedBox.TextSize = 16
spinSpeedBox.TextColor3 = Color3.fromRGB(255, 255, 255)
spinSpeedBox.Size = UDim2.new(1, -20, 0, 30)
spinSpeedBox.Position = UDim2.new(0, 10, 0, 110)
spinSpeedBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
spinSpeedBox.BorderSizePixel = 0

local uiCornerBox = Instance.new("UICorner", spinSpeedBox)
uiCornerBox.CornerRadius = UDim.new(0, 10)

local startStopButton = Instance.new("TextButton", frame)
startStopButton.Text = "Stop Spin"
startStopButton.Font = Enum.Font.GothamBold
startStopButton.TextSize = 18
startStopButton.TextColor3 = Color3.fromRGB(255, 255, 255)
startStopButton.Size = UDim2.new(1, -20, 0, 40)
startStopButton.Position = UDim2.new(0, 10, 0, 150)
startStopButton.BackgroundColor3 = Color3.fromRGB(255, 70, 70)
startStopButton.BorderSizePixel = 0

local uiCornerButton = Instance.new("UICorner", startStopButton)
uiCornerButton.CornerRadius = UDim.new(0, 12)

local discordButton = Instance.new("TextButton", frame)
discordButton.Text = "Copy discord link"
discordButton.Font = Enum.Font.GothamBold
discordButton.TextSize = 18
discordButton.TextColor3 = Color3.fromRGB(255, 255, 255)
discordButton.Size = UDim2.new(1, -20, 0, 40)
discordButton.Position = UDim2.new(0, 10, 0, 200)
discordButton.BackgroundColor3 = Color3.fromRGB(114, 137, 218)
discordButton.BorderSizePixel = 0

local uiCornerDiscord = Instance.new("UICorner", discordButton)
uiCornerDiscord.CornerRadius = UDim.new(0, 12)

local footerLabel = Instance.new("TextLabel", frame)
footerLabel.Text = ".Made by Xirius."
footerLabel.Font = Enum.Font.Gotham
footerLabel.TextSize = 12
footerLabel.TextColor3 = Color3.fromRGB(150, 150, 150)
footerLabel.Size = UDim2.new(1, -20, 0, 20)
footerLabel.Position = UDim2.new(0, 10, 0, 250)
footerLabel.BackgroundTransparency = 1

startStopButton.MouseEnter:Connect(function()
    startStopButton.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
end)

startStopButton.MouseLeave:Connect(function()
    startStopButton.BackgroundColor3 = Color3.fromRGB(255, 70, 70)
end)

discordButton.MouseEnter:Connect(function()
    discordButton.BackgroundColor3 = Color3.fromRGB(88, 101, 242)
end)

discordButton.MouseLeave:Connect(function()
    discordButton.BackgroundColor3 = Color3.fromRGB(114, 137, 218)
end)

local function spin()
    while isSpinning do
        humanoidRootPart.CFrame = humanoidRootPart.CFrame * CFrame.Angles(0, math.rad(spinSpeed) * wait(), 0)
    end
end

coroutine.wrap(spin)()

spinSpeedBox.FocusLost:Connect(function(enterPressed)
    local newSpeed = tonumber(spinSpeedBox.Text)
    if newSpeed then
        spinSpeed = newSpeed
    else
        spinSpeedBox.Text = tostring(spinSpeed)
    end
end)

startStopButton.MouseButton1Click:Connect(function()
    isSpinning = not isSpinning
    if isSpinning then
        startStopButton.Text = "Stop Spin"
        coroutine.wrap(spin)()
        startStopButton.BackgroundColor3 = Color3.fromRGB(255, 70, 70)
    else
        startStopButton.Text = "Start Spin"
        startStopButton.BackgroundColor3 = Color3.fromRGB(70, 255, 70)
    end
end)

discordButton.MouseButton1Click:Connect(function()
    setclipboard(discordLink)
    discordButton.Text = "Link Copied!"
    wait(1.5)
    discordButton.Text = "Copy Discord Link"
end)
end
tab5.newButton("Audio", "Audio script", function()
Music1()
end)
function Music1() 

Library:Notification({
	Text = "UniverseX Music",
	Duration = 6
})
wait(0.2)

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/Revenant", true))()
Library.DefaultColor = Color3.fromRGB(255,0,0)

Library:Notification({
	Text = "Bypassed: Hyperion",
	Duration = 5
})

----------------------------
wait(1)
local gui = Instance.new("ScreenGui")
gui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

-- Background Frame
local background = Instance.new("Frame")
background.Size = UDim2.new(0, 200, 0, 100)
background.BackgroundColor3 = Color3.new(0, 0, 1)
background.BorderColor3 = Color3.new(1, 1, 1)
background.BackgroundTransparency = 0.5
background.Position = UDim2.new(0.5, -100, 0.5, -50)
background.Active = true
background.Draggable = true
background.Parent = gui

-- Song ID Input Box
local idBox = Instance.new("TextBox")
idBox.Size = UDim2.new(0.5, 0, 0.2, 0)
idBox.Position = UDim2.new(0.25, 0, 0.2, 0)
idBox.Text = "Enter audio ID"
idBox.Parent = background

-- Play Button
local playButton = Instance.new("TextButton")
playButton.Size = UDim2.new(0.4, 0, 0.2, 0)
playButton.Position = UDim2.new(0.05, 0, 0.5, 0)
playButton.Text = "Play"
playButton.Parent = background

-- Stop Button
local stopButton = Instance.new("TextButton")
stopButton.Size = UDim2.new(0.4, 0, 0.2, 0)
stopButton.Position = UDim2.new(0.55, 0, 0.5, 0)
stopButton.Text = "Stop"
stopButton.Parent = background

-- Audio Instance
local audio = Instance.new("Sound")
audio.Parent = game.Workspace

-- Side Notification
local notification = Instance.new("TextLabel")
notification.Size = UDim2.new(0, 200, 0, 20)
notification.Position = UDim2.new(1, 0, 0.5, -10)
notification.BackgroundColor3 = Color3.new(1, 1, 1)
notification.BackgroundTransparency = 0.5
notification.TextColor3 = Color3.new(0, 0, 0)
notification.Text = "Credits to Vercel Intertainments"
notification.Parent = gui

-- Play Button Functionality
playButton.MouseButton1Click:Connect(function()
    local id = tonumber(idBox.Text)
    if id then
        audio.SoundId = "rbxassetid://"..id
        audio:Play()
    end
end)

-- Stop Button Functionality
stopButton.MouseButton1Click:Connect(function()
    audio:Stop()
end)
end
tab5.newButton("Flashlight", "Tool Light", function()
Library:Notification({
	Text = "UniverseX FlashLight",
	Duration = 6
})
Players = game:GetService("Players")
LocalPlayer = Players.LocalPlayer
Backpack = LocalPlayer.Backpack
StarterGui = game:GetService("StarterGui")

local Flashlight = Instance.new("Tool", Backpack)
Flashlight.GripPos = Vector3.new(0.1, -0.4, 0)
Flashlight.Name = "Flashlight"
Flashlight.TextureId = "http://www.roblox.com/asset/?id=115955232"

local Handle = Instance.new("Part", Flashlight)
Handle.BrickColor = BrickColor.new("Bright yellow")
Handle.Color = Color3.fromRGB(245, 205, 48)
Handle.Name = "Handle"
Handle.Locked = true
Handle.Size = Vector3.new(0.5, 0.5, 2)
Handle.CanCollide = true

local LightPart = Instance.new("Part", Flashlight)
LightPart.BrickColor = BrickColor.new("Mid gray")
LightPart.Color = Color3.fromRGB(205, 205, 205)
LightPart.Transparency = 1
LightPart.Name = "LightPart"
LightPart.CanCollide = false
LightPart.Locked = true
LightPart.Size = Vector3.new(0.2, 0.2, 0.2)

local Motor = Instance.new("Motor", Flashlight)
Motor.Part0 = Handle
Motor.Part1 = LightPart

local Sound = Instance.new("Sound", Handle)
Sound.SoundId = "http://www.roblox.com/asset/?id=115959318"
Sound.Volume = 1

local Mesh = Instance.new("SpecialMesh", Handle)
Mesh.Name = "Mesh"
Mesh.MeshId = "http://www.roblox.com/asset/?id=115955313"
Mesh.MeshType = "FileMesh"
Mesh.Scale = Vector3.new(0.7, 0.7, 0.7)
Mesh.TextureId = "http://www.roblox.com/asset?id=115955343"

local SpotLight = Instance.new("SpotLight", LightPart)
SpotLight.Name = "SpotLight"
SpotLight.Angle = 70
SpotLight.Color = Color3.fromRGB(244, 255, 233)
SpotLight.Enabled = false
SpotLight.Face = "Front"
SpotLight.Range = 32

local SpotLight2 = Instance.new("SpotLight", LightPart)
SpotLight2.Name = "SpotLight2"
SpotLight2.Angle = 70
SpotLight2.Brightness = .75
SpotLight2.Color = Color3.fromRGB(244, 255, 233)
SpotLight2.Enabled = false
SpotLight2.Range = 60

sp = Flashlight

cooldown = .35

lightontexture = 115984370
lightofftexture = 115955343

local weld = sp:WaitForChild("Motor")
local lp = sp:WaitForChild("LightPart")
local handle = sp:WaitForChild("Handle")
local spotlight = lp:WaitForChild("SpotLight")
local spotlight2 = lp:WaitForChild("SpotLight2")
local mesh = handle:WaitForChild("Mesh")
local sound = handle:WaitForChild("Sound")
lastclick = 0

sp.Equipped:connect(
    function(mouse)
        equipped = true
        if mouse ~= nil then
            themouse = mouse
            mouse.Button1Down:connect(
                function()
                    if lastclick + cooldown < tick() then
                        spotlight.Enabled = not spotlight.Enabled
                        spotlight2.Enabled = spotlight.Enabled
                        mesh.TextureId =
                            "http://www.roblox.com/asset?id=" ..
                            tostring((spotlight.Enabled and lightontexture) or lightofftexture)
                        sound:Play()
                        lastclick = tick()
                    end
                end
            )
        end
        if weld ~= nil then
            weld.Parent = sp
        end
        while equipped and sp.Parent ~= nil do
            local head = sp.Parent:FindFirstChild("Head")
            if spotlight.Enabled and themouse and handle and weld and head then
                local vec = themouse.Hit.p - head.Position
                local pos = (handle.CFrame * CFrame.new(0, 0, -1)).p
                local cf = CFrame.new(pos, pos + vec)
                --lp.CFrame=cf
                weld.C0 = handle.CFrame:toObjectSpace(cf)
            end
            wait()
        end
    end
)

sp.Unequipped:connect(
    function()
        if weld ~= nil then
            weld.Parent = sp
        end
        equipped = false
    end
)


local Flashlight2 = Flashlight:clone()
Flashlight2.Parent = StarterGui
end) 
tab5.newButton("F3X", "Tool F3X script", function()
loadstring(game:GetObjects("rbxassetid://6695644299")[1].Source)()
end)
tab5.newButton("Btools", "Building Tool script client", function()
Library:Notification({
	Text = "UniverseX Btools",
	Duration = 6
})
wait(0.2)
loadstring(game:HttpGet("https://cdn.wearedevs.net/scripts/BTools.txt"))();
end)
tab5.newButton("Dex Explorer", "Dex Explorer script", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/LLCteams/xs/refs/heads/main/%D0%9E%D1%87%D0%B5%D0%BD%D1%8C%20%D1%86%D0%B5%D0%BD%D0%BD%D0%BE%20%D0%BF%D1%80%D0%BE%D0%BF%D0%B0%D1%82%D1%87%D0%B8%D0%BB%20%D0%B1%D0%BB%D0%BE%D0%B3%20%D0%BB%D0%BE%D0%BBbbb"))()
end) 
tab5.newButton("Players Notify", "Information script", function()
-- Join 
_G.JoinSoundId = "5606953326"
_G.LeaveSoundId = "5606947971"
_G.Volume = 0.6

local function SendNotification(title,text,icon,duration,...)
	game.StarterGui:SetCore("SendNotification", {
		Title = title;
		Text = text;
		Icon = icon;
		Duration = duration;
	})
end

game.Players.ChildAdded:Connect(function(player)
	if not pcall(function()
		SendNotification("UniverseX [🔍]", "[ " .. player.Name .. " ] Joined the server!", game:GetService("Players"):GetUserThumbnailAsync(player.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size420x420), 5)
		PlayJoinedSound(_G.JoinSoundId, _G.Volume)
	end) then
		print ("UX:🔍 Joined!")
	end
end)

game.Players.ChildRemoved:Connect(function(player)
	if not pcall(function()
		SendNotification("UniverseX [🔍]", "[ "..player.Name.." ] Leave the server!", game:GetService("Players"):GetUserThumbnailAsync(player.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size420x420), 5)
		PlayLeaveSound(_G.LeaveSoundId, _G.Volume)
	end) then
		print ("UX:🔍 Leaved!")
	end
end)

game:GetService("CoreGui").RobloxGui.NotificationFrame.ChildAdded:Connect(function()
	spawn(function()
		for i,v in pairs(game:GetService("CoreGui").RobloxGui.NotificationFrame:GetDescendants()) do
			if v:IsA("TextLabel") and v.Text == "Player Joined" then
				v.TextColor3 = Color3.new(0, 1, 0)
			end
		end
	end)
	spawn(function()
		for i,v in pairs(game:GetService("CoreGui").RobloxGui.NotificationFrame:GetDescendants ()) do
			if v:IsA("TextLabel") and v.Text == "Player Left" then
				v.TextColor3 = Color3.new(1, 0, 0)
			end
		end
	end)
end)

function PlayJoinedSound(Id, Volume)
	JoinSound = Instance.new("Sound", game:GetService("Lighting"))
	JoinSound.SoundId = "rbxassetid://" .. Id
	JoinSound.Volume = Volume
	JoinSound.Name = "JoinSound"
	JoinSound:Play()
	wait(3)
	JoinSound:Destroy()
end

function PlayLeaveSound(Id, Volume)
	LeaveSound = Instance.new("Sound", game:GetService("Lighting"))
	LeaveSound.SoundId = "rbxassetid://" .. Id
	LeaveSound.Volume = Volume
	LeaveSound.Name = "LeaveSound"
	LeaveSound:Play()
	wait(3)
	LeaveSound:Destroy()
end

SendNotification("Players-Info", "Actived!", nil, 7.5)
end) 
tab5.newButton("Man Fly", "Man Fly script", function()

Library:Notification({
	Text = "UniverseX Fly",
	Duration = 6
})
wait(0.2)
local Players = game:GetService("Players");
local UserInputService = game:GetService("UserInputService");
local RunService = game:GetService("RunService");
local TweenService = game:GetService("TweenService");
local ContextActionService = game:GetService("ContextActionService");
local player = Players.LocalPlayer;
local character = player.Character or player.CharacterAdded:Wait();
local humanoid = character:WaitForChild("Humanoid");
local rootPart = character:WaitForChild("HumanoidRootPart");
local flying = false;
local flySpeed = 50;
local TOGGLE_KEY = Enum.KeyCode.X;
local isSelectingKeybind = false;
local minSpeed = 0;
local maxSpeed = 500;
local workspace = game:GetService("Workspace");
local defaultGravity = workspace.Gravity;
local ScreenGui = Instance.new("ScreenGui");
local MainFrame = Instance.new("Frame");
local Shadow = Instance.new("ImageLabel");
local Container = Instance.new("Frame");
local Title = Instance.new("TextLabel");
local ToggleButton = Instance.new("TextButton");
local SpeedSlider = Instance.new("TextButton");
local KeybindButton = Instance.new("TextButton");
local StatusIndicator = Instance.new("Frame");
ScreenGui.Parent = player.PlayerGui;
ScreenGui.ResetOnSpawn = false;
MainFrame.Name = "MainFrame";
MainFrame.Size = UDim2.new(0, 200, 0, 190);
MainFrame.Position = UDim2.new(0.85, 0, 0.4, 0);
MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 30);
MainFrame.BorderSizePixel = 0;
MainFrame.Parent = ScreenGui;
local UIGradient = Instance.new("UIGradient");
UIGradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.fromRGB(30, 30, 35)),ColorSequenceKeypoint.new(1, Color3.fromRGB(25, 25, 30))});
UIGradient.Rotation = 45;
UIGradient.Parent = MainFrame;
Shadow.Name = "Shadow";
Shadow.AnchorPoint = Vector2.new(0.5, 0.5);
Shadow.BackgroundTransparency = 1;
Shadow.Position = UDim2.new(0.5, 0, 0.5, 0);
Shadow.Size = UDim2.new(1, 40, 1, 40);
Shadow.Image = "rbxassetid://5554236805";
Shadow.ImageColor3 = Color3.fromRGB(0, 0, 0);
Shadow.ImageTransparency = 0.4;
Shadow.Parent = MainFrame;
Container.Name = "Container";
Container.Size = UDim2.new(1, -20, 1, -20);
Container.Position = UDim2.new(0, 3, 0, 3);
Container.BackgroundTransparency = 1;
Container.Parent = MainFrame;
Title.Size = UDim2.new(0.7, 0, 0, 30);
Title.Position = UDim2.new(0, 8, 0, 0);
Title.BackgroundTransparency = 1;
Title.Font = Enum.Font.GothamBold;
Title.Text = "[UX] FLY";
Title.TextColor3 = Color3.fromRGB(255, 255, 255);
Title.TextSize = 14;
Title.TextXAlignment = Enum.TextXAlignment.Left;
Title.Parent = Container;
StatusIndicator.Size = UDim2.new(0, 8, 0, 8);
StatusIndicator.Position = UDim2.new(1, -15, 0, 11);
StatusIndicator.BackgroundColor3 = Color3.fromRGB(255, 75, 75);
StatusIndicator.Parent = Container;
local statusCorner = Instance.new("UICorner");
statusCorner.CornerRadius = UDim.new(1, 0);
statusCorner.Parent = StatusIndicator;
ToggleButton.Size = UDim2.new(1, 0, 0, 38);
ToggleButton.Position = UDim2.new(0, 0, 0, 40);
ToggleButton.BackgroundColor3 = Color3.fromRGB(255, 75, 75);
ToggleButton.Font = Enum.Font.GothamBold;
ToggleButton.Text = "FLY: OFF";
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255);
ToggleButton.TextSize = 14;
ToggleButton.AutoButtonColor = false;
ToggleButton.Parent = Container;
SpeedSlider.Size = UDim2.new(1, 0, 0, 38);
SpeedSlider.Position = UDim2.new(0, 0, 0, 88);
SpeedSlider.BackgroundColor3 = Color3.fromRGB(45, 45, 50);
SpeedSlider.Font = Enum.Font.GothamSemibold;
SpeedSlider.Text = "SPEED: " .. flySpeed;
SpeedSlider.TextColor3 = Color3.fromRGB(255, 255, 255);
SpeedSlider.TextSize = 14;
SpeedSlider.AutoButtonColor = false;
SpeedSlider.Parent = Container;
KeybindButton.Size = UDim2.new(1, 0, 0, 38);
KeybindButton.Position = UDim2.new(0, 0, 0, 136);
KeybindButton.BackgroundColor3 = Color3.fromRGB(45, 45, 50);
KeybindButton.Font = Enum.Font.GothamSemibold;
KeybindButton.Text = "KEYBIND: X";
KeybindButton.TextColor3 = Color3.fromRGB(255, 255, 255);
KeybindButton.TextSize = 14;
KeybindButton.AutoButtonColor = false;
KeybindButton.Parent = Container;
for _, button in pairs({MainFrame,ToggleButton,SpeedSlider,KeybindButton}) do
	local corner = Instance.new("UICorner");
	corner.CornerRadius = UDim.new(0, 8);
	corner.Parent = button;
	if (button ~= MainFrame) then
		local hover = false;
		button.MouseEnter:Connect(function()
			hover = true;
			TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3=button.BackgroundColor3:Lerp(Color3.fromRGB(255, 255, 255), 0.1)}):Play();
		end);
		button.MouseLeave:Connect(function()
			hover = false;
			TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3=((hover and button.BackgroundColor3:Lerp(Color3.fromRGB(255, 255, 255), 0.1)) or ((button == ToggleButton) and ((flying and Color3.fromRGB(75, 255, 75)) or Color3.fromRGB(255, 75, 75))) or Color3.fromRGB(45, 45, 50))}):Play();
		end);
	end
end
for _, button in pairs({ToggleButton,SpeedSlider,KeybindButton}) do
	button.MouseButton1Down:Connect(function()
		TweenService:Create(button, TweenInfo.new(0.1), {Size=UDim2.new(button.Size.X.Scale, button.Size.X.Offset, button.Size.Y.Scale, button.Size.Y.Offset - 2)}):Play();
	end);
	button.MouseButton1Up:Connect(function()
		TweenService:Create(button, TweenInfo.new(0.1), {Size=UDim2.new(button.Size.X.Scale, button.Size.X.Offset, button.Size.Y.Scale, button.Size.Y.Offset + 2)}):Play();
	end);
end
local ctrl = {f=0,b=0,l=0,r=0};
local lastctrl = {f=0,b=0,l=0,r=0};
local keyConnections = {};
local currentAnim = nil;
local function PlayAnim(id, time, speed)
	pcall(function()
		if ((819 >= 22) and currentAnim) then
			currentAnim:Stop(0.1);
		end
		player.Character.Animate.Disabled = true;
		local hum = player.Character.Humanoid;
		local animtrack = hum:GetPlayingAnimationTracks();
		for i, track in pairs(animtrack) do
			track:Stop();
		end
		local Anim = Instance.new("Animation");
		Anim.AnimationId = "rbxassetid://" .. id;
		local loadanim = hum:LoadAnimation(Anim);
		loadanim:Play();
		loadanim.TimePosition = time;
		loadanim:AdjustSpeed(speed);
		currentAnim = loadanim;
		loadanim.Stopped:Connect(function()
			player.Character.Animate.Disabled = false;
			for i, track in pairs(animtrack) do
				track:Stop();
			end
		end);
	end);
end
local function StopAnim()
	player.Character.Animate.Disabled = false;
	local animtrack = player.Character.Humanoid:GetPlayingAnimationTracks();
	for i, track in pairs(animtrack) do
		track:Stop();
	end
end
local lastDirection = "none";
local turnTilt = 0;
local maxTilt = 45;
local function updateFly()
	if ((3162 == 3162) and not flying) then
		return;
	end
	local camera = workspace.CurrentCamera;
	local speed = flySpeed;
	if (not rootPart:FindFirstChild("FlyGyro") or (2369 > 4429)) then
		local bg = Instance.new("BodyGyro");
		bg.Name = "FlyGyro";
		bg.P = 90000;
		bg.maxTorque = Vector3.new(8999999488, 8999999488, 8999999488);
		bg.CFrame = rootPart.CFrame;
		bg.Parent = rootPart;
		local bv = Instance.new("BodyVelocity");
		bv.Name = "FlyVelocity";
		bv.Velocity = Vector3.new(0, 0.1, 0);
		bv.MaxForce = Vector3.new(8999999488, 8999999488, 8999999488);
		bv.Parent = rootPart;
	end
	local bg = rootPart.FlyGyro;
	local bv = rootPart.FlyVelocity;
	if (((ctrl.f + ctrl.b + ctrl.l + ctrl.r) > 0) or (4593 <= 2672)) then
		bv.Velocity = ((camera.CoordinateFrame.lookVector * (ctrl.f + ctrl.b)) + ((camera.CoordinateFrame * CFrame.new(ctrl.l + ctrl.r, (ctrl.f + ctrl.b) * 0.2, 0).p) - camera.CoordinateFrame.p)) * speed;
		lastctrl = {f=ctrl.f,b=ctrl.b,l=ctrl.l,r=ctrl.r};
	elseif ((4095 >= 3183) and ((((ctrl.f + ctrl.b + ctrl.l + ctrl.r) == 0) and (speed ~= 0)) or (1168 > 3156))) then
		bv.Velocity = ((camera.CoordinateFrame.lookVector * (lastctrl.f + lastctrl.b)) + ((camera.CoordinateFrame * CFrame.new(lastctrl.l + lastctrl.r, (lastctrl.f + lastctrl.b) * 0.2, 0).p) - camera.CoordinateFrame.p)) * speed;
	else
		bv.Velocity = Vector3.new(0, 0.1, 0);
	end
	bg.CFrame = camera.CoordinateFrame * CFrame.Angles(-math.rad(ctrl.f * 90), 0, 0);
end
local function enhanceGUI()
	local UIGradient = Instance.new("UIGradient");
	UIGradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.fromRGB(45, 45, 50)),ColorSequenceKeypoint.new(1, Color3.fromRGB(35, 35, 40))});
	UIGradient.Rotation = 45;
	UIGradient.Parent = MainFrame;
	for _, button in pairs({ToggleButton,SpeedSlider,KeybindButton}) do
		if ((button == ToggleButton) or (3711 < 1008)) then
			button.BackgroundColor3 = Color3.fromRGB(255, 75, 75);
		else
			button.BackgroundColor3 = Color3.fromRGB(45, 45, 50);
		end
	end
end
local isMobile = UserInputService.TouchEnabled;
local TouchGui = nil;
local TouchControls = nil;
local TouchActive = false;
if (isMobile or (572 > 4486) or (1049 <= 906)) then
	TouchGui = Instance.new("ScreenGui");
	TouchGui.Name = "FlyTouchControls";
	TouchGui.ResetOnSpawn = false;
	TouchGui.Parent = player.PlayerGui;
	TouchControls = Instance.new("ImageButton");
	TouchControls.Size = UDim2.new(0, 150, 0, 150);
	TouchControls.Position = UDim2.new(0.1, 0, 0.5, 0);
	TouchControls.AnchorPoint = Vector2.new(0.5, 0.5);
	TouchControls.BackgroundTransparency = 0.5;
	TouchControls.BackgroundColor3 = Color3.fromRGB(0, 0, 0);
	TouchControls.Image = "rbxassetid://8997446837";
	TouchControls.ImageTransparency = 0.5;
	TouchControls.Visible = false;
	TouchControls.Parent = TouchGui;
	local corner = Instance.new("UICorner");
	corner.CornerRadius = UDim.new(1, 0);
	corner.Parent = TouchControls;
end
local PlayerModule = require(player.PlayerScripts:WaitForChild("PlayerModule"));
local Controls = PlayerModule:GetControls();
local function toggleFlight()
	flying = not flying;
	ToggleButton.Text = (flying and "FLY: ON") or "FLY: OFF";
	local targetColor = (flying and Color3.fromRGB(75, 255, 75)) or Color3.fromRGB(255, 75, 75);
	TweenService:Create(ToggleButton, TweenInfo.new(0.3), {BackgroundColor3=targetColor}):Play();
	if flying then
		workspace.Gravity = 0;
		humanoid.PlatformStand = true;
		PlayAnim(10714347256, 4, 0);
		RunService:BindToRenderStep("FlyControls", Enum.RenderPriority.Input.Value, function()
			local moveVector = Controls:GetMoveVector();
			if ((4513 > 2726) and (1404 == 1404) and (moveVector.Magnitude > 0.1)) then
				if ((moveVector.Z < 0) or (3748 < 2212) or (1481 >= 2658)) then
					if ((moveVector.X < -0.1) or (1180 == 2180)) then
						if (lastDirection ~= "left") then
							lastDirection = "left";
							PlayAnim(10714177846, 4.65, 0);
						end
					elseif ((moveVector.X > 0.1) or (3220 == 1364)) then
						if ((lastDirection ~= "right") or (1054 > 3392)) then
							lastDirection = "right";
							PlayAnim(10714177846, 4.65, 0);
						end
					elseif ((lastDirection ~= "forward") or (676 >= 1642)) then
						lastDirection = "forward";
						PlayAnim(10714177846, 4.65, 0);
					end
				elseif ((4136 > 2397) and (4090 < 4653) and (moveVector.Z > 0)) then
					if (lastDirection ~= "backward") then
						lastDirection = "backward";
						PlayAnim(10147823318, 4.11, 0);
					end
				end
			elseif (lastDirection ~= "idle") then
				lastDirection = "idle";
				PlayAnim(10714347256, 4, 0);
			end
		end);
		local bg = Instance.new("BodyGyro");
		bg.Name = "FlyGyro";
		bg.P = 90000;
		bg.maxTorque = Vector3.new(8999999488, 8999999488, 8999999488);
		bg.CFrame = rootPart.CFrame;
		bg.Parent = rootPart;
		local bv = Instance.new("BodyVelocity");
		bv.Name = "FlyVelocity";
		bv.Velocity = Vector3.new(0, 0.1, 0);
		bv.MaxForce = Vector3.new(8999999488, 8999999488, 8999999488);
		bv.Parent = rootPart;
		RunService:BindToRenderStep("Fly", Enum.RenderPriority.Camera.Value, function()
			local camera = workspace.CurrentCamera;
			local moveVector = Controls:GetMoveVector();
			if (moveVector.Magnitude > 0) then
				bv.Velocity = ((camera.CFrame.LookVector * -moveVector.Z) + (camera.CFrame.RightVector * moveVector.X)) * flySpeed;
			else
				bv.Velocity = Vector3.new(0, 0.1, 0);
			end
			local forwardTilt = ((moveVector.Z < 0) and -90) or (moveVector.Z * 50);
			local sideTilt = -moveVector.X * 45;
			bg.CFrame = camera.CFrame * CFrame.Angles(math.rad(forwardTilt), 0, math.rad(sideTilt));
		end);
	else
		workspace.Gravity = defaultGravity;
		humanoid.PlatformStand = false;
		lastDirection = "none";
		StopAnim();
		if rootPart:FindFirstChild("FlyGyro") then
			rootPart.FlyGyro:Destroy();
		end
		if rootPart:FindFirstChild("FlyVelocity") then
			rootPart.FlyVelocity:Destroy();
		end
		RunService:UnbindFromRenderStep("FlyControls");
		RunService:UnbindFromRenderStep("Fly");
	end
end
ToggleButton.MouseButton1Click:Connect(toggleFlight);
SpeedSlider.MouseButton1Down:Connect(function()
	local mouse = game:GetService("Players").LocalPlayer:GetMouse();
	local moveConnection;
	local releaseConnection;
	local function updateSpeed(mouseX)
		local relativeX = math.clamp((mouseX - SpeedSlider.AbsolutePosition.X) / SpeedSlider.AbsoluteSize.X, 0, 1);
		flySpeed = math.floor(minSpeed + ((maxSpeed - minSpeed) * relativeX));
		if ((flySpeed < 10) or (4334 == 4245)) then
			flySpeed = 10;
		end
		SpeedSlider.Text = "SPEED: " .. flySpeed;
		local speedColor = Color3.fromRGB(math.floor(255 - (relativeX * 180)), math.floor(75 + (relativeX * 180)), 75);
		TweenService:Create(SpeedSlider, TweenInfo.new(0.1), {BackgroundColor3=speedColor}):Play();
	end
	updateSpeed(mouse.X);
	moveConnection = mouse.Move:Connect(function()
		updateSpeed(mouse.X);
	end);
	releaseConnection = UserInputService.InputEnded:Connect(function(input)
		if ((input.UserInputType == Enum.UserInputType.MouseButton1) or (2652 < 196)) then
			if ((4135 < 4817) and moveConnection) then
				moveConnection:Disconnect();
			end
			if releaseConnection then
				releaseConnection:Disconnect();
			end
		end
	end);
end);
local function handleKeybind(input)
	if ((272 == 272) and not isSelectingKeybind and (input.KeyCode == TOGGLE_KEY)) then
		toggleFlight();
	end
end
KeybindButton.MouseButton1Click:Connect(function()
	isSelectingKeybind = true;
	KeybindButton.Text = "PRESS ANY KEY...";
	KeybindButton.BackgroundColor3 = Color3.fromRGB(75, 255, 75);
end);
UserInputService.InputBegan:Connect(function(input, gameProcessed)
	if (((100 <= 3123) and gameProcessed) or (4276 <= 3031)) then
		return;
	end
	if (isSelectingKeybind or (1369 > 4987) or (4782 <= 1199)) then
		if ((input.UserInputType == Enum.UserInputType.Keyboard) or (863 >= 4584) or (4864 < 1902)) then
			local blacklistedKeys = {Enum.KeyCode.Unknown,Enum.KeyCode.LeftShift,Enum.KeyCode.RightShift,Enum.KeyCode.LeftControl,Enum.KeyCode.RightControl,Enum.KeyCode.LeftAlt,Enum.KeyCode.RightAlt,Enum.KeyCode.LeftSuper,Enum.KeyCode.RightSuper};
			for _, blockedKey in ipairs(blacklistedKeys) do
				if ((input.KeyCode == blockedKey) or (724 >= 1668)) then
					return;
				end
			end
			isSelectingKeybind = false;
			TOGGLE_KEY = input.KeyCode;
			KeybindButton.Text = "KEYBIND: " .. input.KeyCode.Name;
			KeybindButton.BackgroundColor3 = Color3.fromRGB(45, 45, 50);
		end
	else
		handleKeybind(input);
	end
end);
UserInputService.InputBegan:Connect(function(input)
	if ((4839 >= 3700) and (428 < 1804) and isSelectingKeybind and (input.UserInputType == Enum.UserInputType.MouseButton1)) then
		local mousePosition = UserInputService:GetMouseLocation();
		local buttonPosition = KeybindButton.AbsolutePosition;
		local buttonSize = KeybindButton.AbsoluteSize;
		if ((mousePosition.X < buttonPosition.X) or (mousePosition.X > (buttonPosition.X + buttonSize.X)) or (mousePosition.Y < buttonPosition.Y) or (mousePosition.Y > (buttonPosition.Y + buttonSize.Y))) then
			isSelectingKeybind = false;
			KeybindButton.Text = "KEYBIND: " .. TOGGLE_KEY.Name;
			KeybindButton.BackgroundColor3 = Color3.fromRGB(45, 45, 50);
		end
	end
end);
player.CharacterAdded:Connect(function(newCharacter)
	character = newCharacter;
	humanoid = character:WaitForChild("Humanoid");
	rootPart = character:WaitForChild("HumanoidRootPart");
	if flying then
		workspace.Gravity = defaultGravity;
		toggleFlight();
	end
end);
local function enableDragging(frame)
	local dragging = false;
	local dragTouch = nil;
	local dragStart = nil;
	local startPos = nil;
	frame.InputBegan:Connect(function(input)
		if (((input.UserInputType == Enum.UserInputType.Touch) and not dragging) or (3325 > 4613) or (1075 > 1918)) then
			dragging = true;
			dragTouch = input.Touch.TouchId;
			dragStart = input.Position;
			startPos = frame.Position;
		end
	end);
	UserInputService.InputChanged:Connect(function(input)
		if ((396 <= 3804) and (input.UserInputType == Enum.UserInputType.Touch) and dragging and (input.Touch.TouchId == dragTouch)) then
			local delta = input.Position - dragStart;
			frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y);
		end
	end);
	UserInputService.TouchEnded:Connect(function(input)
		if ((input.Touch.TouchId == dragTouch) or (4169 == 2187)) then
			dragging = false;
			dragTouch = nil;
		end
	end);
end
local function updateSpeedSlider()
	local sliding = false;
	local touchId = nil;
	local function updateSpeed(inputPosition)
		local mainFramePos = MainFrame.AbsolutePosition;
		local mainFrameSize = MainFrame.AbsoluteSize;
		if ((inputPosition.X < mainFramePos.X) or (inputPosition.X > (mainFramePos.X + mainFrameSize.X)) or (inputPosition.Y < mainFramePos.Y) or (inputPosition.Y > (mainFramePos.Y + mainFrameSize.Y)) or (4950 <= 4553)) then
			sliding = false;
			touchId = nil;
			return;
		end
		local relativeX = math.clamp((inputPosition.X - SpeedSlider.AbsolutePosition.X) / SpeedSlider.AbsoluteSize.X, 0, 1);
		flySpeed = math.floor(minSpeed + ((maxSpeed - minSpeed) * relativeX));
		if (flySpeed < 10) then
			flySpeed = 10;
		end
		SpeedSlider.Text = "SPEED: " .. flySpeed;
		local speedColor = Color3.fromRGB(math.floor(255 - (relativeX * 180)), math.floor(75 + (relativeX * 180)), 75);
		SpeedSlider.BackgroundColor3 = speedColor;
	end
	SpeedSlider.InputBegan:Connect(function(input)
		if ((2665 <= 3933) and (input.UserInputType == Enum.UserInputType.Touch)) then
			sliding = true;
			touchId = input.Touch.TouchId;
			updateSpeed(input.Position);
		end
	end);
	UserInputService.InputChanged:Connect(function(input)
		if ((1406 == 1406) and (3273 == 3273) and sliding and (input.UserInputType == Enum.UserInputType.Touch) and (input.Touch.TouchId == touchId)) then
			updateSpeed(input.Position);
		end
	end);
	UserInputService.TouchEnded:Connect(function(input)
		if (input.Touch.TouchId == touchId) then
			sliding = false;
			touchId = nil;
		end
	end);
	game:GetService("RunService").RenderStepped:Connect(function()
		if ((1531 < 4271) and sliding) then
			local touches = UserInputService:GetTouches();
			local touchFound = false;
			for _, touch in ipairs(touches) do
				if (touch.TouchId == touchId) then
					touchFound = true;
					updateSpeed(touch.Position);
					break;
				end
			end
			if ((635 == 635) and not touchFound) then
				sliding = false;
				touchId = nil;
			end
		end
	end);
end
updateSpeedSlider();
enableDragging(MainFrame);
enhanceGUI();
for _, button in pairs({ToggleButton,SpeedSlider,KeybindButton}) do
	button.MouseButton1Down:Connect(function()
		TweenService:Create(button, TweenInfo.new(0.1), {Size=UDim2.new(button.Size.X.Scale, button.Size.X.Offset, button.Size.Y.Scale, button.Size.Y.Offset - 2)}):Play();
	end);
	button.MouseButton1Up:Connect(function()
		TweenService:Create(button, TweenInfo.new(0.1), {Size=UDim2.new(button.Size.X.Scale, button.Size.X.Offset, button.Size.Y.Scale, button.Size.Y.Offset + 2)}):Play();
	end);
end
local function updateGUI()
	if ((3373 <= 3556) and SpeedSlider) then
		SpeedSlider:Destroy();
	end
	local SpeedControl = Instance.new("Frame");
	SpeedControl.Name = "SpeedControl";
	SpeedControl.Size = UDim2.new(1, 0, 0, 38);
	SpeedControl.Position = UDim2.new(0, 0, 0, 88);
	SpeedControl.BackgroundTransparency = 1;
	SpeedControl.Parent = Container;
	local MinusButton = Instance.new("TextButton");
	MinusButton.Size = UDim2.new(0.2, 0, 1, 0);
	MinusButton.Position = UDim2.new(0, 0, 0, 0);
	MinusButton.BackgroundColor3 = Color3.fromRGB(45, 45, 50);
	MinusButton.Text = "-";
	MinusButton.TextColor3 = Color3.fromRGB(255, 255, 255);
	MinusButton.TextSize = 24;
	MinusButton.Font = Enum.Font.GothamBold;
	MinusButton.Parent = SpeedControl;
	local SpeedDisplay = Instance.new("TextLabel");
	SpeedDisplay.Size = UDim2.new(0.6, 0, 1, 0);
	SpeedDisplay.Position = UDim2.new(0.2, 0, 0, 0);
	SpeedDisplay.BackgroundColor3 = Color3.fromRGB(45, 45, 50);
	SpeedDisplay.Text = "SPEED: " .. flySpeed;
	SpeedDisplay.TextColor3 = Color3.fromRGB(255, 255, 255);
	SpeedDisplay.TextSize = 14;
	SpeedDisplay.Font = Enum.Font.GothamSemibold;
	SpeedDisplay.Parent = SpeedControl;
	local PlusButton = Instance.new("TextButton");
	PlusButton.Size = UDim2.new(0.2, 0, 1, 0);
	PlusButton.Position = UDim2.new(0.8, 0, 0, 0);
	PlusButton.BackgroundColor3 = Color3.fromRGB(45, 45, 50);
	PlusButton.Text = "+";
	PlusButton.TextColor3 = Color3.fromRGB(255, 255, 255);
	PlusButton.TextSize = 24;
	PlusButton.Font = Enum.Font.GothamBold;
	PlusButton.Parent = SpeedControl;
	local CloseButton = Instance.new("TextButton");
	CloseButton.Size = UDim2.new(0, 25, 0, 25);
	CloseButton.Position = UDim2.new(1, -8, 0, 3);
	CloseButton.AnchorPoint = Vector2.new(1, 0);
	CloseButton.BackgroundColor3 = Color3.fromRGB(255, 75, 75);
	CloseButton.Text = "×";
	CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255);
	CloseButton.TextSize = 20;
	CloseButton.Font = Enum.Font.GothamBold;
	CloseButton.Parent = Container;
	local MinimizeButton = Instance.new("TextButton");
	MinimizeButton.Size = UDim2.new(0, 25, 0, 25);
	MinimizeButton.Position = UDim2.new(1, -38, 0, 3);
	MinimizeButton.AnchorPoint = Vector2.new(1, 0);
	MinimizeButton.BackgroundColor3 = Color3.fromRGB(45, 45, 50);
	MinimizeButton.Text = "-";
	MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255);
	MinimizeButton.TextSize = 20;
	MinimizeButton.Font = Enum.Font.GothamBold;
	MinimizeButton.Parent = Container;
	for _, button in pairs({MinusButton,SpeedDisplay,PlusButton,CloseButton,MinimizeButton}) do
		local corner = Instance.new("UICorner");
		corner.CornerRadius = UDim.new(0, 8);
		corner.Parent = button;
	end
	for _, button in pairs({MinusButton,PlusButton,CloseButton,MinimizeButton}) do
		button.MouseEnter:Connect(function()
			TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3=button.BackgroundColor3:Lerp(Color3.fromRGB(255, 255, 255), 0.1)}):Play();
		end);
		button.MouseLeave:Connect(function()
			TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3=(((button == CloseButton) and Color3.fromRGB(255, 75, 75)) or Color3.fromRGB(45, 45, 50))}):Play();
		end);
	end
	local function updateSpeedDisplay()
		SpeedDisplay.Text = "SPEED: " .. flySpeed;
		local relativeSpeed = (flySpeed - minSpeed) / (maxSpeed - minSpeed);
		local speedColor = Color3.fromRGB(math.floor(255 - (relativeSpeed * 180)), math.floor(75 + (relativeSpeed * 180)), 75);
		TweenService:Create(SpeedDisplay, TweenInfo.new(0.1), {BackgroundColor3=speedColor}):Play();
	end
	MinusButton.MouseButton1Click:Connect(function()
		flySpeed = math.max(10, flySpeed - 10);
		updateSpeedDisplay();
	end);
	PlusButton.MouseButton1Click:Connect(function()
		flySpeed = math.min(maxSpeed, flySpeed + 10);
		updateSpeedDisplay();
	end);
	CloseButton.MouseButton1Click:Connect(function()
		for _, child in pairs(Container:GetChildren()) do
			TweenService:Create(child, TweenInfo.new(0.2), {BackgroundTransparency=1}):Play();
			if (((3824 > 409) and (child:IsA("TextButton") or child:IsA("TextLabel"))) or (3291 < 3280)) then
				TweenService:Create(child, TweenInfo.new(0.2), {TextTransparency=1}):Play();
			end
		end
		wait(0.2);
		TweenService:Create(MainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Size=UDim2.new(0, MainFrame.Size.X.Offset, 0, 0),Position=UDim2.new(MainFrame.Position.X.Scale, MainFrame.Position.X.Offset, MainFrame.Position.Y.Scale, MainFrame.Position.Y.Offset + (MainFrame.Size.Y.Offset / 2))}):Play();
		if ((4386 >= 873) and (2087 == 2087) and flying) then
			toggleFlight();
		end
		wait(0.3);
		ScreenGui:Destroy();
	end);
	local minimized = false;
	MinimizeButton.MouseButton1Click:Connect(function()
		if minimized then
			TweenService:Create(MainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Size=MainFrame:GetAttribute("OriginalSize")}):Play();
			wait(0.1);
			for _, child in pairs(Container:GetChildren()) do
				if ((921 <= 1102) and (((child ~= Title) and (child ~= CloseButton) and (child ~= MinimizeButton)) or (3404 > 4503))) then
					child.Visible = true;
					if ((4706 >= 963) and ((child.Name == "SpeedControl") or (3506 <= 1309))) then
						child.BackgroundTransparency = 1;
						for _, speedChild in pairs(child:GetChildren()) do
							TweenService:Create(speedChild, TweenInfo.new(0.2), {BackgroundTransparency=0,TextTransparency=0}):Play();
						end
					else
						TweenService:Create(child, TweenInfo.new(0.2), {BackgroundTransparency=0}):Play();
						if (child:IsA("TextButton") or child:IsA("TextLabel")) then
							TweenService:Create(child, TweenInfo.new(0.2), {TextTransparency=0}):Play();
						end
					end
				end
			end
			MinimizeButton.Text = "-";
		else
			if (((2955 == 2955) and not MainFrame:GetAttribute("OriginalSize")) or (960 <= 876)) then
				MainFrame:SetAttribute("OriginalSize", MainFrame.Size);
			end
			for _, child in pairs(Container:GetChildren()) do
				if ((child ~= Title) and (child ~= CloseButton) and (child ~= MinimizeButton)) then
					TweenService:Create(child, TweenInfo.new(0.2), {BackgroundTransparency=1}):Play();
					if (child:IsA("TextButton") or child:IsA("TextLabel") or (2066 == 932)) then
						TweenService:Create(child, TweenInfo.new(0.2), {TextTransparency=1}):Play();
					end
					delay(0.2, function()
						child.Visible = false;
					end);
				end
			end
			wait(0.2);
			TweenService:Create(MainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Size=UDim2.new(0, 200, 0, 40)}):Play();
			MinimizeButton.Text = "+";
		end
		minimized = not minimized;
	end);
	local function enableDragging(frame)
		local dragging = false;
		local dragInput;
		local dragStart;
		local startPos;
		frame.InputBegan:Connect(function(input)
			if ((4825 < 4843) and ((input.UserInputType == Enum.UserInputType.Touch) or (input.UserInputType == Enum.UserInputType.MouseButton1))) then
				dragging = true;
				dragStart = input.Position;
				startPos = frame.Position;
				input.Changed:Connect(function()
					if ((input.UserInputState == Enum.UserInputState.End) or (2903 == 1495) or (3877 >= 4537)) then
						dragging = false;
					end
				end);
			end
		end);
		frame.InputChanged:Connect(function(input)
			if ((input.UserInputType == Enum.UserInputType.Touch) or (input.UserInputType == Enum.UserInputType.MouseMovement) or (4315 < 1726)) then
				dragInput = input;
			end
		end);
		UserInputService.InputChanged:Connect(function(input)
			if ((4546 >= 2275) and (input == dragInput) and dragging) then
				local delta = input.Position - dragStart;
				frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y);
			end
		end);
	end
	enableDragging(MainFrame);
end
updateGUI();
end)
tab5.newButton("Shiftlock", "Shiftlick script", function()
Library:Notification({
	Text = "UniverseX Shiftlock",
	Duration = 6
})
wait(0.2)
local ShiftlockStarterGui = Instance.new("ScreenGui")
local ImageButton = Instance.new("ImageButton")


ShiftlockStarterGui.Name = "Shiftlock"
ShiftlockStarterGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ShiftlockStarterGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

ImageButton.Parent = ShiftlockStarterGui
ImageButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageButton.BackgroundTransparency = 1.000
ImageButton.Position = UDim2.new(0.921914339, 0, 0.552375436, 0)
ImageButton.Size = UDim2.new(0.0636147112, 0, 0.0661305636, 0)
ImageButton.SizeConstraint = Enum.SizeConstraint.RelativeXX
ImageButton.Image = "http://www.roblox.com/asset/?id=182223762"



local function TLQOYN_fake_script() 
	local script = Instance.new('LocalScript', ImageButton)

	local MobileCameraFramework = {}
	local players = game:GetService("Players")
	local runservice = game:GetService("RunService")
	local CAS = game:GetService("ContextActionService")
	local player = players.LocalPlayer
	local character = player.Character or player.CharacterAdded:Wait()
	local root = character:WaitForChild("HumanoidRootPart")
	local humanoid = character.Humanoid
	local camera = workspace.CurrentCamera
	local button = script.Parent
	
	
	uis = game:GetService("UserInputService")
	ismobile = uis.TouchEnabled
	button.Visible = ismobile
	
	local states = {
		OFF = "rbxasset://textures/ui/mouseLock_off@2x.png",
		ON = "rbxasset://textures/ui/mouseLock_on@2x.png"
	}
	local MAX_LENGTH = 900000
	local active = false
	local ENABLED_OFFSET = CFrame.new(1.7, 0, 0)
	local DISABLED_OFFSET = CFrame.new(-1.7, 0, 0)
	local function UpdateImage(STATE)
		button.Image = states[STATE]
	end
	local function UpdateAutoRotate(BOOL)
		humanoid.AutoRotate = BOOL
	end
	local function GetUpdatedCameraCFrame(ROOT, CAMERA)
		return CFrame.new(root.Position, Vector3.new(CAMERA.CFrame.LookVector.X * MAX_LENGTH, root.Position.Y, CAMERA.CFrame.LookVector.Z * MAX_LENGTH))
	end
	local function EnableShiftlock()
		UpdateAutoRotate(false)
		UpdateImage("ON")
		root.CFrame = GetUpdatedCameraCFrame(root, camera)
		camera.CFrame = camera.CFrame * ENABLED_OFFSET
	end
	local function DisableShiftlock()
		UpdateAutoRotate(true)
		UpdateImage("OFF")
		camera.CFrame = camera.CFrame * DISABLED_OFFSET
		pcall(function()
			active:Disconnect()
			active = nil
		end)
	end
	UpdateImage("OFF")
	active = false
	function ShiftLock()
		if not active then
			active = runservice.RenderStepped:Connect(function()
				EnableShiftlock()
			end)
		else
			DisableShiftlock()
		end
	end
	local ShiftLockButton = CAS:BindAction("ShiftLOCK", ShiftLock, false, "On")
	CAS:SetPosition("ShiftLOCK", UDim2.new(0.8, 0, 0.8, 0))
	button.MouseButton1Click:Connect(function()
		if not active then
			active = runservice.RenderStepped:Connect(function()
				EnableShiftlock()
			end)
		else
			DisableShiftlock()
		end
	end)
	return MobileCameraFramework
	
end
coroutine.wrap(TLQOYN_fake_script)()
local function OMQRQRC_fake_script() 
	local script = Instance.new('LocalScript', ShiftlockStarterGui)

	local Players = game:GetService("Players")
	local UserInputService = game:GetService("UserInputService")
	local Settings = UserSettings()
	local GameSettings = Settings.GameSettings
	local ShiftLockController = {}
	while not Players.LocalPlayer do
		wait()
	end
	local LocalPlayer = Players.LocalPlayer
	local Mouse = LocalPlayer:GetMouse()
	local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
	local ScreenGui, ShiftLockIcon, InputCn
	local IsShiftLockMode = true
	local IsShiftLocked = true
	local IsActionBound = false
	local IsInFirstPerson = false
	ShiftLockController.OnShiftLockToggled = Instance.new("BindableEvent")
	local function isShiftLockMode()
		return LocalPlayer.DevEnableMouseLock and GameSettings.ControlMode == Enum.ControlMode.MouseLockSwitch and LocalPlayer.DevComputerMovementMode ~= Enum.DevComputerMovementMode.ClickToMove and GameSettings.ComputerMovementMode ~= Enum.ComputerMovementMode.ClickToMove and LocalPlayer.DevComputerMovementMode ~= Enum.DevComputerMovementMode.Scriptable
	end
	if not UserInputService.TouchEnabled then
		IsShiftLockMode = isShiftLockMode()
	end
	local function onShiftLockToggled()
		IsShiftLocked = not IsShiftLocked
		ShiftLockController.OnShiftLockToggled:Fire()
	end
	local initialize = function()
		print("enabled")
	end
	function ShiftLockController:IsShiftLocked()
		return IsShiftLockMode and IsShiftLocked
	end
	function ShiftLockController:SetIsInFirstPerson(isInFirstPerson)
		IsInFirstPerson = isInFirstPerson
	end
	local function mouseLockSwitchFunc(actionName, inputState, inputObject)
		if IsShiftLockMode then
			onShiftLockToggled()
		end
	end
	local function disableShiftLock()
		if ScreenGui then
			ScreenGui.Parent = nil
		end
		IsShiftLockMode = false
		Mouse.Icon = ""
		if InputCn then
			InputCn:disconnect()
			InputCn = nil
		end
		IsActionBound = false
		ShiftLockController.OnShiftLockToggled:Fire()
	end
	local onShiftInputBegan = function(inputObject, isProcessed)
		if isProcessed then
			return
		end
		if inputObject.UserInputType ~= Enum.UserInputType.Keyboard or inputObject.KeyCode == Enum.KeyCode.LeftShift or inputObject.KeyCode == Enum.KeyCode.RightShift then
		end
	end
	local function enableShiftLock()
		IsShiftLockMode = isShiftLockMode()
		if IsShiftLockMode then
			if ScreenGui then
				ScreenGui.Parent = PlayerGui
			end
			if IsShiftLocked then
				ShiftLockController.OnShiftLockToggled:Fire()
			end
			if not IsActionBound then
				InputCn = UserInputService.InputBegan:connect(onShiftInputBegan)
				IsActionBound = true
			end
		end
	end
	GameSettings.Changed:connect(function(property)
		if property == "ControlMode" then
			if GameSettings.ControlMode == Enum.ControlMode.MouseLockSwitch then
				enableShiftLock()
			else
				disableShiftLock()
			end
		elseif property == "ComputerMovementMode" then
			if GameSettings.ComputerMovementMode == Enum.ComputerMovementMode.ClickToMove then
				disableShiftLock()
			else
				enableShiftLock()
			end
		end
	end)
	LocalPlayer.Changed:connect(function(property)
		if property == "DevEnableMouseLock" then
			if LocalPlayer.DevEnableMouseLock then
				enableShiftLock()
			else
				disableShiftLock()
			end
		elseif property == "DevComputerMovementMode" then
			if LocalPlayer.DevComputerMovementMode == Enum.DevComputerMovementMode.ClickToMove or LocalPlayer.DevComputerMovementMode == Enum.DevComputerMovementMode.Scriptable then
				disableShiftLock()
			else
				enableShiftLock()
			end
		end
	end)
	LocalPlayer.CharacterAdded:connect(function(character)
		if not UserInputService.TouchEnabled then
			initialize()
		end
	end)
	if not UserInputService.TouchEnabled then
		initialize()
		if isShiftLockMode() then
			InputCn = UserInputService.InputBegan:connect(onShiftInputBegan)
			IsActionBound = true
		end
	end
	enableShiftLock()
	return ShiftLockController
	
end
coroutine.wrap(OMQRQRC_fake_script)()
end)
tab5.newButton("Shiftlock", "Shiftlock script", function()
Library:Notification({
	Text = "UniverseX Shiftlock",
	Duration = 6
})
wait(0.2)


-- Services
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local camera = workspace.CurrentCamera
local shiftLockEnabled = false

-- Function to create the shift lock button
local function createShiftLockButton()
    -- Create the ScreenGui for the shift lock button
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "ShiftLockGui"
    screenGui.Parent = player:WaitForChild("PlayerGui")

    -- Create the button for shift lock
    local shiftLockButton = Instance.new("TextButton")
    shiftLockButton.Size = UDim2.new(0, 80, 0, 80)
    shiftLockButton.Position = UDim2.new(0.9, 0, 0.9, 0)
    shiftLockButton.BackgroundColor3 = Color3.fromRGB(34, 34, 34) -- Dark background color
    shiftLockButton.AutoButtonColor = false
    shiftLockButton.Text = ""
    shiftLockButton.BorderSizePixel = 0
    shiftLockButton.BackgroundTransparency = 0.5 -- Make the button partially transparent
    shiftLockButton.Parent = screenGui

    -- Create a rounded square shape for the button
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0.2, 0) -- Rounded square corners
    corner.Parent = shiftLockButton

    -- Create a TextLabel for the "S"
    local shiftLockText = Instance.new("TextLabel")
    shiftLockText.Size = UDim2.new(1, 0, 1, 0)  -- Full size of the button
    shiftLockText.Position = UDim2.new(0, 0, 0, 0)
    shiftLockText.Text = "S" -- Shift lock symbol
    shiftLockText.TextColor3 = Color3.fromRGB(255, 255, 255) -- White text color
    shiftLockText.TextScaled = true -- Scale text to fit the button
    shiftLockText.TextSize = 30 -- Set text size to make it smaller
    shiftLockText.BackgroundTransparency = 1 -- No background
    shiftLockText.Parent = shiftLockButton

    -- Add a subtle highlight on hover
    shiftLockButton.MouseEnter:Connect(function()
        shiftLockButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50) -- Lighter background on hover
    end)

    shiftLockButton.MouseLeave:Connect(function()
        shiftLockButton.BackgroundColor3 = Color3.fromRGB(34, 34, 34) -- Restore original color
    end)

    -- Function to toggle shift lock
    local function toggleShiftLock()
        shiftLockEnabled = not shiftLockEnabled
    end

    -- Rotate the character to face the camera's direction when shift lock is enabled
    local function rotateCharacterToFaceCamera(humanoidRootPart)
        if shiftLockEnabled and humanoidRootPart then
            local cameraLookVector = camera.CFrame.LookVector
            local newDirection = Vector3.new(cameraLookVector.X, 0, cameraLookVector.Z).Unit
            local targetPosition = humanoidRootPart.Position + newDirection
            humanoidRootPart.CFrame = CFrame.new(humanoidRootPart.Position, targetPosition)
        end
    end

    -- Update the camera position and rotate the character every frame
    local function updateCameraAndCharacter()
        local character = player.Character
        if character then
            local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
            rotateCharacterToFaceCamera(humanoidRootPart)
        end
    end

    -- Connect button click to toggle shift lock
    shiftLockButton.MouseButton1Click:Connect(toggleShiftLock)

    -- Update camera and character every frame
    RunService.RenderStepped:Connect(updateCameraAndCharacter)
end

-- Initial button creation
createShiftLockButton()

-- Function to handle character respawning
local function onCharacterAdded()
    shiftLockEnabled = false -- Reset shift lock state
    wait(2) -- Wait for 2 seconds
    createShiftLockButton() -- Recreate the shift lock button
end

-- Connect character added event to handle respawn
player.CharacterAdded:Connect(onCharacterAdded)

-- Debugging information
print("Shiftlock was enabled, UniverseX has check but if it's visible.")
end)
tab5.newButton("Fling", "Fling script", function()
smX()
end)
function smX() 
Library:Notification({
	Text = "UniverseX Fling",
	Duration = 6
})
wait(0.2)


local Library = loadstring(game:HttpGet(_G.guidragtype))()
    local Window = Library.CreateLib("Universe X | SplazhQ12", OptTheme)
    local Main = Window:NewTab("Home", 16716232082)
    
        local MainSection = Main:NewSection("Home")
    
        MainSection:NewButton("Save Game", "Executed!", function()
        local SSSSSS = ""
		if identifyexecutor then
			SSSSSS = select(1, identifyexecutor())
		end
		if SSSSSS == "Krampus" then
			saveplace({
				FileName = "UXsavedFile",
				CopyToClipboard = true
			})
			return
		end
		if saveplace then
			saveplace({
				FileName = "UXsavedFile", 
			})
		end
		if saveinstance then
			saveinstance()
		else
			Library.Notify("Universal X ", "Your executor doesn't support this Save Game script, use the Save Game Script 2 in main of Universe - X. ", 10)
		end
	end)
    
--[[
        MainSection:NewSlider("Slider", "This is a Slider", "100", "1",function(Value)
            
        end)
 ]]

        MainSection:NewTextBox("Walk Speed", "Walk Speed", function(v)
            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = v
        end)
        
        MainSection:NewTextBox("Jump Height", "Jump Height", function(v)
            game.Players.LocalPlayer.Character.Humanoid.JumpPower = v
        end)
        
        MainSection:NewTextBox("Gravity", "Gravity", function(v)
            game:GetService("Workspace").Gravity = v
        end)
        
        MainSection:NewTextBox("Fov", "Fov Camera", function(v)
            game:GetService("Workspace"):WaitForChild("Camera").FieldOfView = v
        end)
        
        MainSection:NewButton("Unlock Third Person", "Unlocks third person.", function()
		game:GetService("Players").LocalPlayer.CameraMaxZoomDistance = 99999
		game:GetService("Players").LocalPlayer.CameraMode = Enum.CameraMode.Classic
        end) 
        
        MainSection:NewTextBox("Zoom", " Zoom Camera", function(v)
            game:GetService("Players").LocalPlayer.CameraMaxZoomDistance = v
        end)
        
        	if IsOnMobile or VREnabled then
		MainSection:NewButton("Enable Shiftlock", "Unlocks a shiftlock.", function()
			Library.Notify("Shift Lock Enabled", "Gui should pop up on your right", 5)
			loadstring(game:HttpGet("https://raw.githubusercontent.com/yofriendfromschool1/Sky-Hub-Backup/main/mobileshiftlock.txt"))()
		end) 
		
		MainSection:NewToggle("Shiftlock Mode", "Turn off or on.", function(value)
			game:GetService("Players").LocalPlayer.DevEnableMouseLock = value
			if value then
				Library.Notify("Shift Lock Enabled", "Just press shift or enable it in roblox settings", 5)
			else
				Library.Notify("Shift Lock Disabled", "", 5)
			end
		end)
	end

--[[
        MainSection:NewDropdown("Dropdown", "This is a Dropdown", {"Dropdown1", "Dropdown2", "Dropdown3"}, function(value)
            print("Choose : "..value)
        end)  
]]
        
        local Home = Window:NewTab("Universal X", 17415983489)
    
        local MainSection = Home:NewSection("Murder Mystery 2") 
        
        MainSection:NewTextBox("Fling Player", "Flings player", function(txt)
		local Targets = {txt} -- "All", "Target Name", "arian_was_here"

		local Players = game:GetService("Players")
		local Player = Players.LocalPlayer

		local AllBool = false

		local GetPlayer = function(Name)
			Name = Name:lower()
			if Name == "all" or Name == "others" then
				AllBool = true
				return
			elseif Name == "random" then
				local GetPlayers = Players:GetPlayers()
				if table.find(GetPlayers,Player) then table.remove(GetPlayers,table.find(GetPlayers,Player)) end
				return GetPlayers[math.random(#GetPlayers)]
			elseif Name ~= "random" and Name ~= "all" and Name ~= "others" then
				for _,x in next, Players:GetPlayers() do
					if x ~= Player then
						if x.Name:lower():match("^"..Name) then
							return x;
						elseif x.DisplayName:lower():match("^"..Name) then
							return x;
						end
					end
				end
			else
				return
			end
		end

		local Message = function(_Title, _Text, Time)
			game:GetService("StarterGui"):SetCore("SendNotification", {Title = _Title, Text = _Text, Duration = Time})
		end

		local SkidFling = function(TargetPlayer)
			local Character = Player.Character
			local Humanoid = Character and Character:FindFirstChildOfClass("Humanoid")
			local RootPart = Humanoid and Humanoid.RootPart

			local TCharacter = TargetPlayer.Character
			local THumanoid
			local TRootPart
			local THead
			local Accessory
			local Handle

			if TCharacter:FindFirstChildOfClass("Humanoid") then
				THumanoid = TCharacter:FindFirstChildOfClass("Humanoid")
			end
			if THumanoid and THumanoid.RootPart then
				TRootPart = THumanoid.RootPart
			end
			if TCharacter:FindFirstChild("Head") then
				THead = TCharacter.Head
			end
			if TCharacter:FindFirstChildOfClass("Accessory") then
				Accessory = TCharacter:FindFirstChildOfClass("Accessory")
			end
			if Accessoy and Accessory:FindFirstChild("Handle") then
				Handle = Accessory.Handle
			end

			if Character and Humanoid and RootPart then
				if RootPart.Velocity.Magnitude < 50 then
					getgenv().OldPos = RootPart.CFrame
				end
				if THumanoid and THumanoid.Sit and not AllBool then
					return Message("Error Occurred", "Targeting is sitting", 5) -- u can remove dis part if u want lol
				end
				if THead then
					workspace.CurrentCamera.CameraSubject = THead
				elseif not THead and Handle then
					workspace.CurrentCamera.CameraSubject = Handle
				elseif THumanoid and TRootPart then
					workspace.CurrentCamera.CameraSubject = THumanoid
				end
				if not TCharacter:FindFirstChildWhichIsA("BasePart") then
					return
				end
				
				local FPos = function(BasePart, Pos, Ang)
					RootPart.CFrame = CFrame.new(BasePart.Position) * Pos * Ang
					Character:SetPrimaryPartCFrame(CFrame.new(BasePart.Position) * Pos * Ang)
					RootPart.Velocity = Vector3.new(9e7, 9e7 * 10, 9e7)
					RootPart.RotVelocity = Vector3.new(9e8, 9e8, 9e8)
				end
				
				local SFBasePart = function(BasePart)
					local TimeToWait = 2
					local Time = tick()
					local Angle = 0

					repeat
						if RootPart and THumanoid then
							if BasePart.Velocity.Magnitude < 50 then
								Angle = Angle + 100

								FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle),0 ,0))
								task.wait()

								FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(2.25, 1.5, -2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(-2.25, -1.5, 2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection,CFrame.Angles(math.rad(Angle), 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection,CFrame.Angles(math.rad(Angle), 0, 0))
								task.wait()
							else
								FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(0, -1.5, -THumanoid.WalkSpeed), CFrame.Angles(0, 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
								task.wait()
								
								FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(0, -1.5, -TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(0, 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(math.rad(90), 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(0, -1.5 ,0), CFrame.Angles(math.rad(-90), 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
								task.wait()
							end
						else
							break
						end
					until BasePart.Velocity.Magnitude > 500 or BasePart.Parent ~= TargetPlayer.Character or TargetPlayer.Parent ~= Players or not TargetPlayer.Character == TCharacter or THumanoid.Sit or Humanoid.Health <= 0 or tick() > Time + TimeToWait
				end
				
				workspace.FallenPartsDestroyHeight = 0/0
				
				local BV = Instance.new("BodyVelocity")
				BV.Name = "EpixVel"
				BV.Parent = RootPart
				BV.Velocity = Vector3.new(9e8, 9e8, 9e8)
				BV.MaxForce = Vector3.new(1/0, 1/0, 1/0)
				
				Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, false)
				
				if TRootPart and THead then
					if (TRootPart.CFrame.p - THead.CFrame.p).Magnitude > 5 then
						SFBasePart(THead)
					else
						SFBasePart(TRootPart)
					end
				elseif TRootPart and not THead then
					SFBasePart(TRootPart)
				elseif not TRootPart and THead then
					SFBasePart(THead)
				elseif not TRootPart and not THead and Accessory and Handle then
					SFBasePart(Handle)
				else
					return Message("Error Occurred", "Target is missing everything", 5)
				end
				
				BV:Destroy()
				Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
				workspace.CurrentCamera.CameraSubject = Humanoid
				
				repeat
					RootPart.CFrame = getgenv().OldPos * CFrame.new(0, .5, 0)
					Character:SetPrimaryPartCFrame(getgenv().OldPos * CFrame.new(0, .5, 0))
					Humanoid:ChangeState("GettingUp")
					table.foreach(Character:GetChildren(), function(_, x)
						if x:IsA("BasePart") then
							x.Velocity, x.RotVelocity = Vector3.new(), Vector3.new()
						end
					end)
					task.wait()
				until (RootPart.Position - getgenv().OldPos.p).Magnitude < 25
				workspace.FallenPartsDestroyHeight = getgenv().FPDH
			else
				return Message("Error Occurred", "Random error", 5)
			end
		end

		if not Welcome then Message("甩飞已开启成功", "猫脚本", 5) end
		getgenv().Welcome = true
		if Targets[1] then for _,x in next, Targets do GetPlayer(x) end else return end

		if AllBool then
			for _,x in next, Players:GetPlayers() do
				SkidFling(x)
			end
		end

		for _,x in next, Targets do
			if GetPlayer(x) and GetPlayer(x) ~= Player then
				if GetPlayer(x).UserId ~= 1414978355 then
					local TPlayer = GetPlayer(x)
					if TPlayer then
						SkidFling(TPlayer)
					end
				else
					Message("Error Occurred", "This user is whitelisted! (Owner)", 5)
				end
			elseif not GetPlayer(x) and not AllBool then
				Message("Error Occurred", "Username Invalid", 5)
			end
		end
	end)
        MainSection:NewButton("Fling All", "Fling user with script.", function()
        local Targets = {"All"} -- "All", "Target Name", "arian_was_here"

		local Players = game:GetService("Players")
		local Player = Players.LocalPlayer

		local AllBool = false

		local GetPlayer = function(Name)
			Name = Name:lower()
			if Name == "all" or Name == "others" then
				AllBool = true
				return
			elseif Name == "random" then
				local GetPlayers = Players:GetPlayers()
				if table.find(GetPlayers,Player) then table.remove(GetPlayers,table.find(GetPlayers,Player)) end
				return GetPlayers[math.random(#GetPlayers)]
			elseif Name ~= "random" and Name ~= "all" and Name ~= "others" then
				for _,x in next, Players:GetPlayers() do
					if x ~= Player then
						if x.Name:lower():match("^"..Name) then
							return x;
						elseif x.DisplayName:lower():match("^"..Name) then
							return x;
						end
					end
				end
			else
				return
			end
		end

		local Message = function(_Title, _Text, Time)
			game:GetService("StarterGui"):SetCore("SendNotification", {Title = _Title, Text = _Text, Duration = Time})
		end

		local SkidFling = function(TargetPlayer)
			local Character = Player.Character
			local Humanoid = Character and Character:FindFirstChildOfClass("Humanoid")
			local RootPart = Humanoid and Humanoid.RootPart

			local TCharacter = TargetPlayer.Character
			local THumanoid
			local TRootPart
			local THead
			local Accessory
			local Handle

			if TCharacter:FindFirstChildOfClass("Humanoid") then
				THumanoid = TCharacter:FindFirstChildOfClass("Humanoid")
			end
			if THumanoid and THumanoid.RootPart then
				TRootPart = THumanoid.RootPart
			end
			if TCharacter:FindFirstChild("Head") then
				THead = TCharacter.Head
			end
			if TCharacter:FindFirstChildOfClass("Accessory") then
				Accessory = TCharacter:FindFirstChildOfClass("Accessory")
			end
			if Accessoy and Accessory:FindFirstChild("Handle") then
				Handle = Accessory.Handle
			end

			if Character and Humanoid and RootPart then
				if RootPart.Velocity.Magnitude < 50 then
					getgenv().OldPos = RootPart.CFrame
				end
				if THumanoid and THumanoid.Sit and not AllBool then
					return Message("Error Occurred", "Targeting is sitting", 5) -- u can remove dis part if u want lol
				end
				if THead then
					workspace.CurrentCamera.CameraSubject = THead
				elseif not THead and Handle then
					workspace.CurrentCamera.CameraSubject = Handle
				elseif THumanoid and TRootPart then
					workspace.CurrentCamera.CameraSubject = THumanoid
				end
				if not TCharacter:FindFirstChildWhichIsA("BasePart") then
					return
				end
				
				local FPos = function(BasePart, Pos, Ang)
					RootPart.CFrame = CFrame.new(BasePart.Position) * Pos * Ang
					Character:SetPrimaryPartCFrame(CFrame.new(BasePart.Position) * Pos * Ang)
					RootPart.Velocity = Vector3.new(9e7, 9e7 * 10, 9e7)
					RootPart.RotVelocity = Vector3.new(9e8, 9e8, 9e8)
				end
				
				local SFBasePart = function(BasePart)
					local TimeToWait = 2
					local Time = tick()
					local Angle = 0

					repeat
						if RootPart and THumanoid then
							if BasePart.Velocity.Magnitude < 50 then
								Angle = Angle + 100

								FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle),0 ,0))
								task.wait()

								FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(2.25, 1.5, -2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(-2.25, -1.5, 2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection,CFrame.Angles(math.rad(Angle), 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection,CFrame.Angles(math.rad(Angle), 0, 0))
								task.wait()
							else
								FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(0, -1.5, -THumanoid.WalkSpeed), CFrame.Angles(0, 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
								task.wait()
								
								FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(0, -1.5, -TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(0, 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(math.rad(90), 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(0, -1.5 ,0), CFrame.Angles(math.rad(-90), 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
								task.wait()
							end
						else
							break
						end
					until BasePart.Velocity.Magnitude > 500 or BasePart.Parent ~= TargetPlayer.Character or TargetPlayer.Parent ~= Players or not TargetPlayer.Character == TCharacter or THumanoid.Sit or Humanoid.Health <= 0 or tick() > Time + TimeToWait
				end
				
				workspace.FallenPartsDestroyHeight = 0/0
				
				local BV = Instance.new("BodyVelocity")
				BV.Name = "EpixVel"
				BV.Parent = RootPart
				BV.Velocity = Vector3.new(9e8, 9e8, 9e8)
				BV.MaxForce = Vector3.new(1/0, 1/0, 1/0)
				
				Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, false)
				
				if TRootPart and THead then
					if (TRootPart.CFrame.p - THead.CFrame.p).Magnitude > 5 then
						SFBasePart(THead)
					else
						SFBasePart(TRootPart)
					end
				elseif TRootPart and not THead then
					SFBasePart(TRootPart)
				elseif not TRootPart and THead then
					SFBasePart(THead)
				elseif not TRootPart and not THead and Accessory and Handle then
					SFBasePart(Handle)
				else
					return Message("Error Occurred", "Target is missing everything", 5)
				end
				
				BV:Destroy()
				Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
				workspace.CurrentCamera.CameraSubject = Humanoid
				
				repeat
					RootPart.CFrame = getgenv().OldPos * CFrame.new(0, .5, 0)
					Character:SetPrimaryPartCFrame(getgenv().OldPos * CFrame.new(0, .5, 0))
					Humanoid:ChangeState("GettingUp")
					table.foreach(Character:GetChildren(), function(_, x)
						if x:IsA("BasePart") then
							x.Velocity, x.RotVelocity = Vector3.new(), Vector3.new()
						end
					end)
					task.wait()
				until (RootPart.Position - getgenv().OldPos.p).Magnitude < 25
				workspace.FallenPartsDestroyHeight = getgenv().FPDH
			else
				return Message("Error Occurred", "Random error", 5)
			end
		end

		if not Welcome then Message("甩飞已开启成功", "猫脚本", 5) end
		getgenv().Welcome = true
		if Targets[1] then for _,x in next, Targets do GetPlayer(x) end else return end

		if AllBool then
			for _,x in next, Players:GetPlayers() do
				SkidFling(x)
			end
		end

		for _,x in next, Targets do
			if GetPlayer(x) and GetPlayer(x) ~= Player then
				if GetPlayer(x).UserId ~= 1414978355 then
					local TPlayer = GetPlayer(x)
					if TPlayer then
						SkidFling(TPlayer)
					end
				else
					Message("Error Occurred", "This user is whitelisted! (Owner)", 5)
				end
			elseif not GetPlayer(x) and not AllBool then
				Message("Error Occurred", "Username Invalid", 5)
			end
		end
	end)
        
        MainSection:NewButton("Fling Sheriff","Fling user with script.", function()
        local Targets = {"All"} -- "All", "Target Name", "arian_was_here"

		local Players = game:GetService("Players")
		local Player = Players.LocalPlayer

		local AllBool = false

		local GetPlayer = function(Name)
			Name = Name:lower()
			if Name == "all" or Name == "others" then
				AllBool = true
				return
			elseif Name == "random" then
				local GetPlayers = Players:GetPlayers()
				if table.find(GetPlayers,Player) then table.remove(GetPlayers,table.find(GetPlayers,Player)) end
				return GetPlayers[math.random(#GetPlayers)]
			elseif Name ~= "random" and Name ~= "all" and Name ~= "others" then
				for _,x in next, Players:GetPlayers() do
					if x ~= Player then
						if x.Name:lower():match("^"..Name) then
							return x;
						elseif x.DisplayName:lower():match("^"..Name) then
							return x;
						end
					end
				end
			else
				return
			end
		end

		local Message = function(_Title, _Text, Time)
			game:GetService("StarterGui"):SetCore("SendNotification", {Title = _Title, Text = _Text, Duration = Time})
		end

		local SkidFling = function(TargetPlayer)
			local Character = Player.Character
			local Humanoid = Character and Character:FindFirstChildOfClass("Humanoid")
			local RootPart = Humanoid and Humanoid.RootPart

			local TCharacter = TargetPlayer.Character
			local THumanoid
			local TRootPart
			local THead
			local Accessory
			local Handle

			if TCharacter:FindFirstChildOfClass("Humanoid") then
				THumanoid = TCharacter:FindFirstChildOfClass("Humanoid")
			end
			if THumanoid and THumanoid.RootPart then
				TRootPart = THumanoid.RootPart
			end
			if TCharacter:FindFirstChild("Head") then
				THead = TCharacter.Head
			end
			if TCharacter:FindFirstChildOfClass("Accessory") then
				Accessory = TCharacter:FindFirstChildOfClass("Accessory")
			end
			if Accessoy and Accessory:FindFirstChild("Handle") then
				Handle = Accessory.Handle
			end

			if Character and Humanoid and RootPart then
				if RootPart.Velocity.Magnitude < 50 then
					getgenv().OldPos = RootPart.CFrame
				end
				if THumanoid and THumanoid.Sit and not AllBool then
					return Message("Error Occurred", "Targeting is sitting", 5) -- u can remove dis part if u want lol
				end
				if THead then
					workspace.CurrentCamera.CameraSubject = THead
				elseif not THead and Handle then
					workspace.CurrentCamera.CameraSubject = Handle
				elseif THumanoid and TRootPart then
					workspace.CurrentCamera.CameraSubject = THumanoid
				end
				if not TCharacter:FindFirstChildWhichIsA("BasePart") then
					return
				end
				
				local FPos = function(BasePart, Pos, Ang)
					RootPart.CFrame = CFrame.new(BasePart.Position) * Pos * Ang
					Character:SetPrimaryPartCFrame(CFrame.new(BasePart.Position) * Pos * Ang)
					RootPart.Velocity = Vector3.new(9e7, 9e7 * 10, 9e7)
					RootPart.RotVelocity = Vector3.new(9e8, 9e8, 9e8)
				end
				
				local SFBasePart = function(BasePart)
					local TimeToWait = 2
					local Time = tick()
					local Angle = 0

					repeat
						if RootPart and THumanoid then
							if BasePart.Velocity.Magnitude < 50 then
								Angle = Angle + 100

								FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle),0 ,0))
								task.wait()

								FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(2.25, 1.5, -2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(-2.25, -1.5, 2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection,CFrame.Angles(math.rad(Angle), 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection,CFrame.Angles(math.rad(Angle), 0, 0))
								task.wait()
							else
								FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(0, -1.5, -THumanoid.WalkSpeed), CFrame.Angles(0, 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
								task.wait()
								
								FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(0, -1.5, -TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(0, 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(math.rad(90), 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(0, -1.5 ,0), CFrame.Angles(math.rad(-90), 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
								task.wait()
							end
						else
							break
						end
					until BasePart.Velocity.Magnitude > 500 or BasePart.Parent ~= TargetPlayer.Character or TargetPlayer.Parent ~= Players or not TargetPlayer.Character == TCharacter or THumanoid.Sit or Humanoid.Health <= 0 or tick() > Time + TimeToWait
				end
				
				workspace.FallenPartsDestroyHeight = 0/0
				
				local BV = Instance.new("BodyVelocity")
				BV.Name = "EpixVel"
				BV.Parent = RootPart
				BV.Velocity = Vector3.new(9e8, 9e8, 9e8)
				BV.MaxForce = Vector3.new(1/0, 1/0, 1/0)
				
				Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, false)
				
				if TRootPart and THead then
					if (TRootPart.CFrame.p - THead.CFrame.p).Magnitude > 5 then
						SFBasePart(THead)
					else
						SFBasePart(TRootPart)
					end
				elseif TRootPart and not THead then
					SFBasePart(TRootPart)
				elseif not TRootPart and THead then
					SFBasePart(THead)
				elseif not TRootPart and not THead and Accessory and Handle then
					SFBasePart(Handle)
				else
					return Message("Error Occurred", "Target is missing everything", 5)
				end
				
				BV:Destroy()
				Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
				workspace.CurrentCamera.CameraSubject = Humanoid
				
				repeat
					RootPart.CFrame = getgenv().OldPos * CFrame.new(0, .5, 0)
					Character:SetPrimaryPartCFrame(getgenv().OldPos * CFrame.new(0, .5, 0))
					Humanoid:ChangeState("GettingUp")
					table.foreach(Character:GetChildren(), function(_, x)
						if x:IsA("BasePart") then
							x.Velocity, x.RotVelocity = Vector3.new(), Vector3.new()
						end
					end)
					task.wait()
				until (RootPart.Position - getgenv().OldPos.p).Magnitude < 25
				workspace.FallenPartsDestroyHeight = getgenv().FPDH
			else
				return Message("Error Occurred", "Random error", 5)
			end
		end

		if not Welcome then Message("甩飞已开启成功", "猫脚本", 5) end
		getgenv().Welcome = true
		if Targets[1] then for _,x in next, Targets do GetPlayer(x) end else return end
		if AllBool then
			for _,x in pairs(game:GetService("Players"):GetPlayers()) do
				if x.Backpack:FindFirstChild("Gun") or x.Character:FindFirstChild("Gun") then
					SkidFling(x)
				end
			end
		end


	end)
        MainSection:NewButton("Fling Murderer", "Fling user with script.", function()
        local Targets = {"All"} -- "All", "Target Name", "arian_was_here"

		local Players = game:GetService("Players")
		local Player = Players.LocalPlayer

		local AllBool = false

		local GetPlayer = function(Name)
			Name = Name:lower()
			if Name == "all" or Name == "others" then
				AllBool = true
				return
			elseif Name == "random" then
				local GetPlayers = Players:GetPlayers()
				if table.find(GetPlayers,Player) then table.remove(GetPlayers,table.find(GetPlayers,Player)) end
				return GetPlayers[math.random(#GetPlayers)]
			elseif Name ~= "random" and Name ~= "all" and Name ~= "others" then
				for _,x in next, Players:GetPlayers() do
					if x ~= Player then
						if x.Name:lower():match("^"..Name) then
							return x;
						elseif x.DisplayName:lower():match("^"..Name) then
							return x;
						end
					end
				end
			else
				return
			end
		end

		local Message = function(_Title, _Text, Time)
			game:GetService("StarterGui"):SetCore("SendNotification", {Title = _Title, Text = _Text, Duration = Time})
		end

		local SkidFling = function(TargetPlayer)
			local Character = Player.Character
			local Humanoid = Character and Character:FindFirstChildOfClass("Humanoid")
			local RootPart = Humanoid and Humanoid.RootPart

			local TCharacter = TargetPlayer.Character
			local THumanoid
			local TRootPart
			local THead
			local Accessory
			local Handle

			if TCharacter:FindFirstChildOfClass("Humanoid") then
				THumanoid = TCharacter:FindFirstChildOfClass("Humanoid")
			end
			if THumanoid and THumanoid.RootPart then
				TRootPart = THumanoid.RootPart
			end
			if TCharacter:FindFirstChild("Head") then
				THead = TCharacter.Head
			end
			if TCharacter:FindFirstChildOfClass("Accessory") then
				Accessory = TCharacter:FindFirstChildOfClass("Accessory")
			end
			if Accessoy and Accessory:FindFirstChild("Handle") then
				Handle = Accessory.Handle
			end

			if Character and Humanoid and RootPart then
				if RootPart.Velocity.Magnitude < 50 then
					getgenv().OldPos = RootPart.CFrame
				end
				if THumanoid and THumanoid.Sit and not AllBool then
					return Message("Error Occurred", "Targeting is sitting", 5) -- u can remove dis part if u want lol
				end
				if THead then
					workspace.CurrentCamera.CameraSubject = THead
				elseif not THead and Handle then
					workspace.CurrentCamera.CameraSubject = Handle
				elseif THumanoid and TRootPart then
					workspace.CurrentCamera.CameraSubject = THumanoid
				end
				if not TCharacter:FindFirstChildWhichIsA("BasePart") then
					return
				end
				
				local FPos = function(BasePart, Pos, Ang)
					RootPart.CFrame = CFrame.new(BasePart.Position) * Pos * Ang
					Character:SetPrimaryPartCFrame(CFrame.new(BasePart.Position) * Pos * Ang)
					RootPart.Velocity = Vector3.new(9e7, 9e7 * 10, 9e7)
					RootPart.RotVelocity = Vector3.new(9e8, 9e8, 9e8)
				end
				
				local SFBasePart = function(BasePart)
					local TimeToWait = 2
					local Time = tick()
					local Angle = 0

					repeat
						if RootPart and THumanoid then
							if BasePart.Velocity.Magnitude < 50 then
								Angle = Angle + 100

								FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle),0 ,0))
								task.wait()

								FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(2.25, 1.5, -2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(-2.25, -1.5, 2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection,CFrame.Angles(math.rad(Angle), 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection,CFrame.Angles(math.rad(Angle), 0, 0))
								task.wait()
							else
								FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(0, -1.5, -THumanoid.WalkSpeed), CFrame.Angles(0, 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
								task.wait()
								
								FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(0, -1.5, -TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(0, 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(math.rad(90), 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(0, -1.5 ,0), CFrame.Angles(math.rad(-90), 0, 0))
								task.wait()

								FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
								task.wait()
							end
						else
							break
						end
					until BasePart.Velocity.Magnitude > 500 or BasePart.Parent ~= TargetPlayer.Character or TargetPlayer.Parent ~= Players or not TargetPlayer.Character == TCharacter or THumanoid.Sit or Humanoid.Health <= 0 or tick() > Time + TimeToWait
				end
				
				workspace.FallenPartsDestroyHeight = 0/0
				
				local BV = Instance.new("BodyVelocity")
				BV.Name = "EpixVel"
				BV.Parent = RootPart
				BV.Velocity = Vector3.new(9e8, 9e8, 9e8)
				BV.MaxForce = Vector3.new(1/0, 1/0, 1/0)
				
				Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, false)
				
				if TRootPart and THead then
					if (TRootPart.CFrame.p - THead.CFrame.p).Magnitude > 5 then
						SFBasePart(THead)
					else
						SFBasePart(TRootPart)
					end
				elseif TRootPart and not THead then
					SFBasePart(TRootPart)
				elseif not TRootPart and THead then
					SFBasePart(THead)
				elseif not TRootPart and not THead and Accessory and Handle then
					SFBasePart(Handle)
				else
					return Message("Error Occurred", "Target is missing everything", 5)
				end
				
				BV:Destroy()
				Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
				workspace.CurrentCamera.CameraSubject = Humanoid
				
				repeat
					RootPart.CFrame = getgenv().OldPos * CFrame.new(0, .5, 0)
					Character:SetPrimaryPartCFrame(getgenv().OldPos * CFrame.new(0, .5, 0))
					Humanoid:ChangeState("GettingUp")
					table.foreach(Character:GetChildren(), function(_, x)
						if x:IsA("BasePart") then
							x.Velocity, x.RotVelocity = Vector3.new(), Vector3.new()
						end
					end)
					task.wait()
				until (RootPart.Position - getgenv().OldPos.p).Magnitude < 25
				workspace.FallenPartsDestroyHeight = getgenv().FPDH
			else
				return Message("Error Occurred", "Random error", 5)
			end
		end

		if not Welcome then Message("甩飞已开启成功", "猫脚本", 5) end
		getgenv().Welcome = true
		if Targets[1] then for _,x in next, Targets do GetPlayer(x) end else return end
		if AllBool then
			for _,x in pairs(game:GetService("Players"):GetPlayers()) do
				if x.Backpack:FindFirstChild("Knife") or x.Character:FindFirstChild("Knife") then
					SkidFling(x)
				end
			end
		end


   	end)
        MainSection:NewButton("Teleport Lobby", "Loads admin script.", function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-109.56, 140, -11.75) + Vector3.new(1, 0, 0)
        end)
         MainSection:NewButton("Godmode", "Loads admin script.", function()
            game.Players.LocalPlayer.Character.Humanoid:Remove()
Instance.new('Humanoid', game.Players.LocalPlayer.Character)
        end)
end
tab5.newButton("Fly", "Fly script.", function()
    local main = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local up = Instance.new("TextButton")
local down = Instance.new("TextButton")
local onof = Instance.new("TextButton")
local TextLabel = Instance.new("TextLabel")
local plus = Instance.new("TextButton")
local speed = Instance.new("TextLabel")
local mine = Instance.new("TextButton")
local closebutton = Instance.new("TextButton")
local mini = Instance.new("TextButton")
local mini2 = Instance.new("TextButton") 

main.Name = "main"
main.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
main.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
main.ResetOnSpawn = false 

Frame.Parent = main
Frame.BackgroundColor3 = Color3.fromRGB(163, 255, 137)
Frame.BorderColor3 = Color3.fromRGB(103, 221, 213)
Frame.Position = UDim2.new(0.100320168, 0, 0.379746825, 0)
Frame.Size = UDim2.new(0, 190, 0, 57) 

up.Name = "up"
up.Parent = Frame
up.BackgroundColor3 = Color3.fromRGB(79, 255, 152)
up.Size = UDim2.new(0, 44, 0, 28)
up.Font = Enum.Font.SourceSans
up.Text = "Up"
up.TextColor3 = Color3.fromRGB(0, 0, 0)
up.TextSize = 14.000 

down.Name = "down"
down.Parent = Frame
down.BackgroundColor3 = Color3.fromRGB(215, 255, 121)
down.Position = UDim2.new(0, 0, 0.491228074, 0)
down.Size = UDim2.new(0, 44, 0, 28)
down.Font = Enum.Font.SourceSans
down.Text = "Down"
down.TextColor3 = Color3.fromRGB(0, 0, 0)
down.TextSize = 14.000 

onof.Name = "onof"
onof.Parent = Frame
onof.BackgroundColor3 = Color3.fromRGB(255, 249, 74)
onof.Position = UDim2.new(0.702823281, 0, 0.491228074, 0)
onof.Size = UDim2.new(0, 56, 0, 28)
onof.Font = Enum.Font.SourceSans
onof.Text = "O/F"
onof.TextColor3 = Color3.fromRGB(0, 0, 0)
onof.TextSize = 14.000 

TextLabel.Parent = Frame
TextLabel.BackgroundColor3 = Color3.fromRGB(242, 60, 255)
TextLabel.Position = UDim2.new(0.469327301, 0, 0, 0)
TextLabel.Size = UDim2.new(0, 100, 0, 28)
TextLabel.Font = Enum.Font.SourceSans
TextLabel.Text = "Fly by me_ozone"
TextLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.TextScaled = true
TextLabel.TextSize = 14.000
TextLabel.TextWrapped = true 

plus.Name = "plus"
plus.Parent = Frame
plus.BackgroundColor3 = Color3.fromRGB(133, 145, 255)
plus.Position = UDim2.new(0.231578946, 0, 0, 0)
plus.Size = UDim2.new(0, 45, 0, 28)
plus.Font = Enum.Font.SourceSans
plus.Text = "+"
plus.TextColor3 = Color3.fromRGB(0, 0, 0)
plus.TextScaled = true
plus.TextSize = 14.000
plus.TextWrapped = true 

speed.Name = "speed"
speed.Parent = Frame
speed.BackgroundColor3 = Color3.fromRGB(255, 85, 0)
speed.Position = UDim2.new(0.468421042, 0, 0.491228074, 0)
speed.Size = UDim2.new(0, 44, 0, 28)
speed.Font = Enum.Font.SourceSans
speed.Text = "1"
speed.TextColor3 = Color3.fromRGB(0, 0, 0)
speed.TextScaled = true
speed.TextSize = 14.000
speed.TextWrapped = true 

mine.Name = "mine"
mine.Parent = Frame
mine.BackgroundColor3 = Color3.fromRGB(123, 255, 247)
mine.Position = UDim2.new(0.231578946, 0, 0.491228074, 0)
mine.Size = UDim2.new(0, 45, 0, 29)
mine.Font = Enum.Font.SourceSans
mine.Text = "-"
mine.TextColor3 = Color3.fromRGB(0, 0, 0)
mine.TextScaled = true
mine.TextSize = 14.000
mine.TextWrapped = true 

closebutton.Name = "Close"
closebutton.Parent = main.Frame
closebutton.BackgroundColor3 = Color3.fromRGB(225, 25, 0)
closebutton.Font = "SourceSans"
closebutton.Size = UDim2.new(0, 45, 0, 28)
closebutton.Text = "X"
closebutton.TextSize = 30
closebutton.Position = UDim2.new(0, 0, -1, 27) 

mini.Name = "minimize"
mini.Parent = main.Frame
mini.BackgroundColor3 = Color3.fromRGB(192, 150, 230)
mini.Font = "SourceSans"
mini.Size = UDim2.new(0, 45, 0, 28)
mini.Text = "-"
mini.TextSize = 40
mini.Position = UDim2.new(0, 44, -1, 27) 

mini2.Name = "minimize2"
mini2.Parent = main.Frame
mini2.BackgroundColor3 = Color3.fromRGB(192, 150, 230)
mini2.Font = "SourceSans"
mini2.Size = UDim2.new(0, 45, 0, 28)
mini2.Text = "+"
mini2.TextSize = 40
mini2.Position = UDim2.new(0, 44, -1, 57)
mini2.Visible = false 

speeds = 1 

local speaker = game:GetService("Players").LocalPlayer 

local chr = game.Players.LocalPlayer.Character
local hum = chr and chr:FindFirstChildWhichIsA("Humanoid") 

nowe = false 

game:GetService("StarterGui"):SetCore("SendNotification", { 
Title = "UniverseX Remake";
Text = "By Rezux & SuperzQ12";
Icon = "rbxthumb://type=Asset&id=5107182114&w=150&h=150"})
Duration = 5; 

Frame.Active = true -- main = gui
Frame.Draggable = true 

onof.MouseButton1Down:connect(function() 

if nowe == true then
nowe = false 

speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing,true)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,true)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying,true)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall,true)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,true)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,true)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed,true)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics,true)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,true)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,true)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running,true)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,true)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,true)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,true)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,true)
speaker.Character.Humanoid:ChangeState(Enum.HumanoidStateType.RunningNoPhysics)
else 
nowe = true



for i = 1, speeds do
spawn(function() 

local hb = game:GetService("RunService").Heartbeat


tpwalking = true
local chr = game.Players.LocalPlayer.Character
local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
while tpwalking and hb:Wait() and chr and hum and hum.Parent do
if hum.MoveDirection.Magnitude > 0 then
chr:TranslateBy(hum.MoveDirection)
end
end 

end)
end
game.Players.LocalPlayer.Character.Animate.Disabled = true
local Char = game.Players.LocalPlayer.Character
local Hum = Char:FindFirstChildOfClass("Humanoid") or Char:FindFirstChildOfClass("AnimationController") 

for i,v in next, Hum:GetPlayingAnimationTracks() do
v:AdjustSpeed(0)
end
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing,false)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,false)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying,false)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall,false)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,false)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,false)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed,false)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics,false)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,false)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,false)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running,false)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,false)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,false)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,false)
speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,false)
speaker.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Swimming)
end




if game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid").RigType == Enum.HumanoidRigType.R6 then



local plr = game.Players.LocalPlayer
local torso = plr.Character.Torso
local flying = true
local deb = true
local ctrl = {f = 0, b = 0, l = 0, r = 0}
local lastctrl = {f = 0, b = 0, l = 0, r = 0}
local maxspeed = 50
local speed = 0


local bg = Instance.new("BodyGyro", torso)
bg.P = 9e4
bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
bg.cframe = torso.CFrame
local bv = Instance.new("BodyVelocity", torso)
bv.velocity = Vector3.new(0,0.1,0)
bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
if nowe == true then
plr.Character.Humanoid.PlatformStand = true
end
while nowe == true or game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 do
game:GetService("RunService").RenderStepped:Wait() 

if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
speed = speed+.5+(speed/maxspeed)
if speed > maxspeed then
speed = maxspeed
end
elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
speed = speed-1
if speed < 0 then
speed = 0
end
end
if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
else
bv.velocity = Vector3.new(0,0,0)
end
--game.Players.LocalPlayer.Character.Animate.Disabled = true
bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
end
ctrl = {f = 0, b = 0, l = 0, r = 0}
lastctrl = {f = 0, b = 0, l = 0, r = 0}
speed = 0
bg:Destroy()
bv:Destroy()
plr.Character.Humanoid.PlatformStand = false
game.Players.LocalPlayer.Character.Animate.Disabled = false
tpwalking = false




else
local plr = game.Players.LocalPlayer
local UpperTorso = plr.Character.UpperTorso
local flying = true
local deb = true
local ctrl = {f = 0, b = 0, l = 0, r = 0}
local lastctrl = {f = 0, b = 0, l = 0, r = 0}
local maxspeed = 50
local speed = 0


local bg = Instance.new("BodyGyro", UpperTorso)
bg.P = 9e4
bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
bg.cframe = UpperTorso.CFrame
local bv = Instance.new("BodyVelocity", UpperTorso)
bv.velocity = Vector3.new(0,0.1,0)
bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
if nowe == true then
plr.Character.Humanoid.PlatformStand = true
end
while nowe == true or game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 do
wait() 

if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
speed = speed+.5+(speed/maxspeed)
if speed > maxspeed then
speed = maxspeed
end
elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
speed = speed-1
if speed < 0 then
speed = 0
end
end
if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
else
bv.velocity = Vector3.new(0,0,0)
end 

bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
end
ctrl = {f = 0, b = 0, l = 0, r = 0}
lastctrl = {f = 0, b = 0, l = 0, r = 0}
speed = 0
bg:Destroy()
bv:Destroy()
plr.Character.Humanoid.PlatformStand = false
game.Players.LocalPlayer.Character.Animate.Disabled = false
tpwalking = false



end





end) 

local tis 

up.MouseButton1Down:connect(function()
tis = up.MouseEnter:connect(function()
while tis do
wait()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,1,0)
end
end)
end) 

up.MouseLeave:connect(function()
if tis then
tis:Disconnect()
tis = nil
end
end) 

local dis 

down.MouseButton1Down:connect(function()
dis = down.MouseEnter:connect(function()
while dis do
wait()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,-1,0)
end
end)
end) 

down.MouseLeave:connect(function()
if dis then
dis:Disconnect()
dis = nil
end
end)


game:GetService("Players").LocalPlayer.CharacterAdded:Connect(function(char)
wait(0.7)
game.Players.LocalPlayer.Character.Humanoid.PlatformStand = false
game.Players.LocalPlayer.Character.Animate.Disabled = false 

end)


plus.MouseButton1Down:connect(function()
speeds = speeds + 1
speed.Text = speeds
if nowe == true then


tpwalking = false
for i = 1, speeds do
spawn(function() 

local hb = game:GetService("RunService").Heartbeat


tpwalking = true
local chr = game.Players.LocalPlayer.Character
local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
while tpwalking and hb:Wait() and chr and hum and hum.Parent do
if hum.MoveDirection.Magnitude > 0 then
chr:TranslateBy(hum.MoveDirection)
end
end 

end)
end
end
end)
mine.MouseButton1Down:connect(function()
if speeds == 1 then
speed.Text = 'cannot be less than 1'
wait(1)
speed.Text = speeds
else
speeds = speeds - 1
speed.Text = speeds
if nowe == true then
tpwalking = false
for i = 1, speeds do
spawn(function() 

local hb = game:GetService("RunService").Heartbeat


tpwalking = true
local chr = game.Players.LocalPlayer.Character
local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
while tpwalking and hb:Wait() and chr and hum and hum.Parent do
if hum.MoveDirection.Magnitude > 0 then
chr:TranslateBy(hum.MoveDirection)
end
end 

end)
end
end
end
end) 

closebutton.MouseButton1Click:Connect(function()
main:Destroy()
end) 

mini.MouseButton1Click:Connect(function()
up.Visible = false
down.Visible = false
onof.Visible = false
plus.Visible = false
speed.Visible = false
mine.Visible = false
mini.Visible = false
mini2.Visible = true
main.Frame.BackgroundTransparency = 1
closebutton.Position = UDim2.new(0, 0, -1, 57)
end) 

mini2.MouseButton1Click:Connect(function()
up.Visible = true
down.Visible = true
onof.Visible = true
plus.Visible = true
speed.Visible = true
mine.Visible = true
mini.Visible = true
mini2.Visible = false
main.Frame.BackgroundTransparency = 0 
closebutton.Position = UDim2.new(0, 0, -1, 27)
end)
end)
tab5.newButton("Spectate", "Spectate script.", function()
    local runDummyScript = function(f,scri)
local oldenv = getfenv(f)
local newenv = setmetatable({}, {
__index = function(_, k)
if k:lower() == 'script' then
return scri
else
return oldenv[k]
end
end
})
setfenv(f, newenv)
ypcall(function() f() end)
end
cors = {}
mas = Instance.new("Model",game:GetService("Lighting")) 
mas.Name = "CompiledModel"
o1 = Instance.new("ScreenGui")
o2 = Instance.new("Frame")
o3 = Instance.new("TextButton")
o4 = Instance.new("TextButton")
o5 = Instance.new("TextLabel")
o6 = Instance.new("ImageButton")
o7 = Instance.new("LocalScript")
o1.Name = "SpectateGui"
o1.ResetOnSpawn = false
o1.Parent = mas
o2.Name = "Bar"
o2.Parent = o1
o2.Position = UDim2.new(-1,-100,0.87999999523163,-50)
o2.Size = UDim2.new(0,200,0,50)
o2.Position = UDim2.new(-1,-100,0.87999999523163,-50)
o2.BackgroundColor3 = Color3.new(0, 0, 0)
o2.BackgroundTransparency = 0.20000000298023
o2.BorderSizePixel = 5
o3.Name = "Previous"
o3.Parent = o2
o3.Size = UDim2.new(0.25,0,1,0)
o3.Text = "<"
o3.BackgroundColor3 = Color3.new(0.52549, 0.52549, 0.52549)
o3.BorderColor3 = Color3.new(0.509804, 0.796079, 1)
o3.BorderSizePixel = 0
o3.Font = Enum.Font.SourceSans
o3.FontSize = Enum.FontSize.Size48
o3.TextColor3 = Color3.new(1, 1, 1)
o4.Name = "Next"
o4.Parent = o2
o4.Position = UDim2.new(1,0,0,0)
o4.Size = UDim2.new(-0.25,0,1,0)
o4.Text = ">"
o4.Position = UDim2.new(1,0,0,0)
o4.BackgroundColor3 = Color3.new(0.52549, 0.52549, 0.52549)
o4.BorderColor3 = Color3.new(0.509804, 0.796079, 1)
o4.BorderSizePixel = 0
o4.Font = Enum.Font.SourceSans
o4.FontSize = Enum.FontSize.Size48
o4.TextColor3 = Color3.new(1, 1, 1)
o5.Name = "Title"
o5.Parent = o2
o5.Position = UDim2.new(0.27500000596046,0,0,0)
o5.Size = UDim2.new(0.44999998807907,0,1,0)
o5.Text = ""
o5.Position = UDim2.new(0.27500000596046,0,0,0)
o5.BackgroundColor3 = Color3.new(1, 1, 1)
o5.BackgroundTransparency = 1
o5.Font = Enum.Font.SourceSans
o5.FontSize = Enum.FontSize.Size14
o5.TextColor3 = Color3.new(1, 1, 1)
o5.TextScaled = true
o5.TextWrapped = true
o6.Name = "Button"
o6.Parent = o1
o6.Position = UDim2.new(0,0,0.5,-25)
o6.Size = UDim2.new(0,50,0,50)
o6.Position = UDim2.new(0,0,0.5,-25)
o6.BackgroundColor3 = Color3.new(1, 1, 1)
o6.BackgroundTransparency = 0.30000001192093
o6.BorderSizePixel = 5
o6.Image = "http://www.roblox.com/asset/?id=176106970"
o7.Parent = o1
table.insert(cors,coroutine.create(function()
wait()
runDummyScript(function()

cam = game.Workspace.CurrentCamera

local bar = script.Parent.Bar
local title = bar.Title
local prev = bar.Previous
local nex = bar.Next
local button = script.Parent.Button

function get()
	for _,v in pairs(game.Players:GetPlayers())do
		if v.Name == title.Text then
			return(_)
		end
	end
end

local debounce = false
button.MouseButton1Click:connect(function()
	if debounce == false then debounce = true
		bar:TweenPosition(UDim2.new(.5,-100,0.88,-50),"In","Linear",1,true)
		pcall(function()
				title.Text = game.Players:GetPlayerFromCharacter(cam.CameraSubject.Parent).Name
		end)
	elseif debounce == true then debounce = false
		pcall(function() cam.CameraSubject = game.Players.LocalPlayer.Character.Humanoid end)
			bar:TweenPosition(UDim2.new(-1,-100,0.88,-50),"In","Linear",1,true)
		end
end)

prev.MouseButton1Click:connect(function()
	wait(.1)
	local players = game.Players:GetPlayers()
	if not pcall(function() 
		game.Workspace.CurrentCamera.CameraSubject = players[get()-1].Character.Humanoid
		end) then
		game.Workspace.CurrentCamera.CameraSubject = players[#players].Character.Humanoid
	end
pcall(function()
				title.Text = game.Players:GetPlayerFromCharacter(cam.CameraSubject.Parent).Name
		end)
end)

nex.MouseButton1Click:connect(function()
	wait(.1)
	local players = game.Players:GetPlayers()
	local num = get()
	if not pcall(function() 
		cam.CameraSubject = players[get()+1].Character.Humanoid
		end) then
		cam.CameraSubject = players[1].Character.Humanoid
	end
pcall(function()
				title.Text = game.Players:GetPlayerFromCharacter(cam.CameraSubject.Parent).Name
		end)
end)


end,o7)
end))
mas.Parent = workspace
mas:MakeJoints()
local mas1 = mas:GetChildren()
for i=1,#mas1 do
	mas1[i].Parent = game:GetService("Players").LocalPlayer.PlayerGui 
	ypcall(function() mas1[i]:MakeJoints() end)
end
mas:Destroy()
for i=1,#cors do
coroutine.resume(cors[i])
end
end)
tab5.newButton("Infect", "Infect script", function()
  -- LocalScript

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local SwordName = "Sword"  -- Replace with the exact name of your sword tool
local ReachDistance = 300  -- Increase the reach distance to 300

local function hitPlayer(targetPlayer, sword)
    if targetPlayer ~= LocalPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("Humanoid") then
        local targetHumanoid = targetPlayer.Character.Humanoid
        local targetHRP = targetPlayer.Character.HumanoidRootPart
        local distance = (targetHRP.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
        if distance <= ReachDistance then
            -- Run this in a separate thread to apply damage simultaneously
            spawn(function()
                -- Loop until the player's health is zero
                while targetHumanoid.Health > 0 do
                    -- Simulate the hit by creating a touch event
                    firetouchinterest(sword.Handle, targetHRP, 0)  -- Simulate touching the player
                    firetouchinterest(sword.Handle, targetHRP, 1)  -- Release the touch
                    wait(0.5)  -- Slower hit frequency (half a second between hits)
                end
            end)
        end
    end
end

local function increaseSwordDamage(sword)
    -- Assuming the sword has a "Damage" property, increase it
    local damageProperty = sword:FindFirstChild("Damage")  -- Replace "Damage" with the correct property name if it exists
    if damageProperty and damageProperty:IsA("NumberValue") then
        damageProperty.Value = math.huge  -- Set to a very high value to ensure a one-hit kill
    end
end

local function extendSwordReach()
    -- Get the sword from the player's backpack or character
    local sword = LocalPlayer.Backpack:FindFirstChild(SwordName) or LocalPlayer.Character:FindFirstChild(SwordName)

    if not sword then
        print("Sword not found!")
        return
    end

    -- Equip the sword if it's in the backpack
    if sword.Parent == LocalPlayer.Backpack then
        LocalPlayer.Character.Humanoid:EquipTool(sword)
    end

    -- Increase the sword's damage
    increaseSwordDamage(sword)

    -- Loop through all players and check if they are within reach, damaging them simultaneously
    for _, player in pairs(Players:GetPlayers()) do
        hitPlayer(player, sword)
    end
end

-- Call the function to extend sword reach and "hit" everyone within reach
extendSwordReach()
end)
tab5.newButton("Teleport Player", "Tp script.", function()
    local CoreGui = game:GetService("StarterGui")

CoreGui:SetCore("SendNotification", {
    Title = "Script Made By",
    Text = "Xirius & Zolo",
    Duration = 2.5,
})

local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local TextBox = Instance.new("TextBox")
local TextButton = Instance.new("TextButton")

ScreenGui.Parent = game.CoreGui

Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.new(8,0,0)
Frame.BorderColor3 = Color3.new(0.67451, 0.211765, 0.152941)
Frame.Position = UDim2.new(0.9,0.5,0.3)
Frame.Size = UDim2.new(0.07,0.1,0.1)
Frame.Active = true
Frame.Draggable = false

TextBox.Parent = Frame
TextBox.BackgroundColor3 = Color3.new(5,5,5)
TextBox.BackgroundTransparency = 0
TextBox.Position = UDim2.new(0.103524067, 0, 0.200333327, 0)
TextBox.Size = UDim2.new(0.8,0.9,0.6)
TextBox.Font = Enum.Font.SourceSansLight
TextBox.FontSize = Enum.FontSize.Size14
TextBox.Text = "Name"
TextBox.TextScaled = true
TextBox.TextSize = 8
TextBox.TextWrapped = true

TextButton.MouseButton1Click:connect(function()
end)

local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local TextButton = Instance.new("TextButton")


ScreenGui.Parent = game.CoreGui

Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.new(8,0,0)
Frame.BorderColor3 = Color3.new(0.67451, 0.211765, 0.152941)
Frame.Position = UDim2.new(0.9,0.5,0.4)
Frame.Size = UDim2.new(0.07,0.1,0.1)
Frame.Active = true
Frame.Draggable = false

TextButton.Parent = Frame
TextButton.BackgroundColor3 = Color3.new(5,5,5)
TextButton.BackgroundTransparency = 0
TextButton.Position = UDim2.new(0.103524067, 0, 0.200333327, 0)
TextButton.Size = UDim2.new(0.8,0.9,0.6)
TextButton.Font = Enum.Font.SourceSansLight
TextButton.FontSize = Enum.FontSize.Size14
TextButton.Text = "Teleport"
TextButton.TextScaled = true
TextButton.TextSize = 8
TextButton.TextWrapped = true

TextButton.MouseButton1Click:connect(function()
local lplayer = game:GetService('Players').LocalPlayer
 
local yeeting = false
function GetPlayer(String)
local Found = {}
local strl = String:lower()
if strl == "all" then
for i,v in pairs(game:GetService("Players"):GetPlayers()) do
table.insert(Found,v)
end
elseif strl == "Random" then
for i,v in pairs(game:GetService("Players"):GetPlayers()) do
if v.Name ~= lplayer.Name then
table.insert(Found,v)
end
end 
elseif strl == "me" then
for i,v in pairs(game:GetService("Players"):GetPlayers()) do
if v.Name == lplayer.Name then
table.insert(Found,v)
end
end 
else
for i,v in pairs(game:GetService("Players"):GetPlayers()) do
if v.Name:lower():sub(1, #String) == String:lower() then
table.insert(Found,v)
end
end 
end
return Found 
end
function ahh(thing)
local asd = {'yeet','gui','yeet gui'}
local f = string.upper(asd[math.random(1,#asd)])
return f
end

local target = unpack(GetPlayer(TextBox.Text)).Character
 
game:GetService'Players'.LocalPlayer.Character.HumanoidRootPart.CFrame = target.Head.CFrame;coin.Location = target.Head.Position game["Run Service"].Heartbeat:wait()
end)
end)
tab5.newButton("WalkOn Walls", "Walk on walls.", function()
    NoobTH()
end)
tab5.newButton("Godmode", " Godmode beta", function()
local accessories = {}
function GodMode()
    if game.Players.LocalPlayer.Character then
        if game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
            for _, accessory in pairs(game.Players.LocalPlayer.Character.Humanoid:GetAccessories()) do
                table.insert(accessories, accessory:Clone())
            end
            game.Players.LocalPlayer.Character.Humanoid.Name = "deku"
        end
        local v = game.Players.LocalPlayer.Character["deku"]:Clone()
        v.Parent = game.Players.LocalPlayer.Character
        v.Name = "Humanoid"
        wait(0.1)
        game.Players.LocalPlayer.Character["deku"]:Destroy()
        workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character.Humanoid
        for _, accessory in pairs(accessories) do
            game.Players.LocalPlayer.Character.Humanoid:AddAccessory(accessory)
        end
        game.Players.LocalPlayer.Character.Animate.Disabled = true
        wait(0.1)
        game.Players.LocalPlayer.Character.Animate.Disabled = false
    end
end
GodMode()
end) 
tab5.newButton("Godmode", "Godmode all type", function()
     loadstring(game:HttpGet("https://freenote.biz/raw/Fhpx5r5A8M"))()
end)
tab5.newButton("FPS Viewer", "FPS script", function()
    local screenGui = Instance.new("ScreenGui")
screenGui.Name = "FPSGui"
screenGui.Parent = game:GetService("CoreGui")
local fpsLabel = Instance.new("TextLabel")
fpsLabel.Name = "FPSLabel"
fpsLabel.Size = UDim2.new(0, 100, 0, 50)
fpsLabel.Position = UDim2.new(0, 10, 0, 10)
fpsLabel.BackgroundTransparency = 1
fpsLabel.TextColor3 = Color3.new(1, 1, 1)
fpsLabel.TextStrokeTransparency = 0
fpsLabel.Font = Enum.Font.SourceSans
fpsLabel.TextSize = 40
fpsLabel.Parent = screenGui
local function calculateFPS()
    local lastTime = tick()
    local frames = 0
        game:GetService("RunService").RenderStepped:Connect(function()
        frames = frames + 1
        local currentTime = tick()
        if currentTime - lastTime >= 0.1 then
            fpsLabel.Text = "FPS: " .. tostring(math.floor(frames / (currentTime - lastTime)))
            frames = 0
            lastTime = currentTime
        end
    end)
end
calculateFPS()
end)

function NoobTH()
-- https://youtu.be/Z5Cl47UdF1s
-- https://controlc.com/19a39f78 ControlC backup
--[[
local _p = game:WaitForChild("Players")
local _plr = _p.ChildAdded:Wait()
if _plr == _p.LocalPlayer then
	_plr.ChildAdded:Connect(function(cccc)
		if c.Name == "PlayerScriptsLoader" then
			c.Disabled = true
		end
	end)
end
]]
repeat wait()
a = pcall(function()
	game:WaitForChild("Players").LocalPlayer:WaitForChild("PlayerScripts").ChildAdded:Connect(function(c)
		if c.Name == "PlayerScriptsLoader"then
			c.Disabled = true
		end
	end)
	end)
	if a == true then break end
until true == false
game:WaitForChild("Players").LocalPlayer:WaitForChild("PlayerScripts").ChildAdded:Connect(function(c)
	if c.Name == "PlayerScriptsLoader"then
		c.Disabled = true
	end
end)


function _CameraUI()
	local Players = game:GetService("Players")
	local TweenService = game:GetService("TweenService")
	
	local LocalPlayer = Players.LocalPlayer
	if not LocalPlayer then
		Players:GetPropertyChangedSignal("LocalPlayer"):Wait()
		LocalPlayer = Players.LocalPlayer
	end
	
	local function waitForChildOfClass(parent, class)
		local child = parent:FindFirstChildOfClass(class)
		while not child or child.ClassName ~= class do
			child = parent.ChildAdded:Wait()
		end
		return child
	end
	
	local PlayerGui = waitForChildOfClass(LocalPlayer, "PlayerGui")
	
	local TOAST_OPEN_SIZE = UDim2.new(0, 326, 0, 58)
	local TOAST_CLOSED_SIZE = UDim2.new(0, 80, 0, 58)
	local TOAST_BACKGROUND_COLOR = Color3.fromRGB(32, 32, 32)
	local TOAST_BACKGROUND_TRANS = 0.4
	local TOAST_FOREGROUND_COLOR = Color3.fromRGB(200, 200, 200)
	local TOAST_FOREGROUND_TRANS = 0
	
	-- Convenient syntax for creating a tree of instanes
	local function create(className)
		return function(props)
			local inst = Instance.new(className)
			local parent = props.Parent
			props.Parent = nil
			for name, val in pairs(props) do
				if type(name) == "string" then
					inst[name] = val
				else
					val.Parent = inst
				end
			end
			-- Only set parent after all other properties are initialized
			inst.Parent = parent
			return inst
		end
	end
	
	local initialized = false
	
	local uiRoot
	local toast
	local toastIcon
	local toastUpperText
	local toastLowerText
	
	local function initializeUI()
		assert(not initialized)
	
		uiRoot = create("ScreenGui"){
			Name = "RbxCameraUI",
			AutoLocalize = false,
			Enabled = true,
			DisplayOrder = -1, -- Appears behind default developer UI
			IgnoreGuiInset = false,
			ResetOnSpawn = false,
			ZIndexBehavior = Enum.ZIndexBehavior.Sibling,
	
			create("ImageLabel"){
				Name = "Toast",
				Visible = false,
				AnchorPoint = Vector2.new(0.5, 0),
				BackgroundTransparency = 1,
				BorderSizePixel = 0,
				Position = UDim2.new(0.5, 0, 0, 8),
				Size = TOAST_CLOSED_SIZE,
				Image = "rbxasset://textures/ui/Camera/CameraToast9Slice.png",
				ImageColor3 = TOAST_BACKGROUND_COLOR,
				ImageRectSize = Vector2.new(6, 6),
				ImageTransparency = 1,
				ScaleType = Enum.ScaleType.Slice,
				SliceCenter = Rect.new(3, 3, 3, 3),
				ClipsDescendants = true,
	
				create("Frame"){
					Name = "IconBuffer",
					BackgroundTransparency = 1,
					BorderSizePixel = 0,
					Position = UDim2.new(0, 0, 0, 0),
					Size = UDim2.new(0, 80, 1, 0),
	
					create("ImageLabel"){
						Name = "Icon",
						AnchorPoint = Vector2.new(0.5, 0.5),
						BackgroundTransparency = 1,
						Position = UDim2.new(0.5, 0, 0.5, 0),
						Size = UDim2.new(0, 48, 0, 48),
						ZIndex = 2,
						Image = "rbxasset://textures/ui/Camera/CameraToastIcon.png",
						ImageColor3 = TOAST_FOREGROUND_COLOR,
						ImageTransparency = 1,
					}
				},
	
				create("Frame"){
					Name = "TextBuffer",
					BackgroundTransparency = 1,
					BorderSizePixel = 0,
					Position = UDim2.new(0, 80, 0, 0),
					Size = UDim2.new(1, -80, 1, 0),
					ClipsDescendants = true,
	
					create("TextLabel"){
						Name = "Upper",
						AnchorPoint = Vector2.new(0, 1),
						BackgroundTransparency = 1,
						Position = UDim2.new(0, 0, 0.5, 0),
						Size = UDim2.new(1, 0, 0, 19),
						Font = Enum.Font.GothamSemibold,
						Text = "Camera control enabled",
						TextColor3 = TOAST_FOREGROUND_COLOR,
						TextTransparency = 1,
						TextSize = 19,
						TextXAlignment = Enum.TextXAlignment.Left,
						TextYAlignment = Enum.TextYAlignment.Center,
					},
	
					create("TextLabel"){
						Name = "Lower",
						AnchorPoint = Vector2.new(0, 0),
						BackgroundTransparency = 1,
						Position = UDim2.new(0, 0, 0.5, 3),
						Size = UDim2.new(1, 0, 0, 15),
						Font = Enum.Font.Gotham,
						Text = "Right mouse button to toggle",
						TextColor3 = TOAST_FOREGROUND_COLOR,
						TextTransparency = 1,
						TextSize = 15,
						TextXAlignment = Enum.TextXAlignment.Left,
						TextYAlignment = Enum.TextYAlignment.Center,
					},
				},
			},
	
			Parent = PlayerGui,
		}
	
		toast = uiRoot.Toast
		toastIcon = toast.IconBuffer.Icon
		toastUpperText = toast.TextBuffer.Upper
		toastLowerText = toast.TextBuffer.Lower
	
		initialized = true
	end
	
	local CameraUI = {}
	
	do
		-- Instantaneously disable the toast or enable for opening later on. Used when switching camera modes.
		function CameraUI.setCameraModeToastEnabled(enabled)
			if not enabled and not initialized then
				return
			end
	
			if not initialized then
				initializeUI()
			end
	
			toast.Visible = enabled
			if not enabled then
				CameraUI.setCameraModeToastOpen(false)
			end
		end
	
		local tweenInfo = TweenInfo.new(0.25, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	
		-- Tween the toast in or out. Toast must be enabled with setCameraModeToastEnabled.
		function CameraUI.setCameraModeToastOpen(open)
			assert(initialized)
	
			TweenService:Create(toast, tweenInfo, {
				Size = open and TOAST_OPEN_SIZE or TOAST_CLOSED_SIZE,
				ImageTransparency = open and TOAST_BACKGROUND_TRANS or 1,
			}):Play()
	
			TweenService:Create(toastIcon, tweenInfo, {
				ImageTransparency = open and TOAST_FOREGROUND_TRANS or 1,
			}):Play()
	
			TweenService:Create(toastUpperText, tweenInfo, {
				TextTransparency = open and TOAST_FOREGROUND_TRANS or 1,
			}):Play()
	
			TweenService:Create(toastLowerText, tweenInfo, {
				TextTransparency = open and TOAST_FOREGROUND_TRANS or 1,
			}):Play()
		end
	end
	
	return CameraUI
end

function _CameraToggleStateController()
	local Players = game:GetService("Players")
	local UserInputService = game:GetService("UserInputService")
	local GameSettings = UserSettings():GetService("UserGameSettings")
	
	local LocalPlayer = Players.LocalPlayer
	if not LocalPlayer then
		Players:GetPropertyChangedSignal("LocalPlayer"):Wait()
		LocalPlayer = Players.LocalPlayer
	end
	
	local Mouse = LocalPlayer:GetMouse()
	
	local Input = _CameraInput()
	local CameraUI = _CameraUI()
	
	local lastTogglePan = false
	local lastTogglePanChange = tick()
	
	local CROSS_MOUSE_ICON = "rbxasset://textures/Cursors/CrossMouseIcon.png"
	
	local lockStateDirty = false
	local wasTogglePanOnTheLastTimeYouWentIntoFirstPerson = false
	local lastFirstPerson = false
	
	CameraUI.setCameraModeToastEnabled(false)
	
	return function(isFirstPerson)
		local togglePan = Input.getTogglePan()
		local toastTimeout = 3
	
		if isFirstPerson and togglePan ~= lastTogglePan then
			lockStateDirty = true
		end
	
		if lastTogglePan ~= togglePan or tick() - lastTogglePanChange > toastTimeout then
			local doShow = togglePan and tick() - lastTogglePanChange < toastTimeout
	
			CameraUI.setCameraModeToastOpen(doShow)
	
			if togglePan then
				lockStateDirty = false
			end
			lastTogglePanChange = tick()
			lastTogglePan = togglePan
		end
	
		if isFirstPerson ~= lastFirstPerson then
			if isFirstPerson then
				wasTogglePanOnTheLastTimeYouWentIntoFirstPerson = Input.getTogglePan()
				Input.setTogglePan(true)
			elseif not lockStateDirty then
				Input.setTogglePan(wasTogglePanOnTheLastTimeYouWentIntoFirstPerson)
			end
		end
	
		if isFirstPerson then
			if Input.getTogglePan() then
				Mouse.Icon = CROSS_MOUSE_ICON
				UserInputService.MouseBehavior = Enum.MouseBehavior.LockCenter
				--GameSettings.RotationType = Enum.RotationType.CameraRelative
			else
				Mouse.Icon = ""
				UserInputService.MouseBehavior = Enum.MouseBehavior.Default
				--GameSettings.RotationType = Enum.RotationType.CameraRelative
			end
	
		elseif Input.getTogglePan() then
			Mouse.Icon = CROSS_MOUSE_ICON
			UserInputService.MouseBehavior = Enum.MouseBehavior.LockCenter
			GameSettings.RotationType = Enum.RotationType.MovementRelative
	
		elseif Input.getHoldPan() then
			Mouse.Icon = ""
			UserInputService.MouseBehavior = Enum.MouseBehavior.LockCurrentPosition
			GameSettings.RotationType = Enum.RotationType.MovementRelative
	
		else
			Mouse.Icon = ""
			UserInputService.MouseBehavior = Enum.MouseBehavior.Default
			GameSettings.RotationType = Enum.RotationType.MovementRelative
		end
	
		lastFirstPerson = isFirstPerson
	end
end

function _CameraInput()
	local UserInputService = game:GetService("UserInputService")
	
	local MB_TAP_LENGTH = 0.3 -- length of time for a short mouse button tap to be registered
	
	local rmbDown, rmbUp
	do
		local rmbDownBindable = Instance.new("BindableEvent")
		local rmbUpBindable = Instance.new("BindableEvent")
	
		rmbDown = rmbDownBindable.Event
		rmbUp = rmbUpBindable.Event
	
		UserInputService.InputBegan:Connect(function(input, gpe)
			if not gpe and input.UserInputType == Enum.UserInputType.MouseButton2 then
				rmbDownBindable:Fire()
			end
		end)
	
		UserInputService.InputEnded:Connect(function(input, gpe)
			if input.UserInputType == Enum.UserInputType.MouseButton2 then
				rmbUpBindable:Fire()
			end
		end)
	end
	
	local holdPan = false
	local togglePan = false
	local lastRmbDown = 0 -- tick() timestamp of the last right mouse button down event
	
	local CameraInput = {}
	
	function CameraInput.getHoldPan()
		return holdPan
	end
	
	function CameraInput.getTogglePan()
		return togglePan
	end
	
	function CameraInput.getPanning()
		return togglePan or holdPan
	end
	
	function CameraInput.setTogglePan(value)
		togglePan = value
	end
	
	local cameraToggleInputEnabled = false
	local rmbDownConnection
	local rmbUpConnection
	
	function CameraInput.enableCameraToggleInput()
		if cameraToggleInputEnabled then
			return
		end
		cameraToggleInputEnabled = true
	
		holdPan = false
		togglePan = false
	
		if rmbDownConnection then
			rmbDownConnection:Disconnect()
		end
	
		if rmbUpConnection then
			rmbUpConnection:Disconnect()
		end
	
		rmbDownConnection = rmbDown:Connect(function()
			holdPan = true
			lastRmbDown = tick()
		end)
	
		rmbUpConnection = rmbUp:Connect(function()
			holdPan = false
			if tick() - lastRmbDown < MB_TAP_LENGTH and (togglePan or UserInputService:GetMouseDelta().Magnitude < 2) then
				togglePan = not togglePan
			end
		end)
	end
	
	function CameraInput.disableCameraToggleInput()
		if not cameraToggleInputEnabled then
			return
		end
		cameraToggleInputEnabled = false
	
		if rmbDownConnection then
			rmbDownConnection:Disconnect()
			rmbDownConnection = nil
		end
		if rmbUpConnection then
			rmbUpConnection:Disconnect()
			rmbUpConnection = nil
		end
	end
	
	return CameraInput
end

function _BaseCamera()
	--[[
		BaseCamera - Abstract base class for camera control modules
		2018 Camera Update - AllYourBlox
	--]]
	
	--[[ Local Constants ]]--
	local UNIT_Z = Vector3.new(0,0,1)
	local X1_Y0_Z1 = Vector3.new(1,0,1)	--Note: not a unit vector, used for projecting onto XZ plane
	
	local THUMBSTICK_DEADZONE = 0.2
	local DEFAULT_DISTANCE = 12.5	-- Studs
	local PORTRAIT_DEFAULT_DISTANCE = 25		-- Studs
	local FIRST_PERSON_DISTANCE_THRESHOLD = 1.0 -- Below this value, snap into first person
	
	local CAMERA_ACTION_PRIORITY = Enum.ContextActionPriority.Default.Value
	
	-- Note: DotProduct check in CoordinateFrame::lookAt() prevents using values within about
	-- 8.11 degrees of the +/- Y axis, that's why these limits are currently 80 degrees
	local MIN_Y = math.rad(-80)
	local MAX_Y = math.rad(80)
	
	local TOUCH_ADJUST_AREA_UP = math.rad(30)
	local TOUCH_ADJUST_AREA_DOWN = math.rad(-15)
	
	local TOUCH_SENSITIVTY_ADJUST_MAX_Y = 2.1
	local TOUCH_SENSITIVTY_ADJUST_MIN_Y = 0.5
	
	local VR_ANGLE = math.rad(15)
	local VR_LOW_INTENSITY_ROTATION = Vector2.new(math.rad(15), 0)
	local VR_HIGH_INTENSITY_ROTATION = Vector2.new(math.rad(45), 0)
	local VR_LOW_INTENSITY_REPEAT = 0.1
	local VR_HIGH_INTENSITY_REPEAT = 0.4
	
	local ZERO_VECTOR2 = Vector2.new(0,0)
	local ZERO_VECTOR3 = Vector3.new(0,0,0)
	
	local TOUCH_SENSITIVTY = Vector2.new(0.00945 * math.pi, 0.003375 * math.pi)
	local MOUSE_SENSITIVITY = Vector2.new( 0.002 * math.pi, 0.0015 * math.pi )
	
	local SEAT_OFFSET = Vector3.new(0,5,0)
	local VR_SEAT_OFFSET = Vector3.new(0,4,0)
	local HEAD_OFFSET = Vector3.new(0,1.5,0)
	local R15_HEAD_OFFSET = Vector3.new(0, 1.5, 0)
	local R15_HEAD_OFFSET_NO_SCALING = Vector3.new(0, 2, 0)
	local HUMANOID_ROOT_PART_SIZE = Vector3.new(2, 2, 1)
	
	local GAMEPAD_ZOOM_STEP_1 = 0
	local GAMEPAD_ZOOM_STEP_2 = 10
	local GAMEPAD_ZOOM_STEP_3 = 20
	
	local PAN_SENSITIVITY = 20
	local ZOOM_SENSITIVITY_CURVATURE = 0.5
	
	local abs = math.abs
	local sign = math.sign
	
	local FFlagUserCameraToggle do
		local success, result = pcall(function()
			return UserSettings():IsUserFeatureEnabled("UserCameraToggle")
		end)
		FFlagUserCameraToggle = success and result
	end
	
	local FFlagUserDontAdjustSensitvityForPortrait do
		local success, result = pcall(function()
			return UserSettings():IsUserFeatureEnabled("UserDontAdjustSensitvityForPortrait")
		end)
		FFlagUserDontAdjustSensitvityForPortrait = success and result
	end
	
	local FFlagUserFixZoomInZoomOutDiscrepancy do
		local success, result = pcall(function()
			return UserSettings():IsUserFeatureEnabled("UserFixZoomInZoomOutDiscrepancy")
		end)
		FFlagUserFixZoomInZoomOutDiscrepancy = success and result
	end
	
	local Util = _CameraUtils()
	local ZoomController = _ZoomController()
	local CameraToggleStateController = _CameraToggleStateController()
	local CameraInput = _CameraInput()
	local CameraUI = _CameraUI()
	
	--[[ Roblox Services ]]--
	local Players = game:GetService("Players")
	local UserInputService = game:GetService("UserInputService")
	local StarterGui = game:GetService("StarterGui")
	local GuiService = game:GetService("GuiService")
	local ContextActionService = game:GetService("ContextActionService")
	local VRService = game:GetService("VRService")
	local UserGameSettings = UserSettings():GetService("UserGameSettings")
	
	local player = Players.LocalPlayer 
	
	--[[ The Module ]]--
	local BaseCamera = {}
	BaseCamera.__index = BaseCamera
	
	function BaseCamera.new()
		local self = setmetatable({}, BaseCamera)
	
		-- So that derived classes have access to this
		self.FIRST_PERSON_DISTANCE_THRESHOLD = FIRST_PERSON_DISTANCE_THRESHOLD
	
		self.cameraType = nil
		self.cameraMovementMode = nil
	
		self.lastCameraTransform = nil
		self.rotateInput = ZERO_VECTOR2
		self.userPanningCamera = false
		self.lastUserPanCamera = tick()
	
		self.humanoidRootPart = nil
		self.humanoidCache = {}
	
		-- Subject and position on last update call
		self.lastSubject = nil
		self.lastSubjectPosition = Vector3.new(0,5,0)
	
		-- These subject distance members refer to the nominal camera-to-subject follow distance that the camera
		-- is trying to maintain, not the actual measured value.
		-- The default is updated when screen orientation or the min/max distances change,
		-- to be sure the default is always in range and appropriate for the orientation.
		self.defaultSubjectDistance = math.clamp(DEFAULT_DISTANCE, player.CameraMinZoomDistance, player.CameraMaxZoomDistance)
		self.currentSubjectDistance = math.clamp(DEFAULT_DISTANCE, player.CameraMinZoomDistance, player.CameraMaxZoomDistance)
	
		self.inFirstPerson = false
		self.inMouseLockedMode = false
		self.portraitMode = false
		self.isSmallTouchScreen = false
	
		-- Used by modules which want to reset the camera angle on respawn.
		self.resetCameraAngle = true
	
		self.enabled = false
	
		-- Input Event Connections
		self.inputBeganConn = nil
		self.inputChangedConn = nil
		self.inputEndedConn = nil
	
		self.startPos = nil
		self.lastPos = nil
		self.panBeginLook = nil
	
		self.panEnabled = true
		self.keyPanEnabled = true
		self.distanceChangeEnabled = true
	
		self.PlayerGui = nil
	
		self.cameraChangedConn = nil
		self.viewportSizeChangedConn = nil
	
		self.boundContextActions = {}
	
		-- VR Support
		self.shouldUseVRRotation = false
		self.VRRotationIntensityAvailable = false
		self.lastVRRotationIntensityCheckTime = 0
		self.lastVRRotationTime = 0
		self.vrRotateKeyCooldown = {}
		self.cameraTranslationConstraints = Vector3.new(1, 1, 1)
		self.humanoidJumpOrigin = nil
		self.trackingHumanoid = nil
		self.cameraFrozen = false
		self.subjectStateChangedConn = nil
	
		-- Gamepad support
		self.activeGamepad = nil
		self.gamepadPanningCamera = false
		self.lastThumbstickRotate = nil
		self.numOfSeconds = 0.7
		self.currentSpeed = 0
		self.maxSpeed = 6
		self.vrMaxSpeed = 4
		self.lastThumbstickPos = Vector2.new(0,0)
		self.ySensitivity = 0.65
		self.lastVelocity = nil
		self.gamepadConnectedConn = nil
		self.gamepadDisconnectedConn = nil
		self.currentZoomSpeed = 1.0
		self.L3ButtonDown = false
		self.dpadLeftDown = false
		self.dpadRightDown = false
	
		-- Touch input support
		self.isDynamicThumbstickEnabled = false
		self.fingerTouches = {}
		self.dynamicTouchInput = nil
		self.numUnsunkTouches = 0
		self.inputStartPositions = {}
		self.inputStartTimes = {}
		self.startingDiff = nil
		self.pinchBeginZoom = nil
		self.userPanningTheCamera = false
		self.touchActivateConn = nil
	
		-- Mouse locked formerly known as shift lock mode
		self.mouseLockOffset = ZERO_VECTOR3
	
		-- [[ NOTICE ]] --
		-- Initialization things used to always execute at game load time, but now these camera modules are instantiated
		-- when needed, so the code here may run well after the start of the game
	
		if player.Character then
			self:OnCharacterAdded(player.Character)
		end
	
		player.CharacterAdded:Connect(function(char)
			self:OnCharacterAdded(char)
		end)
	
		if self.cameraChangedConn then self.cameraChangedConn:Disconnect() end
		self.cameraChangedConn = workspace:GetPropertyChangedSignal("CurrentCamera"):Connect(function()
			self:OnCurrentCameraChanged()
		end)
		self:OnCurrentCameraChanged()
	
		if self.playerCameraModeChangeConn then self.playerCameraModeChangeConn:Disconnect() end
		self.playerCameraModeChangeConn = player:GetPropertyChangedSignal("CameraMode"):Connect(function()
			self:OnPlayerCameraPropertyChange()
		end)
	
		if self.minDistanceChangeConn then self.minDistanceChangeConn:Disconnect() end
		self.minDistanceChangeConn = player:GetPropertyChangedSignal("CameraMinZoomDistance"):Connect(function()
			self:OnPlayerCameraPropertyChange()
		end)
	
		if self.maxDistanceChangeConn then self.maxDistanceChangeConn:Disconnect() end
		self.maxDistanceChangeConn = player:GetPropertyChangedSignal("CameraMaxZoomDistance"):Connect(function()
			self:OnPlayerCameraPropertyChange()
		end)
	
		if self.playerDevTouchMoveModeChangeConn then self.playerDevTouchMoveModeChangeConn:Disconnect() end
		self.playerDevTouchMoveModeChangeConn = player:GetPropertyChangedSignal("DevTouchMovementMode"):Connect(function()
			self:OnDevTouchMovementModeChanged()
		end)
		self:OnDevTouchMovementModeChanged() -- Init
	
		if self.gameSettingsTouchMoveMoveChangeConn then self.gameSettingsTouchMoveMoveChangeConn:Disconnect() end
		self.gameSettingsTouchMoveMoveChangeConn = UserGameSettings:GetPropertyChangedSignal("TouchMovementMode"):Connect(function()
			self:OnGameSettingsTouchMovementModeChanged()
		end)
		self:OnGameSettingsTouchMovementModeChanged() -- Init
	
		UserGameSettings:SetCameraYInvertVisible()
		UserGameSettings:SetGamepadCameraSensitivityVisible()
	
		self.hasGameLoaded = game:IsLoaded()
		if not self.hasGameLoaded then
			self.gameLoadedConn = game.Loaded:Connect(function()
				self.hasGameLoaded = true
				self.gameLoadedConn:Disconnect()
				self.gameLoadedConn = nil
			end)
		end
	
		self:OnPlayerCameraPropertyChange()
	
		return self
	end
	
	function BaseCamera:GetModuleName()
		return "BaseCamera"
	end
	
	function BaseCamera:OnCharacterAdded(char)
		self.resetCameraAngle = self.resetCameraAngle or self:GetEnabled()
		self.humanoidRootPart = nil
		if UserInputService.TouchEnabled then
			self.PlayerGui = player:WaitForChild("PlayerGui")
			for _, child in ipairs(char:GetChildren()) do
				if child:IsA("Tool") then
					self.isAToolEquipped = true
				end
			end
			char.ChildAdded:Connect(function(child)
				if child:IsA("Tool") then
					self.isAToolEquipped = true
				end
			end)
			char.ChildRemoved:Connect(function(child)
				if child:IsA("Tool") then
					self.isAToolEquipped = false
				end
			end)
		end
	end
	
	function BaseCamera:GetHumanoidRootPart()
		if not self.humanoidRootPart then
			if player.Character then
				local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
				if humanoid then
					self.humanoidRootPart = humanoid.RootPart
				end
			end
		end
		return self.humanoidRootPart
	end
	
	function BaseCamera:GetBodyPartToFollow(humanoid, isDead)
		-- If the humanoid is dead, prefer the head part if one still exists as a sibling of the humanoid
		if humanoid:GetState() == Enum.HumanoidStateType.Dead then
			local character = humanoid.Parent
			if character and character:IsA("Model") then
				return character:FindFirstChild("Head") or humanoid.RootPart
			end
		end
	
		return humanoid.RootPart
	end
	
	function BaseCamera:GetSubjectPosition()
		local result = self.lastSubjectPosition
		local camera = game.Workspace.CurrentCamera
		local cameraSubject = camera and camera.CameraSubject
	
		if cameraSubject then
			if cameraSubject:IsA("Humanoid") then
				local humanoid = cameraSubject
				local humanoidIsDead = humanoid:GetState() == Enum.HumanoidStateType.Dead
	
				if VRService.VREnabled and humanoidIsDead and humanoid == self.lastSubject then
					result = self.lastSubjectPosition
				else
					local bodyPartToFollow = humanoid.RootPart
	
					-- If the humanoid is dead, prefer their head part as a follow target, if it exists
					if humanoidIsDead then
						if humanoid.Parent and humanoid.Parent:IsA("Model") then
							bodyPartToFollow = humanoid.Parent:FindFirstChild("Head") or bodyPartToFollow
						end
					end
	
					if bodyPartToFollow and bodyPartToFollow:IsA("BasePart") then
						local heightOffset
						if humanoid.RigType == Enum.HumanoidRigType.R15 then
							if humanoid.AutomaticScalingEnabled then
								heightOffset = R15_HEAD_OFFSET
								if bodyPartToFollow == humanoid.RootPart then
									local rootPartSizeOffset = (humanoid.RootPart.Size.Y/2) - (HUMANOID_ROOT_PART_SIZE.Y/2)
									heightOffset = heightOffset + Vector3.new(0, rootPartSizeOffset, 0)
								end
							else
								heightOffset = R15_HEAD_OFFSET_NO_SCALING
							end
						else
							heightOffset = HEAD_OFFSET
						end
	
						if humanoidIsDead then
							heightOffset = ZERO_VECTOR3
						end
	
						result = bodyPartToFollow.CFrame.p + bodyPartToFollow.CFrame:vectorToWorldSpace(heightOffset + humanoid.CameraOffset)
					end
				end
	
			elseif cameraSubject:IsA("VehicleSeat") then
				local offset = SEAT_OFFSET
				if VRService.VREnabled then
					offset = VR_SEAT_OFFSET
				end
				result = cameraSubject.CFrame.p + cameraSubject.CFrame:vectorToWorldSpace(offset)
			elseif cameraSubject:IsA("SkateboardPlatform") then
				result = cameraSubject.CFrame.p + SEAT_OFFSET
			elseif cameraSubject:IsA("BasePart") then
				result = cameraSubject.CFrame.p
			elseif cameraSubject:IsA("Model") then
				if cameraSubject.PrimaryPart then
					result = cameraSubject:GetPrimaryPartCFrame().p
				else
					result = cameraSubject:GetModelCFrame().p
				end
			end
		else
			-- cameraSubject is nil
			-- Note: Previous RootCamera did not have this else case and let self.lastSubject and self.lastSubjectPosition
			-- both get set to nil in the case of cameraSubject being nil. This function now exits here to preserve the
			-- last set valid values for these, as nil values are not handled cases
			return
		end
	
		self.lastSubject = cameraSubject
		self.lastSubjectPosition = result
	
		return result
	end
	
	function BaseCamera:UpdateDefaultSubjectDistance()
		if self.portraitMode then
			self.defaultSubjectDistance = math.clamp(PORTRAIT_DEFAULT_DISTANCE, player.CameraMinZoomDistance, player.CameraMaxZoomDistance)
		else
			self.defaultSubjectDistance = math.clamp(DEFAULT_DISTANCE, player.CameraMinZoomDistance, player.CameraMaxZoomDistance)
		end
	end
	
	function BaseCamera:OnViewportSizeChanged()
		local camera = game.Workspace.CurrentCamera
		local size = camera.ViewportSize
		self.portraitMode = size.X < size.Y
		self.isSmallTouchScreen = UserInputService.TouchEnabled and (size.Y < 500 or size.X < 700)
	
		self:UpdateDefaultSubjectDistance()
	end
	
	-- Listener for changes to workspace.CurrentCamera
	function BaseCamera:OnCurrentCameraChanged()
		if UserInputService.TouchEnabled then
			if self.viewportSizeChangedConn then
				self.viewportSizeChangedConn:Disconnect()
				self.viewportSizeChangedConn = nil
			end
	
			local newCamera = game.Workspace.CurrentCamera
	
			if newCamera then
				self:OnViewportSizeChanged()
				self.viewportSizeChangedConn = newCamera:GetPropertyChangedSignal("ViewportSize"):Connect(function()
					self:OnViewportSizeChanged()
				end)
			end
		end
	
		-- VR support additions
		if self.cameraSubjectChangedConn then
			self.cameraSubjectChangedConn:Disconnect()
			self.cameraSubjectChangedConn = nil
		end
	
		local camera = game.Workspace.CurrentCamera
		if camera then
			self.cameraSubjectChangedConn = camera:GetPropertyChangedSignal("CameraSubject"):Connect(function()
				self:OnNewCameraSubject()
			end)
			self:OnNewCameraSubject()
		end
	end
	
	function BaseCamera:OnDynamicThumbstickEnabled()
		if UserInputService.TouchEnabled then
			self.isDynamicThumbstickEnabled = true
		end
	end
	
	function BaseCamera:OnDynamicThumbstickDisabled()
		self.isDynamicThumbstickEnabled = false
	end
	
	function BaseCamera:OnGameSettingsTouchMovementModeChanged()
		if player.DevTouchMovementMode == Enum.DevTouchMovementMode.UserChoice then
			if (UserGameSettings.TouchMovementMode == Enum.TouchMovementMode.DynamicThumbstick
				or UserGameSettings.TouchMovementMode == Enum.TouchMovementMode.Default) then
				self:OnDynamicThumbstickEnabled()
			else
				self:OnDynamicThumbstickDisabled()
			end
		end
	end
	
	function BaseCamera:OnDevTouchMovementModeChanged()
		if player.DevTouchMovementMode.Name == "DynamicThumbstick" then
			self:OnDynamicThumbstickEnabled()
		else
			self:OnGameSettingsTouchMovementModeChanged()
		end
	end
	
	function BaseCamera:OnPlayerCameraPropertyChange()
		-- This call forces re-evaluation of player.CameraMode and clamping to min/max distance which may have changed
		self:SetCameraToSubjectDistance(self.currentSubjectDistance)
	end
	
	function BaseCamera:GetCameraHeight()
		if VRService.VREnabled and not self.inFirstPerson then
			return math.sin(VR_ANGLE) * self.currentSubjectDistance
		end
		return 0
	end
	
	function BaseCamera:InputTranslationToCameraAngleChange(translationVector, sensitivity)
		if not FFlagUserDontAdjustSensitvityForPortrait then
			local camera = game.Workspace.CurrentCamera
			if camera and camera.ViewportSize.X > 0 and camera.ViewportSize.Y > 0 and (camera.ViewportSize.Y > camera.ViewportSize.X) then
				-- Screen has portrait orientation, swap X and Y sensitivity
				return translationVector * Vector2.new( sensitivity.Y, sensitivity.X)
			end
		end
		return translationVector * sensitivity
	end
	
	function BaseCamera:Enable(enable)
		if self.enabled ~= enable then
			self.enabled = enable
			if self.enabled then
				self:ConnectInputEvents()
				self:BindContextActions()
	
				if player.CameraMode == Enum.CameraMode.LockFirstPerson then
					self.currentSubjectDistance = 0.5
					if not self.inFirstPerson then
						self:EnterFirstPerson()
					end
				end
			else
				self:DisconnectInputEvents()
				self:UnbindContextActions()
				-- Clean up additional event listeners and reset a bunch of properties
				self:Cleanup()
			end
		end
	end
	
	function BaseCamera:GetEnabled()
		return self.enabled
	end
	
	function BaseCamera:OnInputBegan(input, processed)
		if input.UserInputType == Enum.UserInputType.Touch then
			self:OnTouchBegan(input, processed)
		elseif input.UserInputType == Enum.UserInputType.MouseButton2 then
			self:OnMouse2Down(input, processed)
		elseif input.UserInputType == Enum.UserInputType.MouseButton3 then
			self:OnMouse3Down(input, processed)
		end
	end
	
	function BaseCamera:OnInputChanged(input, processed)
		if input.UserInputType == Enum.UserInputType.Touch then
			self:OnTouchChanged(input, processed)
		elseif input.UserInputType == Enum.UserInputType.MouseMovement then
			self:OnMouseMoved(input, processed)
		end
	end
	
	function BaseCamera:OnInputEnded(input, processed)
		if input.UserInputType == Enum.UserInputType.Touch then
			self:OnTouchEnded(input, processed)
		elseif input.UserInputType == Enum.UserInputType.MouseButton2 then
			self:OnMouse2Up(input, processed)
		elseif input.UserInputType == Enum.UserInputType.MouseButton3 then
			self:OnMouse3Up(input, processed)
		end
	end
	
	function BaseCamera:OnPointerAction(wheel, pan, pinch, processed)
		if processed then
			return
		end
	
		if pan.Magnitude > 0 then
			local inversionVector = Vector2.new(1, UserGameSettings:GetCameraYInvertValue())
			local rotateDelta = self:InputTranslationToCameraAngleChange(PAN_SENSITIVITY*pan, MOUSE_SENSITIVITY)*inversionVector
			self.rotateInput = self.rotateInput + rotateDelta
		end
	
		local zoom = self.currentSubjectDistance
		local zoomDelta = -(wheel + pinch)
	
		if abs(zoomDelta) > 0 then
			local newZoom
			if self.inFirstPerson and zoomDelta > 0 then
				newZoom = FIRST_PERSON_DISTANCE_THRESHOLD
			else
				if FFlagUserFixZoomInZoomOutDiscrepancy then
					if (zoomDelta > 0) then
						newZoom = zoom + zoomDelta*(1 + zoom*ZOOM_SENSITIVITY_CURVATURE)
					else
						newZoom = (zoom + zoomDelta) / (1 - zoomDelta*ZOOM_SENSITIVITY_CURVATURE)
					end
				else
					newZoom = zoom + zoomDelta*(1 + zoom*ZOOM_SENSITIVITY_CURVATURE)
				end
			end
	
			self:SetCameraToSubjectDistance(newZoom)
		end
	end
	
	function BaseCamera:ConnectInputEvents()
		self.pointerActionConn = UserInputService.PointerAction:Connect(function(wheel, pan, pinch, processed)
			self:OnPointerAction(wheel, pan, pinch, processed)
		end)
	
		self.inputBeganConn = UserInputService.InputBegan:Connect(function(input, processed)
			self:OnInputBegan(input, processed)
		end)
	
		self.inputChangedConn = UserInputService.InputChanged:Connect(function(input, processed)
			self:OnInputChanged(input, processed)
		end)
	
		self.inputEndedConn = UserInputService.InputEnded:Connect(function(input, processed)
			self:OnInputEnded(input, processed)
		end)
	
		self.menuOpenedConn = GuiService.MenuOpened:connect(function()
			self:ResetInputStates()
		end)
	
		self.gamepadConnectedConn = UserInputService.GamepadDisconnected:connect(function(gamepadEnum)
			if self.activeGamepad ~= gamepadEnum then return end
			self.activeGamepad = nil
			self:AssignActivateGamepad()
		end)
	
		self.gamepadDisconnectedConn = UserInputService.GamepadConnected:connect(function(gamepadEnum)
			if self.activeGamepad == nil then
				self:AssignActivateGamepad()
			end
		end)
	
		self:AssignActivateGamepad()
		if not FFlagUserCameraToggle then
			self:UpdateMouseBehavior()
		end
	end
	
	function BaseCamera:BindContextActions()
		self:BindGamepadInputActions()
		self:BindKeyboardInputActions()
	end
	
	function BaseCamera:AssignActivateGamepad()
		local connectedGamepads = UserInputService:GetConnectedGamepads()
		if #connectedGamepads > 0 then
			for i = 1, #connectedGamepads do
				if self.activeGamepad == nil then
					self.activeGamepad = connectedGamepads[i]
				elseif connectedGamepads[i].Value < self.activeGamepad.Value then
					self.activeGamepad = connectedGamepads[i]
				end
			end
		end
	
		if self.activeGamepad == nil then -- nothing is connected, at least set up for gamepad1
			self.activeGamepad = Enum.UserInputType.Gamepad1
		end
	end
	
	function BaseCamera:DisconnectInputEvents()
		if self.inputBeganConn then
			self.inputBeganConn:Disconnect()
			self.inputBeganConn = nil
		end
		if self.inputChangedConn then
			self.inputChangedConn:Disconnect()
			self.inputChangedConn = nil
		end
		if self.inputEndedConn then
			self.inputEndedConn:Disconnect()
			self.inputEndedConn = nil
		end
	end
	
	function BaseCamera:UnbindContextActions()
		for i = 1, #self.boundContextActions do
			ContextActionService:UnbindAction(self.boundContextActions[i])
		end
		self.boundContextActions = {}
	end
	
	function BaseCamera:Cleanup()
		if self.pointerActionConn then
			self.pointerActionConn:Disconnect()
			self.pointerActionConn = nil
		end
		if self.menuOpenedConn then
			self.menuOpenedConn:Disconnect()
			self.menuOpenedConn = nil
		end
		if self.mouseLockToggleConn then
			self.mouseLockToggleConn:Disconnect()
			self.mouseLockToggleConn = nil
		end
		if self.gamepadConnectedConn then
			self.gamepadConnectedConn:Disconnect()
			self.gamepadConnectedConn = nil
		end
		if self.gamepadDisconnectedConn then
			self.gamepadDisconnectedConn:Disconnect()
			self.gamepadDisconnectedConn = nil
		end
		if self.subjectStateChangedConn then
			self.subjectStateChangedConn:Disconnect()
			self.subjectStateChangedConn = nil
		end
		if self.viewportSizeChangedConn then
			self.viewportSizeChangedConn:Disconnect()
			self.viewportSizeChangedConn = nil
		end
		if self.touchActivateConn then
			self.touchActivateConn:Disconnect()
			self.touchActivateConn = nil
		end
	
		self.turningLeft = false
		self.turningRight = false
		self.lastCameraTransform = nil
		self.lastSubjectCFrame = nil
		self.userPanningTheCamera = false
		self.rotateInput = Vector2.new()
		self.gamepadPanningCamera = Vector2.new(0,0)
	
		-- Reset input states
		self.startPos = nil
		self.lastPos = nil
		self.panBeginLook = nil
		self.isRightMouseDown = false
		self.isMiddleMouseDown = false
	
		self.fingerTouches = {}
		self.dynamicTouchInput = nil
		self.numUnsunkTouches = 0
	
		self.startingDiff = nil
		self.pinchBeginZoom = nil
	
		-- Unlock mouse for example if right mouse button was being held down
		if UserInputService.MouseBehavior ~= Enum.MouseBehavior.LockCenter then
			UserInputService.MouseBehavior = Enum.MouseBehavior.Default
		end
	end
	
	-- This is called when settings menu is opened
	function BaseCamera:ResetInputStates()
		self.isRightMouseDown = false
		self.isMiddleMouseDown = false
		self:OnMousePanButtonReleased() -- this function doesn't seem to actually need parameters
	
		if UserInputService.TouchEnabled then
			--[[menu opening was causing serious touch issues
			this should disable all active touch events if
			they're active when menu opens.]]
			for inputObject in pairs(self.fingerTouches) do
				self.fingerTouches[inputObject] = nil
			end
			self.dynamicTouchInput = nil
			self.panBeginLook = nil
			self.startPos = nil
			self.lastPos = nil
			self.userPanningTheCamera = false
			self.startingDiff = nil
			self.pinchBeginZoom = nil
			self.numUnsunkTouches = 0
		end
	end
	
	function BaseCamera:GetGamepadPan(name, state, input)
		if input.UserInputType == self.activeGamepad and input.KeyCode == Enum.KeyCode.Thumbstick2 then
	--		if self.L3ButtonDown then
	--			-- L3 Thumbstick is depressed, right stick controls dolly in/out
	--			if (input.Position.Y > THUMBSTICK_DEADZONE) then
	--				self.currentZoomSpeed = 0.96
	--			elseif (input.Position.Y < -THUMBSTICK_DEADZONE) then
	--				self.currentZoomSpeed = 1.04
	--			else
	--				self.currentZoomSpeed = 1.00
	--			end
	--		else
				if state == Enum.UserInputState.Cancel then
					self.gamepadPanningCamera = ZERO_VECTOR2
					return
				end
	
				local inputVector = Vector2.new(input.Position.X, -input.Position.Y)
				if inputVector.magnitude > THUMBSTICK_DEADZONE then
					self.gamepadPanningCamera = Vector2.new(input.Position.X, -input.Position.Y)
				else
					self.gamepadPanningCamera = ZERO_VECTOR2
				end
			--end
			return Enum.ContextActionResult.Sink
		end
		return Enum.ContextActionResult.Pass
	end
	
	function BaseCamera:DoKeyboardPanTurn(name, state, input)
		if not self.hasGameLoaded and VRService.VREnabled then
			return Enum.ContextActionResult.Pass
		end
	
		if state == Enum.UserInputState.Cancel then
			self.turningLeft = false
			self.turningRight = false
			return Enum.ContextActionResult.Sink
		end
	
		if self.panBeginLook == nil and self.keyPanEnabled then
			if input.KeyCode == Enum.KeyCode.Left then
				self.turningLeft = state == Enum.UserInputState.Begin
			elseif input.KeyCode == Enum.KeyCode.Right then
				self.turningRight = state == Enum.UserInputState.Begin
			end
			return Enum.ContextActionResult.Sink
		end
		return Enum.ContextActionResult.Pass
	end
	
	function BaseCamera:DoPanRotateCamera(rotateAngle)
		local angle = Util.RotateVectorByAngleAndRound(self:GetCameraLookVector() * Vector3.new(1,0,1), rotateAngle, math.pi*0.25)
		if angle ~= 0 then
			self.rotateInput = self.rotateInput + Vector2.new(angle, 0)
			self.lastUserPanCamera = tick()
			self.lastCameraTransform = nil
		end
	end
	
	function BaseCamera:DoGamepadZoom(name, state, input)
		if input.UserInputType == self.activeGamepad then
			if input.KeyCode == Enum.KeyCode.ButtonR3 then
				if state == Enum.UserInputState.Begin then
					if self.distanceChangeEnabled then
						local dist = self:GetCameraToSubjectDistance()
	
						if dist > (GAMEPAD_ZOOM_STEP_2 + GAMEPAD_ZOOM_STEP_3)/2 then
							self:SetCameraToSubjectDistance(GAMEPAD_ZOOM_STEP_2)
						elseif dist > (GAMEPAD_ZOOM_STEP_1 + GAMEPAD_ZOOM_STEP_2)/2 then
							self:SetCameraToSubjectDistance(GAMEPAD_ZOOM_STEP_1)
						else
							self:SetCameraToSubjectDistance(GAMEPAD_ZOOM_STEP_3)
						end
					end
				end
			elseif input.KeyCode == Enum.KeyCode.DPadLeft then
				self.dpadLeftDown = (state == Enum.UserInputState.Begin)
			elseif input.KeyCode == Enum.KeyCode.DPadRight then
				self.dpadRightDown = (state == Enum.UserInputState.Begin)
			end
	
			if self.dpadLeftDown then
				self.currentZoomSpeed = 1.04
			elseif self.dpadRightDown then
				self.currentZoomSpeed = 0.96
			else
				self.currentZoomSpeed = 1.00
			end
			return Enum.ContextActionResult.Sink
		end
		return Enum.ContextActionResult.Pass
	--	elseif input.UserInputType == self.activeGamepad and input.KeyCode == Enum.KeyCode.ButtonL3 then
	--		if (state == Enum.UserInputState.Begin) then
	--			self.L3ButtonDown = true
	--		elseif (state == Enum.UserInputState.End) then
	--			self.L3ButtonDown = false
	--			self.currentZoomSpeed = 1.00
	--		end
	--	end
	end
	
	function BaseCamera:DoKeyboardZoom(name, state, input)
		if not self.hasGameLoaded and VRService.VREnabled then
			return Enum.ContextActionResult.Pass
		end
	
		if state ~= Enum.UserInputState.Begin then
			return Enum.ContextActionResult.Pass
		end
	
		if self.distanceChangeEnabled and player.CameraMode ~= Enum.CameraMode.LockFirstPerson then
			if input.KeyCode == Enum.KeyCode.I then
				self:SetCameraToSubjectDistance( self.currentSubjectDistance - 5 )
			elseif input.KeyCode == Enum.KeyCode.O then
				self:SetCameraToSubjectDistance( self.currentSubjectDistance + 5 )
			end
			return Enum.ContextActionResult.Sink
		end
		return Enum.ContextActionResult.Pass
	end
	
	function BaseCamera:BindAction(actionName, actionFunc, createTouchButton, ...)
		table.insert(self.boundContextActions, actionName)
		ContextActionService:BindActionAtPriority(actionName, actionFunc, createTouchButton,
			CAMERA_ACTION_PRIORITY, ...)
	end
	
	function BaseCamera:BindGamepadInputActions()
		self:BindAction("BaseCameraGamepadPan", function(name, state, input) return self:GetGamepadPan(name, state, input) end,
			false, Enum.KeyCode.Thumbstick2)
		self:BindAction("BaseCameraGamepadZoom", function(name, state, input) return self:DoGamepadZoom(name, state, input) end,
			false, Enum.KeyCode.DPadLeft, Enum.KeyCode.DPadRight, Enum.KeyCode.ButtonR3)
	end
	
	function BaseCamera:BindKeyboardInputActions()
		self:BindAction("BaseCameraKeyboardPanArrowKeys", function(name, state, input) return self:DoKeyboardPanTurn(name, state, input) end,
			false, Enum.KeyCode.Left, Enum.KeyCode.Right)
		self:BindAction("BaseCameraKeyboardZoom", function(name, state, input) return self:DoKeyboardZoom(name, state, input) end,
			false, Enum.KeyCode.I, Enum.KeyCode.O)
	end
	
	local function isInDynamicThumbstickArea(input)
		local playerGui = player:FindFirstChildOfClass("PlayerGui")
		local touchGui = playerGui and playerGui:FindFirstChild("TouchGui")
		local touchFrame = touchGui and touchGui:FindFirstChild("TouchControlFrame")
		local thumbstickFrame = touchFrame and touchFrame:FindFirstChild("DynamicThumbstickFrame")
	
		if not thumbstickFrame then
			return false
		end
	
		local frameCornerTopLeft = thumbstickFrame.AbsolutePosition
		local frameCornerBottomRight = frameCornerTopLeft + thumbstickFrame.AbsoluteSize
		if input.Position.X >= frameCornerTopLeft.X and input.Position.Y >= frameCornerTopLeft.Y then
			if input.Position.X <= frameCornerBottomRight.X and input.Position.Y <= frameCornerBottomRight.Y then
				return true
			end
		end
	
		return false
	end
	
	---Adjusts the camera Y touch Sensitivity when moving away from the center and in the TOUCH_SENSITIVTY_ADJUST_AREA
	function BaseCamera:AdjustTouchSensitivity(delta, sensitivity)
		local cameraCFrame = game.Workspace.CurrentCamera and game.Workspace.CurrentCamera.CFrame
		if not cameraCFrame then
			return sensitivity
		end
		local currPitchAngle = cameraCFrame:ToEulerAnglesYXZ()
	
		local multiplierY = TOUCH_SENSITIVTY_ADJUST_MAX_Y
		if currPitchAngle > TOUCH_ADJUST_AREA_UP and delta.Y < 0 then
			local fractionAdjust = (currPitchAngle - TOUCH_ADJUST_AREA_UP)/(MAX_Y - TOUCH_ADJUST_AREA_UP)
			fractionAdjust = 1 - (1 - fractionAdjust)^3
			multiplierY = TOUCH_SENSITIVTY_ADJUST_MAX_Y - fractionAdjust * (
				TOUCH_SENSITIVTY_ADJUST_MAX_Y - TOUCH_SENSITIVTY_ADJUST_MIN_Y)
		elseif currPitchAngle < TOUCH_ADJUST_AREA_DOWN and delta.Y > 0 then
			local fractionAdjust = (currPitchAngle - TOUCH_ADJUST_AREA_DOWN)/(MIN_Y - TOUCH_ADJUST_AREA_DOWN)
			fractionAdjust = 1 - (1 - fractionAdjust)^3
			multiplierY = TOUCH_SENSITIVTY_ADJUST_MAX_Y - fractionAdjust * (
				TOUCH_SENSITIVTY_ADJUST_MAX_Y - TOUCH_SENSITIVTY_ADJUST_MIN_Y)
		end
	
		return Vector2.new(
			sensitivity.X,
			sensitivity.Y * multiplierY
		)
	end
	
	function BaseCamera:OnTouchBegan(input, processed)
		local canUseDynamicTouch = self.isDynamicThumbstickEnabled and not processed
		if canUseDynamicTouch then
			if self.dynamicTouchInput == nil and isInDynamicThumbstickArea(input) then
				-- First input in the dynamic thumbstick area should always be ignored for camera purposes
				-- Even if the dynamic thumbstick does not process it immediately
				self.dynamicTouchInput = input
				return
			end
			self.fingerTouches[input] = processed
			self.inputStartPositions[input] = input.Position
			self.inputStartTimes[input] = tick()
			self.numUnsunkTouches = self.numUnsunkTouches + 1
		end
	end
	
	function BaseCamera:OnTouchChanged(input, processed)
		if self.fingerTouches[input] == nil then
			if self.isDynamicThumbstickEnabled then
				return
			end
			self.fingerTouches[input] = processed
			if not processed then
				self.numUnsunkTouches = self.numUnsunkTouches + 1
			end
		end
	
		if self.numUnsunkTouches == 1 then
			if self.fingerTouches[input] == false then
				self.panBeginLook = self.panBeginLook or self:GetCameraLookVector()
				self.startPos = self.startPos or input.Position
				self.lastPos = self.lastPos or self.startPos
				self.userPanningTheCamera = true
	
				local delta = input.Position - self.lastPos
				delta = Vector2.new(delta.X, delta.Y * UserGameSettings:GetCameraYInvertValue())
				if self.panEnabled then
					local adjustedTouchSensitivity = TOUCH_SENSITIVTY
					self:AdjustTouchSensitivity(delta, TOUCH_SENSITIVTY)
	
					local desiredXYVector = self:InputTranslationToCameraAngleChange(delta, adjustedTouchSensitivity)
					self.rotateInput = self.rotateInput + desiredXYVector
				end
				self.lastPos = input.Position
			end
		else
			self.panBeginLook = nil
			self.startPos = nil
			self.lastPos = nil
			self.userPanningTheCamera = false
		end
		if self.numUnsunkTouches == 2 then
			local unsunkTouches = {}
			for touch, wasSunk in pairs(self.fingerTouches) do
				if not wasSunk then
					table.insert(unsunkTouches, touch)
				end
			end
			if #unsunkTouches == 2 then
				local difference = (unsunkTouches[1].Position - unsunkTouches[2].Position).magnitude
				if self.startingDiff and self.pinchBeginZoom then
					local scale = difference / math.max(0.01, self.startingDiff)
					local clampedScale = math.clamp(scale, 0.1, 10)
					if self.distanceChangeEnabled then
						self:SetCameraToSubjectDistance(self.pinchBeginZoom / clampedScale)
					end
				else
					self.startingDiff = difference
					self.pinchBeginZoom = self:GetCameraToSubjectDistance()
				end
			end
		else
			self.startingDiff = nil
			self.pinchBeginZoom = nil
		end
	end
	
	function BaseCamera:OnTouchEnded(input, processed)
		if input == self.dynamicTouchInput then
			self.dynamicTouchInput = nil
			return
		end
	
		if self.fingerTouches[input] == false then
			if self.numUnsunkTouches == 1 then
				self.panBeginLook = nil
				self.startPos = nil
				self.lastPos = nil
				self.userPanningTheCamera = false
			elseif self.numUnsunkTouches == 2 then
				self.startingDiff = nil
				self.pinchBeginZoom = nil
			end
		end
	
		if self.fingerTouches[input] ~= nil and self.fingerTouches[input] == false then
			self.numUnsunkTouches = self.numUnsunkTouches - 1
		end
		self.fingerTouches[input] = nil
		self.inputStartPositions[input] = nil
		self.inputStartTimes[input] = nil
	end
	
	function BaseCamera:OnMouse2Down(input, processed)
		if processed then return end
	
		self.isRightMouseDown = true
		self:OnMousePanButtonPressed(input, processed)
	end
	
	function BaseCamera:OnMouse2Up(input, processed)
		self.isRightMouseDown = false
		self:OnMousePanButtonReleased(input, processed)
	end
	
	function BaseCamera:OnMouse3Down(input, processed)
		if processed then return end
	
		self.isMiddleMouseDown = true
		self:OnMousePanButtonPressed(input, processed)
	end
	
	function BaseCamera:OnMouse3Up(input, processed)
		self.isMiddleMouseDown = false
		self:OnMousePanButtonReleased(input, processed)
	end
	
	function BaseCamera:OnMouseMoved(input, processed)
		if not self.hasGameLoaded and VRService.VREnabled then
			return
		end
	
		local inputDelta = input.Delta
		inputDelta = Vector2.new(inputDelta.X, inputDelta.Y * UserGameSettings:GetCameraYInvertValue())
	
		local isInputPanning = FFlagUserCameraToggle and CameraInput.getPanning()
		local isBeginLook = self.startPos and self.lastPos and self.panBeginLook
		local isPanning = isBeginLook or self.inFirstPerson or self.inMouseLockedMode or isInputPanning
	
		if self.panEnabled and isPanning then
			local desiredXYVector = self:InputTranslationToCameraAngleChange(inputDelta, MOUSE_SENSITIVITY)
			self.rotateInput = self.rotateInput + desiredXYVector
		end
	
		if self.startPos and self.lastPos and self.panBeginLook then
			self.lastPos = self.lastPos + input.Delta
		end
	end
	
	function BaseCamera:OnMousePanButtonPressed(input, processed)
		if processed then return end
		if not FFlagUserCameraToggle then
			self:UpdateMouseBehavior()
		end
		self.panBeginLook = self.panBeginLook or self:GetCameraLookVector()
		self.startPos = self.startPos or input.Position
		self.lastPos = self.lastPos or self.startPos
		self.userPanningTheCamera = true
	end
	
	function BaseCamera:OnMousePanButtonReleased(input, processed)
		if not FFlagUserCameraToggle then
			self:UpdateMouseBehavior()
		end
		if not (self.isRightMouseDown or self.isMiddleMouseDown) then
			self.panBeginLook = nil
			self.startPos = nil
			self.lastPos = nil
			self.userPanningTheCamera = false
		end
	end
	
	function BaseCamera:UpdateMouseBehavior()
		if FFlagUserCameraToggle and self.isCameraToggle then
			CameraUI.setCameraModeToastEnabled(true)
			CameraInput.enableCameraToggleInput()
			CameraToggleStateController(self.inFirstPerson)
		else
			if FFlagUserCameraToggle then
				CameraUI.setCameraModeToastEnabled(false)
				CameraInput.disableCameraToggleInput()
			end
			-- first time transition to first person mode or mouse-locked third person
			if self.inFirstPerson or self.inMouseLockedMode then
				--UserGameSettings.RotationType = Enum.RotationType.CameraRelative
				UserInputService.MouseBehavior = Enum.MouseBehavior.LockCenter
			else
				UserGameSettings.RotationType = Enum.RotationType.MovementRelative
				if self.isRightMouseDown or self.isMiddleMouseDown then
					UserInputService.MouseBehavior = Enum.MouseBehavior.LockCurrentPosition
				else
					UserInputService.MouseBehavior = Enum.MouseBehavior.Default
				end
			end
		end
	end
	
	function BaseCamera:UpdateForDistancePropertyChange()
		-- Calling this setter with the current value will force checking that it is still
		-- in range after a change to the min/max distance limits
		self:SetCameraToSubjectDistance(self.currentSubjectDistance)
	end
	
	function BaseCamera:SetCameraToSubjectDistance(desiredSubjectDistance)
		local lastSubjectDistance = self.currentSubjectDistance
	
		-- By default, camera modules will respect LockFirstPerson and override the currentSubjectDistance with 0
		-- regardless of what Player.CameraMinZoomDistance is set to, so that first person can be made
		-- available by the developer without needing to allow players to mousewheel dolly into first person.
		-- Some modules will override this function to remove or change first-person capability.
		if player.CameraMode == Enum.CameraMode.LockFirstPerson then
			self.currentSubjectDistance = 0.5
			if not self.inFirstPerson then
				self:EnterFirstPerson()
			end
		else
			local newSubjectDistance = math.clamp(desiredSubjectDistance, player.CameraMinZoomDistance, player.CameraMaxZoomDistance)
			if newSubjectDistance < FIRST_PERSON_DISTANCE_THRESHOLD then
				self.currentSubjectDistance = 0.5
				if not self.inFirstPerson then
					self:EnterFirstPerson()
				end
			else
				self.currentSubjectDistance = newSubjectDistance
				if self.inFirstPerson then
					self:LeaveFirstPerson()
				end
			end
		end
	
		-- Pass target distance and zoom direction to the zoom controller
		ZoomController.SetZoomParameters(self.currentSubjectDistance, math.sign(desiredSubjectDistance - lastSubjectDistance))
	
		-- Returned only for convenience to the caller to know the outcome
		return self.currentSubjectDistance
	end
	
	function BaseCamera:SetCameraType( cameraType )
		--Used by derived classes
		self.cameraType = cameraType
	end
	
	function BaseCamera:GetCameraType()
		return self.cameraType
	end
	
	-- Movement mode standardized to Enum.ComputerCameraMovementMode values
	function BaseCamera:SetCameraMovementMode( cameraMovementMode )
		self.cameraMovementMode = cameraMovementMode
	end
	
	function BaseCamera:GetCameraMovementMode()
		return self.cameraMovementMode
	end
	
	function BaseCamera:SetIsMouseLocked(mouseLocked)
		self.inMouseLockedMode = mouseLocked
		if not FFlagUserCameraToggle then
			self:UpdateMouseBehavior()
		end
	end
	
	function BaseCamera:GetIsMouseLocked()
		return self.inMouseLockedMode
	end
	
	function BaseCamera:SetMouseLockOffset(offsetVector)
		self.mouseLockOffset = offsetVector
	end
	
	function BaseCamera:GetMouseLockOffset()
		return self.mouseLockOffset
	end
	
	function BaseCamera:InFirstPerson()
		return self.inFirstPerson
	end
	
	function BaseCamera:EnterFirstPerson()
		-- Overridden in ClassicCamera, the only module which supports FirstPerson
	end
	
	function BaseCamera:LeaveFirstPerson()
		-- Overridden in ClassicCamera, the only module which supports FirstPerson
	end
	
	-- Nominal distance, set by dollying in and out with the mouse wheel or equivalent, not measured distance
	function BaseCamera:GetCameraToSubjectDistance()
		return self.currentSubjectDistance
	end
	
	-- Actual measured distance to the camera Focus point, which may be needed in special circumstances, but should
	-- never be used as the starting point for updating the nominal camera-to-subject distance (self.currentSubjectDistance)
	-- since that is a desired target value set only by mouse wheel (or equivalent) input, PopperCam, and clamped to min max camera distance
	function BaseCamera:GetMeasuredDistanceToFocus()
		local camera = game.Workspace.CurrentCamera
		if camera then
			return (camera.CoordinateFrame.p - camera.Focus.p).magnitude
		end
		return nil
	end
	
	function BaseCamera:GetCameraLookVector()
		return game.Workspace.CurrentCamera and game.Workspace.CurrentCamera.CFrame.lookVector or UNIT_Z
	end
	
	-- Replacements for RootCamera:RotateCamera() which did not actually rotate the camera
	-- suppliedLookVector is not normally passed in, it's used only by Watch camera
	function BaseCamera:CalculateNewLookCFrame(suppliedLookVector)
		local currLookVector = suppliedLookVector or self:GetCameraLookVector()
		local currPitchAngle = math.asin(currLookVector.y)
		local yTheta = math.clamp(self.rotateInput.y, -MAX_Y + currPitchAngle, -MIN_Y + currPitchAngle)
		local constrainedRotateInput = Vector2.new(self.rotateInput.x, yTheta)
		local startCFrame = CFrame.new(ZERO_VECTOR3, currLookVector)
		local newLookCFrame = CFrame.Angles(0, -constrainedRotateInput.x, 0) * startCFrame * CFrame.Angles(-constrainedRotateInput.y,0,0)
		return newLookCFrame
	end
	function BaseCamera:CalculateNewLookVector(suppliedLookVector)
		local newLookCFrame = self:CalculateNewLookCFrame(suppliedLookVector)
		return newLookCFrame.lookVector
	end
	
	function BaseCamera:CalculateNewLookVectorVR()
		local subjectPosition = self:GetSubjectPosition()
		local vecToSubject = (subjectPosition - game.Workspace.CurrentCamera.CFrame.p)
		local currLookVector = (vecToSubject * X1_Y0_Z1).unit
		local vrRotateInput = Vector2.new(self.rotateInput.x, 0)
		local startCFrame = CFrame.new(ZERO_VECTOR3, currLookVector)
		local yawRotatedVector = (CFrame.Angles(0, -vrRotateInput.x, 0) * startCFrame * CFrame.Angles(-vrRotateInput.y,0,0)).lookVector
		return (yawRotatedVector * X1_Y0_Z1).unit
	end
	
	function BaseCamera:GetHumanoid()
		local character = player and player.Character
		if character then
			local resultHumanoid = self.humanoidCache[player]
			if resultHumanoid and resultHumanoid.Parent == character then
				return resultHumanoid
			else
				self.humanoidCache[player] = nil -- Bust Old Cache
				local humanoid = character:FindFirstChildOfClass("Humanoid")
				if humanoid then
					self.humanoidCache[player] = humanoid
				end
				return humanoid
			end
		end
		return nil
	end
	
	function BaseCamera:GetHumanoidPartToFollow(humanoid, humanoidStateType)
		if humanoidStateType == Enum.HumanoidStateType.Dead then
			local character = humanoid.Parent
			if character then
				return character:FindFirstChild("Head") or humanoid.Torso
			else
				return humanoid.Torso
			end
		else
			return humanoid.Torso
		end
	end
	
	function BaseCamera:UpdateGamepad()
		local gamepadPan = self.gamepadPanningCamera
		if gamepadPan and (self.hasGameLoaded or not VRService.VREnabled) then
			gamepadPan = Util.GamepadLinearToCurve(gamepadPan)
			local currentTime = tick()
			if gamepadPan.X ~= 0 or gamepadPan.Y ~= 0 then
				self.userPanningTheCamera = true
			elseif gamepadPan == ZERO_VECTOR2 then
				self.lastThumbstickRotate = nil
				if self.lastThumbstickPos == ZERO_VECTOR2 then
					self.currentSpeed = 0
				end
			end
	
			local finalConstant = 0
	
			if self.lastThumbstickRotate then
				if VRService.VREnabled then
					self.currentSpeed = self.vrMaxSpeed
				else
					local elapsedTime = (currentTime - self.lastThumbstickRotate) * 10
					self.currentSpeed = self.currentSpeed + (self.maxSpeed * ((elapsedTime*elapsedTime)/self.numOfSeconds))
	
					if self.currentSpeed > self.maxSpeed then self.currentSpeed = self.maxSpeed end
	
					if self.lastVelocity then
						local velocity = (gamepadPan - self.lastThumbstickPos)/(currentTime - self.lastThumbstickRotate)
						local velocityDeltaMag = (velocity - self.lastVelocity).magnitude
	
						if velocityDeltaMag > 12 then
							self.currentSpeed = self.currentSpeed * (20/velocityDeltaMag)
							if self.currentSpeed > self.maxSpeed then self.currentSpeed = self.maxSpeed end
						end
					end
				end
	
				finalConstant = UserGameSettings.GamepadCameraSensitivity * self.currentSpeed
				self.lastVelocity = (gamepadPan - self.lastThumbstickPos)/(currentTime - self.lastThumbstickRotate)
			end
	
			self.lastThumbstickPos = gamepadPan
			self.lastThumbstickRotate = currentTime
	
			return Vector2.new( gamepadPan.X * finalConstant, gamepadPan.Y * finalConstant * self.ySensitivity * UserGameSettings:GetCameraYInvertValue())
		end
	
		return ZERO_VECTOR2
	end
	
	-- [[ VR Support Section ]] --
	
	function BaseCamera:ApplyVRTransform()
		if not VRService.VREnabled then
			return
		end
	
		--we only want this to happen in first person VR
		local rootJoint = self.humanoidRootPart and self.humanoidRootPart:FindFirstChild("RootJoint")
		if not rootJoint then
			return
		end
	
		local cameraSubject = game.Workspace.CurrentCamera.CameraSubject
		local isInVehicle = cameraSubject and cameraSubject:IsA("VehicleSeat")
	
		if self.inFirstPerson and not isInVehicle then
			local vrFrame = VRService:GetUserCFrame(Enum.UserCFrame.Head)
			local vrRotation = vrFrame - vrFrame.p
			rootJoint.C0 = CFrame.new(vrRotation:vectorToObjectSpace(vrFrame.p)) * CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, 0)
		else
			rootJoint.C0 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, 0)
		end
	end
	
	function BaseCamera:IsInFirstPerson()
		return self.inFirstPerson
	end
	
	function BaseCamera:ShouldUseVRRotation()
		if not VRService.VREnabled then
			return false
		end
	
		if not self.VRRotationIntensityAvailable and tick() - self.lastVRRotationIntensityCheckTime < 1 then
			return false
		end
	
		local success, vrRotationIntensity = pcall(function() return StarterGui:GetCore("VRRotationIntensity") end)
		self.VRRotationIntensityAvailable = success and vrRotationIntensity ~= nil
		self.lastVRRotationIntensityCheckTime = tick()
	
		self.shouldUseVRRotation = success and vrRotationIntensity ~= nil and vrRotationIntensity ~= "Smooth"
	
		return self.shouldUseVRRotation
	end
	
	function BaseCamera:GetVRRotationInput()
		local vrRotateSum = ZERO_VECTOR2
		local success, vrRotationIntensity = pcall(function() return StarterGui:GetCore("VRRotationIntensity") end)
	
		if not success then
			return
		end
	
		local vrGamepadRotation = self.GamepadPanningCamera or ZERO_VECTOR2
		local delayExpired = (tick() - self.lastVRRotationTime) >= self:GetRepeatDelayValue(vrRotationIntensity)
	
		if math.abs(vrGamepadRotation.x) >= self:GetActivateValue() then
			if (delayExpired or not self.vrRotateKeyCooldown[Enum.KeyCode.Thumbstick2]) then
				local sign = 1
				if vrGamepadRotation.x < 0 then
					sign = -1
				end
				vrRotateSum = vrRotateSum + self:GetRotateAmountValue(vrRotationIntensity) * sign
				self.vrRotateKeyCooldown[Enum.KeyCode.Thumbstick2] = true
			end
		elseif math.abs(vrGamepadRotation.x) < self:GetActivateValue() - 0.1 then
			self.vrRotateKeyCooldown[Enum.KeyCode.Thumbstick2] = nil
		end
		if self.turningLeft then
			if delayExpired or not self.vrRotateKeyCooldown[Enum.KeyCode.Left] then
				vrRotateSum = vrRotateSum - self:GetRotateAmountValue(vrRotationIntensity)
				self.vrRotateKeyCooldown[Enum.KeyCode.Left] = true
			end
		else
			self.vrRotateKeyCooldown[Enum.KeyCode.Left] = nil
		end
		if self.turningRight then
			if (delayExpired or not self.vrRotateKeyCooldown[Enum.KeyCode.Right]) then
				vrRotateSum = vrRotateSum + self:GetRotateAmountValue(vrRotationIntensity)
				self.vrRotateKeyCooldown[Enum.KeyCode.Right] = true
			end
		else
			self.vrRotateKeyCooldown[Enum.KeyCode.Right] = nil
		end
	
		if vrRotateSum ~= ZERO_VECTOR2 then
			self.lastVRRotationTime = tick()
		end
	
		return vrRotateSum
	end
	
	function BaseCamera:CancelCameraFreeze(keepConstraints)
		if not keepConstraints then
			self.cameraTranslationConstraints = Vector3.new(self.cameraTranslationConstraints.x, 1, self.cameraTranslationConstraints.z)
		end
		if self.cameraFrozen then
			self.trackingHumanoid = nil
			self.cameraFrozen = false
		end
	end
	
	function BaseCamera:StartCameraFreeze(subjectPosition, humanoidToTrack)
		if not self.cameraFrozen then
			self.humanoidJumpOrigin = subjectPosition
			self.trackingHumanoid = humanoidToTrack
			self.cameraTranslationConstraints = Vector3.new(self.cameraTranslationConstraints.x, 0, self.cameraTranslationConstraints.z)
			self.cameraFrozen = true
		end
	end
	
	function BaseCamera:OnNewCameraSubject()
		if self.subjectStateChangedConn then
			self.subjectStateChangedConn:Disconnect()
			self.subjectStateChangedConn = nil
		end
	
		local humanoid = workspace.CurrentCamera and workspace.CurrentCamera.CameraSubject
		if self.trackingHumanoid ~= humanoid then
			self:CancelCameraFreeze()
		end
		if humanoid and humanoid:IsA("Humanoid") then
			self.subjectStateChangedConn = humanoid.StateChanged:Connect(function(oldState, newState)
				if VRService.VREnabled and newState == Enum.HumanoidStateType.Jumping and not self.inFirstPerson then
					self:StartCameraFreeze(self:GetSubjectPosition(), humanoid)
				elseif newState ~= Enum.HumanoidStateType.Jumping and newState ~= Enum.HumanoidStateType.Freefall then
					self:CancelCameraFreeze(true)
				end
			end)
		end
	end
	
	function BaseCamera:GetVRFocus(subjectPosition, timeDelta)
		local lastFocus = self.LastCameraFocus or subjectPosition
		if not self.cameraFrozen then
			self.cameraTranslationConstraints = Vector3.new(self.cameraTranslationConstraints.x, math.min(1, self.cameraTranslationConstraints.y + 0.42 * timeDelta), self.cameraTranslationConstraints.z)
		end
	
		local newFocus
		if self.cameraFrozen and self.humanoidJumpOrigin and self.humanoidJumpOrigin.y > lastFocus.y then
			newFocus = CFrame.new(Vector3.new(subjectPosition.x, math.min(self.humanoidJumpOrigin.y, lastFocus.y + 5 * timeDelta), subjectPosition.z))
		else
			newFocus = CFrame.new(Vector3.new(subjectPosition.x, lastFocus.y, subjectPosition.z):lerp(subjectPosition, self.cameraTranslationConstraints.y))
		end
	
		if self.cameraFrozen then
			-- No longer in 3rd person
			if self.inFirstPerson then -- not VRService.VREnabled
				self:CancelCameraFreeze()
			end
			-- This case you jumped off a cliff and want to keep your character in view
			-- 0.5 is to fix floating point error when not jumping off cliffs
			if self.humanoidJumpOrigin and subjectPosition.y < (self.humanoidJumpOrigin.y - 0.5) then
				self:CancelCameraFreeze()
			end
		end
	
		return newFocus
	end
	
	function BaseCamera:GetRotateAmountValue(vrRotationIntensity)
		vrRotationIntensity = vrRotationIntensity or StarterGui:GetCore("VRRotationIntensity")
		if vrRotationIntensity then
			if vrRotationIntensity == "Low" then
				return VR_LOW_INTENSITY_ROTATION
			elseif vrRotationIntensity == "High" then
				return VR_HIGH_INTENSITY_ROTATION
			end
		end
		return ZERO_VECTOR2
	end
	
	function BaseCamera:GetRepeatDelayValue(vrRotationIntensity)
		vrRotationIntensity = vrRotationIntensity or StarterGui:GetCore("VRRotationIntensity")
		if vrRotationIntensity then
			if vrRotationIntensity == "Low" then
				return VR_LOW_INTENSITY_REPEAT
			elseif vrRotationIntensity == "High" then
				return VR_HIGH_INTENSITY_REPEAT
			end
		end
		return 0
	end
	
	function BaseCamera:Update(dt)
		error("BaseCamera:Update() This is a virtual function that should never be getting called.", 2)
	end
	
	BaseCamera.UpCFrame = CFrame.new()
	
	function BaseCamera:UpdateUpCFrame(cf)
		self.UpCFrame = cf
	end
	local ZERO = Vector3.new(0, 0, 0)
	function BaseCamera:CalculateNewLookCFrame(suppliedLookVector)
		local currLookVector = suppliedLookVector or self:GetCameraLookVector()
		currLookVector = self.UpCFrame:VectorToObjectSpace(currLookVector)
		
		local currPitchAngle = math.asin(currLookVector.y)
		local yTheta = math.clamp(self.rotateInput.y, -MAX_Y + currPitchAngle, -MIN_Y + currPitchAngle)
		local constrainedRotateInput = Vector2.new(self.rotateInput.x, yTheta)
		local startCFrame = CFrame.new(ZERO, currLookVector)
		local newLookCFrame = CFrame.Angles(0, -constrainedRotateInput.x, 0) * startCFrame * CFrame.Angles(-constrainedRotateInput.y,0,0)
		
		return newLookCFrame
	end
	
	return BaseCamera
end

function _BaseOcclusion()
	--[[ The Module ]]--
	local BaseOcclusion = {}
	BaseOcclusion.__index = BaseOcclusion
	setmetatable(BaseOcclusion, {
		__call = function(_, ...)
			return BaseOcclusion.new(...)
		end
	})
	
	function BaseOcclusion.new()
		local self = setmetatable({}, BaseOcclusion)
		return self
	end
	
	-- Called when character is added
	function BaseOcclusion:CharacterAdded(char, player)
	end
	
	-- Called when character is about to be removed
	function BaseOcclusion:CharacterRemoving(char, player)
	end
	
	function BaseOcclusion:OnCameraSubjectChanged(newSubject)
	end
	
	--[[ Derived classes are required to override and implement all of the following functions ]]--
	function BaseOcclusion:GetOcclusionMode()
		-- Must be overridden in derived classes to return an Enum.DevCameraOcclusionMode value
		warn("BaseOcclusion GetOcclusionMode must be overridden by derived classes")
		return nil
	end
	
	function BaseOcclusion:Enable(enabled)
		warn("BaseOcclusion Enable must be overridden by derived classes")
	end
	
	function BaseOcclusion:Update(dt, desiredCameraCFrame, desiredCameraFocus)
		warn("BaseOcclusion Update must be overridden by derived classes")
		return desiredCameraCFrame, desiredCameraFocus
	end
	
	return BaseOcclusion
end

function _Popper()
	
	local Players = game:GetService("Players")
	
	local camera = game.Workspace.CurrentCamera
	
	local min = math.min
	local tan = math.tan
	local rad = math.rad
	local inf = math.huge
	local ray = Ray.new
	
	local function getTotalTransparency(part)
		return 1 - (1 - part.Transparency)*(1 - part.LocalTransparencyModifier)
	end
	
	local function eraseFromEnd(t, toSize)
		for i = #t, toSize + 1, -1 do
			t[i] = nil
		end
	end
	
	local nearPlaneZ, projX, projY do
		local function updateProjection()
			local fov = rad(camera.FieldOfView)
			local view = camera.ViewportSize
			local ar = view.X/view.Y
	
			projY = 2*tan(fov/2)
			projX = ar*projY
		end
	
		camera:GetPropertyChangedSignal("FieldOfView"):Connect(updateProjection)
		camera:GetPropertyChangedSignal("ViewportSize"):Connect(updateProjection)
	
		updateProjection()
	
		nearPlaneZ = camera.NearPlaneZ
		camera:GetPropertyChangedSignal("NearPlaneZ"):Connect(function()
			nearPlaneZ = camera.NearPlaneZ
		end)
	end
	
	local blacklist = {} do
		local charMap = {}
	
		local function refreshIgnoreList()
			local n = 1
			blacklist = {}
			for _, character in pairs(charMap) do
				blacklist[n] = character
				n = n + 1
			end
		end
	
		local function playerAdded(player)
			local function characterAdded(character)
				charMap[player] = character
				refreshIgnoreList()
			end
			local function characterRemoving()
				charMap[player] = nil
				refreshIgnoreList()
			end
	
			player.CharacterAdded:Connect(characterAdded)
			player.CharacterRemoving:Connect(characterRemoving)
			if player.Character then
				characterAdded(player.Character)
			end
		end
	
		local function playerRemoving(player)
			charMap[player] = nil
			refreshIgnoreList()
		end
	
		Players.PlayerAdded:Connect(playerAdded)
		Players.PlayerRemoving:Connect(playerRemoving)
	
		for _, player in ipairs(Players:GetPlayers()) do
			playerAdded(player)
		end
		refreshIgnoreList()
	end
	
	--------------------------------------------------------------------------------------------
	-- Popper uses the level geometry find an upper bound on subject-to-camera distance.
	--
	-- Hard limits are applied immediately and unconditionally. They are generally caused
	-- when level geometry intersects with the near plane (with exceptions, see below).
	--
	-- Soft limits are only applied under certain conditions.
	-- They are caused when level geometry occludes the subject without actually intersecting
	-- with the near plane at the target distance.
	--
	-- Soft limits can be promoted to hard limits and hard limits can be demoted to soft limits.
	-- We usually don"t want the latter to happen.
	--
	-- A soft limit will be promoted to a hard limit if an obstruction
	-- lies between the current and target camera positions.
	--------------------------------------------------------------------------------------------
	
	local subjectRoot
	local subjectPart
	
	camera:GetPropertyChangedSignal("CameraSubject"):Connect(function()
		local subject = camera.CameraSubject
		if subject:IsA("Humanoid") then
			subjectPart = subject.RootPart
		elseif subject:IsA("BasePart") then
			subjectPart = subject
		else
			subjectPart = nil
		end
	end)
	
	local function canOcclude(part)
		-- Occluders must be:
		-- 1. Opaque
		-- 2. Interactable
		-- 3. Not in the same assembly as the subject
	
		return
			getTotalTransparency(part) < 0.25 and
			part.CanCollide and
			subjectRoot ~= (part:GetRootPart() or part) and
			not part:IsA("TrussPart")
	end
	
	-- Offsets for the volume visibility test
	local SCAN_SAMPLE_OFFSETS = {
		Vector2.new( 0.4, 0.0),
		Vector2.new(-0.4, 0.0),
		Vector2.new( 0.0,-0.4),
		Vector2.new( 0.0, 0.4),
		Vector2.new( 0.0, 0.2),
	}
	
	--------------------------------------------------------------------------------
	-- Piercing raycasts
	
	local function getCollisionPoint(origin, dir)
		local originalSize = #blacklist
		repeat
			local hitPart, hitPoint = workspace:FindPartOnRayWithIgnoreList(
				ray(origin, dir), blacklist, false, true
			)
	
			if hitPart then
				if hitPart.CanCollide then
					eraseFromEnd(blacklist, originalSize)
					return hitPoint, true
				end
				blacklist[#blacklist + 1] = hitPart
			end
		until not hitPart
	
		eraseFromEnd(blacklist, originalSize)
		return origin + dir, false
	end
	
	--------------------------------------------------------------------------------
	
	local function queryPoint(origin, unitDir, dist, lastPos)
		debug.profilebegin("queryPoint")
	
		local originalSize = #blacklist
	
		dist = dist + nearPlaneZ
		local target = origin + unitDir*dist
	
		local softLimit = inf
		local hardLimit = inf
		local movingOrigin = origin
	
		repeat
			local entryPart, entryPos = workspace:FindPartOnRayWithIgnoreList(ray(movingOrigin, target - movingOrigin), blacklist, false, true)
	
			if entryPart then
				if canOcclude(entryPart) then
					local wl = {entryPart}
					local exitPart = workspace:FindPartOnRayWithWhitelist(ray(target, entryPos - target), wl, true)
	
					local lim = (entryPos - origin).Magnitude
	
					if exitPart then
						local promote = false
						if lastPos then
							promote =
								workspace:FindPartOnRayWithWhitelist(ray(lastPos, target - lastPos), wl, true) or
								workspace:FindPartOnRayWithWhitelist(ray(target, lastPos - target), wl, true)
						end
	
						if promote then
							-- Ostensibly a soft limit, but the camera has passed through it in the last frame, so promote to a hard limit.
							hardLimit = lim
						elseif dist < softLimit then
							-- Trivial soft limit
							softLimit = lim
						end
					else
						-- Trivial hard limit
						hardLimit = lim
					end
				end
	
				blacklist[#blacklist + 1] = entryPart
				movingOrigin = entryPos - unitDir*1e-3
			end
		until hardLimit < inf or not entryPart
	
		eraseFromEnd(blacklist, originalSize)
	
		debug.profileend()
		return softLimit - nearPlaneZ, hardLimit - nearPlaneZ
	end
	
	local function queryViewport(focus, dist)
		debug.profilebegin("queryViewport")
	
		local fP =  focus.p
		local fX =  focus.rightVector
		local fY =  focus.upVector
		local fZ = -focus.lookVector
	
		local viewport = camera.ViewportSize
	
		local hardBoxLimit = inf
		local softBoxLimit = inf
	
		-- Center the viewport on the PoI, sweep points on the edge towards the target, and take the minimum limits
		for viewX = 0, 1 do
			local worldX = fX*((viewX - 0.5)*projX)
	
			for viewY = 0, 1 do
				local worldY = fY*((viewY - 0.5)*projY)
	
				local origin = fP + nearPlaneZ*(worldX + worldY)
				local lastPos = camera:ViewportPointToRay(
					viewport.x*viewX,
					viewport.y*viewY
				).Origin
	
				local softPointLimit, hardPointLimit = queryPoint(origin, fZ, dist, lastPos)
	
				if hardPointLimit < hardBoxLimit then
					hardBoxLimit = hardPointLimit
				end
				if softPointLimit < softBoxLimit then
					softBoxLimit = softPointLimit
				end
			end
		end
		debug.profileend()
	
		return softBoxLimit, hardBoxLimit
	end
	
	local function testPromotion(focus, dist, focusExtrapolation)
		debug.profilebegin("testPromotion")
	
		local fP = focus.p
		local fX = focus.rightVector
		local fY = focus.upVector
		local fZ = -focus.lookVector
	
		do
			-- Dead reckoning the camera rotation and focus
			debug.profilebegin("extrapolate")
	
			local SAMPLE_DT = 0.0625
			local SAMPLE_MAX_T = 1.25
	
			local maxDist = (getCollisionPoint(fP, focusExtrapolation.posVelocity*SAMPLE_MAX_T) - fP).Magnitude
			-- Metric that decides how many samples to take
			local combinedSpeed = focusExtrapolation.posVelocity.magnitude
	
			for dt = 0, min(SAMPLE_MAX_T, focusExtrapolation.rotVelocity.magnitude + maxDist/combinedSpeed), SAMPLE_DT do
				local cfDt = focusExtrapolation.extrapolate(dt) -- Extrapolated CFrame at time dt
	
				if queryPoint(cfDt.p, -cfDt.lookVector, dist) >= dist then
					return false
				end
			end
	
			debug.profileend()
		end
	
		do
			-- Test screen-space offsets from the focus for the presence of soft limits
			debug.profilebegin("testOffsets")
	
			for _, offset in ipairs(SCAN_SAMPLE_OFFSETS) do
				local scaledOffset = offset
				local pos = getCollisionPoint(fP, fX*scaledOffset.x + fY*scaledOffset.y)
				if queryPoint(pos, (fP + fZ*dist - pos).Unit, dist) == inf then
					return false
				end
			end
	
			debug.profileend()
		end
	
		debug.profileend()
		return true
	end
	
	local function Popper(focus, targetDist, focusExtrapolation)
		debug.profilebegin("popper")
	
		subjectRoot = subjectPart and subjectPart:GetRootPart() or subjectPart
	
		local dist = targetDist
		local soft, hard = queryViewport(focus, targetDist)
		if hard < dist then
			dist = hard
		end
		if soft < dist and testPromotion(focus, targetDist, focusExtrapolation) then
			dist = soft
		end
	
		subjectRoot = nil
	
		debug.profileend()
		return dist
	end
	
	return Popper
end

function _ZoomController()
	local ZOOM_STIFFNESS = 4.5
	local ZOOM_DEFAULT = 12.5
	local ZOOM_ACCELERATION = 0.0375
	
	local MIN_FOCUS_DIST = 0.5
	local DIST_OPAQUE = 1
	
	local Popper = _Popper()
	
	local clamp = math.clamp
	local exp = math.exp
	local min = math.min
	local max = math.max
	local pi = math.pi
	
	local cameraMinZoomDistance, cameraMaxZoomDistance do
		local Player = game:GetService("Players").LocalPlayer
	
		local function updateBounds()
			cameraMinZoomDistance = Player.CameraMinZoomDistance
			cameraMaxZoomDistance = Player.CameraMaxZoomDistance
		end
	
		updateBounds()
	
		Player:GetPropertyChangedSignal("CameraMinZoomDistance"):Connect(updateBounds)
		Player:GetPropertyChangedSignal("CameraMaxZoomDistance"):Connect(updateBounds)
	end
	
	local ConstrainedSpring = {} do
		ConstrainedSpring.__index = ConstrainedSpring
	
		function ConstrainedSpring.new(freq, x, minValue, maxValue)
			x = clamp(x, minValue, maxValue)
			return setmetatable({
				freq = freq, -- Undamped frequency (Hz)
				x = x, -- Current position
				v = 0, -- Current velocity
				minValue = minValue, -- Minimum bound
				maxValue = maxValue, -- Maximum bound
				goal = x, -- Goal position
			}, ConstrainedSpring)
		end
	
		function ConstrainedSpring:Step(dt)
			local freq = self.freq*2*pi -- Convert from Hz to rad/s
			local x = self.x
			local v = self.v
			local minValue = self.minValue
			local maxValue = self.maxValue
			local goal = self.goal
	
			-- Solve the spring ODE for position and velocity after time t, assuming critical damping:
			--   2*f*x'[t] + x''[t] = f^2*(g - x[t])
			-- Knowns are x[0] and x'[0].
			-- Solve for x[t] and x'[t].
	
			local offset = goal - x
			local step = freq*dt
			local decay = exp(-step)
	
			local x1 = goal + (v*dt - offset*(step + 1))*decay
			local v1 = ((offset*freq - v)*step + v)*decay
	
			-- Constrain
			if x1 < minValue then
				x1 = minValue
				v1 = 0
			elseif x1 > maxValue then
				x1 = maxValue
				v1 = 0
			end
	
			self.x = x1
			self.v = v1
	
			return x1
		end
	end
	
	local zoomSpring = ConstrainedSpring.new(ZOOM_STIFFNESS, ZOOM_DEFAULT, MIN_FOCUS_DIST, cameraMaxZoomDistance)
	
	local function stepTargetZoom(z, dz, zoomMin, zoomMax)
		z = clamp(z + dz*(1 + z*ZOOM_ACCELERATION), zoomMin, zoomMax)
		if z < DIST_OPAQUE then
			z = dz <= 0 and zoomMin or DIST_OPAQUE
		end
		return z
	end
	
	local zoomDelta = 0
	
	local Zoom = {} do
		function Zoom.Update(renderDt, focus, extrapolation)
			local poppedZoom = math.huge
	
			if zoomSpring.goal > DIST_OPAQUE then
				-- Make a pessimistic estimate of zoom distance for this step without accounting for poppercam
				local maxPossibleZoom = max(
					zoomSpring.x,
					stepTargetZoom(zoomSpring.goal, zoomDelta, cameraMinZoomDistance, cameraMaxZoomDistance)
				)
	
				-- Run the Popper algorithm on the feasible zoom range, [MIN_FOCUS_DIST, maxPossibleZoom]
				poppedZoom = Popper(
					focus*CFrame.new(0, 0, MIN_FOCUS_DIST),
					maxPossibleZoom - MIN_FOCUS_DIST,
					extrapolation
				) + MIN_FOCUS_DIST
			end
	
			zoomSpring.minValue = MIN_FOCUS_DIST
			zoomSpring.maxValue = min(cameraMaxZoomDistance, poppedZoom)
	
			return zoomSpring:Step(renderDt)
		end
	
		function Zoom.SetZoomParameters(targetZoom, newZoomDelta)
			zoomSpring.goal = targetZoom
			zoomDelta = newZoomDelta
		end
	end
	
	return Zoom
end

function _MouseLockController()
	--[[ Constants ]]--
	local DEFAULT_MOUSE_LOCK_CURSOR = "rbxasset://textures/MouseLockedCursor.png"
	
	local CONTEXT_ACTION_NAME = "MouseLockSwitchAction"
	local MOUSELOCK_ACTION_PRIORITY = Enum.ContextActionPriority.Default.Value
	
	--[[ Services ]]--
	local PlayersService = game:GetService("Players")
	local ContextActionService = game:GetService("ContextActionService")
	local Settings = UserSettings()	-- ignore warning
	local GameSettings = Settings.GameSettings
	local Mouse = PlayersService.LocalPlayer:GetMouse()
	
	--[[ The Module ]]--
	local MouseLockController = {}
	MouseLockController.__index = MouseLockController
	
	function MouseLockController.new()
		local self = setmetatable({}, MouseLockController)
	
		self.isMouseLocked = false
		self.savedMouseCursor = nil
		self.boundKeys = {Enum.KeyCode.LeftShift, Enum.KeyCode.RightShift} -- defaults
	
		self.mouseLockToggledEvent = Instance.new("BindableEvent")
	
		local boundKeysObj = script:FindFirstChild("BoundKeys")
		if (not boundKeysObj) or (not boundKeysObj:IsA("StringValue")) then
			-- If object with correct name was found, but it's not a StringValue, destroy and replace
			if boundKeysObj then
				boundKeysObj:Destroy()
			end
	
			boundKeysObj = Instance.new("StringValue")
			boundKeysObj.Name = "BoundKeys"
			boundKeysObj.Value = "LeftShift,RightShift"
			boundKeysObj.Parent = script
		end
	
		if boundKeysObj then
			boundKeysObj.Changed:Connect(function(value)
				self:OnBoundKeysObjectChanged(value)
			end)
			self:OnBoundKeysObjectChanged(boundKeysObj.Value) -- Initial setup call
		end
	
		-- Watch for changes to user's ControlMode and ComputerMovementMode settings and update the feature availability accordingly
		GameSettings.Changed:Connect(function(property)
			if property == "ControlMode" or property == "ComputerMovementMode" then
				self:UpdateMouseLockAvailability()
			end
		end)
	
		-- Watch for changes to DevEnableMouseLock and update the feature availability accordingly
		PlayersService.LocalPlayer:GetPropertyChangedSignal("DevEnableMouseLock"):Connect(function()
			self:UpdateMouseLockAvailability()
		end)
	
		-- Watch for changes to DevEnableMouseLock and update the feature availability accordingly
		PlayersService.LocalPlayer:GetPropertyChangedSignal("DevComputerMovementMode"):Connect(function()
			self:UpdateMouseLockAvailability()
		end)
	
		self:UpdateMouseLockAvailability()
	
		return self
	end
	
	function MouseLockController:GetIsMouseLocked()
		return self.isMouseLocked
	end
	
	function MouseLockController:GetBindableToggleEvent()
		return self.mouseLockToggledEvent.Event
	end
	
	function MouseLockController:GetMouseLockOffset()
		local offsetValueObj = script:FindFirstChild("CameraOffset")
		if offsetValueObj and offsetValueObj:IsA("Vector3Value") then
			return offsetValueObj.Value
		else
			-- If CameraOffset object was found but not correct type, destroy
			if offsetValueObj then
				offsetValueObj:Destroy()
			end
			offsetValueObj = Instance.new("Vector3Value")
			offsetValueObj.Name = "CameraOffset"
			offsetValueObj.Value = Vector3.new(1.75,0,0) -- Legacy Default Value
			offsetValueObj.Parent = script
		end
	
		if offsetValueObj and offsetValueObj.Value then
			return offsetValueObj.Value
		end
	
		return Vector3.new(1.75,0,0)
	end
	
	function MouseLockController:UpdateMouseLockAvailability()
		local devAllowsMouseLock = PlayersService.LocalPlayer.DevEnableMouseLock
		local devMovementModeIsScriptable = PlayersService.LocalPlayer.DevComputerMovementMode == Enum.DevComputerMovementMode.Scriptable
		local userHasMouseLockModeEnabled = GameSettings.ControlMode == Enum.ControlMode.MouseLockSwitch
		local userHasClickToMoveEnabled =  GameSettings.ComputerMovementMode == Enum.ComputerMovementMode.ClickToMove
		local MouseLockAvailable = devAllowsMouseLock and userHasMouseLockModeEnabled and not userHasClickToMoveEnabled and not devMovementModeIsScriptable
	
		if MouseLockAvailable~=self.enabled then
			self:EnableMouseLock(MouseLockAvailable)
		end
	end
	
	function MouseLockController:OnBoundKeysObjectChanged(newValue)
		self.boundKeys = {} -- Overriding defaults, note: possibly with nothing at all if boundKeysObj.Value is "" or contains invalid values
		for token in string.gmatch(newValue,"[^%s,]+") do
			for _, keyEnum in pairs(Enum.KeyCode:GetEnumItems()) do
				if token == keyEnum.Name then
					self.boundKeys[#self.boundKeys+1] = keyEnum
					break
				end
			end
		end
		self:UnbindContextActions()
		self:BindContextActions()
	end
	
	--[[ Local Functions ]]--
	function MouseLockController:OnMouseLockToggled()
		self.isMouseLocked = not self.isMouseLocked
	
		if self.isMouseLocked then
			local cursorImageValueObj = script:FindFirstChild("CursorImage")
			if cursorImageValueObj and cursorImageValueObj:IsA("StringValue") and cursorImageValueObj.Value then
				self.savedMouseCursor = Mouse.Icon
				Mouse.Icon = cursorImageValueObj.Value
			else
				if cursorImageValueObj then
					cursorImageValueObj:Destroy()
				end
				cursorImageValueObj = Instance.new("StringValue")
				cursorImageValueObj.Name = "CursorImage"
				cursorImageValueObj.Value = DEFAULT_MOUSE_LOCK_CURSOR
				cursorImageValueObj.Parent = script
				self.savedMouseCursor = Mouse.Icon
				Mouse.Icon = DEFAULT_MOUSE_LOCK_CURSOR
			end
		else
			if self.savedMouseCursor then
				Mouse.Icon = self.savedMouseCursor
				self.savedMouseCursor = nil
			end
		end
	
		self.mouseLockToggledEvent:Fire()
	end
	
	function MouseLockController:DoMouseLockSwitch(name, state, input)
		if state == Enum.UserInputState.Begin then
			self:OnMouseLockToggled()
			return Enum.ContextActionResult.Sink
		end
		return Enum.ContextActionResult.Pass
	end
	
	function MouseLockController:BindContextActions()
		ContextActionService:BindActionAtPriority(CONTEXT_ACTION_NAME, function(name, state, input)
			return self:DoMouseLockSwitch(name, state, input)
		end, false, MOUSELOCK_ACTION_PRIORITY, unpack(self.boundKeys))
	end
	
	function MouseLockController:UnbindContextActions()
		ContextActionService:UnbindAction(CONTEXT_ACTION_NAME)
	end
	
	function MouseLockController:IsMouseLocked()
		return self.enabled and self.isMouseLocked
	end
	
	function MouseLockController:EnableMouseLock(enable)
		if enable ~= self.enabled then
	
			self.enabled = enable
	
			if self.enabled then
				-- Enabling the mode
				self:BindContextActions()
			else
				-- Disabling
				-- Restore mouse cursor
				if Mouse.Icon~="" then
					Mouse.Icon = ""
				end
	
				self:UnbindContextActions()
	
				-- If the mode is disabled while being used, fire the event to toggle it off
				if self.isMouseLocked then
					self.mouseLockToggledEvent:Fire()
				end
	
				self.isMouseLocked = false
			end
	
		end
	end
	
	return MouseLockController
end

function _TransparencyController()
	
	local MAX_TWEEN_RATE = 2.8 -- per second
	
	local Util = _CameraUtils()
	
	--[[ The Module ]]--
	local TransparencyController = {}
	TransparencyController.__index = TransparencyController
	
	function TransparencyController.new()
		local self = setmetatable({}, TransparencyController)
	
		self.lastUpdate = tick()
		self.transparencyDirty = false
		self.enabled = false
		self.lastTransparency = nil
	
		self.descendantAddedConn, self.descendantRemovingConn = nil, nil
		self.toolDescendantAddedConns = {}
		self.toolDescendantRemovingConns = {}
		self.cachedParts = {}
	
		return self
	end
	
	
	function TransparencyController:HasToolAncestor(object)
		if object.Parent == nil then return false end
		return object.Parent:IsA('Tool') or self:HasToolAncestor(object.Parent)
	end
	
	function TransparencyController:IsValidPartToModify(part)
		if part:IsA('BasePart') or part:IsA('Decal') then
			return not self:HasToolAncestor(part)
		end
		return false
	end
	
	function TransparencyController:CachePartsRecursive(object)
		if object then
			if self:IsValidPartToModify(object) then
				self.cachedParts[object] = true
				self.transparencyDirty = true
			end
			for _, child in pairs(object:GetChildren()) do
				self:CachePartsRecursive(child)
			end
		end
	end
	
	function TransparencyController:TeardownTransparency()
		for child, _ in pairs(self.cachedParts) do
			child.LocalTransparencyModifier = 0
		end
		self.cachedParts = {}
		self.transparencyDirty = true
		self.lastTransparency = nil
	
		if self.descendantAddedConn then
			self.descendantAddedConn:disconnect()
			self.descendantAddedConn = nil
		end
		if self.descendantRemovingConn then
			self.descendantRemovingConn:disconnect()
			self.descendantRemovingConn = nil
		end
		for object, conn in pairs(self.toolDescendantAddedConns) do
			conn:Disconnect()
			self.toolDescendantAddedConns[object] = nil
		end
		for object, conn in pairs(self.toolDescendantRemovingConns) do
			conn:Disconnect()
			self.toolDescendantRemovingConns[object] = nil
		end
	end
	
	function TransparencyController:SetupTransparency(character)
		self:TeardownTransparency()
	
		if self.descendantAddedConn then self.descendantAddedConn:disconnect() end
		self.descendantAddedConn = character.DescendantAdded:Connect(function(object)
			-- This is a part we want to invisify
			if self:IsValidPartToModify(object) then
				self.cachedParts[object] = true
				self.transparencyDirty = true
			-- There is now a tool under the character
			elseif object:IsA('Tool') then
				if self.toolDescendantAddedConns[object] then self.toolDescendantAddedConns[object]:Disconnect() end
				self.toolDescendantAddedConns[object] = object.DescendantAdded:Connect(function(toolChild)
					self.cachedParts[toolChild] = nil
					if toolChild:IsA('BasePart') or toolChild:IsA('Decal') then
						-- Reset the transparency
						toolChild.LocalTransparencyModifier = 0
					end
				end)
				if self.toolDescendantRemovingConns[object] then self.toolDescendantRemovingConns[object]:disconnect() end
				self.toolDescendantRemovingConns[object] = object.DescendantRemoving:Connect(function(formerToolChild)
					wait() -- wait for new parent
					if character and formerToolChild and formerToolChild:IsDescendantOf(character) then
						if self:IsValidPartToModify(formerToolChild) then
							self.cachedParts[formerToolChild] = true
							self.transparencyDirty = true
						end
					end
				end)
			end
		end)
		if self.descendantRemovingConn then self.descendantRemovingConn:disconnect() end
		self.descendantRemovingConn = character.DescendantRemoving:connect(function(object)
			if self.cachedParts[object] then
				self.cachedParts[object] = nil
				-- Reset the transparency
				object.LocalTransparencyModifier = 0
			end
		end)
		self:CachePartsRecursive(character)
	end
	
	
	function TransparencyController:Enable(enable)
		if self.enabled ~= enable then
			self.enabled = enable
			self:Update()
		end
	end
	
	function TransparencyController:SetSubject(subject)
		local character = nil
		if subject and subject:IsA("Humanoid") then
			character = subject.Parent
		end
		if subject and subject:IsA("VehicleSeat") and subject.Occupant then
			character = subject.Occupant.Parent
		end
		if character then
			self:SetupTransparency(character)
		else
			self:TeardownTransparency()
		end
	end
	
	function TransparencyController:Update()
		local instant = false
		local now = tick()
		local currentCamera = workspace.CurrentCamera
	
		if currentCamera then
			local transparency = 0
			if not self.enabled then
				instant = true
			else
				local distance = (currentCamera.Focus.p - currentCamera.CoordinateFrame.p).magnitude
				transparency = (distance<2) and (1.0-(distance-0.5)/1.5) or 0 --(7 - distance) / 5
				if transparency < 0.5 then
					transparency = 0
				end
	
				if self.lastTransparency then
					local deltaTransparency = transparency - self.lastTransparency
	
					-- Don't tween transparency if it is instant or your character was fully invisible last frame
					if not instant and transparency < 1 and self.lastTransparency < 0.95 then
						local maxDelta = MAX_TWEEN_RATE * (now - self.lastUpdate)
						deltaTransparency = math.clamp(deltaTransparency, -maxDelta, maxDelta)
					end
					transparency = self.lastTransparency + deltaTransparency
				else
					self.transparencyDirty = true
				end
	
				transparency = math.clamp(Util.Round(transparency, 2), 0, 1)
			end
	
			if self.transparencyDirty or self.lastTransparency ~= transparency then
				for child, _ in pairs(self.cachedParts) do
					child.LocalTransparencyModifier = transparency
				end
				self.transparencyDirty = false
				self.lastTransparency = transparency
			end
		end
		self.lastUpdate = now
	end
	
	return TransparencyController
end

function _Poppercam()
	local ZoomController =  _ZoomController()
	
	local TransformExtrapolator = {} do
		TransformExtrapolator.__index = TransformExtrapolator
	
		local CF_IDENTITY = CFrame.new()
	
		local function cframeToAxis(cframe)
			local axis, angle = cframe:toAxisAngle()
			return axis*angle
		end
	
		local function axisToCFrame(axis)
			local angle = axis.magnitude
			if angle > 1e-5 then
				return CFrame.fromAxisAngle(axis, angle)
			end
			return CF_IDENTITY
		end
	
		local function extractRotation(cf)
			local _, _, _, xx, yx, zx, xy, yy, zy, xz, yz, zz = cf:components()
			return CFrame.new(0, 0, 0, xx, yx, zx, xy, yy, zy, xz, yz, zz)
		end
	
		function TransformExtrapolator.new()
			return setmetatable({
				lastCFrame = nil,
			}, TransformExtrapolator)
		end
	
		function TransformExtrapolator:Step(dt, currentCFrame)
			local lastCFrame = self.lastCFrame or currentCFrame
			self.lastCFrame = currentCFrame
	
			local currentPos = currentCFrame.p
			local currentRot = extractRotation(currentCFrame)
	
			local lastPos = lastCFrame.p
			local lastRot = extractRotation(lastCFrame)
	
			-- Estimate velocities from the delta between now and the last frame
			-- This estimation can be a little noisy.
			local dp = (currentPos - lastPos)/dt
			local dr = cframeToAxis(currentRot*lastRot:inverse())/dt
	
			local function extrapolate(t)
				local p = dp*t + currentPos
				local r = axisToCFrame(dr*t)*currentRot
				return r + p
			end
	
			return {
				extrapolate = extrapolate,
				posVelocity = dp,
				rotVelocity = dr,
			}
		end
	
		function TransformExtrapolator:Reset()
			self.lastCFrame = nil
		end
	end
	
	--[[ The Module ]]--
	local BaseOcclusion = _BaseOcclusion()
	local Poppercam = setmetatable({}, BaseOcclusion)
	Poppercam.__index = Poppercam
	
	function Poppercam.new()
		local self = setmetatable(BaseOcclusion.new(), Poppercam)
		self.focusExtrapolator = TransformExtrapolator.new()
		return self
	end
	
	function Poppercam:GetOcclusionMode()
		return Enum.DevCameraOcclusionMode.Zoom
	end
	
	function Poppercam:Enable(enable)
		self.focusExtrapolator:Reset()
	end
	
	function Poppercam:Update(renderDt, desiredCameraCFrame, desiredCameraFocus, cameraController)
		local rotatedFocus = CFrame.new(desiredCameraFocus.p, desiredCameraCFrame.p)*CFrame.new(
			0, 0, 0,
			-1, 0, 0,
			0, 1, 0,
			0, 0, -1
		)
		local extrapolation = self.focusExtrapolator:Step(renderDt, rotatedFocus)
		local zoom = ZoomController.Update(renderDt, rotatedFocus, extrapolation)
		return rotatedFocus*CFrame.new(0, 0, zoom), desiredCameraFocus
	end
	
	-- Called when character is added
	function Poppercam:CharacterAdded(character, player)
	end
	
	-- Called when character is about to be removed
	function Poppercam:CharacterRemoving(character, player)
	end
	
	function Poppercam:OnCameraSubjectChanged(newSubject)
	end
	
	local ZoomController = _ZoomController()
	
	function Poppercam:Update(renderDt, desiredCameraCFrame, desiredCameraFocus, cameraController)
		local rotatedFocus = desiredCameraFocus * (desiredCameraCFrame - desiredCameraCFrame.p)
		local extrapolation = self.focusExtrapolator:Step(renderDt, rotatedFocus)
		local zoom = ZoomController.Update(renderDt, rotatedFocus, extrapolation)
		return rotatedFocus*CFrame.new(0, 0, zoom), desiredCameraFocus
	end
	
	return Poppercam
end

function _Invisicam()
	
	--[[ Top Level Roblox Services ]]--
	local PlayersService = game:GetService("Players")
	
	--[[ Constants ]]--
	local ZERO_VECTOR3 = Vector3.new(0,0,0)
	local USE_STACKING_TRANSPARENCY = true	-- Multiple items between the subject and camera get transparency values that add up to TARGET_TRANSPARENCY
	local TARGET_TRANSPARENCY = 0.75 -- Classic Invisicam's Value, also used by new invisicam for parts hit by head and torso rays
	local TARGET_TRANSPARENCY_PERIPHERAL = 0.5 -- Used by new SMART_CIRCLE mode for items not hit by head and torso rays
	
	local MODE = {
		--CUSTOM = 1, 		-- Retired, unused
		LIMBS = 2, 			-- Track limbs
		MOVEMENT = 3, 		-- Track movement
		CORNERS = 4, 		-- Char model corners
		CIRCLE1 = 5, 		-- Circle of casts around character
		CIRCLE2 = 6, 		-- Circle of casts around character, camera relative
		LIMBMOVE = 7, 		-- LIMBS mode + MOVEMENT mode
		SMART_CIRCLE = 8, 	-- More sample points on and around character
		CHAR_OUTLINE = 9,	-- Dynamic outline around the character
	}
	
	local LIMB_TRACKING_SET = {
		-- Body parts common to R15 and R6
		['Head'] = true,
	
		-- Body parts unique to R6
		['Left Arm'] = true,
		['Right Arm'] = true,
		['Left Leg'] = true,
		['Right Leg'] = true,
	
		-- Body parts unique to R15
		['LeftLowerArm'] = true,
		['RightLowerArm'] = true,
		['LeftUpperLeg'] = true,
		['RightUpperLeg'] = true
	}
	
	local CORNER_FACTORS = {
		Vector3.new(1,1,-1),
		Vector3.new(1,-1,-1),
		Vector3.new(-1,-1,-1),
		Vector3.new(-1,1,-1)
	}
	
	local CIRCLE_CASTS = 10
	local MOVE_CASTS = 3
	local SMART_CIRCLE_CASTS = 24
	local SMART_CIRCLE_INCREMENT = 2.0 * math.pi / SMART_CIRCLE_CASTS
	local CHAR_OUTLINE_CASTS = 24
	
	-- Used to sanitize user-supplied functions
	local function AssertTypes(param, ...)
		local allowedTypes = {}
		local typeString = ''
		for _, typeName in pairs({...}) do
			allowedTypes[typeName] = true
			typeString = typeString .. (typeString == '' and '' or ' or ') .. typeName
		end
		local theType = type(param)
		assert(allowedTypes[theType], typeString .. " type expected, got: " .. theType)
	end
	
	-- Helper function for Determinant of 3x3, not in CameraUtils for performance reasons
	local function Det3x3(a,b,c,d,e,f,g,h,i)
		return (a*(e*i-f*h)-b*(d*i-f*g)+c*(d*h-e*g))
	end
	
	-- Smart Circle mode needs the intersection of 2 rays that are known to be in the same plane
	-- because they are generated from cross products with a common vector. This function is computing
	-- that intersection, but it's actually the general solution for the point halfway between where
	-- two skew lines come nearest to each other, which is more forgiving.
	local function RayIntersection(p0, v0, p1, v1)
		local v2 = v0:Cross(v1)
		local d1 = p1.x - p0.x
		local d2 = p1.y - p0.y
		local d3 = p1.z - p0.z
		local denom = Det3x3(v0.x,-v1.x,v2.x,v0.y,-v1.y,v2.y,v0.z,-v1.z,v2.z)
	
		if (denom == 0) then
			return ZERO_VECTOR3 -- No solution (rays are parallel)
		end
	
		local t0 = Det3x3(d1,-v1.x,v2.x,d2,-v1.y,v2.y,d3,-v1.z,v2.z) / denom
		local t1 = Det3x3(v0.x,d1,v2.x,v0.y,d2,v2.y,v0.z,d3,v2.z) / denom
		local s0 = p0 + t0 * v0
		local s1 = p1 + t1 * v1
		local s = s0 + 0.5 * ( s1 - s0 )
	
		-- 0.25 studs is a threshold for deciding if the rays are
		-- close enough to be considered intersecting, found through testing 
		if (s1-s0).Magnitude < 0.25 then
			return s
		else
			return ZERO_VECTOR3
		end
	end
	
	
	
	--[[ The Module ]]--
	local BaseOcclusion = _BaseOcclusion()
	local Invisicam = setmetatable({}, BaseOcclusion)
	Invisicam.__index = Invisicam
	
	function Invisicam.new()
		local self = setmetatable(BaseOcclusion.new(), Invisicam)
	
		self.char = nil
		self.humanoidRootPart = nil
		self.torsoPart = nil
		self.headPart = nil
	
		self.childAddedConn = nil
		self.childRemovedConn = nil
	
		self.behaviors = {} 	-- Map of modes to behavior fns
		self.behaviors[MODE.LIMBS] = self.LimbBehavior
		self.behaviors[MODE.MOVEMENT] = self.MoveBehavior
		self.behaviors[MODE.CORNERS] = self.CornerBehavior
		self.behaviors[MODE.CIRCLE1] = self.CircleBehavior
		self.behaviors[MODE.CIRCLE2] = self.CircleBehavior
		self.behaviors[MODE.LIMBMOVE] = self.LimbMoveBehavior
		self.behaviors[MODE.SMART_CIRCLE] = self.SmartCircleBehavior
		self.behaviors[MODE.CHAR_OUTLINE] = self.CharacterOutlineBehavior
	
		self.mode = MODE.SMART_CIRCLE
		self.behaviorFunction = self.SmartCircleBehavior
	
		self.savedHits = {} 	-- Objects currently being faded in/out
		self.trackedLimbs = {}	-- Used in limb-tracking casting modes
	
		self.camera = game.Workspace.CurrentCamera
	
		self.enabled = false
		return self
	end
	
	function Invisicam:Enable(enable)
		self.enabled = enable
	
		if not enable then
			self:Cleanup()
		end
	end
	
	function Invisicam:GetOcclusionMode()
		return Enum.DevCameraOcclusionMode.Invisicam
	end
	
	--[[ Module functions ]]--
	function Invisicam:LimbBehavior(castPoints)
		for limb, _ in pairs(self.trackedLimbs) do
			castPoints[#castPoints + 1] = limb.Position
		end
	end
	
	function Invisicam:MoveBehavior(castPoints)
		for i = 1, MOVE_CASTS do
			local position, velocity = self.humanoidRootPart.Position, self.humanoidRootPart.Velocity
			local horizontalSpeed = Vector3.new(velocity.X, 0, velocity.Z).Magnitude / 2
			local offsetVector = (i - 1) * self.humanoidRootPart.CFrame.lookVector * horizontalSpeed
			castPoints[#castPoints + 1] = position + offsetVector
		end
	end
	
	function Invisicam:CornerBehavior(castPoints)
		local cframe = self.humanoidRootPart.CFrame
		local centerPoint = cframe.p
		local rotation = cframe - centerPoint
		local halfSize = self.char:GetExtentsSize() / 2 --NOTE: Doesn't update w/ limb animations
		castPoints[#castPoints + 1] = centerPoint
		for i = 1, #CORNER_FACTORS do
			castPoints[#castPoints + 1] = centerPoint + (rotation * (halfSize * CORNER_FACTORS[i]))
		end
	end
	
	function Invisicam:CircleBehavior(castPoints)
		local cframe
		if self.mode == MODE.CIRCLE1 then
			cframe = self.humanoidRootPart.CFrame
		else
			local camCFrame = self.camera.CoordinateFrame
			cframe = camCFrame - camCFrame.p + self.humanoidRootPart.Position
		end
		castPoints[#castPoints + 1] = cframe.p
		for i = 0, CIRCLE_CASTS - 1 do
			local angle = (2 * math.pi / CIRCLE_CASTS) * i
			local offset = 3 * Vector3.new(math.cos(angle), math.sin(angle), 0)
			castPoints[#castPoints + 1] = cframe * offset
		end
	end
	
	function Invisicam:LimbMoveBehavior(castPoints)
		self:LimbBehavior(castPoints)
		self:MoveBehavior(castPoints)
	end
	
	function Invisicam:CharacterOutlineBehavior(castPoints)
		local torsoUp = self.torsoPart.CFrame.upVector.unit
		local torsoRight = self.torsoPart.CFrame.rightVector.unit
	
		-- Torso cross of points for interior coverage
		castPoints[#castPoints + 1] = self.torsoPart.CFrame.p
		castPoints[#castPoints + 1] = self.torsoPart.CFrame.p + torsoUp
		castPoints[#castPoints + 1] = self.torsoPart.CFrame.p - torsoUp
		castPoints[#castPoints + 1] = self.torsoPart.CFrame.p + torsoRight
		castPoints[#castPoints + 1] = self.torsoPart.CFrame.p - torsoRight
		if self.headPart then
			castPoints[#castPoints + 1] = self.headPart.CFrame.p
		end
	
		local cframe = CFrame.new(ZERO_VECTOR3,Vector3.new(self.camera.CoordinateFrame.lookVector.X,0,self.camera.CoordinateFrame.lookVector.Z))
		local centerPoint = (self.torsoPart and self.torsoPart.Position or self.humanoidRootPart.Position)
	
		local partsWhitelist = {self.torsoPart}
		if self.headPart then
			partsWhitelist[#partsWhitelist + 1] = self.headPart
		end
	
		for i = 1, CHAR_OUTLINE_CASTS do
			local angle = (2 * math.pi * i / CHAR_OUTLINE_CASTS)
			local offset = cframe * (3 * Vector3.new(math.cos(angle), math.sin(angle), 0))
	
			offset = Vector3.new(offset.X, math.max(offset.Y, -2.25), offset.Z)	
	
			local ray = Ray.new(centerPoint + offset, -3 * offset)
			local hit, hitPoint = game.Workspace:FindPartOnRayWithWhitelist(ray, partsWhitelist, false, false)
	
			if hit then
				-- Use hit point as the cast point, but nudge it slightly inside the character so that bumping up against
				-- walls is less likely to cause a transparency glitch
				castPoints[#castPoints + 1] = hitPoint + 0.2 * (centerPoint - hitPoint).unit
			end
		end
	end
	
	function Invisicam:SmartCircleBehavior(castPoints)
		local torsoUp = self.torsoPart.CFrame.upVector.unit
		local torsoRight = self.torsoPart.CFrame.rightVector.unit
	
		-- SMART_CIRCLE mode includes rays to head and 5 to the torso.
		-- Hands, arms, legs and feet are not included since they
		-- are not canCollide and can therefore go inside of parts
		castPoints[#castPoints + 1] = self.torsoPart.CFrame.p
		castPoints[#castPoints + 1] = self.torsoPart.CFrame.p + torsoUp
		castPoints[#castPoints + 1] = self.torsoPart.CFrame.p - torsoUp
		castPoints[#castPoints + 1] = self.torsoPart.CFrame.p + torsoRight
		castPoints[#castPoints + 1] = self.torsoPart.CFrame.p - torsoRight
		if self.headPart then
			castPoints[#castPoints + 1] = self.headPart.CFrame.p
		end
	
		local cameraOrientation = self.camera.CFrame - self.camera.CFrame.p
		local torsoPoint = Vector3.new(0,0.5,0) + (self.torsoPart and self.torsoPart.Position or self.humanoidRootPart.Position)
		local radius = 2.5
	
		-- This loop first calculates points in a circle of radius 2.5 around the torso of the character, in the
		-- plane orthogonal to the camera's lookVector. Each point is then raycast to, to determine if it is within
		-- the free space surrounding the player (not inside anything). Two iterations are done to adjust points that
		-- are inside parts, to try to move them to valid locations that are still on their camera ray, so that the
		-- circle remains circular from the camera's perspective, but does not cast rays into walls or parts that are
		-- behind, below or beside the character and not really obstructing view of the character. This minimizes
		-- the undesirable situation where the character walks up to an exterior wall and it is made invisible even
		-- though it is behind the character.
		for i = 1, SMART_CIRCLE_CASTS do
			local angle = SMART_CIRCLE_INCREMENT * i - 0.5 * math.pi
			local offset = radius * Vector3.new(math.cos(angle), math.sin(angle), 0)
			local circlePoint = torsoPoint + cameraOrientation * offset
	
			-- Vector from camera to point on the circle being tested
			local vp = circlePoint - self.camera.CFrame.p
	
			local ray = Ray.new(torsoPoint, circlePoint - torsoPoint)
			local hit, hp, hitNormal = game.Workspace:FindPartOnRayWithIgnoreList(ray, {self.char}, false, false )
			local castPoint = circlePoint
	
			if hit then
				local hprime = hp + 0.1 * hitNormal.unit -- Slightly offset hit point from the hit surface
				local v0 = hprime - torsoPoint -- Vector from torso to offset hit point
	
				local perp = (v0:Cross(vp)).unit
	
				-- Vector from the offset hit point, along the hit surface
				local v1 = (perp:Cross(hitNormal)).unit
	
				-- Vector from camera to offset hit
				local vprime = (hprime - self.camera.CFrame.p).unit
	
				-- This dot product checks to see if the vector along the hit surface would hit the correct
				-- side of the invisicam cone, or if it would cross the camera look vector and hit the wrong side
				if ( v0.unit:Dot(-v1) < v0.unit:Dot(vprime)) then
					castPoint = RayIntersection(hprime, v1, circlePoint, vp)
	
					if castPoint.Magnitude > 0 then
						local ray = Ray.new(hprime, castPoint - hprime)
						local hit, hitPoint, hitNormal = game.Workspace:FindPartOnRayWithIgnoreList(ray, {self.char}, false, false )
	
						if hit then
							local hprime2 = hitPoint + 0.1 * hitNormal.unit
							castPoint = hprime2
						end
					else
						castPoint = hprime
					end
				else
					castPoint = hprime
				end
	
				local ray = Ray.new(torsoPoint, (castPoint - torsoPoint))
				local hit, hitPoint, hitNormal = game.Workspace:FindPartOnRayWithIgnoreList(ray, {self.char}, false, false )
	
				if hit then
					local castPoint2 = hitPoint - 0.1 * (castPoint - torsoPoint).unit
					castPoint = castPoint2
				end
			end
	
			castPoints[#castPoints + 1] = castPoint
		end
	end
	
	function Invisicam:CheckTorsoReference()
		if self.char then
			self.torsoPart = self.char:FindFirstChild("Torso")
			if not self.torsoPart then
				self.torsoPart = self.char:FindFirstChild("UpperTorso")
				if not self.torsoPart then
					self.torsoPart = self.char:FindFirstChild("HumanoidRootPart")
				end
			end
	
			self.headPart = self.char:FindFirstChild("Head")
		end
	end
	
	function Invisicam:CharacterAdded(char, player)
		-- We only want the LocalPlayer's character
		if player~=PlayersService.LocalPlayer then return end
	
		if self.childAddedConn then
			self.childAddedConn:Disconnect()
			self.childAddedConn = nil
		end
		if self.childRemovedConn then
			self.childRemovedConn:Disconnect()
			self.childRemovedConn = nil
		end
	
		self.char = char
	
		self.trackedLimbs = {}
		local function childAdded(child)
			if child:IsA("BasePart") then
				if LIMB_TRACKING_SET[child.Name] then
					self.trackedLimbs[child] = true
				end
	
				if child.Name == "Torso" or child.Name == "UpperTorso" then
					self.torsoPart = child
				end
	
				if child.Name == "Head" then
					self.headPart = child
				end
			end
		end
	
		local function childRemoved(child)
			self.trackedLimbs[child] = nil
	
			-- If removed/replaced part is 'Torso' or 'UpperTorso' double check that we still have a TorsoPart to use
			self:CheckTorsoReference()
		end
	
		self.childAddedConn = char.ChildAdded:Connect(childAdded)
		self.childRemovedConn = char.ChildRemoved:Connect(childRemoved)
		for _, child in pairs(self.char:GetChildren()) do
			childAdded(child)
		end
	end
	
	function Invisicam:SetMode(newMode)
		AssertTypes(newMode, 'number')
		for _, modeNum in pairs(MODE) do
			if modeNum == newMode then
				self.mode = newMode
				self.behaviorFunction = self.behaviors[self.mode]
				return
			end
		end
		error("Invalid mode number")
	end
	
	function Invisicam:GetObscuredParts()
		return self.savedHits
	end
	
	-- Want to turn off Invisicam? Be sure to call this after.
	function Invisicam:Cleanup()
		for hit, originalFade in pairs(self.savedHits) do
			hit.LocalTransparencyModifier = originalFade
		end
	end
	
	function Invisicam:Update(dt, desiredCameraCFrame, desiredCameraFocus)
		-- Bail if there is no Character
		if not self.enabled or not self.char then
			return desiredCameraCFrame, desiredCameraFocus
		end
	
		self.camera = game.Workspace.CurrentCamera
	
		-- TODO: Move this to a GetHumanoidRootPart helper, probably combine with CheckTorsoReference
		-- Make sure we still have a HumanoidRootPart
		if not self.humanoidRootPart then
			local humanoid = self.char:FindFirstChildOfClass("Humanoid")
			if humanoid and humanoid.RootPart then
				self.humanoidRootPart = humanoid.RootPart
			else
				-- Not set up with Humanoid? Try and see if there's one in the Character at all:
				self.humanoidRootPart = self.char:FindFirstChild("HumanoidRootPart")
				if not self.humanoidRootPart then
					-- Bail out, since we're relying on HumanoidRootPart existing
					return desiredCameraCFrame, desiredCameraFocus
				end
			end
	
			-- TODO: Replace this with something more sensible
			local ancestryChangedConn
			ancestryChangedConn = self.humanoidRootPart.AncestryChanged:Connect(function(child, parent)
				if child == self.humanoidRootPart and not parent then 
					self.humanoidRootPart = nil
					if ancestryChangedConn and ancestryChangedConn.Connected then
						ancestryChangedConn:Disconnect()
						ancestryChangedConn = nil
					end
				end
			end)
		end
	
		if not self.torsoPart then
			self:CheckTorsoReference()
			if not self.torsoPart then
				-- Bail out, since we're relying on Torso existing, should never happen since we fall back to using HumanoidRootPart as torso
				return desiredCameraCFrame, desiredCameraFocus
			end
		end
	
		-- Make a list of world points to raycast to
		local castPoints = {}
		self.behaviorFunction(self, castPoints)
	
		-- Cast to get a list of objects between the camera and the cast points
		local currentHits = {}
		local ignoreList = {self.char}
		local function add(hit)
			currentHits[hit] = true
			if not self.savedHits[hit] then
				self.savedHits[hit] = hit.LocalTransparencyModifier
			end
		end
	
		local hitParts
		local hitPartCount = 0
	
		-- Hash table to treat head-ray-hit parts differently than the rest of the hit parts hit by other rays
		-- head/torso ray hit parts will be more transparent than peripheral parts when USE_STACKING_TRANSPARENCY is enabled
		local headTorsoRayHitParts = {}
	
		local perPartTransparencyHeadTorsoHits = TARGET_TRANSPARENCY
		local perPartTransparencyOtherHits = TARGET_TRANSPARENCY
	
		if USE_STACKING_TRANSPARENCY then
	
			-- This first call uses head and torso rays to find out how many parts are stacked up
			-- for the purpose of calculating required per-part transparency
			local headPoint = self.headPart and self.headPart.CFrame.p or castPoints[1]
			local torsoPoint = self.torsoPart and self.torsoPart.CFrame.p or castPoints[2]
			hitParts = self.camera:GetPartsObscuringTarget({headPoint, torsoPoint}, ignoreList)
	
			-- Count how many things the sample rays passed through, including decals. This should only
			-- count decals facing the camera, but GetPartsObscuringTarget does not return surface normals,
			-- so my compromise for now is to just let any decal increase the part count by 1. Only one
			-- decal per part will be considered.
			for i = 1, #hitParts do
				local hitPart = hitParts[i]
				hitPartCount = hitPartCount + 1 -- count the part itself
				headTorsoRayHitParts[hitPart] = true
				for _, child in pairs(hitPart:GetChildren()) do
					if child:IsA('Decal') or child:IsA('Texture') then
						hitPartCount = hitPartCount + 1 -- count first decal hit, then break
						break
					end
				end
			end
	
			if (hitPartCount > 0) then
				perPartTransparencyHeadTorsoHits = math.pow( ((0.5 * TARGET_TRANSPARENCY) + (0.5 * TARGET_TRANSPARENCY / hitPartCount)), 1 / hitPartCount )
				perPartTransparencyOtherHits = math.pow( ((0.5 * TARGET_TRANSPARENCY_PERIPHERAL) + (0.5 * TARGET_TRANSPARENCY_PERIPHERAL / hitPartCount)), 1 / hitPartCount )
			end
		end
	
		-- Now get all the parts hit by all the rays
		hitParts = self.camera:GetPartsObscuringTarget(castPoints, ignoreList)
	
		local partTargetTransparency = {}
	
		-- Include decals and textures
		for i = 1, #hitParts do
			local hitPart = hitParts[i]
	
			partTargetTransparency[hitPart] =headTorsoRayHitParts[hitPart] and perPartTransparencyHeadTorsoHits or perPartTransparencyOtherHits
	
			-- If the part is not already as transparent or more transparent than what invisicam requires, add it to the list of
			-- parts to be modified by invisicam
			if hitPart.Transparency < partTargetTransparency[hitPart] then
				add(hitPart)
			end
	
			-- Check all decals and textures on the part
			for _, child in pairs(hitPart:GetChildren()) do
				if child:IsA('Decal') or child:IsA('Texture') then
					if (child.Transparency < partTargetTransparency[hitPart]) then
						partTargetTransparency[child] = partTargetTransparency[hitPart]
						add(child)
					end
				end
			end
		end
	
		-- Invisibilize objects that are in the way, restore those that aren't anymore
		for hitPart, originalLTM in pairs(self.savedHits) do
			if currentHits[hitPart] then
				-- LocalTransparencyModifier gets whatever value is required to print the part's total transparency to equal perPartTransparency
				hitPart.LocalTransparencyModifier = (hitPart.Transparency < 1) and ((partTargetTransparency[hitPart] - hitPart.Transparency) / (1.0 - hitPart.Transparency)) or 0
			else -- Restore original pre-invisicam value of LTM
				hitPart.LocalTransparencyModifier = originalLTM
				self.savedHits[hitPart] = nil
			end
		end
	
		-- Invisicam does not change the camera values
		return desiredCameraCFrame, desiredCameraFocus
	end
	
	return Invisicam
end

function _LegacyCamera()
	
	local ZERO_VECTOR2 = Vector2.new(0,0)
	
	local Util = _CameraUtils()
	
	--[[ Services ]]--
	local PlayersService = game:GetService('Players')
	
	--[[ The Module ]]--
	local BaseCamera = _BaseCamera()
	local LegacyCamera = setmetatable({}, BaseCamera)
	LegacyCamera.__index = LegacyCamera
	
	function LegacyCamera.new()
		local self = setmetatable(BaseCamera.new(), LegacyCamera)
	
		self.cameraType = Enum.CameraType.Fixed
		self.lastUpdate = tick()
		self.lastDistanceToSubject = nil
	
		return self
	end
	
	function LegacyCamera:GetModuleName()
		return "LegacyCamera"
	end
	
	--[[ Functions overridden from BaseCamera ]]--
	function LegacyCamera:SetCameraToSubjectDistance(desiredSubjectDistance)
		return BaseCamera.SetCameraToSubjectDistance(self,desiredSubjectDistance)
	end
	
	function LegacyCamera:Update(dt)
	
		-- Cannot update until cameraType has been set
		if not self.cameraType then return end
	
		local now = tick()
		local timeDelta = (now - self.lastUpdate)
		local camera = 	workspace.CurrentCamera
		local newCameraCFrame = camera.CFrame
		local newCameraFocus = camera.Focus
		local player = PlayersService.LocalPlayer
	
		if self.lastUpdate == nil or timeDelta > 1 then
			self.lastDistanceToSubject = nil
		end
		local subjectPosition = self:GetSubjectPosition()
	
		if self.cameraType == Enum.CameraType.Fixed then
			if self.lastUpdate then
				-- Cap out the delta to 0.1 so we don't get some crazy things when we re-resume from
				local delta = math.min(0.1, now - self.lastUpdate)
				local gamepadRotation = self:UpdateGamepad()
				self.rotateInput = self.rotateInput + (gamepadRotation * delta)
			end
	
			if subjectPosition and player and camera then
				local distanceToSubject = self:GetCameraToSubjectDistance()
				local newLookVector = self:CalculateNewLookVector()
				self.rotateInput = ZERO_VECTOR2
	
				newCameraFocus = camera.Focus -- Fixed camera does not change focus
				newCameraCFrame = CFrame.new(camera.CFrame.p, camera.CFrame.p + (distanceToSubject * newLookVector))
			end
		elseif self.cameraType == Enum.CameraType.Attach then
			if subjectPosition and camera then
				local distanceToSubject = self:GetCameraToSubjectDistance()
				local humanoid = self:GetHumanoid()
				if self.lastUpdate and humanoid and humanoid.RootPart then
	
					-- Cap out the delta to 0.1 so we don't get some crazy things when we re-resume from
					local delta = math.min(0.1, now - self.lastUpdate)
					local gamepadRotation = self:UpdateGamepad()
					self.rotateInput = self.rotateInput + (gamepadRotation * delta)
	
					local forwardVector = humanoid.RootPart.CFrame.lookVector
	
					local y = Util.GetAngleBetweenXZVectors(forwardVector, self:GetCameraLookVector())
					if Util.IsFinite(y) then
						-- Preserve vertical rotation from user input
						self.rotateInput = Vector2.new(y, self.rotateInput.Y)
					end
				end
	
				local newLookVector = self:CalculateNewLookVector()
				self.rotateInput = ZERO_VECTOR2
	
				newCameraFocus = CFrame.new(subjectPosition)
				newCameraCFrame = CFrame.new(subjectPosition - (distanceToSubject * newLookVector), subjectPosition)
			end
		elseif self.cameraType == Enum.CameraType.Watch then
			if subjectPosition and player and camera then
				local cameraLook = nil
	
				local humanoid = self:GetHumanoid()
				if humanoid and humanoid.RootPart then
					local diffVector = subjectPosition - camera.CFrame.p
					cameraLook = diffVector.unit
	
					if self.lastDistanceToSubject and self.lastDistanceToSubject == self:GetCameraToSubjectDistance() then
						-- Don't clobber the zoom if they zoomed the camera
						local newDistanceToSubject = diffVector.magnitude
						self:SetCameraToSubjectDistance(newDistanceToSubject)
					end
				end
	
				local distanceToSubject = self:GetCameraToSubjectDistance()
				local newLookVector = self:CalculateNewLookVector(cameraLook)
				self.rotateInput = ZERO_VECTOR2
	
				newCameraFocus = CFrame.new(subjectPosition)
				newCameraCFrame = CFrame.new(subjectPosition - (distanceToSubject * newLookVector), subjectPosition)
	
				self.lastDistanceToSubject = distanceToSubject
			end
		else
			-- Unsupported type, return current values unchanged
			return camera.CFrame, camera.Focus
		end
	
		self.lastUpdate = now
		return newCameraCFrame, newCameraFocus
	end
	
	return LegacyCamera
end

function _OrbitalCamera()
	
	-- Local private variables and constants
	local UNIT_Z = Vector3.new(0,0,1)
	local X1_Y0_Z1 = Vector3.new(1,0,1)	--Note: not a unit vector, used for projecting onto XZ plane
	local ZERO_VECTOR3 = Vector3.new(0,0,0)
	local ZERO_VECTOR2 = Vector2.new(0,0)
	local TAU = 2 * math.pi
	
	--[[ Gamepad Support ]]--
	local THUMBSTICK_DEADZONE = 0.2
	
	-- Do not edit these values, they are not the developer-set limits, they are limits
	-- to the values the camera system equations can correctly handle
	local MIN_ALLOWED_ELEVATION_DEG = -80
	local MAX_ALLOWED_ELEVATION_DEG = 80
	
	local externalProperties = {}
	externalProperties["InitialDistance"]  = 25
	externalProperties["MinDistance"]      = 10
	externalProperties["MaxDistance"]      = 100
	externalProperties["InitialElevation"] = 35
	externalProperties["MinElevation"]     = 35
	externalProperties["MaxElevation"]     = 35
	externalProperties["ReferenceAzimuth"] = -45	-- Angle around the Y axis where the camera starts. -45 offsets the camera in the -X and +Z directions equally
	externalProperties["CWAzimuthTravel"]  = 90	-- How many degrees the camera is allowed to rotate from the reference position, CW as seen from above
	externalProperties["CCWAzimuthTravel"] = 90	-- How many degrees the camera is allowed to rotate from the reference position, CCW as seen from above
	externalProperties["UseAzimuthLimits"] = false -- Full rotation around Y axis available by default
	
	local Util = _CameraUtils()
	
	--[[ Services ]]--
	local PlayersService = game:GetService('Players')
	local VRService = game:GetService("VRService")
	
	--[[ The Module ]]--
	local BaseCamera = _BaseCamera()
	local OrbitalCamera = setmetatable({}, BaseCamera)
	OrbitalCamera.__index = OrbitalCamera
	
	
	function OrbitalCamera.new()
		local self = setmetatable(BaseCamera.new(), OrbitalCamera)
	
		self.lastUpdate = tick()
	
		-- OrbitalCamera-specific members
		self.changedSignalConnections = {}
		self.refAzimuthRad = nil
		self.curAzimuthRad = nil
		self.minAzimuthAbsoluteRad = nil
		self.maxAzimuthAbsoluteRad = nil
		self.useAzimuthLimits = nil
		self.curElevationRad = nil
		self.minElevationRad = nil
		self.maxElevationRad = nil
		self.curDistance = nil
		self.minDistance = nil
		self.maxDistance = nil
	
		-- Gamepad
		self.r3ButtonDown = false
		self.l3ButtonDown = false
		self.gamepadDollySpeedMultiplier = 1
	
		self.lastUserPanCamera = tick()
	
		self.externalProperties = {}
		self.externalProperties["InitialDistance"] 	= 25
		self.externalProperties["MinDistance"] 		= 10
		self.externalProperties["MaxDistance"] 		= 100
		self.externalProperties["InitialElevation"] 	= 35
		self.externalProperties["MinElevation"] 		= 35
		self.externalProperties["MaxElevation"] 		= 35
		self.externalProperties["ReferenceAzimuth"] 	= -45	-- Angle around the Y axis where the camera starts. -45 offsets the camera in the -X and +Z directions equally
		self.externalProperties["CWAzimuthTravel"] 	= 90	-- How many degrees the camera is allowed to rotate from the reference position, CW as seen from above
		self.externalProperties["CCWAzimuthTravel"] 	= 90	-- How many degrees the camera is allowed to rotate from the reference position, CCW as seen from above
		self.externalProperties["UseAzimuthLimits"] 	= false -- Full rotation around Y axis available by default
		self:LoadNumberValueParameters()
	
		return self
	end
	
	function OrbitalCamera:LoadOrCreateNumberValueParameter(name, valueType, updateFunction)
		local valueObj = script:FindFirstChild(name)
	
		if valueObj and valueObj:isA(valueType) then
			-- Value object exists and is the correct type, use its value
			self.externalProperties[name] = valueObj.Value
		elseif self.externalProperties[name] ~= nil then
			-- Create missing (or replace incorrectly-typed) valueObject with default value
			valueObj = Instance.new(valueType)
			valueObj.Name = name
			valueObj.Parent = script
			valueObj.Value = self.externalProperties[name]
		else
			print("externalProperties table has no entry for ",name)
			return
		end
	
		if updateFunction then
			if self.changedSignalConnections[name] then
				self.changedSignalConnections[name]:Disconnect()
			end
			self.changedSignalConnections[name] = valueObj.Changed:Connect(function(newValue)
				self.externalProperties[name] = newValue
				updateFunction(self)
			end)
		end
	end
	
	function OrbitalCamera:SetAndBoundsCheckAzimuthValues()
		self.minAzimuthAbsoluteRad = math.rad(self.externalProperties["ReferenceAzimuth"]) - math.abs(math.rad(self.externalProperties["CWAzimuthTravel"]))
		self.maxAzimuthAbsoluteRad = math.rad(self.externalProperties["ReferenceAzimuth"]) + math.abs(math.rad(self.externalProperties["CCWAzimuthTravel"]))
		self.useAzimuthLimits = self.externalProperties["UseAzimuthLimits"]
		if self.useAzimuthLimits then
			self.curAzimuthRad = math.max(self.curAzimuthRad, self.minAzimuthAbsoluteRad)
			self.curAzimuthRad = math.min(self.curAzimuthRad, self.maxAzimuthAbsoluteRad)
		end
	end
	
	function OrbitalCamera:SetAndBoundsCheckElevationValues()
		-- These degree values are the direct user input values. It is deliberate that they are
		-- ranged checked only against the extremes, and not against each other. Any time one
		-- is changed, both of the internal values in radians are recalculated. This allows for
		-- A developer to change the values in any order and for the end results to be that the
		-- internal values adjust to match intent as best as possible.
		local minElevationDeg = math.max(self.externalProperties["MinElevation"], MIN_ALLOWED_ELEVATION_DEG)
		local maxElevationDeg = math.min(self.externalProperties["MaxElevation"], MAX_ALLOWED_ELEVATION_DEG)
	
		-- Set internal values in radians
		self.minElevationRad = math.rad(math.min(minElevationDeg, maxElevationDeg))
		self.maxElevationRad = math.rad(math.max(minElevationDeg, maxElevationDeg))
		self.curElevationRad = math.max(self.curElevationRad, self.minElevationRad)
		self.curElevationRad = math.min(self.curElevationRad, self.maxElevationRad)
	end
	
	function OrbitalCamera:SetAndBoundsCheckDistanceValues()
		self.minDistance = self.externalProperties["MinDistance"]
		self.maxDistance = self.externalProperties["MaxDistance"]
		self.curDistance = math.max(self.curDistance, self.minDistance)
		self.curDistance = math.min(self.curDistance, self.maxDistance)
	end
	
	-- This loads from, or lazily creates, NumberValue objects for exposed parameters
	function OrbitalCamera:LoadNumberValueParameters()
		-- These initial values do not require change listeners since they are read only once
		self:LoadOrCreateNumberValueParameter("InitialElevation", "NumberValue", nil)
		self:LoadOrCreateNumberValueParameter("InitialDistance", "NumberValue", nil)
	
		-- Note: ReferenceAzimuth is also used as an initial value, but needs a change listener because it is used in the calculation of the limits
		self:LoadOrCreateNumberValueParameter("ReferenceAzimuth", "NumberValue", self.SetAndBoundsCheckAzimuthValue)
		self:LoadOrCreateNumberValueParameter("CWAzimuthTravel", "NumberValue", self.SetAndBoundsCheckAzimuthValues)
		self:LoadOrCreateNumberValueParameter("CCWAzimuthTravel", "NumberValue", self.SetAndBoundsCheckAzimuthValues)
		self:LoadOrCreateNumberValueParameter("MinElevation", "NumberValue", self.SetAndBoundsCheckElevationValues)
		self:LoadOrCreateNumberValueParameter("MaxElevation", "NumberValue", self.SetAndBoundsCheckElevationValues)
		self:LoadOrCreateNumberValueParameter("MinDistance", "NumberValue", self.SetAndBoundsCheckDistanceValues)
		self:LoadOrCreateNumberValueParameter("MaxDistance", "NumberValue", self.SetAndBoundsCheckDistanceValues)
		self:LoadOrCreateNumberValueParameter("UseAzimuthLimits", "BoolValue", self.SetAndBoundsCheckAzimuthValues)
	
		-- Internal values set (in radians, from degrees), plus sanitization
		self.curAzimuthRad = math.rad(self.externalProperties["ReferenceAzimuth"])
		self.curElevationRad = math.rad(self.externalProperties["InitialElevation"])
		self.curDistance = self.externalProperties["InitialDistance"]
	
		self:SetAndBoundsCheckAzimuthValues()
		self:SetAndBoundsCheckElevationValues()
		self:SetAndBoundsCheckDistanceValues()
	end
	
	function OrbitalCamera:GetModuleName()
		return "OrbitalCamera"
	end
	
	function OrbitalCamera:SetInitialOrientation(humanoid)
		if not humanoid or not humanoid.RootPart then
			warn("OrbitalCamera could not set initial orientation due to missing humanoid")
			return
		end
		local newDesiredLook = (humanoid.RootPart.CFrame.lookVector - Vector3.new(0,0.23,0)).unit
		local horizontalShift = Util.GetAngleBetweenXZVectors(newDesiredLook, self:GetCameraLookVector())
		local vertShift = math.asin(self:GetCameraLookVector().y) - math.asin(newDesiredLook.y)
		if not Util.IsFinite(horizontalShift) then
			horizontalShift = 0
		end
		if not Util.IsFinite(vertShift) then
			vertShift = 0
		end
		self.rotateInput = Vector2.new(horizontalShift, vertShift)
	end
	
	--[[ Functions of BaseCamera that are overridden by OrbitalCamera ]]--
	function OrbitalCamera:GetCameraToSubjectDistance()
		return self.curDistance
	end
	
	function OrbitalCamera:SetCameraToSubjectDistance(desiredSubjectDistance)
		print("OrbitalCamera SetCameraToSubjectDistance ",desiredSubjectDistance)
		local player = PlayersService.LocalPlayer
		if player then
			self.currentSubjectDistance = math.clamp(desiredSubjectDistance, self.minDistance, self.maxDistance)
	
			-- OrbitalCamera is not allowed to go into the first-person range
			self.currentSubjectDistance = math.max(self.currentSubjectDistance, self.FIRST_PERSON_DISTANCE_THRESHOLD)
		end
		self.inFirstPerson = false
		self:UpdateMouseBehavior()
		return self.currentSubjectDistance
	end
	
	function OrbitalCamera:CalculateNewLookVector(suppliedLookVector, xyRotateVector)
		local currLookVector = suppliedLookVector or self:GetCameraLookVector()
		local currPitchAngle = math.asin(currLookVector.y)
		local yTheta = math.clamp(xyRotateVector.y, currPitchAngle - math.rad(MAX_ALLOWED_ELEVATION_DEG), currPitchAngle - math.rad(MIN_ALLOWED_ELEVATION_DEG))
		local constrainedRotateInput = Vector2.new(xyRotateVector.x, yTheta)
		local startCFrame = CFrame.new(ZERO_VECTOR3, currLookVector)
		local newLookVector = (CFrame.Angles(0, -constrainedRotateInput.x, 0) * startCFrame * CFrame.Angles(-constrainedRotateInput.y,0,0)).lookVector
		return newLookVector
	end
	
	function OrbitalCamera:GetGamepadPan(name, state, input)
		if input.UserInputType == self.activeGamepad and input.KeyCode == Enum.KeyCode.Thumbstick2 then
			if self.r3ButtonDown or self.l3ButtonDown then
			-- R3 or L3 Thumbstick is depressed, right stick controls dolly in/out
				if (input.Position.Y > THUMBSTICK_DEADZONE) then
					self.gamepadDollySpeedMultiplier = 0.96
				elseif (input.Position.Y < -THUMBSTICK_DEADZONE) then
					self.gamepadDollySpeedMultiplier = 1.04
				else
					self.gamepadDollySpeedMultiplier = 1.00
				end
			else
				if state == Enum.UserInputState.Cancel then
					self.gamepadPanningCamera = ZERO_VECTOR2
					return
				end
	
				local inputVector = Vector2.new(input.Position.X, -input.Position.Y)
				if inputVector.magnitude > THUMBSTICK_DEADZONE then
					self.gamepadPanningCamera = Vector2.new(input.Position.X, -input.Position.Y)
				else
					self.gamepadPanningCamera = ZERO_VECTOR2
				end
			end
			return Enum.ContextActionResult.Sink
		end
		return Enum.ContextActionResult.Pass
	end
	
	function OrbitalCamera:DoGamepadZoom(name, state, input)
		if input.UserInputType == self.activeGamepad and (input.KeyCode == Enum.KeyCode.ButtonR3 or input.KeyCode == Enum.KeyCode.ButtonL3) then
			if (state == Enum.UserInputState.Begin) then
				self.r3ButtonDown = input.KeyCode == Enum.KeyCode.ButtonR3
				self.l3ButtonDown = input.KeyCode == Enum.KeyCode.ButtonL3
			elseif (state == Enum.UserInputState.End) then
				if (input.KeyCode == Enum.KeyCode.ButtonR3) then
					self.r3ButtonDown = false
				elseif (input.KeyCode == Enum.KeyCode.ButtonL3) then
					self.l3ButtonDown = false
				end
				if (not self.r3ButtonDown) and (not self.l3ButtonDown) then
					self.gamepadDollySpeedMultiplier = 1.00
				end
			end
			return Enum.ContextActionResult.Sink
		end
		return Enum.ContextActionResult.Pass
	end
	
	function OrbitalCamera:BindGamepadInputActions()
		self:BindAction("OrbitalCamGamepadPan", function(name, state, input) return self:GetGamepadPan(name, state, input) end,
			false, Enum.KeyCode.Thumbstick2)
		self:BindAction("OrbitalCamGamepadZoom", function(name, state, input) return self:DoGamepadZoom(name, state, input) end,
			false, Enum.KeyCode.ButtonR3, Enum.KeyCode.ButtonL3)
	end
	
	
	-- [[ Update ]]--
	function OrbitalCamera:Update(dt)
		local now = tick()
		local timeDelta = (now - self.lastUpdate)
		local userPanningTheCamera = (self.UserPanningTheCamera == true)
		local camera = 	workspace.CurrentCamera
		local newCameraCFrame = camera.CFrame
		local newCameraFocus = camera.Focus
		local player = PlayersService.LocalPlayer
		local cameraSubject = camera and camera.CameraSubject
		local isInVehicle = cameraSubject and cameraSubject:IsA('VehicleSeat')
		local isOnASkateboard = cameraSubject and cameraSubject:IsA('SkateboardPlatform')
	
		if self.lastUpdate == nil or timeDelta > 1 then
			self.lastCameraTransform = nil
		end
	
		if self.lastUpdate then
			local gamepadRotation = self:UpdateGamepad()
	
			if self:ShouldUseVRRotation() then
				self.RotateInput = self.RotateInput + self:GetVRRotationInput()
			else
				-- Cap out the delta to 0.1 so we don't get some crazy things when we re-resume from
				local delta = math.min(0.1, timeDelta)
	
				if gamepadRotation ~= ZERO_VECTOR2 then
					userPanningTheCamera = true
					self.rotateInput = self.rotateInput + (gamepadRotation * delta)
				end
	
				local angle = 0
				if not (isInVehicle or isOnASkateboard) then
					angle = angle + (self.TurningLeft and -120 or 0)
					angle = angle + (self.TurningRight and 120 or 0)
				end
	
				if angle ~= 0 then
					self.rotateInput = self.rotateInput +  Vector2.new(math.rad(angle * delta), 0)
					userPanningTheCamera = true
				end
			end
		end
	
		-- Reset tween speed if user is panning
		if userPanningTheCamera then
			self.lastUserPanCamera = tick()
		end
	
		local subjectPosition = self:GetSubjectPosition()
	
		if subjectPosition and player and camera then
	
			-- Process any dollying being done by gamepad
			-- TODO: Move this
			if self.gamepadDollySpeedMultiplier ~= 1 then
				self:SetCameraToSubjectDistance(self.currentSubjectDistance * self.gamepadDollySpeedMultiplier)
			end
	
			local VREnabled = VRService.VREnabled
			newCameraFocus = VREnabled and self:GetVRFocus(subjectPosition, timeDelta) or CFrame.new(subjectPosition)
	
			local cameraFocusP = newCameraFocus.p
			if VREnabled and not self:IsInFirstPerson() then
				local cameraHeight = self:GetCameraHeight()
				local vecToSubject = (subjectPosition - camera.CFrame.p)
				local distToSubject = vecToSubject.magnitude
	
				-- Only move the camera if it exceeded a maximum distance to the subject in VR
				if distToSubject > self.currentSubjectDistance or self.rotateInput.x ~= 0 then
					local desiredDist = math.min(distToSubject, self.currentSubjectDistance)
	
					-- Note that CalculateNewLookVector is overridden from BaseCamera
					vecToSubject = self:CalculateNewLookVector(vecToSubject.unit * X1_Y0_Z1, Vector2.new(self.rotateInput.x, 0)) * desiredDist
	
					local newPos = cameraFocusP - vecToSubject
					local desiredLookDir = camera.CFrame.lookVector
					if self.rotateInput.x ~= 0 then
						desiredLookDir = vecToSubject
					end
					local lookAt = Vector3.new(newPos.x + desiredLookDir.x, newPos.y, newPos.z + desiredLookDir.z)
					self.RotateInput = ZERO_VECTOR2
	
					newCameraCFrame = CFrame.new(newPos, lookAt) + Vector3.new(0, cameraHeight, 0)
				end
			else
				-- self.RotateInput is a Vector2 of mouse movement deltas since last update
				self.curAzimuthRad = self.curAzimuthRad - self.rotateInput.x
	
				if self.useAzimuthLimits then
					self.curAzimuthRad = math.clamp(self.curAzimuthRad, self.minAzimuthAbsoluteRad, self.maxAzimuthAbsoluteRad)
				else
					self.curAzimuthRad = (self.curAzimuthRad ~= 0) and (math.sign(self.curAzimuthRad) * (math.abs(self.curAzimuthRad) % TAU)) or 0
				end
	
				self.curElevationRad = math.clamp(self.curElevationRad + self.rotateInput.y, self.minElevationRad, self.maxElevationRad)
	
				local cameraPosVector = self.currentSubjectDistance * ( CFrame.fromEulerAnglesYXZ( -self.curElevationRad, self.curAzimuthRad, 0 ) * UNIT_Z )
				local camPos = subjectPosition + cameraPosVector
	
				newCameraCFrame = CFrame.new(camPos, subjectPosition)
	
				self.rotateInput = ZERO_VECTOR2
			end
	
			self.lastCameraTransform = newCameraCFrame
			self.lastCameraFocus = newCameraFocus
			if (isInVehicle or isOnASkateboard) and cameraSubject:IsA('BasePart') then
				self.lastSubjectCFrame = cameraSubject.CFrame
			else
				self.lastSubjectCFrame = nil
			end
		end
	
		self.lastUpdate = now
		return newCameraCFrame, newCameraFocus
	end
	
	return OrbitalCamera
end

function _ClassicCamera()
	
	-- Local private variables and constants
	local ZERO_VECTOR2 = Vector2.new(0,0)
	
	local tweenAcceleration = math.rad(220)		--Radians/Second^2
	local tweenSpeed = math.rad(0)				--Radians/Second
	local tweenMaxSpeed = math.rad(250)			--Radians/Second
	local TIME_BEFORE_AUTO_ROTATE = 2.0 		--Seconds, used when auto-aligning camera with vehicles
	
	local INITIAL_CAMERA_ANGLE = CFrame.fromOrientation(math.rad(-15), 0, 0)
	
	local FFlagUserCameraToggle do
		local success, result = pcall(function()
			return UserSettings():IsUserFeatureEnabled("UserCameraToggle")
		end)
		FFlagUserCameraToggle = success and result
	end
	
	--[[ Services ]]--
	local PlayersService = game:GetService('Players')
	local VRService = game:GetService("VRService")
	
	local CameraInput = _CameraInput()
	local Util = _CameraUtils()
	
	--[[ The Module ]]--
	local BaseCamera = _BaseCamera()
	local ClassicCamera = setmetatable({}, BaseCamera)
	ClassicCamera.__index = ClassicCamera
	
	function ClassicCamera.new()
		local self = setmetatable(BaseCamera.new(), ClassicCamera)
	
		self.isFollowCamera = false
		self.isCameraToggle = false
		self.lastUpdate = tick()
		self.cameraToggleSpring = Util.Spring.new(5, 0)
	
		return self
	end
	
	function ClassicCamera:GetCameraToggleOffset(dt)
		assert(FFlagUserCameraToggle)
	
		if self.isCameraToggle then
			local zoom = self.currentSubjectDistance
	
			if CameraInput.getTogglePan() then
				self.cameraToggleSpring.goal = math.clamp(Util.map(zoom, 0.5, self.FIRST_PERSON_DISTANCE_THRESHOLD, 0, 1), 0, 1)
			else
				self.cameraToggleSpring.goal = 0
			end
	
			local distanceOffset = math.clamp(Util.map(zoom, 0.5, 64, 0, 1), 0, 1) + 1
			return Vector3.new(0, self.cameraToggleSpring:step(dt)*distanceOffset, 0)
		end
	
		return Vector3.new()
	end
	
	-- Movement mode standardized to Enum.ComputerCameraMovementMode values
	function ClassicCamera:SetCameraMovementMode(cameraMovementMode)
		BaseCamera.SetCameraMovementMode(self, cameraMovementMode)
	
		self.isFollowCamera = cameraMovementMode == Enum.ComputerCameraMovementMode.Follow
		self.isCameraToggle = cameraMovementMode == Enum.ComputerCameraMovementMode.CameraToggle
	end
	
	function ClassicCamera:Update()
		local now = tick()
		local timeDelta = now - self.lastUpdate
	
		local camera = workspace.CurrentCamera
		local newCameraCFrame = camera.CFrame
		local newCameraFocus = camera.Focus
	
		local overrideCameraLookVector = nil
		if self.resetCameraAngle then
			local rootPart = self:GetHumanoidRootPart()
			if rootPart then
				overrideCameraLookVector = (rootPart.CFrame * INITIAL_CAMERA_ANGLE).lookVector
			else
				overrideCameraLookVector = INITIAL_CAMERA_ANGLE.lookVector
			end
			self.resetCameraAngle = false
		end
	
		local player = PlayersService.LocalPlayer
		local humanoid = self:GetHumanoid()
		local cameraSubject = camera.CameraSubject
		local isInVehicle = cameraSubject and cameraSubject:IsA('VehicleSeat')
		local isOnASkateboard = cameraSubject and cameraSubject:IsA('SkateboardPlatform')
		local isClimbing = humanoid and humanoid:GetState() == Enum.HumanoidStateType.Climbing
	
		if self.lastUpdate == nil or timeDelta > 1 then
			self.lastCameraTransform = nil
		end
	
		if self.lastUpdate then
			local gamepadRotation = self:UpdateGamepad()
	
			if self:ShouldUseVRRotation() then
				self.rotateInput = self.rotateInput + self:GetVRRotationInput()
			else
				-- Cap out the delta to 0.1 so we don't get some crazy things when we re-resume from
				local delta = math.min(0.1, timeDelta)
	
				if gamepadRotation ~= ZERO_VECTOR2 then
					self.rotateInput = self.rotateInput + (gamepadRotation * delta)
				end
	
				local angle = 0
				if not (isInVehicle or isOnASkateboard) then
					angle = angle + (self.turningLeft and -120 or 0)
					angle = angle + (self.turningRight and 120 or 0)
				end
	
				if angle ~= 0 then
					self.rotateInput = self.rotateInput +  Vector2.new(math.rad(angle * delta), 0)
				end
			end
		end
	
		local cameraHeight = self:GetCameraHeight()
	
		-- Reset tween speed if user is panning
		if self.userPanningTheCamera then
			tweenSpeed = 0
			self.lastUserPanCamera = tick()
		end
	
		local userRecentlyPannedCamera = now - self.lastUserPanCamera < TIME_BEFORE_AUTO_ROTATE
		local subjectPosition = self:GetSubjectPosition()
	
		if subjectPosition and player and camera then
			local zoom = self:GetCameraToSubjectDistance()
			if zoom < 0.5 then
				zoom = 0.5
			end
	
			if self:GetIsMouseLocked() and not self:IsInFirstPerson() then
				-- We need to use the right vector of the camera after rotation, not before
				local newLookCFrame = self:CalculateNewLookCFrame(overrideCameraLookVector)
	
				local offset = self:GetMouseLockOffset()
				local cameraRelativeOffset = offset.X * newLookCFrame.rightVector + offset.Y * newLookCFrame.upVector + offset.Z * newLookCFrame.lookVector
	
				--offset can be NAN, NAN, NAN if newLookVector has only y component
				if Util.IsFiniteVector3(cameraRelativeOffset) then
					subjectPosition = subjectPosition + cameraRelativeOffset
				end
			else
				if not self.userPanningTheCamera and self.lastCameraTransform then
	
					local isInFirstPerson = self:IsInFirstPerson()
	
					if (isInVehicle or isOnASkateboard or (self.isFollowCamera and isClimbing)) and self.lastUpdate and humanoid and humanoid.Torso then
						if isInFirstPerson then
							if self.lastSubjectCFrame and (isInVehicle or isOnASkateboard) and cameraSubject:IsA('BasePart') then
								local y = -Util.GetAngleBetweenXZVectors(self.lastSubjectCFrame.lookVector, cameraSubject.CFrame.lookVector)
								if Util.IsFinite(y) then
									self.rotateInput = self.rotateInput + Vector2.new(y, 0)
								end
								tweenSpeed = 0
							end
						elseif not userRecentlyPannedCamera then
							local forwardVector = humanoid.Torso.CFrame.lookVector
							if isOnASkateboard then
								forwardVector = cameraSubject.CFrame.lookVector
							end
	
							tweenSpeed = math.clamp(tweenSpeed + tweenAcceleration * timeDelta, 0, tweenMaxSpeed)
	
							local percent = math.clamp(tweenSpeed * timeDelta, 0, 1)
							if self:IsInFirstPerson() and not (self.isFollowCamera and self.isClimbing) then
								percent = 1
							end
	
							local y = Util.GetAngleBetweenXZVectors(forwardVector, self:GetCameraLookVector())
							if Util.IsFinite(y) and math.abs(y) > 0.0001 then
								self.rotateInput = self.rotateInput + Vector2.new(y * percent, 0)
							end
						end
	
					elseif self.isFollowCamera and (not (isInFirstPerson or userRecentlyPannedCamera) and not VRService.VREnabled) then
						-- Logic that was unique to the old FollowCamera module
						local lastVec = -(self.lastCameraTransform.p - subjectPosition)
	
						local y = Util.GetAngleBetweenXZVectors(lastVec, self:GetCameraLookVector())
	
						-- This cutoff is to decide if the humanoid's angle of movement,
						-- relative to the camera's look vector, is enough that
						-- we want the camera to be following them. The point is to provide
						-- a sizable dead zone to allow more precise forward movements.
						local thetaCutoff = 0.4
	
						-- Check for NaNs
						if Util.IsFinite(y) and math.abs(y) > 0.0001 and math.abs(y) > thetaCutoff * timeDelta then
							self.rotateInput = self.rotateInput + Vector2.new(y, 0)
						end
					end
				end
			end
	
			if not self.isFollowCamera then
				local VREnabled = VRService.VREnabled
	
				if VREnabled then
					newCameraFocus = self:GetVRFocus(subjectPosition, timeDelta)
				else
					newCameraFocus = CFrame.new(subjectPosition)
				end
	
				local cameraFocusP = newCameraFocus.p
				if VREnabled and not self:IsInFirstPerson() then
					local vecToSubject = (subjectPosition - camera.CFrame.p)
					local distToSubject = vecToSubject.magnitude
	
					-- Only move the camera if it exceeded a maximum distance to the subject in VR
					if distToSubject > zoom or self.rotateInput.x ~= 0 then
						local desiredDist = math.min(distToSubject, zoom)
						vecToSubject = self:CalculateNewLookVectorVR() * desiredDist
						local newPos = cameraFocusP - vecToSubject
						local desiredLookDir = camera.CFrame.lookVector
						if self.rotateInput.x ~= 0 then
							desiredLookDir = vecToSubject
						end
						local lookAt = Vector3.new(newPos.x + desiredLookDir.x, newPos.y, newPos.z + desiredLookDir.z)
						self.rotateInput = ZERO_VECTOR2
	
						newCameraCFrame = CFrame.new(newPos, lookAt) + Vector3.new(0, cameraHeight, 0)
					end
				else
					local newLookVector = self:CalculateNewLookVector(overrideCameraLookVector)
					self.rotateInput = ZERO_VECTOR2
					newCameraCFrame = CFrame.new(cameraFocusP - (zoom * newLookVector), cameraFocusP)
				end
			else -- is FollowCamera
				local newLookVector = self:CalculateNewLookVector(overrideCameraLookVector)
				self.rotateInput = ZERO_VECTOR2
	
				if VRService.VREnabled then
					newCameraFocus = self:GetVRFocus(subjectPosition, timeDelta)
				else
					newCameraFocus = CFrame.new(subjectPosition)
				end
				newCameraCFrame = CFrame.new(newCameraFocus.p - (zoom * newLookVector), newCameraFocus.p) + Vector3.new(0, cameraHeight, 0)
			end
	
			if FFlagUserCameraToggle then
				local toggleOffset = self:GetCameraToggleOffset(timeDelta)
				newCameraFocus = newCameraFocus + toggleOffset
				newCameraCFrame = newCameraCFrame + toggleOffset
			end
	
			self.lastCameraTransform = newCameraCFrame
			self.lastCameraFocus = newCameraFocus
			if (isInVehicle or isOnASkateboard) and cameraSubject:IsA('BasePart') then
				self.lastSubjectCFrame = cameraSubject.CFrame
			else
				self.lastSubjectCFrame = nil
			end
		end
	
		self.lastUpdate = now
		return newCameraCFrame, newCameraFocus
	end
	
	function ClassicCamera:EnterFirstPerson()
		self.inFirstPerson = true
		self:UpdateMouseBehavior()
	end
	
	function ClassicCamera:LeaveFirstPerson()
		self.inFirstPerson = false
		self:UpdateMouseBehavior()
	end
	
	return ClassicCamera
end

function _CameraUtils()

	local CameraUtils = {}
	
	local FFlagUserCameraToggle do
		local success, result = pcall(function()
			return UserSettings():IsUserFeatureEnabled("UserCameraToggle")
		end)
		FFlagUserCameraToggle = success and result
	end
	
	local function round(num)
		return math.floor(num + 0.5)
	end
	
	-- Critically damped spring class for fluid motion effects
	local Spring = {} do
		Spring.__index = Spring
	
		-- Initialize to a given undamped frequency and default position
		function Spring.new(freq, pos)
			return setmetatable({
				freq = freq,
				goal = pos,
				pos = pos,
				vel = 0,
			}, Spring)
		end
	
		-- Advance the spring simulation by `dt` seconds
		function Spring:step(dt)
			local f = self.freq*2*math.pi
			local g = self.goal
			local p0 = self.pos
			local v0 = self.vel
	
			local offset = p0 - g
			local decay = math.exp(-f*dt)
	
			local p1 = (offset*(1 + f*dt) + v0*dt)*decay + g
			local v1 = (v0*(1 - f*dt) - offset*(f*f*dt))*decay
	
			self.pos = p1
			self.vel = v1
	
			return p1
		end
	end
	
	CameraUtils.Spring = Spring
	
	-- map a value from one range to another
	function CameraUtils.map(x, inMin, inMax, outMin, outMax)
		return (x - inMin)*(outMax - outMin)/(inMax - inMin) + outMin
	end
	
	-- From TransparencyController
	function CameraUtils.Round(num, places)
		local decimalPivot = 10^places
		return math.floor(num * decimalPivot + 0.5) / decimalPivot
	end
	
	function CameraUtils.IsFinite(val)
		return val == val and val ~= math.huge and val ~= -math.huge
	end
	
	function CameraUtils.IsFiniteVector3(vec3)
		return CameraUtils.IsFinite(vec3.X) and CameraUtils.IsFinite(vec3.Y) and CameraUtils.IsFinite(vec3.Z)
	end
	
	-- Legacy implementation renamed
	function CameraUtils.GetAngleBetweenXZVectors(v1, v2)
		return math.atan2(v2.X*v1.Z-v2.Z*v1.X, v2.X*v1.X+v2.Z*v1.Z)
	end
	
	function  CameraUtils.RotateVectorByAngleAndRound(camLook, rotateAngle, roundAmount)
		if camLook.Magnitude > 0 then
			camLook = camLook.unit
			local currAngle = math.atan2(camLook.z, camLook.x)
			local newAngle = round((math.atan2(camLook.z, camLook.x) + rotateAngle) / roundAmount) * roundAmount
			return newAngle - currAngle
		end
		return 0
	end
	
	-- K is a tunable parameter that changes the shape of the S-curve
	-- the larger K is the more straight/linear the curve gets
	local k = 0.35
	local lowerK = 0.8
	local function SCurveTranform(t)
		t = math.clamp(t, -1, 1)
		if t >= 0 then
			return (k*t) / (k - t + 1)
		end
		return -((lowerK*-t) / (lowerK + t + 1))
	end
	
	local DEADZONE = 0.1
	local function toSCurveSpace(t)
		return (1 + DEADZONE) * (2*math.abs(t) - 1) - DEADZONE
	end
	
	local function fromSCurveSpace(t)
		return t/2 + 0.5
	end
	
	function CameraUtils.GamepadLinearToCurve(thumbstickPosition)
		local function onAxis(axisValue)
			local sign = 1
			if axisValue < 0 then
				sign = -1
			end
			local point = fromSCurveSpace(SCurveTranform(toSCurveSpace(math.abs(axisValue))))
			point = point * sign
			return math.clamp(point, -1, 1)
		end
		return Vector2.new(onAxis(thumbstickPosition.x), onAxis(thumbstickPosition.y))
	end
	
	-- This function converts 4 different, redundant enumeration types to one standard so the values can be compared
	function CameraUtils.ConvertCameraModeEnumToStandard(enumValue)
		if enumValue == Enum.TouchCameraMovementMode.Default then
			return Enum.ComputerCameraMovementMode.Follow
		end
	
		if enumValue == Enum.ComputerCameraMovementMode.Default then
			return Enum.ComputerCameraMovementMode.Classic
		end
	
		if enumValue == Enum.TouchCameraMovementMode.Classic or
			enumValue == Enum.DevTouchCameraMovementMode.Classic or
			enumValue == Enum.DevComputerCameraMovementMode.Classic or
			enumValue == Enum.ComputerCameraMovementMode.Classic then
			return Enum.ComputerCameraMovementMode.Classic
		end
	
		if enumValue == Enum.TouchCameraMovementMode.Follow or
			enumValue == Enum.DevTouchCameraMovementMode.Follow or
			enumValue == Enum.DevComputerCameraMovementMode.Follow or
			enumValue == Enum.ComputerCameraMovementMode.Follow then
			return Enum.ComputerCameraMovementMode.Follow
		end
	
		if enumValue == Enum.TouchCameraMovementMode.Orbital or
			enumValue == Enum.DevTouchCameraMovementMode.Orbital or
			enumValue == Enum.DevComputerCameraMovementMode.Orbital or
			enumValue == Enum.ComputerCameraMovementMode.Orbital then
			return Enum.ComputerCameraMovementMode.Orbital
		end
	
		if FFlagUserCameraToggle then
			if enumValue == Enum.ComputerCameraMovementMode.CameraToggle or
				enumValue == Enum.DevComputerCameraMovementMode.CameraToggle then
				return Enum.ComputerCameraMovementMode.CameraToggle
			end
		end
	
		-- Note: Only the Dev versions of the Enums have UserChoice as an option
		if enumValue == Enum.DevTouchCameraMovementMode.UserChoice or
			enumValue == Enum.DevComputerCameraMovementMode.UserChoice then
			return Enum.DevComputerCameraMovementMode.UserChoice
		end
	
		-- For any unmapped options return Classic camera
		return Enum.ComputerCameraMovementMode.Classic
	end
	
	return CameraUtils
end

function _CameraModule()
	local CameraModule = {}
	CameraModule.__index = CameraModule
	
	local FFlagUserCameraToggle do
		local success, result = pcall(function()
			return UserSettings():IsUserFeatureEnabled("UserCameraToggle")
		end)
		FFlagUserCameraToggle = success and result
	end
	
	local FFlagUserRemoveTheCameraApi do
		local success, result = pcall(function()
			return UserSettings():IsUserFeatureEnabled("UserRemoveTheCameraApi")
		end)
		FFlagUserRemoveTheCameraApi = success and result
	end
	
	-- NOTICE: Player property names do not all match their StarterPlayer equivalents,
	-- with the differences noted in the comments on the right
	local PLAYER_CAMERA_PROPERTIES =
	{
		"CameraMinZoomDistance",
		"CameraMaxZoomDistance",
		"CameraMode",
		"DevCameraOcclusionMode",
		"DevComputerCameraMode",			-- Corresponds to StarterPlayer.DevComputerCameraMovementMode
		"DevTouchCameraMode",				-- Corresponds to StarterPlayer.DevTouchCameraMovementMode
	
		-- Character movement mode
		"DevComputerMovementMode",
		"DevTouchMovementMode",
		"DevEnableMouseLock",				-- Corresponds to StarterPlayer.EnableMouseLockOption
	}
	
	local USER_GAME_SETTINGS_PROPERTIES =
	{
		"ComputerCameraMovementMode",
		"ComputerMovementMode",
		"ControlMode",
		"GamepadCameraSensitivity",
		"MouseSensitivity",
		"RotationType",
		"TouchCameraMovementMode",
		"TouchMovementMode",
	}
	
	--[[ Roblox Services ]]--
	local Players = game:GetService("Players")
	local RunService = game:GetService("RunService")
	local UserInputService = game:GetService("UserInputService")
	local UserGameSettings = UserSettings():GetService("UserGameSettings")
	
	-- Camera math utility library
	local CameraUtils = _CameraUtils()
	
	-- Load Roblox Camera Controller Modules
	local ClassicCamera = _ClassicCamera()
	local OrbitalCamera = _OrbitalCamera()
	local LegacyCamera = _LegacyCamera()
	
	-- Load Roblox Occlusion Modules
	local Invisicam = _Invisicam()
	local Poppercam = _Poppercam()
	
	-- Load the near-field character transparency controller and the mouse lock "shift lock" controller
	local TransparencyController = _TransparencyController()
	local MouseLockController = _MouseLockController()
	
	-- Table of camera controllers that have been instantiated. They are instantiated as they are used.
	local instantiatedCameraControllers = {}
	local instantiatedOcclusionModules = {}
	
	-- Management of which options appear on the Roblox User Settings screen
	do
		local PlayerScripts = Players.LocalPlayer:WaitForChild("PlayerScripts")
	
		PlayerScripts:RegisterTouchCameraMovementMode(Enum.TouchCameraMovementMode.Default)
		PlayerScripts:RegisterTouchCameraMovementMode(Enum.TouchCameraMovementMode.Follow)
		PlayerScripts:RegisterTouchCameraMovementMode(Enum.TouchCameraMovementMode.Classic)
	
		PlayerScripts:RegisterComputerCameraMovementMode(Enum.ComputerCameraMovementMode.Default)
		PlayerScripts:RegisterComputerCameraMovementMode(Enum.ComputerCameraMovementMode.Follow)
		PlayerScripts:RegisterComputerCameraMovementMode(Enum.ComputerCameraMovementMode.Classic)
		if FFlagUserCameraToggle then
			PlayerScripts:RegisterComputerCameraMovementMode(Enum.ComputerCameraMovementMode.CameraToggle)
		end
	end
	
	CameraModule.FFlagUserCameraToggle = FFlagUserCameraToggle
	
	
	function CameraModule.new()
		local self = setmetatable({},CameraModule)
	
		-- Current active controller instances
		self.activeCameraController = nil
		self.activeOcclusionModule = nil
		self.activeTransparencyController = nil
		self.activeMouseLockController = nil
	
		self.currentComputerCameraMovementMode = nil
	
		-- Connections to events
		self.cameraSubjectChangedConn = nil
		self.cameraTypeChangedConn = nil
	
		-- Adds CharacterAdded and CharacterRemoving event handlers for all current players
		for _,player in pairs(Players:GetPlayers()) do
			self:OnPlayerAdded(player)
		end
	
		-- Adds CharacterAdded and CharacterRemoving event handlers for all players who join in the future
		Players.PlayerAdded:Connect(function(player)
			self:OnPlayerAdded(player)
		end)
	
		self.activeTransparencyController = TransparencyController.new()
		self.activeTransparencyController:Enable(true)
	
		if not UserInputService.TouchEnabled then
			self.activeMouseLockController = MouseLockController.new()
			local toggleEvent = self.activeMouseLockController:GetBindableToggleEvent()
			if toggleEvent then
				toggleEvent:Connect(function()
					self:OnMouseLockToggled()
				end)
			end
		end
	
		self:ActivateCameraController(self:GetCameraControlChoice())
		self:ActivateOcclusionModule(Players.LocalPlayer.DevCameraOcclusionMode)
		self:OnCurrentCameraChanged() -- Does initializations and makes first camera controller
		RunService:BindToRenderStep("cameraRenderUpdate", Enum.RenderPriority.Camera.Value, function(dt) self:Update(dt) end)
	
		-- Connect listeners to camera-related properties
		for _, propertyName in pairs(PLAYER_CAMERA_PROPERTIES) do
			Players.LocalPlayer:GetPropertyChangedSignal(propertyName):Connect(function()
				self:OnLocalPlayerCameraPropertyChanged(propertyName)
			end)
		end
	
		for _, propertyName in pairs(USER_GAME_SETTINGS_PROPERTIES) do
			UserGameSettings:GetPropertyChangedSignal(propertyName):Connect(function()
				self:OnUserGameSettingsPropertyChanged(propertyName)
			end)
		end
		game.Workspace:GetPropertyChangedSignal("CurrentCamera"):Connect(function()
			self:OnCurrentCameraChanged()
		end)
	
		self.lastInputType = UserInputService:GetLastInputType()
		UserInputService.LastInputTypeChanged:Connect(function(newLastInputType)
			self.lastInputType = newLastInputType
		end)
	
		return self
	end
	
	function CameraModule:GetCameraMovementModeFromSettings()
		local cameraMode = Players.LocalPlayer.CameraMode
	
		-- Lock First Person trumps all other settings and forces ClassicCamera
		if cameraMode == Enum.CameraMode.LockFirstPerson then
			return CameraUtils.ConvertCameraModeEnumToStandard(Enum.ComputerCameraMovementMode.Classic)
		end
	
		local devMode, userMode
		if UserInputService.TouchEnabled then
			devMode = CameraUtils.ConvertCameraModeEnumToStandard(Players.LocalPlayer.DevTouchCameraMode)
			userMode = CameraUtils.ConvertCameraModeEnumToStandard(UserGameSettings.TouchCameraMovementMode)
		else
			devMode = CameraUtils.ConvertCameraModeEnumToStandard(Players.LocalPlayer.DevComputerCameraMode)
			userMode = CameraUtils.ConvertCameraModeEnumToStandard(UserGameSettings.ComputerCameraMovementMode)
		end
	
		if devMode == Enum.DevComputerCameraMovementMode.UserChoice then
			-- Developer is allowing user choice, so user setting is respected
			return userMode
		end
	
		return devMode
	end
	
	function CameraModule:ActivateOcclusionModule( occlusionMode )
		local newModuleCreator
		if occlusionMode == Enum.DevCameraOcclusionMode.Zoom then
			newModuleCreator = Poppercam
		elseif occlusionMode == Enum.DevCameraOcclusionMode.Invisicam then
			newModuleCreator = Invisicam
		else
			warn("CameraScript ActivateOcclusionModule called with unsupported mode")
			return
		end
	
		-- First check to see if there is actually a change. If the module being requested is already
		-- the currently-active solution then just make sure it's enabled and exit early
		if self.activeOcclusionModule and self.activeOcclusionModule:GetOcclusionMode() == occlusionMode then
			if not self.activeOcclusionModule:GetEnabled() then
				self.activeOcclusionModule:Enable(true)
			end
			return
		end
	
		-- Save a reference to the current active module (may be nil) so that we can disable it if
		-- we are successful in activating its replacement
		local prevOcclusionModule = self.activeOcclusionModule
	
		-- If there is no active module, see if the one we need has already been instantiated
		self.activeOcclusionModule = instantiatedOcclusionModules[newModuleCreator]
	
		-- If the module was not already instantiated and selected above, instantiate it
		if not self.activeOcclusionModule then
			self.activeOcclusionModule = newModuleCreator.new()
			if self.activeOcclusionModule then
				instantiatedOcclusionModules[newModuleCreator] = self.activeOcclusionModule
			end
		end
	
		-- If we were successful in either selecting or instantiating the module,
		-- enable it if it's not already the currently-active enabled module
		if self.activeOcclusionModule then
			local newModuleOcclusionMode = self.activeOcclusionModule:GetOcclusionMode()
			-- Sanity check that the module we selected or instantiated actually supports the desired occlusionMode
			if newModuleOcclusionMode ~= occlusionMode then
				warn("CameraScript ActivateOcclusionModule mismatch: ",self.activeOcclusionModule:GetOcclusionMode(),"~=",occlusionMode)
			end
	
			-- Deactivate current module if there is one
			if prevOcclusionModule then
				-- Sanity check that current module is not being replaced by itself (that should have been handled above)
				if prevOcclusionModule ~= self.activeOcclusionModule then
					prevOcclusionModule:Enable(false)
				else
					warn("CameraScript ActivateOcclusionModule failure to detect already running correct module")
				end
			end
	
			-- Occlusion modules need to be initialized with information about characters and cameraSubject
			-- Invisicam needs the LocalPlayer's character
			-- Poppercam needs all player characters and the camera subject
			if occlusionMode == Enum.DevCameraOcclusionMode.Invisicam then
				-- Optimization to only send Invisicam what we know it needs
				if Players.LocalPlayer.Character then
					self.activeOcclusionModule:CharacterAdded(Players.LocalPlayer.Character, Players.LocalPlayer )
				end
			else
				-- When Poppercam is enabled, we send it all existing player characters for its raycast ignore list
				for _, player in pairs(Players:GetPlayers()) do
					if player and player.Character then
						self.activeOcclusionModule:CharacterAdded(player.Character, player)
					end
				end
				self.activeOcclusionModule:OnCameraSubjectChanged(game.Workspace.CurrentCamera.CameraSubject)
			end
	
			-- Activate new choice
			self.activeOcclusionModule:Enable(true)
		end
	end
	
	-- When supplied, legacyCameraType is used and cameraMovementMode is ignored (should be nil anyways)
	-- Next, if userCameraCreator is passed in, that is used as the cameraCreator
	function CameraModule:ActivateCameraController(cameraMovementMode, legacyCameraType)
		local newCameraCreator = nil
	
		if legacyCameraType~=nil then
			--[[
				This function has been passed a CameraType enum value. Some of these map to the use of
				the LegacyCamera module, the value "Custom" will be translated to a movementMode enum
				value based on Dev and User settings, and "Scriptable" will disable the camera controller.
			--]]
	
			if legacyCameraType == Enum.CameraType.Scriptable then
				if self.activeCameraController then
					self.activeCameraController:Enable(false)
					self.activeCameraController = nil
					return
				end
			elseif legacyCameraType == Enum.CameraType.Custom then
				cameraMovementMode = self:GetCameraMovementModeFromSettings()
	
			elseif legacyCameraType == Enum.CameraType.Track then
				-- Note: The TrackCamera module was basically an older, less fully-featured
				-- version of ClassicCamera, no longer actively maintained, but it is re-implemented in
				-- case a game was dependent on its lack of ClassicCamera's extra functionality.
				cameraMovementMode = Enum.ComputerCameraMovementMode.Classic
	
			elseif legacyCameraType == Enum.CameraType.Follow then
				cameraMovementMode = Enum.ComputerCameraMovementMode.Follow
	
			elseif legacyCameraType == Enum.CameraType.Orbital then
				cameraMovementMode = Enum.ComputerCameraMovementMode.Orbital
	
			elseif legacyCameraType == Enum.CameraType.Attach or
				   legacyCameraType == Enum.CameraType.Watch or
				   legacyCameraType == Enum.CameraType.Fixed then
				newCameraCreator = LegacyCamera
			else
				warn("CameraScript encountered an unhandled Camera.CameraType value: ",legacyCameraType)
			end
		end
	
		if not newCameraCreator then
			if cameraMovementMode == Enum.ComputerCameraMovementMode.Classic or
				cameraMovementMode == Enum.ComputerCameraMovementMode.Follow or
				cameraMovementMode == Enum.ComputerCameraMovementMode.Default or
				(FFlagUserCameraToggle and cameraMovementMode == Enum.ComputerCameraMovementMode.CameraToggle) then
				newCameraCreator = ClassicCamera
			elseif cameraMovementMode == Enum.ComputerCameraMovementMode.Orbital then
				newCameraCreator = OrbitalCamera
			else
				warn("ActivateCameraController did not select a module.")
				return
			end
		end
	
		-- Create the camera control module we need if it does not already exist in instantiatedCameraControllers
		local newCameraController
		if not instantiatedCameraControllers[newCameraCreator] then
			newCameraController = newCameraCreator.new()
			instantiatedCameraControllers[newCameraCreator] = newCameraController
		else
			newCameraController = instantiatedCameraControllers[newCameraCreator]
		end
	
		-- If there is a controller active and it's not the one we need, disable it,
		-- if it is the one we need, make sure it's enabled
		if self.activeCameraController then
			if self.activeCameraController ~= newCameraController then
				self.activeCameraController:Enable(false)
				self.activeCameraController = newCameraController
				self.activeCameraController:Enable(true)
			elseif not self.activeCameraController:GetEnabled() then
				self.activeCameraController:Enable(true)
			end
		elseif newCameraController ~= nil then
			self.activeCameraController = newCameraController
			self.activeCameraController:Enable(true)
		end
	
		if self.activeCameraController then
			if cameraMovementMode~=nil then
				self.activeCameraController:SetCameraMovementMode(cameraMovementMode)
			elseif legacyCameraType~=nil then
				-- Note that this is only called when legacyCameraType is not a type that
				-- was convertible to a ComputerCameraMovementMode value, i.e. really only applies to LegacyCamera
				self.activeCameraController:SetCameraType(legacyCameraType)
			end
		end
	end
	
	-- Note: The active transparency controller could be made to listen for this event itself.
	function CameraModule:OnCameraSubjectChanged()
		if self.activeTransparencyController then
			self.activeTransparencyController:SetSubject(game.Workspace.CurrentCamera.CameraSubject)
		end
	
		if self.activeOcclusionModule then
			self.activeOcclusionModule:OnCameraSubjectChanged(game.Workspace.CurrentCamera.CameraSubject)
		end
	end
	
	function CameraModule:OnCameraTypeChanged(newCameraType)
		if newCameraType == Enum.CameraType.Scriptable then
			if UserInputService.MouseBehavior == Enum.MouseBehavior.LockCenter then
				UserInputService.MouseBehavior = Enum.MouseBehavior.Default
			end
		end
	
		-- Forward the change to ActivateCameraController to handle
		self:ActivateCameraController(nil, newCameraType)
	end
	
	-- Note: Called whenever workspace.CurrentCamera changes, but also on initialization of this script
	function CameraModule:OnCurrentCameraChanged()
		local currentCamera = game.Workspace.CurrentCamera
		if not currentCamera then return end
	
		if self.cameraSubjectChangedConn then
			self.cameraSubjectChangedConn:Disconnect()
		end
	
		if self.cameraTypeChangedConn then
			self.cameraTypeChangedConn:Disconnect()
		end
	
		self.cameraSubjectChangedConn = currentCamera:GetPropertyChangedSignal("CameraSubject"):Connect(function()
			self:OnCameraSubjectChanged(currentCamera.CameraSubject)
		end)
	
		self.cameraTypeChangedConn = currentCamera:GetPropertyChangedSignal("CameraType"):Connect(function()
			self:OnCameraTypeChanged(currentCamera.CameraType)
		end)
	
		self:OnCameraSubjectChanged(currentCamera.CameraSubject)
		self:OnCameraTypeChanged(currentCamera.CameraType)
	end
	
	function CameraModule:OnLocalPlayerCameraPropertyChanged(propertyName)
		if propertyName == "CameraMode" then
			-- CameraMode is only used to turn on/off forcing the player into first person view. The
			-- Note: The case "Classic" is used for all other views and does not correspond only to the ClassicCamera module
			if Players.LocalPlayer.CameraMode == Enum.CameraMode.LockFirstPerson then
				-- Locked in first person, use ClassicCamera which supports this
				if not self.activeCameraController or self.activeCameraController:GetModuleName() ~= "ClassicCamera" then
					self:ActivateCameraController(CameraUtils.ConvertCameraModeEnumToStandard(Enum.DevComputerCameraMovementMode.Classic))
				end
	
				if self.activeCameraController then
					self.activeCameraController:UpdateForDistancePropertyChange()
				end
			elseif Players.LocalPlayer.CameraMode == Enum.CameraMode.Classic then
				-- Not locked in first person view
				local cameraMovementMode =self: GetCameraMovementModeFromSettings()
				self:ActivateCameraController(CameraUtils.ConvertCameraModeEnumToStandard(cameraMovementMode))
			else
				warn("Unhandled value for property player.CameraMode: ",Players.LocalPlayer.CameraMode)
			end
	
		elseif propertyName == "DevComputerCameraMode" or 
			   propertyName == "DevTouchCameraMode" then
			local cameraMovementMode = self:GetCameraMovementModeFromSettings()
			self:ActivateCameraController(CameraUtils.ConvertCameraModeEnumToStandard(cameraMovementMode))
	
		elseif propertyName == "DevCameraOcclusionMode" then
			self:ActivateOcclusionModule(Players.LocalPlayer.DevCameraOcclusionMode)
	
		elseif propertyName == "CameraMinZoomDistance" or propertyName == "CameraMaxZoomDistance" then
			if self.activeCameraController then
				self.activeCameraController:UpdateForDistancePropertyChange()
			end
		elseif propertyName == "DevTouchMovementMode" then
		elseif propertyName == "DevComputerMovementMode" then
		elseif propertyName == "DevEnableMouseLock" then
			-- This is the enabling/disabling of "Shift Lock" mode, not LockFirstPerson (which is a CameraMode)
			-- Note: Enabling and disabling of MouseLock mode is normally only a publish-time choice made via
			-- the corresponding EnableMouseLockOption checkbox of StarterPlayer, and this script does not have
			-- support for changing the availability of MouseLock at runtime (this would require listening to
			-- Player.DevEnableMouseLock changes)
		end
	end
	
	function CameraModule:OnUserGameSettingsPropertyChanged(propertyName)
		if propertyName == 	"ComputerCameraMovementMode" then
			local cameraMovementMode = self:GetCameraMovementModeFromSettings()
			self:ActivateCameraController(CameraUtils.ConvertCameraModeEnumToStandard(cameraMovementMode))
		end
	end
	
	--[[
		Main RenderStep Update. The camera controller and occlusion module both have opportunities
		to set and modify (respectively) the CFrame and Focus before it is set once on CurrentCamera.
		The camera and occlusion modules should only return CFrames, not set the CFrame property of
		CurrentCamera directly.
	--]]
	function CameraModule:Update(dt)
		if self.activeCameraController then
			if FFlagUserCameraToggle then
				self.activeCameraController:UpdateMouseBehavior()
			end
	
			local newCameraCFrame, newCameraFocus = self.activeCameraController:Update(dt)
			self.activeCameraController:ApplyVRTransform()
			if self.activeOcclusionModule then
				newCameraCFrame, newCameraFocus = self.activeOcclusionModule:Update(dt, newCameraCFrame, newCameraFocus)
			end
	
			-- Here is where the new CFrame and Focus are set for this render frame
			game.Workspace.CurrentCamera.CFrame = newCameraCFrame
			game.Workspace.CurrentCamera.Focus = newCameraFocus
	
			-- Update to character local transparency as needed based on camera-to-subject distance
			if self.activeTransparencyController then
				self.activeTransparencyController:Update()
			end
		end
	end
	
	-- Formerly getCurrentCameraMode, this function resolves developer and user camera control settings to
	-- decide which camera control module should be instantiated. The old method of converting redundant enum types
	function CameraModule:GetCameraControlChoice()
		local player = Players.LocalPlayer
	
		if player then
			if self.lastInputType == Enum.UserInputType.Touch or UserInputService.TouchEnabled then
				-- Touch
				if player.DevTouchCameraMode == Enum.DevTouchCameraMovementMode.UserChoice then
					return CameraUtils.ConvertCameraModeEnumToStandard( UserGameSettings.TouchCameraMovementMode )
				else
					return CameraUtils.ConvertCameraModeEnumToStandard( player.DevTouchCameraMode )
				end
			else
				-- Computer
				if player.DevComputerCameraMode == Enum.DevComputerCameraMovementMode.UserChoice then
					local computerMovementMode = CameraUtils.ConvertCameraModeEnumToStandard(UserGameSettings.ComputerCameraMovementMode)
					return CameraUtils.ConvertCameraModeEnumToStandard(computerMovementMode)
				else
					return CameraUtils.ConvertCameraModeEnumToStandard(player.DevComputerCameraMode)
				end
			end
		end
	end
	
	function CameraModule:OnCharacterAdded(char, player)
		if self.activeOcclusionModule then
			self.activeOcclusionModule:CharacterAdded(char, player)
		end
	end
	
	function CameraModule:OnCharacterRemoving(char, player)
		if self.activeOcclusionModule then
			self.activeOcclusionModule:CharacterRemoving(char, player)
		end
	end
	
	function CameraModule:OnPlayerAdded(player)
		player.CharacterAdded:Connect(function(char)
			self:OnCharacterAdded(char, player)
		end)
		player.CharacterRemoving:Connect(function(char)
			self:OnCharacterRemoving(char, player)
		end)
	end
	
	function CameraModule:OnMouseLockToggled()
		if self.activeMouseLockController then
			local mouseLocked = self.activeMouseLockController:GetIsMouseLocked()
			local mouseLockOffset = self.activeMouseLockController:GetMouseLockOffset()
			if self.activeCameraController then
				self.activeCameraController:SetIsMouseLocked(mouseLocked)
				self.activeCameraController:SetMouseLockOffset(mouseLockOffset)
			end
		end
	end
	--begin edit
	local Camera = CameraModule
	local IDENTITYCF = CFrame.new()
	local lastUpCFrame = IDENTITYCF
	
	Camera.UpVector = Vector3.new(0, 1, 0)
	Camera.TransitionRate = 0.15
	Camera.UpCFrame = IDENTITYCF
	
	function Camera:GetUpVector(oldUpVector)
		return oldUpVector
	end
	local function getRotationBetween(u, v, axis)
		local dot, uxv = u:Dot(v), u:Cross(v)
		if (dot < -0.99999) then return CFrame.fromAxisAngle(axis, math.pi) end
		return CFrame.new(0, 0, 0, uxv.x, uxv.y, uxv.z, 1 + dot)
	end
	function Camera:CalculateUpCFrame()
		local oldUpVector = self.UpVector
		local newUpVector = self:GetUpVector(oldUpVector)
		
		local backup = game.Workspace.CurrentCamera.CFrame.RightVector
		local transitionCF = getRotationBetween(oldUpVector, newUpVector, backup)
		local vecSlerpCF = IDENTITYCF:Lerp(transitionCF, self.TransitionRate)
		
		self.UpVector = vecSlerpCF * oldUpVector
		self.UpCFrame = vecSlerpCF * self.UpCFrame
		
		lastUpCFrame = self.UpCFrame
	end
	
	function Camera:Update(dt)
		if self.activeCameraController then
			if Camera.FFlagUserCameraToggle then
				self.activeCameraController:UpdateMouseBehavior()
			end
			
			local newCameraCFrame, newCameraFocus = self.activeCameraController:Update(dt)
			self.activeCameraController:ApplyVRTransform()
			
			self:CalculateUpCFrame()
			self.activeCameraController:UpdateUpCFrame(self.UpCFrame)
			
			-- undo shift-lock offset
	
			local lockOffset = Vector3.new(0, 0, 0)
			if (self.activeMouseLockController and self.activeMouseLockController:GetIsMouseLocked()) then
				lockOffset = self.activeMouseLockController:GetMouseLockOffset()
			end
			
			local offset = newCameraFocus:ToObjectSpace(newCameraCFrame)
			local camRotation = self.UpCFrame * offset
			newCameraFocus = newCameraFocus - newCameraCFrame:VectorToWorldSpace(lockOffset) + camRotation:VectorToWorldSpace(lockOffset)
			newCameraCFrame = newCameraFocus * camRotation
			
			--local offset = newCameraFocus:Inverse() * newCameraCFrame
			--newCameraCFrame = newCameraFocus * self.UpCFrame * offset
			
			if (self.activeCameraController.lastCameraTransform) then
				self.activeCameraController.lastCameraTransform = newCameraCFrame
				self.activeCameraController.lastCameraFocus = newCameraFocus
			end
			
			if self.activeOcclusionModule then
				newCameraCFrame, newCameraFocus = self.activeOcclusionModule:Update(dt, newCameraCFrame, newCameraFocus)
			end
	
			game.Workspace.CurrentCamera.CFrame = newCameraCFrame
			game.Workspace.CurrentCamera.Focus = newCameraFocus
	
			if self.activeTransparencyController then
				self.activeTransparencyController:Update()
			end
		end
	end
	
	function Camera:IsFirstPerson()
		if self.activeCameraController then
			return self.activeCameraController:InFirstPerson()
		end
		return false
	end
	
	function Camera:IsMouseLocked()
		if self.activeCameraController then
			return self.activeCameraController:GetIsMouseLocked()
		end
		return false
	end
	function Camera:IsToggleMode()
		if self.activeCameraController then
			return self.activeCameraController.isCameraToggle
		end
		return false
	end
	function Camera:IsCamRelative()
		return self:IsMouseLocked() or self:IsFirstPerson()
		--return self:IsToggleMode(), self:IsMouseLocked(), self:IsFirstPerson()
	end
	--
	local Utils = _CameraUtils()
	function Utils.GetAngleBetweenXZVectors(v1, v2)
		local upCFrame = lastUpCFrame
		v1 = upCFrame:VectorToObjectSpace(v1)
		v2 = upCFrame:VectorToObjectSpace(v2)
		return math.atan2(v2.X*v1.Z-v2.Z*v1.X, v2.X*v1.X+v2.Z*v1.Z)
	end
	--end edit
	local cameraModuleObject = CameraModule.new()
	local cameraApi = {}
	return cameraModuleObject
end

function _ClickToMoveDisplay()
	local ClickToMoveDisplay = {}
	
	local FAILURE_ANIMATION_ID = "rbxassetid://2874840706"
	
	local TrailDotIcon = "rbxasset://textures/ui/traildot.png"
	local EndWaypointIcon = "rbxasset://textures/ui/waypoint.png"
	
	local WaypointsAlwaysOnTop = false
	
	local WAYPOINT_INCLUDE_FACTOR = 2
	local LAST_DOT_DISTANCE = 3
	
	local WAYPOINT_BILLBOARD_SIZE = UDim2.new(0, 1.68 * 25, 0, 2 * 25)
	
	local ENDWAYPOINT_SIZE_OFFSET_MIN = Vector2.new(0, 0.5)
	local ENDWAYPOINT_SIZE_OFFSET_MAX = Vector2.new(0, 1)
	
	local FAIL_WAYPOINT_SIZE_OFFSET_CENTER = Vector2.new(0, 0.5)
	local FAIL_WAYPOINT_SIZE_OFFSET_LEFT = Vector2.new(0.1, 0.5)
	local FAIL_WAYPOINT_SIZE_OFFSET_RIGHT = Vector2.new(-0.1, 0.5)
	
	local FAILURE_TWEEN_LENGTH = 0.125
	local FAILURE_TWEEN_COUNT = 4
	
	local TWEEN_WAYPOINT_THRESHOLD = 5
	
	local TRAIL_DOT_PARENT_NAME = "ClickToMoveDisplay"
	
	local TrailDotSize = Vector2.new(1.5, 1.5)
	
	local TRAIL_DOT_MIN_SCALE = 1
	local TRAIL_DOT_MIN_DISTANCE = 10
	local TRAIL_DOT_MAX_SCALE = 2.5
	local TRAIL_DOT_MAX_DISTANCE = 100
	
	local PlayersService = game:GetService("Players")
	local TweenService = game:GetService("TweenService")
	local RunService = game:GetService("RunService")
	local Workspace = game:GetService("Workspace")
	
	local LocalPlayer = PlayersService.LocalPlayer
	
	local function CreateWaypointTemplates()
		local TrailDotTemplate = Instance.new("Part")
		TrailDotTemplate.Size = Vector3.new(1, 1, 1)
		TrailDotTemplate.Anchored = true
		TrailDotTemplate.CanCollide = false
		TrailDotTemplate.Name = "TrailDot"
		TrailDotTemplate.Transparency = 1
		local TrailDotImage = Instance.new("ImageHandleAdornment")
		TrailDotImage.Name = "TrailDotImage"
		TrailDotImage.Size = TrailDotSize
		TrailDotImage.SizeRelativeOffset = Vector3.new(0, 0, -0.1)
		TrailDotImage.AlwaysOnTop = WaypointsAlwaysOnTop
		TrailDotImage.Image = TrailDotIcon
		TrailDotImage.Adornee = TrailDotTemplate
		TrailDotImage.Parent = TrailDotTemplate
	
		local EndWaypointTemplate = Instance.new("Part")
		EndWaypointTemplate.Size = Vector3.new(2, 2, 2)
		EndWaypointTemplate.Anchored = true
		EndWaypointTemplate.CanCollide = false
		EndWaypointTemplate.Name = "EndWaypoint"
		EndWaypointTemplate.Transparency = 1
		local EndWaypointImage = Instance.new("ImageHandleAdornment")
		EndWaypointImage.Name = "TrailDotImage"
		EndWaypointImage.Size = TrailDotSize
		EndWaypointImage.SizeRelativeOffset = Vector3.new(0, 0, -0.1)
		EndWaypointImage.AlwaysOnTop = WaypointsAlwaysOnTop
		EndWaypointImage.Image = TrailDotIcon
		EndWaypointImage.Adornee = EndWaypointTemplate
		EndWaypointImage.Parent = EndWaypointTemplate
		local EndWaypointBillboard = Instance.new("BillboardGui")
		EndWaypointBillboard.Name = "EndWaypointBillboard"
		EndWaypointBillboard.Size = WAYPOINT_BILLBOARD_SIZE
		EndWaypointBillboard.LightInfluence = 0
		EndWaypointBillboard.SizeOffset = ENDWAYPOINT_SIZE_OFFSET_MIN
		EndWaypointBillboard.AlwaysOnTop = true
		EndWaypointBillboard.Adornee = EndWaypointTemplate
		EndWaypointBillboard.Parent = EndWaypointTemplate
		local EndWaypointImageLabel = Instance.new("ImageLabel")
		EndWaypointImageLabel.Image = EndWaypointIcon
		EndWaypointImageLabel.BackgroundTransparency = 1
		EndWaypointImageLabel.Size = UDim2.new(1, 0, 1, 0)
		EndWaypointImageLabel.Parent = EndWaypointBillboard
	
	
		local FailureWaypointTemplate = Instance.new("Part")
		FailureWaypointTemplate.Size = Vector3.new(2, 2, 2)
		FailureWaypointTemplate.Anchored = true
		FailureWaypointTemplate.CanCollide = false
		FailureWaypointTemplate.Name = "FailureWaypoint"
		FailureWaypointTemplate.Transparency = 1
		local FailureWaypointImage = Instance.new("ImageHandleAdornment")
		FailureWaypointImage.Name = "TrailDotImage"
		FailureWaypointImage.Size = TrailDotSize
		FailureWaypointImage.SizeRelativeOffset = Vector3.new(0, 0, -0.1)
		FailureWaypointImage.AlwaysOnTop = WaypointsAlwaysOnTop
		FailureWaypointImage.Image = TrailDotIcon
		FailureWaypointImage.Adornee = FailureWaypointTemplate
		FailureWaypointImage.Parent = FailureWaypointTemplate
		local FailureWaypointBillboard = Instance.new("BillboardGui")
		FailureWaypointBillboard.Name = "FailureWaypointBillboard"
		FailureWaypointBillboard.Size = WAYPOINT_BILLBOARD_SIZE
		FailureWaypointBillboard.LightInfluence = 0
		FailureWaypointBillboard.SizeOffset = FAIL_WAYPOINT_SIZE_OFFSET_CENTER
		FailureWaypointBillboard.AlwaysOnTop = true
		FailureWaypointBillboard.Adornee = FailureWaypointTemplate
		FailureWaypointBillboard.Parent = FailureWaypointTemplate
		local FailureWaypointFrame = Instance.new("Frame")
		FailureWaypointFrame.BackgroundTransparency = 1
		FailureWaypointFrame.Size = UDim2.new(0, 0, 0, 0)
		FailureWaypointFrame.Position = UDim2.new(0.5, 0, 1, 0)
		FailureWaypointFrame.Parent = FailureWaypointBillboard
		local FailureWaypointImageLabel = Instance.new("ImageLabel")
		FailureWaypointImageLabel.Image = EndWaypointIcon
		FailureWaypointImageLabel.BackgroundTransparency = 1
		FailureWaypointImageLabel.Position = UDim2.new(
			0, -WAYPOINT_BILLBOARD_SIZE.X.Offset/2, 0, -WAYPOINT_BILLBOARD_SIZE.Y.Offset
		)
		FailureWaypointImageLabel.Size = WAYPOINT_BILLBOARD_SIZE
		FailureWaypointImageLabel.Parent = FailureWaypointFrame
	
		return TrailDotTemplate, EndWaypointTemplate, FailureWaypointTemplate
	end
	
	local TrailDotTemplate, EndWaypointTemplate, FailureWaypointTemplate = CreateWaypointTemplates()
	
	local function getTrailDotParent()
		local camera = Workspace.CurrentCamera
		local trailParent = camera:FindFirstChild(TRAIL_DOT_PARENT_NAME)
		if not trailParent then
			trailParent = Instance.new("Model")
			trailParent.Name = TRAIL_DOT_PARENT_NAME
			trailParent.Parent = camera
		end
		return trailParent
	end
	
	local function placePathWaypoint(waypointModel, position)
		local ray = Ray.new(position + Vector3.new(0, 2.5, 0), Vector3.new(0, -10, 0))
		local hitPart, hitPoint, hitNormal = Workspace:FindPartOnRayWithIgnoreList(
			ray,
			{ Workspace.CurrentCamera, LocalPlayer.Character }
		)
		if hitPart then
			waypointModel.CFrame = CFrame.new(hitPoint, hitPoint + hitNormal)
			waypointModel.Parent = getTrailDotParent()
		end
	end
	
	local TrailDot = {}
	TrailDot.__index = TrailDot
	
	function TrailDot:Destroy()
		self.DisplayModel:Destroy()
	end
	
	function TrailDot:NewDisplayModel(position)
		local newDisplayModel = TrailDotTemplate:Clone()
		placePathWaypoint(newDisplayModel, position)
		return newDisplayModel
	end
	
	function TrailDot.new(position, closestWaypoint)
		local self = setmetatable({}, TrailDot)
	
		self.DisplayModel = self:NewDisplayModel(position)
		self.ClosestWayPoint = closestWaypoint
	
		return self
	end
	
	local EndWaypoint = {}
	EndWaypoint.__index = EndWaypoint
	
	function EndWaypoint:Destroy()
		self.Destroyed = true
		self.Tween:Cancel()
		self.DisplayModel:Destroy()
	end
	
	function EndWaypoint:NewDisplayModel(position)
		local newDisplayModel = EndWaypointTemplate:Clone()
		placePathWaypoint(newDisplayModel, position)
		return newDisplayModel
	end
	
	function EndWaypoint:CreateTween()
		local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.Out, -1, true)
		local tween = TweenService:Create(
			self.DisplayModel.EndWaypointBillboard,
			tweenInfo,
			{ SizeOffset = ENDWAYPOINT_SIZE_OFFSET_MAX }
		)
		tween:Play()
		return tween
	end
	
	function EndWaypoint:TweenInFrom(originalPosition)
		local currentPositon = self.DisplayModel.Position
		local studsOffset = originalPosition - currentPositon
		self.DisplayModel.EndWaypointBillboard.StudsOffset = Vector3.new(0, studsOffset.Y, 0)
		local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)
		local tween = TweenService:Create(
			self.DisplayModel.EndWaypointBillboard,
			tweenInfo,
			{ StudsOffset = Vector3.new(0, 0, 0) }
		)
		tween:Play()
		return tween
	end
	
	function EndWaypoint.new(position, closestWaypoint, originalPosition)
		local self = setmetatable({}, EndWaypoint)
	
		self.DisplayModel = self:NewDisplayModel(position)
		self.Destroyed = false
		if originalPosition and (originalPosition - position).magnitude > TWEEN_WAYPOINT_THRESHOLD then
			self.Tween = self:TweenInFrom(originalPosition)
			coroutine.wrap(function()
				self.Tween.Completed:Wait()
				if not self.Destroyed then
					self.Tween = self:CreateTween()
				end
			end)()
		else
			self.Tween = self:CreateTween()
		end
		self.ClosestWayPoint = closestWaypoint
	
		return self
	end
	
	local FailureWaypoint = {}
	FailureWaypoint.__index = FailureWaypoint
	
	function FailureWaypoint:Hide()
		self.DisplayModel.Parent = nil
	end
	
	function FailureWaypoint:Destroy()
		self.DisplayModel:Destroy()
	end
	
	function FailureWaypoint:NewDisplayModel(position)
		local newDisplayModel = FailureWaypointTemplate:Clone()
		placePathWaypoint(newDisplayModel, position)
		local ray = Ray.new(position + Vector3.new(0, 2.5, 0), Vector3.new(0, -10, 0))
		local hitPart, hitPoint, hitNormal = Workspace:FindPartOnRayWithIgnoreList(
			ray, { Workspace.CurrentCamera, LocalPlayer.Character }
		)
		if hitPart then
			newDisplayModel.CFrame = CFrame.new(hitPoint, hitPoint + hitNormal)
			newDisplayModel.Parent = getTrailDotParent()
		end
		return newDisplayModel
	end
	
	function FailureWaypoint:RunFailureTween()
		wait(FAILURE_TWEEN_LENGTH) -- Delay one tween length betfore starting tweening
		-- Tween out from center
		local tweenInfo = TweenInfo.new(FAILURE_TWEEN_LENGTH/2, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)
		local tweenLeft = TweenService:Create(self.DisplayModel.FailureWaypointBillboard, tweenInfo,
			{ SizeOffset = FAIL_WAYPOINT_SIZE_OFFSET_LEFT })
		tweenLeft:Play()
	
		local tweenLeftRoation = TweenService:Create(self.DisplayModel.FailureWaypointBillboard.Frame, tweenInfo,
			{ Rotation = 10 })
		tweenLeftRoation:Play()
	
		tweenLeft.Completed:wait()
	
		-- Tween back and forth
		tweenInfo = TweenInfo.new(FAILURE_TWEEN_LENGTH, Enum.EasingStyle.Sine, Enum.EasingDirection.Out,
			FAILURE_TWEEN_COUNT - 1, true)
		local tweenSideToSide = TweenService:Create(self.DisplayModel.FailureWaypointBillboard, tweenInfo,
			{ SizeOffset = FAIL_WAYPOINT_SIZE_OFFSET_RIGHT})
		tweenSideToSide:Play()
	
		-- Tween flash dark and roate left and right
		tweenInfo = TweenInfo.new(FAILURE_TWEEN_LENGTH, Enum.EasingStyle.Sine, Enum.EasingDirection.Out,
			FAILURE_TWEEN_COUNT - 1, true)
		local tweenFlash = TweenService:Create(self.DisplayModel.FailureWaypointBillboard.Frame.ImageLabel, tweenInfo,
			{ ImageColor3 = Color3.new(0.75, 0.75, 0.75)})
		tweenFlash:Play()
	
		local tweenRotate = TweenService:Create(self.DisplayModel.FailureWaypointBillboard.Frame, tweenInfo,
			{ Rotation = -10 })
		tweenRotate:Play()
	
		tweenSideToSide.Completed:wait()
	
		-- Tween back to center
		tweenInfo = TweenInfo.new(FAILURE_TWEEN_LENGTH/2, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)
		local tweenCenter = TweenService:Create(self.DisplayModel.FailureWaypointBillboard, tweenInfo,
			{ SizeOffset = FAIL_WAYPOINT_SIZE_OFFSET_CENTER })
		tweenCenter:Play()
	
		local tweenRoation = TweenService:Create(self.DisplayModel.FailureWaypointBillboard.Frame, tweenInfo,
			{ Rotation = 0 })
		tweenRoation:Play()
	
		tweenCenter.Completed:wait()
	
		wait(FAILURE_TWEEN_LENGTH) -- Delay one tween length betfore removing
	end
	
	function FailureWaypoint.new(position)
		local self = setmetatable({}, FailureWaypoint)
	
		self.DisplayModel = self:NewDisplayModel(position)
	
		return self
	end
	
	local failureAnimation = Instance.new("Animation")
	failureAnimation.AnimationId = FAILURE_ANIMATION_ID
	
	local lastHumanoid = nil
	local lastFailureAnimationTrack = nil
	
	local function getFailureAnimationTrack(myHumanoid)
		if myHumanoid == lastHumanoid then
			return lastFailureAnimationTrack
		end
		lastFailureAnimationTrack = myHumanoid:LoadAnimation(failureAnimation)
		lastFailureAnimationTrack.Priority = Enum.AnimationPriority.Action
		lastFailureAnimationTrack.Looped = false
		return lastFailureAnimationTrack
	end
	
	local function findPlayerHumanoid()
		local character = LocalPlayer.Character
		if character then
			return character:FindFirstChildOfClass("Humanoid")
		end
	end
	
	local function createTrailDots(wayPoints, originalEndWaypoint)
		local newTrailDots = {}
		local count = 1
		for i = 1, #wayPoints - 1 do
			local closeToEnd = (wayPoints[i].Position - wayPoints[#wayPoints].Position).magnitude < LAST_DOT_DISTANCE
			local includeWaypoint = i % WAYPOINT_INCLUDE_FACTOR == 0 and not closeToEnd
			if includeWaypoint then
				local trailDot = TrailDot.new(wayPoints[i].Position, i)
				newTrailDots[count] = trailDot
				count = count + 1
			end
		end
	
		local newEndWaypoint = EndWaypoint.new(wayPoints[#wayPoints].Position, #wayPoints, originalEndWaypoint)
		table.insert(newTrailDots, newEndWaypoint)
	
		local reversedTrailDots = {}
		count = 1
		for i = #newTrailDots, 1, -1 do
			reversedTrailDots[count] = newTrailDots[i]
			count = count + 1
		end
		return reversedTrailDots
	end
	
	local function getTrailDotScale(distanceToCamera, defaultSize)
		local rangeLength = TRAIL_DOT_MAX_DISTANCE - TRAIL_DOT_MIN_DISTANCE
		local inRangePoint = math.clamp(distanceToCamera - TRAIL_DOT_MIN_DISTANCE, 0, rangeLength)/rangeLength
		local scale = TRAIL_DOT_MIN_SCALE + (TRAIL_DOT_MAX_SCALE - TRAIL_DOT_MIN_SCALE)*inRangePoint
		return defaultSize * scale
	end
	
	local createPathCount = 0
	-- originalEndWaypoint is optional, causes the waypoint to tween from that position.
	function ClickToMoveDisplay.CreatePathDisplay(wayPoints, originalEndWaypoint)
		createPathCount = createPathCount + 1
		local trailDots = createTrailDots(wayPoints, originalEndWaypoint)
	
		local function removePathBeforePoint(wayPointNumber)
			-- kill all trailDots before and at wayPointNumber
			for i = #trailDots, 1, -1 do
				local trailDot = trailDots[i]
				if trailDot.ClosestWayPoint <= wayPointNumber then
					trailDot:Destroy()
					trailDots[i] = nil
				else
					break
				end
			end
		end
	
		local reiszeTrailDotsUpdateName = "ClickToMoveResizeTrail" ..createPathCount
		local function resizeTrailDots()
			if #trailDots == 0 then
				RunService:UnbindFromRenderStep(reiszeTrailDotsUpdateName)
				return
			end
			local cameraPos = Workspace.CurrentCamera.CFrame.p
			for i = 1, #trailDots do
				local trailDotImage = trailDots[i].DisplayModel:FindFirstChild("TrailDotImage")
				if trailDotImage then
					local distanceToCamera = (trailDots[i].DisplayModel.Position - cameraPos).magnitude
					trailDotImage.Size = getTrailDotScale(distanceToCamera, TrailDotSize)
				end
			end
		end
		RunService:BindToRenderStep(reiszeTrailDotsUpdateName, Enum.RenderPriority.Camera.Value - 1, resizeTrailDots)
	
		local function removePath()
			removePathBeforePoint(#wayPoints)
		end
	
		return removePath, removePathBeforePoint
	end
	
	local lastFailureWaypoint = nil
	function ClickToMoveDisplay.DisplayFailureWaypoint(position)
		if lastFailureWaypoint then
			lastFailureWaypoint:Hide()
		end
		local failureWaypoint = FailureWaypoint.new(position)
		lastFailureWaypoint = failureWaypoint
		coroutine.wrap(function()
			failureWaypoint:RunFailureTween()
			failureWaypoint:Destroy()
			failureWaypoint = nil
		end)()
	end
	
	function ClickToMoveDisplay.CreateEndWaypoint(position)
		return EndWaypoint.new(position)
	end
	
	function ClickToMoveDisplay.PlayFailureAnimation()
		local myHumanoid = findPlayerHumanoid()
		if myHumanoid then
			local animationTrack = getFailureAnimationTrack(myHumanoid)
			animationTrack:Play()
		end
	end
	
	function ClickToMoveDisplay.CancelFailureAnimation()
		if lastFailureAnimationTrack ~= nil and lastFailureAnimationTrack.IsPlaying then
			lastFailureAnimationTrack:Stop()
		end
	end
	
	function ClickToMoveDisplay.SetWaypointTexture(texture)
		TrailDotIcon = texture
		TrailDotTemplate, EndWaypointTemplate, FailureWaypointTemplate = CreateWaypointTemplates()
	end
	
	function ClickToMoveDisplay.GetWaypointTexture()
		return TrailDotIcon
	end
	
	function ClickToMoveDisplay.SetWaypointRadius(radius)
		TrailDotSize = Vector2.new(radius, radius)
		TrailDotTemplate, EndWaypointTemplate, FailureWaypointTemplate = CreateWaypointTemplates()
	end
	
	function ClickToMoveDisplay.GetWaypointRadius()
		return TrailDotSize.X
	end
	
	function ClickToMoveDisplay.SetEndWaypointTexture(texture)
		EndWaypointIcon = texture
		TrailDotTemplate, EndWaypointTemplate, FailureWaypointTemplate = CreateWaypointTemplates()
	end
	
	function ClickToMoveDisplay.GetEndWaypointTexture()
		return EndWaypointIcon
	end
	
	function ClickToMoveDisplay.SetWaypointsAlwaysOnTop(alwaysOnTop)
		WaypointsAlwaysOnTop = alwaysOnTop
		TrailDotTemplate, EndWaypointTemplate, FailureWaypointTemplate = CreateWaypointTemplates()
	end
	
	function ClickToMoveDisplay.GetWaypointsAlwaysOnTop()
		return WaypointsAlwaysOnTop
	end
	
	return ClickToMoveDisplay
end

function _BaseCharacterController()

	local ZERO_VECTOR3 = Vector3.new(0,0,0)
	
	--[[ The Module ]]--
	local BaseCharacterController = {}
	BaseCharacterController.__index = BaseCharacterController
	
	function BaseCharacterController.new()
		local self = setmetatable({}, BaseCharacterController)
		self.enabled = false
		self.moveVector = ZERO_VECTOR3
		self.moveVectorIsCameraRelative = true
		self.isJumping = false
		return self
	end
	
	function BaseCharacterController:OnRenderStepped(dt)
		-- By default, nothing to do
	end
	
	function BaseCharacterController:GetMoveVector()
		return self.moveVector
	end
	
	function BaseCharacterController:IsMoveVectorCameraRelative()
		return self.moveVectorIsCameraRelative
	end
	
	function BaseCharacterController:GetIsJumping()
		return self.isJumping
	end
	
	-- Override in derived classes to set self.enabled and return boolean indicating
	-- whether Enable/Disable was successful. Return true if controller is already in the requested state.
	function BaseCharacterController:Enable(enable)
		error("BaseCharacterController:Enable must be overridden in derived classes and should not be called.")
		return false
	end
	
	return BaseCharacterController
end

function _VehicleController()
	local ContextActionService = game:GetService("ContextActionService")
	
	--[[ Constants ]]--
	-- Set this to true if you want to instead use the triggers for the throttle
	local useTriggersForThrottle = true
	-- Also set this to true if you want the thumbstick to not affect throttle, only triggers when a gamepad is conected
	local onlyTriggersForThrottle = false
	local ZERO_VECTOR3 = Vector3.new(0,0,0)
	
	local AUTO_PILOT_DEFAULT_MAX_STEERING_ANGLE = 35
	
	
	-- Note that VehicleController does not derive from BaseCharacterController, it is a special case
	local VehicleController = {}
	VehicleController.__index = VehicleController
	
	function VehicleController.new(CONTROL_ACTION_PRIORITY)
		local self = setmetatable({}, VehicleController)
	
		self.CONTROL_ACTION_PRIORITY = CONTROL_ACTION_PRIORITY
	
		self.enabled = false
		self.vehicleSeat = nil
		self.throttle = 0
		self.steer = 0
	
		self.acceleration = 0
		self.decceleration = 0
		self.turningRight = 0
		self.turningLeft = 0
	
		self.vehicleMoveVector = ZERO_VECTOR3
	
		self.autoPilot = {}
		self.autoPilot.MaxSpeed = 0
		self.autoPilot.MaxSteeringAngle = 0
	
		return self
	end
	
	function VehicleController:BindContextActions()
		if useTriggersForThrottle then
			ContextActionService:BindActionAtPriority("throttleAccel", (function(actionName, inputState, inputObject)
				self:OnThrottleAccel(actionName, inputState, inputObject)
				return Enum.ContextActionResult.Pass
			end), false, self.CONTROL_ACTION_PRIORITY, Enum.KeyCode.ButtonR2)
			ContextActionService:BindActionAtPriority("throttleDeccel", (function(actionName, inputState, inputObject)
				self:OnThrottleDeccel(actionName, inputState, inputObject)
				return Enum.ContextActionResult.Pass
			end), false, self.CONTROL_ACTION_PRIORITY, Enum.KeyCode.ButtonL2)
		end
		ContextActionService:BindActionAtPriority("arrowSteerRight", (function(actionName, inputState, inputObject)
			self:OnSteerRight(actionName, inputState, inputObject)
			return Enum.ContextActionResult.Pass
		end), false, self.CONTROL_ACTION_PRIORITY, Enum.KeyCode.Right)
		ContextActionService:BindActionAtPriority("arrowSteerLeft", (function(actionName, inputState, inputObject)
			self:OnSteerLeft(actionName, inputState, inputObject)
			return Enum.ContextActionResult.Pass
		end), false, self.CONTROL_ACTION_PRIORITY, Enum.KeyCode.Left)
	end
	
	function VehicleController:Enable(enable, vehicleSeat)
		if enable == self.enabled and vehicleSeat == self.vehicleSeat then
			return
		end
	
		self.enabled = enable
		self.vehicleMoveVector = ZERO_VECTOR3
	
		if enable then
			if vehicleSeat then
				self.vehicleSeat = vehicleSeat
	
				self:SetupAutoPilot()
				self:BindContextActions()
			end
		else
			if useTriggersForThrottle then
				ContextActionService:UnbindAction("throttleAccel")
				ContextActionService:UnbindAction("throttleDeccel")
			end
			ContextActionService:UnbindAction("arrowSteerRight")
			ContextActionService:UnbindAction("arrowSteerLeft")
			self.vehicleSeat = nil
		end
	end
	
	function VehicleController:OnThrottleAccel(actionName, inputState, inputObject)
		if inputState == Enum.UserInputState.End or inputState == Enum.UserInputState.Cancel then
			self.acceleration = 0
		else
			self.acceleration = -1
		end
		self.throttle = self.acceleration + self.decceleration
	end
	
	function VehicleController:OnThrottleDeccel(actionName, inputState, inputObject)
		if inputState == Enum.UserInputState.End or inputState == Enum.UserInputState.Cancel then
			self.decceleration = 0
		else
			self.decceleration = 1
		end
		self.throttle = self.acceleration + self.decceleration
	end
	
	function VehicleController:OnSteerRight(actionName, inputState, inputObject)
		if inputState == Enum.UserInputState.End or inputState == Enum.UserInputState.Cancel then
			self.turningRight = 0
		else
			self.turningRight = 1
		end
		self.steer = self.turningRight + self.turningLeft
	end
	
	function VehicleController:OnSteerLeft(actionName, inputState, inputObject)
		if inputState == Enum.UserInputState.End or inputState == Enum.UserInputState.Cancel then
			self.turningLeft = 0
		else
			self.turningLeft = -1
		end
		self.steer = self.turningRight + self.turningLeft
	end
	
	-- Call this from a function bound to Renderstep with Input Priority
	function VehicleController:Update(moveVector, cameraRelative, usingGamepad)
		if self.vehicleSeat then
			if cameraRelative then
				-- This is the default steering mode
				moveVector = moveVector + Vector3.new(self.steer, 0, self.throttle)
				if usingGamepad and onlyTriggersForThrottle and useTriggersForThrottle then
					self.vehicleSeat.ThrottleFloat = -self.throttle
				else
					self.vehicleSeat.ThrottleFloat = -moveVector.Z
				end
				self.vehicleSeat.SteerFloat = moveVector.X
	
				return moveVector, true
			else
				-- This is the path following mode
				local localMoveVector = self.vehicleSeat.Occupant.RootPart.CFrame:VectorToObjectSpace(moveVector)
	
				self.vehicleSeat.ThrottleFloat = self:ComputeThrottle(localMoveVector)
				self.vehicleSeat.SteerFloat = self:ComputeSteer(localMoveVector)
	
				return ZERO_VECTOR3, true
			end
		end
		return moveVector, false
	end
	
	function VehicleController:ComputeThrottle(localMoveVector)
		if localMoveVector ~= ZERO_VECTOR3 then
			local throttle = -localMoveVector.Z
			return throttle
		else
			return 0.0
		end
	end
	
	function VehicleController:ComputeSteer(localMoveVector)
		if localMoveVector ~= ZERO_VECTOR3 then
			local steerAngle = -math.atan2(-localMoveVector.x, -localMoveVector.z) * (180 / math.pi)
			return steerAngle / self.autoPilot.MaxSteeringAngle
		else
			return 0.0
		end
	end
	
	function VehicleController:SetupAutoPilot()
		-- Setup default
		self.autoPilot.MaxSpeed = self.vehicleSeat.MaxSpeed
		self.autoPilot.MaxSteeringAngle = AUTO_PILOT_DEFAULT_MAX_STEERING_ANGLE
	
		-- VehicleSeat should have a MaxSteeringAngle as well.
		-- Or we could look for a child "AutoPilotConfigModule" to find these values
		-- Or allow developer to set them through the API as like the CLickToMove customization API
	end
	
	return VehicleController
end

function _TouchJump()
	
	local Players = game:GetService("Players")
	local GuiService = game:GetService("GuiService")
	
	--[[ Constants ]]--
	local TOUCH_CONTROL_SHEET = "rbxasset://textures/ui/Input/TouchControlsSheetV2.png"
	
	--[[ The Module ]]--
	local BaseCharacterController = _BaseCharacterController()
	local TouchJump = setmetatable({}, BaseCharacterController)
	TouchJump.__index = TouchJump
	
	function TouchJump.new()
		local self = setmetatable(BaseCharacterController.new(), TouchJump)
	
		self.parentUIFrame = nil
		self.jumpButton = nil
		self.characterAddedConn = nil
		self.humanoidStateEnabledChangedConn = nil
		self.humanoidJumpPowerConn = nil
		self.humanoidParentConn = nil
		self.externallyEnabled = false
		self.jumpPower = 0
		self.jumpStateEnabled = true
		self.isJumping = false
		self.humanoid = nil -- saved reference because property change connections are made using it
	
		return self
	end
	
	function TouchJump:EnableButton(enable)
		if enable then
			if not self.jumpButton then
				self:Create()
			end
			local humanoid = Players.LocalPlayer.Character and Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
			if humanoid and self.externallyEnabled then
				if self.externallyEnabled then
					if humanoid.JumpPower > 0 then
						self.jumpButton.Visible = true
					end
				end
			end
		else
			self.jumpButton.Visible = false
			self.isJumping = false
			self.jumpButton.ImageRectOffset = Vector2.new(1, 146)
		end
	end
	
	function TouchJump:UpdateEnabled()
		if self.jumpPower > 0 and self.jumpStateEnabled then
			self:EnableButton(true)
		else
			self:EnableButton(false)
		end
	end
	
	function TouchJump:HumanoidChanged(prop)
		local humanoid = Players.LocalPlayer.Character and Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
		if humanoid then
			if prop == "JumpPower" then
				self.jumpPower =  humanoid.JumpPower
				self:UpdateEnabled()
			elseif prop == "Parent" then
				if not humanoid.Parent then
					self.humanoidChangeConn:Disconnect()
				end
			end
		end
	end
	
	function TouchJump:HumanoidStateEnabledChanged(state, isEnabled)
		if state == Enum.HumanoidStateType.Jumping then
			self.jumpStateEnabled = isEnabled
			self:UpdateEnabled()
		end
	end
	
	function TouchJump:CharacterAdded(char)
		if self.humanoidChangeConn then
			self.humanoidChangeConn:Disconnect()
			self.humanoidChangeConn = nil
		end
	
		self.humanoid = char:FindFirstChildOfClass("Humanoid")
		while not self.humanoid do
			char.ChildAdded:wait()
			self.humanoid = char:FindFirstChildOfClass("Humanoid")
		end
	
		self.humanoidJumpPowerConn = self.humanoid:GetPropertyChangedSignal("JumpPower"):Connect(function()
			self.jumpPower =  self.humanoid.JumpPower
			self:UpdateEnabled()
		end)
	
		self.humanoidParentConn = self.humanoid:GetPropertyChangedSignal("Parent"):Connect(function()
			if not self.humanoid.Parent then
				self.humanoidJumpPowerConn:Disconnect()
				self.humanoidJumpPowerConn = nil
				self.humanoidParentConn:Disconnect()
				self.humanoidParentConn = nil
			end
		end)
	
		self.humanoidStateEnabledChangedConn = self.humanoid.StateEnabledChanged:Connect(function(state, enabled)
			self:HumanoidStateEnabledChanged(state, enabled)
		end)
	
		self.jumpPower = self.humanoid.JumpPower
		self.jumpStateEnabled = self.humanoid:GetStateEnabled(Enum.HumanoidStateType.Jumping)
		self:UpdateEnabled()
	end
	
	function TouchJump:SetupCharacterAddedFunction()
		self.characterAddedConn = Players.LocalPlayer.CharacterAdded:Connect(function(char)
			self:CharacterAdded(char)
		end)
		if Players.LocalPlayer.Character then
			self:CharacterAdded(Players.LocalPlayer.Character)
		end
	end
	
	function TouchJump:Enable(enable, parentFrame)
		if parentFrame then
			self.parentUIFrame = parentFrame
		end
		self.externallyEnabled = enable
		self:EnableButton(enable)
	end
	
	function TouchJump:Create()
		if not self.parentUIFrame then
			return
		end
	
		if self.jumpButton then
			self.jumpButton:Destroy()
			self.jumpButton = nil
		end
	
		local minAxis = math.min(self.parentUIFrame.AbsoluteSize.x, self.parentUIFrame.AbsoluteSize.y)
		local isSmallScreen = minAxis <= 500
		local jumpButtonSize = isSmallScreen and 70 or 120
	
		self.jumpButton = Instance.new("ImageButton")
		self.jumpButton.Name = "JumpButton"
		self.jumpButton.Visible = false
		self.jumpButton.BackgroundTransparency = 1
		self.jumpButton.Image = TOUCH_CONTROL_SHEET
		self.jumpButton.ImageRectOffset = Vector2.new(1, 146)
		self.jumpButton.ImageRectSize = Vector2.new(144, 144)
		self.jumpButton.Size = UDim2.new(0, jumpButtonSize, 0, jumpButtonSize)
	
	    self.jumpButton.Position = isSmallScreen and UDim2.new(1, -(jumpButtonSize*1.5-10), 1, -jumpButtonSize - 20) or
	        UDim2.new(1, -(jumpButtonSize*1.5-10), 1, -jumpButtonSize * 1.75)
	
		local touchObject = nil
		self.jumpButton.InputBegan:connect(function(inputObject)
			--A touch that starts elsewhere on the screen will be sent to a frame's InputBegan event
			--if it moves over the frame. So we check that this is actually a new touch (inputObject.UserInputState ~= Enum.UserInputState.Begin)
			if touchObject or inputObject.UserInputType ~= Enum.UserInputType.Touch
				or inputObject.UserInputState ~= Enum.UserInputState.Begin then
				return
			end
	
			touchObject = inputObject
			self.jumpButton.ImageRectOffset = Vector2.new(146, 146)
			self.isJumping = true
		end)
	
		local OnInputEnded = function()
			touchObject = nil
			self.isJumping = false
			self.jumpButton.ImageRectOffset = Vector2.new(1, 146)
		end
	
		self.jumpButton.InputEnded:connect(function(inputObject)
			if inputObject == touchObject then
				OnInputEnded()
			end
		end)
	
		GuiService.MenuOpened:connect(function()
			if touchObject then
				OnInputEnded()
			end
		end)
	
		if not self.characterAddedConn then
			self:SetupCharacterAddedFunction()
		end
	
		self.jumpButton.Parent = self.parentUIFrame
	end
	
	return TouchJump
end

function _ClickToMoveController()
	--[[ Roblox Services ]]--
	local UserInputService = game:GetService("UserInputService")
	local PathfindingService = game:GetService("PathfindingService")
	local Players = game:GetService("Players")
	local DebrisService = game:GetService('Debris')
	local StarterGui = game:GetService("StarterGui")
	local Workspace = game:GetService("Workspace")
	local CollectionService = game:GetService("CollectionService")
	local GuiService = game:GetService("GuiService")
	
	--[[ Configuration ]]
	local ShowPath = true
	local PlayFailureAnimation = true
	local UseDirectPath = false
	local UseDirectPathForVehicle = true
	local AgentSizeIncreaseFactor = 1.0
	local UnreachableWaypointTimeout = 8
	
	--[[ Constants ]]--
	local movementKeys = {
		[Enum.KeyCode.W] = true;
		[Enum.KeyCode.A] = true;
		[Enum.KeyCode.S] = true;
		[Enum.KeyCode.D] = true;
		[Enum.KeyCode.Up] = true;
		[Enum.KeyCode.Down] = true;
	}
	
	local FFlagUserNavigationClickToMoveSkipPassedWaypointsSuccess, FFlagUserNavigationClickToMoveSkipPassedWaypointsResult = pcall(function() return UserSettings():IsUserFeatureEnabled("UserNavigationClickToMoveSkipPassedWaypoints") end)
	local FFlagUserNavigationClickToMoveSkipPassedWaypoints = FFlagUserNavigationClickToMoveSkipPassedWaypointsSuccess and FFlagUserNavigationClickToMoveSkipPassedWaypointsResult
	
	local Player = Players.LocalPlayer
	
	local ClickToMoveDisplay = _ClickToMoveDisplay()
	
	local ZERO_VECTOR3 = Vector3.new(0,0,0)
	local ALMOST_ZERO = 0.000001
	
	
	--------------------------UTIL LIBRARY-------------------------------
	local Utility = {}
	do
		local function FindCharacterAncestor(part)
			if part then
				local humanoid = part:FindFirstChildOfClass("Humanoid")
				if humanoid then
					return part, humanoid
				else
					return FindCharacterAncestor(part.Parent)
				end
			end
		end
		Utility.FindCharacterAncestor = FindCharacterAncestor
	
		local function Raycast(ray, ignoreNonCollidable, ignoreList)
			ignoreList = ignoreList or {}
			local hitPart, hitPos, hitNorm, hitMat = Workspace:FindPartOnRayWithIgnoreList(ray, ignoreList)
			if hitPart then
				if ignoreNonCollidable and hitPart.CanCollide == false then
					-- We always include character parts so a user can click on another character
					-- to walk to them.
					local _, humanoid = FindCharacterAncestor(hitPart)
					if humanoid == nil then
						table.insert(ignoreList, hitPart)
						return Raycast(ray, ignoreNonCollidable, ignoreList)
					end
				end
				return hitPart, hitPos, hitNorm, hitMat
			end
			return nil, nil
		end
		Utility.Raycast = Raycast
	end
	
	local humanoidCache = {}
	local function findPlayerHumanoid(player)
		local character = player and player.Character
		if character then
			local resultHumanoid = humanoidCache[player]
			if resultHumanoid and resultHumanoid.Parent == character then
				return resultHumanoid
			else
				humanoidCache[player] = nil -- Bust Old Cache
				local humanoid = character:FindFirstChildOfClass("Humanoid")
				if humanoid then
					humanoidCache[player] = humanoid
				end
				return humanoid
			end
		end
	end
	
	--------------------------CHARACTER CONTROL-------------------------------
	local CurrentIgnoreList
	local CurrentIgnoreTag = nil
	
	local TaggedInstanceAddedConnection = nil
	local TaggedInstanceRemovedConnection = nil
	
	local function GetCharacter()
		return Player and Player.Character
	end
	
	local function UpdateIgnoreTag(newIgnoreTag)
		if newIgnoreTag == CurrentIgnoreTag then
			return
		end
		if TaggedInstanceAddedConnection then
			TaggedInstanceAddedConnection:Disconnect()
			TaggedInstanceAddedConnection = nil
		end
		if TaggedInstanceRemovedConnection then
			TaggedInstanceRemovedConnection:Disconnect()
			TaggedInstanceRemovedConnection = nil
		end
		CurrentIgnoreTag = newIgnoreTag
		CurrentIgnoreList = {GetCharacter()}
		if CurrentIgnoreTag ~= nil then
			local ignoreParts = CollectionService:GetTagged(CurrentIgnoreTag)
			for _, ignorePart in ipairs(ignoreParts) do
				table.insert(CurrentIgnoreList, ignorePart)
			end
			TaggedInstanceAddedConnection = CollectionService:GetInstanceAddedSignal(
				CurrentIgnoreTag):Connect(function(ignorePart)
				table.insert(CurrentIgnoreList, ignorePart)
			end)
			TaggedInstanceRemovedConnection = CollectionService:GetInstanceRemovedSignal(
				CurrentIgnoreTag):Connect(function(ignorePart)
				for i = 1, #CurrentIgnoreList do
					if CurrentIgnoreList[i] == ignorePart then
						CurrentIgnoreList[i] = CurrentIgnoreList[#CurrentIgnoreList]
						table.remove(CurrentIgnoreList)
						break
					end
				end
			end)
		end
	end
	
	local function getIgnoreList()
		if CurrentIgnoreList then
			return CurrentIgnoreList
		end
		CurrentIgnoreList = {}
		table.insert(CurrentIgnoreList, GetCharacter())
		return CurrentIgnoreList
	end
	
	-----------------------------------PATHER--------------------------------------
	
	local function Pather(endPoint, surfaceNormal, overrideUseDirectPath)
		local this = {}
	
		local directPathForHumanoid
		local directPathForVehicle
		if overrideUseDirectPath ~= nil then
			directPathForHumanoid = overrideUseDirectPath
			directPathForVehicle = overrideUseDirectPath
		else
			directPathForHumanoid = UseDirectPath
			directPathForVehicle = UseDirectPathForVehicle
		end
	
		this.Cancelled = false
		this.Started = false
	
		this.Finished = Instance.new("BindableEvent")
		this.PathFailed = Instance.new("BindableEvent")
	
		this.PathComputing = false
		this.PathComputed = false
	
		this.OriginalTargetPoint = endPoint
		this.TargetPoint = endPoint
		this.TargetSurfaceNormal = surfaceNormal
	
		this.DiedConn = nil
		this.SeatedConn = nil
		this.BlockedConn = nil
		this.TeleportedConn = nil
	
		this.CurrentPoint = 0
	
		this.HumanoidOffsetFromPath = ZERO_VECTOR3
	
		this.CurrentWaypointPosition = nil
		this.CurrentWaypointPlaneNormal = ZERO_VECTOR3
		this.CurrentWaypointPlaneDistance = 0
		this.CurrentWaypointNeedsJump = false;
	
		this.CurrentHumanoidPosition = ZERO_VECTOR3
		this.CurrentHumanoidVelocity = 0
	
		this.NextActionMoveDirection = ZERO_VECTOR3
		this.NextActionJump = false
	
		this.Timeout = 0
	
		this.Humanoid = findPlayerHumanoid(Player)
		this.OriginPoint = nil
		this.AgentCanFollowPath = false
		this.DirectPath = false
		this.DirectPathRiseFirst = false
	
		local rootPart = this.Humanoid and this.Humanoid.RootPart
		if rootPart then
			-- Setup origin
			this.OriginPoint = rootPart.CFrame.p
	
			-- Setup agent
			local agentRadius = 2
			local agentHeight = 5
			local agentCanJump = true
	
			local seat = this.Humanoid.SeatPart
			if seat and seat:IsA("VehicleSeat") then
				-- Humanoid is seated on a vehicle
				local vehicle = seat:FindFirstAncestorOfClass("Model")
				if vehicle then
					-- Make sure the PrimaryPart is set to the vehicle seat while we compute the extends.
					local tempPrimaryPart = vehicle.PrimaryPart
					vehicle.PrimaryPart = seat
	
					-- For now, only direct path
					if directPathForVehicle then
						local extents = vehicle:GetExtentsSize()
						agentRadius = AgentSizeIncreaseFactor * 0.5 * math.sqrt(extents.X * extents.X + extents.Z * extents.Z)
						agentHeight = AgentSizeIncreaseFactor * extents.Y
						agentCanJump = false
						this.AgentCanFollowPath = true
						this.DirectPath = directPathForVehicle
					end
	
					-- Reset PrimaryPart
					vehicle.PrimaryPart = tempPrimaryPart
				end
			else
				local extents = GetCharacter():GetExtentsSize()
				agentRadius = AgentSizeIncreaseFactor * 0.5 * math.sqrt(extents.X * extents.X + extents.Z * extents.Z)
				agentHeight = AgentSizeIncreaseFactor * extents.Y
				agentCanJump = (this.Humanoid.JumpPower > 0)
				this.AgentCanFollowPath = true
				this.DirectPath = directPathForHumanoid
				this.DirectPathRiseFirst = this.Humanoid.Sit
			end
	
			-- Build path object
			this.pathResult = PathfindingService:CreatePath({AgentRadius = agentRadius, AgentHeight = agentHeight, AgentCanJump = agentCanJump})
		end
	
		function this:Cleanup()
			if this.stopTraverseFunc then
				this.stopTraverseFunc()
				this.stopTraverseFunc = nil
			end
	
			if this.MoveToConn then
				this.MoveToConn:Disconnect()
				this.MoveToConn = nil
			end
	
			if this.BlockedConn then
				this.BlockedConn:Disconnect()
				this.BlockedConn = nil
			end
	
			if this.DiedConn then
				this.DiedConn:Disconnect()
				this.DiedConn = nil
			end
	
			if this.SeatedConn then
				this.SeatedConn:Disconnect()
				this.SeatedConn = nil
			end
	
			if this.TeleportedConn then
				this.TeleportedConn:Disconnect()
				this.TeleportedConn = nil
			end
	
			this.Started = false
		end
	
		function this:Cancel()
			this.Cancelled = true
			this:Cleanup()
		end
	
		function this:IsActive()
			return this.AgentCanFollowPath and this.Started and not this.Cancelled
		end
	
		function this:OnPathInterrupted()
			-- Stop moving
			this.Cancelled = true
			this:OnPointReached(false)
		end
	
		function this:ComputePath()
			if this.OriginPoint then
				if this.PathComputed or this.PathComputing then return end
				this.PathComputing = true
				if this.AgentCanFollowPath then
					if this.DirectPath then
						this.pointList = {
							PathWaypoint.new(this.OriginPoint, Enum.PathWaypointAction.Walk),
							PathWaypoint.new(this.TargetPoint, this.DirectPathRiseFirst and Enum.PathWaypointAction.Jump or Enum.PathWaypointAction.Walk)
						}
						this.PathComputed = true
					else
						this.pathResult:ComputeAsync(this.OriginPoint, this.TargetPoint)
						this.pointList = this.pathResult:GetWaypoints()
						this.BlockedConn = this.pathResult.Blocked:Connect(function(blockedIdx) this:OnPathBlocked(blockedIdx) end)
						this.PathComputed = this.pathResult.Status == Enum.PathStatus.Success
					end
				end
				this.PathComputing = false
			end
		end
	
		function this:IsValidPath()
			this:ComputePath()
			return this.PathComputed and this.AgentCanFollowPath
		end
	
		this.Recomputing = false
		function this:OnPathBlocked(blockedWaypointIdx)
			local pathBlocked = blockedWaypointIdx >= this.CurrentPoint
			if not pathBlocked or this.Recomputing then
				return
			end
	
			this.Recomputing = true
	
			if this.stopTraverseFunc then
				this.stopTraverseFunc()
				this.stopTraverseFunc = nil
			end
	
			this.OriginPoint = this.Humanoid.RootPart.CFrame.p
	
			this.pathResult:ComputeAsync(this.OriginPoint, this.TargetPoint)
			this.pointList = this.pathResult:GetWaypoints()
			if #this.pointList > 0 then
				this.HumanoidOffsetFromPath = this.pointList[1].Position - this.OriginPoint
			end
			this.PathComputed = this.pathResult.Status == Enum.PathStatus.Success
	
			if ShowPath then
				this.stopTraverseFunc, this.setPointFunc = ClickToMoveDisplay.CreatePathDisplay(this.pointList)
			end
			if this.PathComputed then
				this.CurrentPoint = 1 -- The first waypoint is always the start location. Skip it.
				this:OnPointReached(true) -- Move to first point
			else
				this.PathFailed:Fire()
				this:Cleanup()
			end
	
			this.Recomputing = false
		end
	
		function this:OnRenderStepped(dt)
			if this.Started and not this.Cancelled then
				-- Check for Timeout (if a waypoint is not reached within the delay, we fail)
				this.Timeout = this.Timeout + dt
				if this.Timeout > UnreachableWaypointTimeout then
					this:OnPointReached(false)
					return
				end
	
				-- Get Humanoid position and velocity
				this.CurrentHumanoidPosition = this.Humanoid.RootPart.Position + this.HumanoidOffsetFromPath
				this.CurrentHumanoidVelocity = this.Humanoid.RootPart.Velocity
	
				-- Check if it has reached some waypoints
				while this.Started and this:IsCurrentWaypointReached() do
					this:OnPointReached(true)
				end
	
				-- If still started, update actions
				if this.Started then
					-- Move action
					this.NextActionMoveDirection = this.CurrentWaypointPosition - this.CurrentHumanoidPosition
					if this.NextActionMoveDirection.Magnitude > ALMOST_ZERO then
						this.NextActionMoveDirection = this.NextActionMoveDirection.Unit
					else
						this.NextActionMoveDirection = ZERO_VECTOR3
					end
					-- Jump action
					if this.CurrentWaypointNeedsJump then
						this.NextActionJump = true
						this.CurrentWaypointNeedsJump = false	-- Request jump only once
					else
						this.NextActionJump = false
					end
				end
			end
		end
	
		function this:IsCurrentWaypointReached()
			local reached = false
	
			-- Check we do have a plane, if not, we consider the waypoint reached
			if this.CurrentWaypointPlaneNormal ~= ZERO_VECTOR3 then
				-- Compute distance of Humanoid from destination plane
				local dist = this.CurrentWaypointPlaneNormal:Dot(this.CurrentHumanoidPosition) - this.CurrentWaypointPlaneDistance
				-- Compute the component of the Humanoid velocity that is towards the plane
				local velocity = -this.CurrentWaypointPlaneNormal:Dot(this.CurrentHumanoidVelocity)
				-- Compute the threshold from the destination plane based on Humanoid velocity
				local threshold = math.max(1.0, 0.0625 * velocity)
				-- If we are less then threshold in front of the plane (between 0 and threshold) or if we are behing the plane (less then 0), we consider we reached it
				reached = dist < threshold
			else
				reached = true
			end
	
			if reached then
				this.CurrentWaypointPosition = nil
				this.CurrentWaypointPlaneNormal	= ZERO_VECTOR3
				this.CurrentWaypointPlaneDistance = 0
			end
	
			return reached
		end
	
		function this:OnPointReached(reached)
	
			if reached and not this.Cancelled then
				-- First, destroyed the current displayed waypoint
				if this.setPointFunc then
					this.setPointFunc(this.CurrentPoint)
				end
	
				local nextWaypointIdx = this.CurrentPoint + 1
	
				if nextWaypointIdx > #this.pointList then
					-- End of path reached
					if this.stopTraverseFunc then
						this.stopTraverseFunc()
					end
					this.Finished:Fire()
					this:Cleanup()
				else
					local currentWaypoint = this.pointList[this.CurrentPoint]
					local nextWaypoint = this.pointList[nextWaypointIdx]
	
					-- If airborne, only allow to keep moving
					-- if nextWaypoint.Action ~= Jump, or path mantains a direction
					-- Otherwise, wait until the humanoid gets to the ground
					local currentState = this.Humanoid:GetState()
					local isInAir = currentState == Enum.HumanoidStateType.FallingDown
						or currentState == Enum.HumanoidStateType.Freefall
						or currentState == Enum.HumanoidStateType.Jumping
	
					if isInAir then
						local shouldWaitForGround = nextWaypoint.Action == Enum.PathWaypointAction.Jump
						if not shouldWaitForGround and this.CurrentPoint > 1 then
							local prevWaypoint = this.pointList[this.CurrentPoint - 1]
	
							local prevDir = currentWaypoint.Position - prevWaypoint.Position
							local currDir = nextWaypoint.Position - currentWaypoint.Position
	
							local prevDirXZ = Vector2.new(prevDir.x, prevDir.z).Unit
							local currDirXZ = Vector2.new(currDir.x, currDir.z).Unit
	
							local THRESHOLD_COS = 0.996 -- ~cos(5 degrees)
							shouldWaitForGround = prevDirXZ:Dot(currDirXZ) < THRESHOLD_COS
						end
	
						if shouldWaitForGround then
							this.Humanoid.FreeFalling:Wait()
	
							-- Give time to the humanoid's state to change
							-- Otherwise, the jump flag in Humanoid
							-- will be reset by the state change
							wait(0.1)
						end
					end
	
					-- Move to the next point
					if FFlagUserNavigationClickToMoveSkipPassedWaypoints then
						this:MoveToNextWayPoint(currentWaypoint, nextWaypoint, nextWaypointIdx)
					else
						if this.setPointFunc then
							this.setPointFunc(nextWaypointIdx)
						end
						if nextWaypoint.Action == Enum.PathWaypointAction.Jump then
							this.Humanoid.Jump = true
						end
						this.Humanoid:MoveTo(nextWaypoint.Position)
	
						this.CurrentPoint = nextWaypointIdx
					end
				end
			else
				this.PathFailed:Fire()
				this:Cleanup()
			end
		end
	
		function this:MoveToNextWayPoint(currentWaypoint, nextWaypoint, nextWaypointIdx)
			-- Build next destination plane
			-- (plane normal is perpendicular to the y plane and is from next waypoint towards current one (provided the two waypoints are not at the same location))
			-- (plane location is at next waypoint)
			this.CurrentWaypointPlaneNormal = currentWaypoint.Position - nextWaypoint.Position
			this.CurrentWaypointPlaneNormal = Vector3.new(this.CurrentWaypointPlaneNormal.X, 0, this.CurrentWaypointPlaneNormal.Z)
			if this.CurrentWaypointPlaneNormal.Magnitude > ALMOST_ZERO then
				this.CurrentWaypointPlaneNormal	= this.CurrentWaypointPlaneNormal.Unit
				this.CurrentWaypointPlaneDistance = this.CurrentWaypointPlaneNormal:Dot(nextWaypoint.Position)
			else
				-- Next waypoint is the same as current waypoint so no plane
				this.CurrentWaypointPlaneNormal	= ZERO_VECTOR3
				this.CurrentWaypointPlaneDistance = 0
			end
	
			-- Should we jump
			this.CurrentWaypointNeedsJump = nextWaypoint.Action == Enum.PathWaypointAction.Jump;
	
			-- Remember next waypoint position
			this.CurrentWaypointPosition = nextWaypoint.Position
	
			-- Move to next point
			this.CurrentPoint = nextWaypointIdx
	
			-- Finally reset Timeout
			this.Timeout = 0
		end
	
		function this:Start(overrideShowPath)
			if not this.AgentCanFollowPath then
				this.PathFailed:Fire()
				return
			end
	
			if this.Started then return end
			this.Started = true
	
			ClickToMoveDisplay.CancelFailureAnimation()
	
			if ShowPath then
				if overrideShowPath == nil or overrideShowPath then
					this.stopTraverseFunc, this.setPointFunc = ClickToMoveDisplay.CreatePathDisplay(this.pointList, this.OriginalTargetPoint)
				end
			end
	
			if #this.pointList > 0 then
				-- Determine the humanoid offset from the path's first point
				-- Offset of the first waypoint from the path's origin point
				this.HumanoidOffsetFromPath = Vector3.new(0, this.pointList[1].Position.Y - this.OriginPoint.Y, 0)
	
				-- As well as its current position and velocity
				this.CurrentHumanoidPosition = this.Humanoid.RootPart.Position + this.HumanoidOffsetFromPath
				this.CurrentHumanoidVelocity = this.Humanoid.RootPart.Velocity
	
				-- Connect to events
				this.SeatedConn = this.Humanoid.Seated:Connect(function(isSeated, seat) this:OnPathInterrupted() end)
				this.DiedConn = this.Humanoid.Died:Connect(function() this:OnPathInterrupted() end)
				this.TeleportedConn = this.Humanoid.RootPart:GetPropertyChangedSignal("CFrame"):Connect(function() this:OnPathInterrupted() end)
	
				-- Actually start
				this.CurrentPoint = 1 -- The first waypoint is always the start location. Skip it.
				this:OnPointReached(true) -- Move to first point
			else
				this.PathFailed:Fire()
				if this.stopTraverseFunc then
					this.stopTraverseFunc()
				end
			end
		end
	
		--We always raycast to the ground in the case that the user clicked a wall.
		local offsetPoint = this.TargetPoint + this.TargetSurfaceNormal*1.5
		local ray = Ray.new(offsetPoint, Vector3.new(0,-1,0)*50)
		local newHitPart, newHitPos = Workspace:FindPartOnRayWithIgnoreList(ray, getIgnoreList())
		if newHitPart then
			this.TargetPoint = newHitPos
		end
		this:ComputePath()
	
		return this
	end
	
	-------------------------------------------------------------------------
	
	local function CheckAlive()
		local humanoid = findPlayerHumanoid(Player)
		return humanoid ~= nil and humanoid.Health > 0
	end
	
	local function GetEquippedTool(character)
		if character ~= nil then
			for _, child in pairs(character:GetChildren()) do
				if child:IsA('Tool') then
					return child
				end
			end
		end
	end
	
	local ExistingPather = nil
	local ExistingIndicator = nil
	local PathCompleteListener = nil
	local PathFailedListener = nil
	
	local function CleanupPath()
		if ExistingPather then
			ExistingPather:Cancel()
			ExistingPather = nil
		end
		if PathCompleteListener then
			PathCompleteListener:Disconnect()
			PathCompleteListener = nil
		end
		if PathFailedListener then
			PathFailedListener:Disconnect()
			PathFailedListener = nil
		end
		if ExistingIndicator then
			ExistingIndicator:Destroy()
		end
	end
	
	local function HandleMoveTo(thisPather, hitPt, hitChar, character, overrideShowPath)
		if ExistingPather then
			CleanupPath()
		end
		ExistingPather = thisPather
		thisPather:Start(overrideShowPath)
	
		PathCompleteListener = thisPather.Finished.Event:Connect(function()
			CleanupPath()
			if hitChar then
				local currentWeapon = GetEquippedTool(character)
				if currentWeapon then
					currentWeapon:Activate()
				end
			end
		end)
		PathFailedListener = thisPather.PathFailed.Event:Connect(function()
			CleanupPath()
			if overrideShowPath == nil or overrideShowPath then
				local shouldPlayFailureAnim = PlayFailureAnimation and not (ExistingPather and ExistingPather:IsActive())
				if shouldPlayFailureAnim then
					ClickToMoveDisplay.PlayFailureAnimation()
				end
				ClickToMoveDisplay.DisplayFailureWaypoint(hitPt)
			end
		end)
	end
	
	local function ShowPathFailedFeedback(hitPt)
		if ExistingPather and ExistingPather:IsActive() then
			ExistingPather:Cancel()
		end
		if PlayFailureAnimation then
			ClickToMoveDisplay.PlayFailureAnimation()
		end
		ClickToMoveDisplay.DisplayFailureWaypoint(hitPt)
	end
	
	function OnTap(tapPositions, goToPoint, wasTouchTap)
		-- Good to remember if this is the latest tap event
		local camera = Workspace.CurrentCamera
		local character = Player.Character
	
		if not CheckAlive() then return end
	
		-- This is a path tap position
		if #tapPositions == 1 or goToPoint then
			if camera then
				local unitRay = camera:ScreenPointToRay(tapPositions[1].x, tapPositions[1].y)
				local ray = Ray.new(unitRay.Origin, unitRay.Direction*1000)
	
				local myHumanoid = findPlayerHumanoid(Player)
				local hitPart, hitPt, hitNormal = Utility.Raycast(ray, true, getIgnoreList())
	
				local hitChar, hitHumanoid = Utility.FindCharacterAncestor(hitPart)
				if wasTouchTap and hitHumanoid and StarterGui:GetCore("AvatarContextMenuEnabled") then
					local clickedPlayer = Players:GetPlayerFromCharacter(hitHumanoid.Parent)
					if clickedPlayer then
						CleanupPath()
						return
					end
				end
				if goToPoint then
					hitPt = goToPoint
					hitChar = nil
				end
				if hitPt and character then
					-- Clean up current path
					CleanupPath()
					local thisPather = Pather(hitPt, hitNormal)
					if thisPather:IsValidPath() then
						HandleMoveTo(thisPather, hitPt, hitChar, character)
					else
						-- Clean up
						thisPather:Cleanup()
						-- Feedback here for when we don't have a good path
						ShowPathFailedFeedback(hitPt)
					end
				end
			end
		elseif #tapPositions >= 2 then
			if camera then
				-- Do shoot
				local currentWeapon = GetEquippedTool(character)
				if currentWeapon then
					currentWeapon:Activate()
				end
			end
		end
	end
	
	local function DisconnectEvent(event)
		if event then
			event:Disconnect()
		end
	end
	
	--[[ The ClickToMove Controller Class ]]--
	local KeyboardController = _Keyboard()
	local ClickToMove = setmetatable({}, KeyboardController)
	ClickToMove.__index = ClickToMove
	
	function ClickToMove.new(CONTROL_ACTION_PRIORITY)
		local self = setmetatable(KeyboardController.new(CONTROL_ACTION_PRIORITY), ClickToMove)
	
		self.fingerTouches = {}
		self.numUnsunkTouches = 0
		-- PC simulation
		self.mouse1Down = tick()
		self.mouse1DownPos = Vector2.new()
		self.mouse2DownTime = tick()
		self.mouse2DownPos = Vector2.new()
		self.mouse2UpTime = tick()
	
		self.keyboardMoveVector = ZERO_VECTOR3
	
		self.tapConn = nil
		self.inputBeganConn = nil
		self.inputChangedConn = nil
		self.inputEndedConn = nil
		self.humanoidDiedConn = nil
		self.characterChildAddedConn = nil
		self.onCharacterAddedConn = nil
		self.characterChildRemovedConn = nil
		self.renderSteppedConn = nil
		self.menuOpenedConnection = nil
	
		self.running = false
	
		self.wasdEnabled = false
	
		return self
	end
	
	function ClickToMove:DisconnectEvents()
		DisconnectEvent(self.tapConn)
		DisconnectEvent(self.inputBeganConn)
		DisconnectEvent(self.inputChangedConn)
		DisconnectEvent(self.inputEndedConn)
		DisconnectEvent(self.humanoidDiedConn)
		DisconnectEvent(self.characterChildAddedConn)
		DisconnectEvent(self.onCharacterAddedConn)
		DisconnectEvent(self.renderSteppedConn)
		DisconnectEvent(self.characterChildRemovedConn)
		DisconnectEvent(self.menuOpenedConnection)
	end
	
	function ClickToMove:OnTouchBegan(input, processed)
		if self.fingerTouches[input] == nil and not processed then
			self.numUnsunkTouches = self.numUnsunkTouches + 1
		end
		self.fingerTouches[input] = processed
	end
	
	function ClickToMove:OnTouchChanged(input, processed)
		if self.fingerTouches[input] == nil then
			self.fingerTouches[input] = processed
			if not processed then
				self.numUnsunkTouches = self.numUnsunkTouches + 1
			end
		end
	end
	
	function ClickToMove:OnTouchEnded(input, processed)
		if self.fingerTouches[input] ~= nil and self.fingerTouches[input] == false then
			self.numUnsunkTouches = self.numUnsunkTouches - 1
		end
		self.fingerTouches[input] = nil
	end
	
	
	function ClickToMove:OnCharacterAdded(character)
		self:DisconnectEvents()
	
		self.inputBeganConn = UserInputService.InputBegan:Connect(function(input, processed)
			if input.UserInputType == Enum.UserInputType.Touch then
				self:OnTouchBegan(input, processed)
			end
	
			-- Cancel path when you use the keyboard controls if wasd is enabled.
			if self.wasdEnabled and processed == false and input.UserInputType == Enum.UserInputType.Keyboard
				and movementKeys[input.KeyCode] then
				CleanupPath()
				ClickToMoveDisplay.CancelFailureAnimation()
			end
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				self.mouse1DownTime = tick()
				self.mouse1DownPos = input.Position
			end
			if input.UserInputType == Enum.UserInputType.MouseButton2 then
				self.mouse2DownTime = tick()
				self.mouse2DownPos = input.Position
			end
		end)
	
		self.inputChangedConn = UserInputService.InputChanged:Connect(function(input, processed)
			if input.UserInputType == Enum.UserInputType.Touch then
				self:OnTouchChanged(input, processed)
			end
		end)
	
		self.inputEndedConn = UserInputService.InputEnded:Connect(function(input, processed)
			if input.UserInputType == Enum.UserInputType.Touch then
				self:OnTouchEnded(input, processed)
			end
	
			if input.UserInputType == Enum.UserInputType.MouseButton2 then
				self.mouse2UpTime = tick()
				local currPos = input.Position
				-- We allow click to move during path following or if there is no keyboard movement
				local allowed = ExistingPather or self.keyboardMoveVector.Magnitude <= 0
				if self.mouse2UpTime - self.mouse2DownTime < 0.25 and (currPos - self.mouse2DownPos).magnitude < 5 and allowed then
					local positions = {currPos}
					OnTap(positions)
				end
			end
		end)
	
		self.tapConn = UserInputService.TouchTap:Connect(function(touchPositions, processed)
			if not processed then
				OnTap(touchPositions, nil, true)
			end
		end)
	
		self.menuOpenedConnection = GuiService.MenuOpened:Connect(function()
			CleanupPath()
		end)
	
		local function OnCharacterChildAdded(child)
			if UserInputService.TouchEnabled then
				if child:IsA('Tool') then
					child.ManualActivationOnly = true
				end
			end
			if child:IsA('Humanoid') then
				DisconnectEvent(self.humanoidDiedConn)
				self.humanoidDiedConn = child.Died:Connect(function()
					if ExistingIndicator then
						DebrisService:AddItem(ExistingIndicator.Model, 1)
					end
				end)
			end
		end
	
		self.characterChildAddedConn = character.ChildAdded:Connect(function(child)
			OnCharacterChildAdded(child)
		end)
		self.characterChildRemovedConn = character.ChildRemoved:Connect(function(child)
			if UserInputService.TouchEnabled then
				if child:IsA('Tool') then
					child.ManualActivationOnly = false
				end
			end
		end)
		for _, child in pairs(character:GetChildren()) do
			OnCharacterChildAdded(child)
		end
	end
	
	function ClickToMove:Start()
		self:Enable(true)
	end
	
	function ClickToMove:Stop()
		self:Enable(false)
	end
	
	function ClickToMove:CleanupPath()
		CleanupPath()
	end
	
	function ClickToMove:Enable(enable, enableWASD, touchJumpController)
		if enable then
			if not self.running then
				if Player.Character then -- retro-listen
					self:OnCharacterAdded(Player.Character)
				end
				self.onCharacterAddedConn = Player.CharacterAdded:Connect(function(char)
					self:OnCharacterAdded(char)
				end)
				self.running = true
			end
			self.touchJumpController = touchJumpController
			if self.touchJumpController then
				self.touchJumpController:Enable(self.jumpEnabled)
			end
		else
			if self.running then
				self:DisconnectEvents()
				CleanupPath()
				-- Restore tool activation on shutdown
				if UserInputService.TouchEnabled then
					local character = Player.Character
					if character then
						for _, child in pairs(character:GetChildren()) do
							if child:IsA('Tool') then
								child.ManualActivationOnly = false
							end
						end
					end
				end
				self.running = false
			end
			if self.touchJumpController and not self.jumpEnabled then
				self.touchJumpController:Enable(true)
			end
			self.touchJumpController = nil
		end
	
		-- Extension for initializing Keyboard input as this class now derives from Keyboard
		if UserInputService.KeyboardEnabled and enable ~= self.enabled then
	
			self.forwardValue  = 0
			self.backwardValue = 0
			self.leftValue = 0
			self.rightValue = 0
	
			self.moveVector = ZERO_VECTOR3
	
			if enable then
				self:BindContextActions()
				self:ConnectFocusEventListeners()
			else
				self:UnbindContextActions()
				self:DisconnectFocusEventListeners()
			end
		end
	
		self.wasdEnabled = enable and enableWASD or false
		self.enabled = enable
	end
	
	function ClickToMove:OnRenderStepped(dt)
		-- Reset jump
		self.isJumping = false
	
		-- Handle Pather
		if ExistingPather then
			-- Let the Pather update
			ExistingPather:OnRenderStepped(dt)
	
			-- If we still have a Pather, set the resulting actions
			if ExistingPather then
				-- Setup move (NOT relative to camera)
				self.moveVector = ExistingPather.NextActionMoveDirection
				self.moveVectorIsCameraRelative = false
	
				-- Setup jump (but do NOT prevent the base Keayboard class from requesting jumps as well)
				if ExistingPather.NextActionJump then
					self.isJumping = true
				end
			else
				self.moveVector = self.keyboardMoveVector
				self.moveVectorIsCameraRelative = true
			end
		else
			self.moveVector = self.keyboardMoveVector
			self.moveVectorIsCameraRelative = true
		end
	
		-- Handle Keyboard's jump
		if self.jumpRequested then
			self.isJumping = true
		end
	end
	
	-- Overrides Keyboard:UpdateMovement(inputState) to conditionally consider self.wasdEnabled and let OnRenderStepped handle the movement
	function ClickToMove:UpdateMovement(inputState)
		if inputState == Enum.UserInputState.Cancel then
			self.keyboardMoveVector = ZERO_VECTOR3
		elseif self.wasdEnabled then
			self.keyboardMoveVector = Vector3.new(self.leftValue + self.rightValue, 0, self.forwardValue + self.backwardValue)
		end
	end
	
	-- Overrides Keyboard:UpdateJump() because jump is handled in OnRenderStepped
	function ClickToMove:UpdateJump()
		-- Nothing to do (handled in OnRenderStepped)
	end
	
	--Public developer facing functions
	function ClickToMove:SetShowPath(value)
		ShowPath = value
	end
	
	function ClickToMove:GetShowPath()
		return ShowPath
	end
	
	function ClickToMove:SetWaypointTexture(texture)
		ClickToMoveDisplay.SetWaypointTexture(texture)
	end
	
	function ClickToMove:GetWaypointTexture()
		return ClickToMoveDisplay.GetWaypointTexture()
	end
	
	function ClickToMove:SetWaypointRadius(radius)
		ClickToMoveDisplay.SetWaypointRadius(radius)
	end
	
	function ClickToMove:GetWaypointRadius()
		return ClickToMoveDisplay.GetWaypointRadius()
	end
	
	function ClickToMove:SetEndWaypointTexture(texture)
		ClickToMoveDisplay.SetEndWaypointTexture(texture)
	end
	
	function ClickToMove:GetEndWaypointTexture()
		return ClickToMoveDisplay.GetEndWaypointTexture()
	end
	
	function ClickToMove:SetWaypointsAlwaysOnTop(alwaysOnTop)
		ClickToMoveDisplay.SetWaypointsAlwaysOnTop(alwaysOnTop)
	end
	
	function ClickToMove:GetWaypointsAlwaysOnTop()
		return ClickToMoveDisplay.GetWaypointsAlwaysOnTop()
	end
	
	function ClickToMove:SetFailureAnimationEnabled(enabled)
		PlayFailureAnimation = enabled
	end
	
	function ClickToMove:GetFailureAnimationEnabled()
		return PlayFailureAnimation
	end
	
	function ClickToMove:SetIgnoredPartsTag(tag)
		UpdateIgnoreTag(tag)
	end
	
	function ClickToMove:GetIgnoredPartsTag()
		return CurrentIgnoreTag
	end
	
	function ClickToMove:SetUseDirectPath(directPath)
		UseDirectPath = directPath
	end
	
	function ClickToMove:GetUseDirectPath()
		return UseDirectPath
	end
	
	function ClickToMove:SetAgentSizeIncreaseFactor(increaseFactorPercent)
		AgentSizeIncreaseFactor = 1.0 + (increaseFactorPercent / 100.0)
	end
	
	function ClickToMove:GetAgentSizeIncreaseFactor()
		return (AgentSizeIncreaseFactor - 1.0) * 100.0
	end
	
	function ClickToMove:SetUnreachableWaypointTimeout(timeoutInSec)
		UnreachableWaypointTimeout = timeoutInSec
	end
	
	function ClickToMove:GetUnreachableWaypointTimeout()
		return UnreachableWaypointTimeout
	end
	
	function ClickToMove:SetUserJumpEnabled(jumpEnabled)
		self.jumpEnabled = jumpEnabled
		if self.touchJumpController then
			self.touchJumpController:Enable(jumpEnabled)
		end
	end
	
	function ClickToMove:GetUserJumpEnabled()
		return self.jumpEnabled
	end
	
	function ClickToMove:MoveTo(position, showPath, useDirectPath)
		local character = Player.Character
		if character == nil then
			return false
		end
		local thisPather = Pather(position, Vector3.new(0, 1, 0), useDirectPath)
		if thisPather and thisPather:IsValidPath() then
			HandleMoveTo(thisPather, position, nil, character, showPath)
			return true
		end
		return false
	end
	
	return ClickToMove
end

function _TouchThumbstick()
	local Players = game:GetService("Players")
	local GuiService = game:GetService("GuiService")
	local UserInputService = game:GetService("UserInputService")
	--[[ Constants ]]--
	local ZERO_VECTOR3 = Vector3.new(0,0,0)
	local TOUCH_CONTROL_SHEET = "rbxasset://textures/ui/TouchControlsSheet.png"
	--[[ The Module ]]--
	local BaseCharacterController = _BaseCharacterController()
	local TouchThumbstick = setmetatable({}, BaseCharacterController)
	TouchThumbstick.__index = TouchThumbstick
	function TouchThumbstick.new()
		local self = setmetatable(BaseCharacterController.new(), TouchThumbstick)
		
		self.isFollowStick = false
		
		self.thumbstickFrame = nil
		self.moveTouchObject = nil
		self.onTouchMovedConn = nil
		self.onTouchEndedConn = nil
		self.screenPos = nil
		self.stickImage = nil
		self.thumbstickSize = nil -- Float
		
		return self
	end
	function TouchThumbstick:Enable(enable, uiParentFrame)
		if enable == nil then return false end			-- If nil, return false (invalid argument)
		enable = enable and true or false				-- Force anything non-nil to boolean before comparison
		if self.enabled == enable then return true end	-- If no state change, return true indicating already in requested state
		
		self.moveVector = ZERO_VECTOR3
		self.isJumping = false
		
		if enable then
			-- Enable
			if not self.thumbstickFrame then
				self:Create(uiParentFrame)
			end
			self.thumbstickFrame.Visible = true
		else 
			-- Disable
			self.thumbstickFrame.Visible = false
			self:OnInputEnded()
		end
		self.enabled = enable
	end
	function TouchThumbstick:OnInputEnded()
		self.thumbstickFrame.Position = self.screenPos
		self.stickImage.Position = UDim2.new(0, self.thumbstickFrame.Size.X.Offset/2 - self.thumbstickSize/4, 0, self.thumbstickFrame.Size.Y.Offset/2 - self.thumbstickSize/4)
		
		self.moveVector = ZERO_VECTOR3
		self.isJumping = false
		self.thumbstickFrame.Position = self.screenPos
		self.moveTouchObject = nil
	end
	function TouchThumbstick:Create(parentFrame)
		
		if self.thumbstickFrame then
			self.thumbstickFrame:Destroy()
			self.thumbstickFrame = nil
			if self.onTouchMovedConn then
				self.onTouchMovedConn:Disconnect()
				self.onTouchMovedConn = nil
			end
			if self.onTouchEndedConn then
				self.onTouchEndedConn:Disconnect()
				self.onTouchEndedConn = nil
			end
		end
		
		local minAxis = math.min(parentFrame.AbsoluteSize.x, parentFrame.AbsoluteSize.y)
		local isSmallScreen = minAxis <= 500
		self.thumbstickSize = isSmallScreen and 70 or 120
		self.screenPos = isSmallScreen and UDim2.new(0, (self.thumbstickSize/2) - 10, 1, -self.thumbstickSize - 20) or
			UDim2.new(0, self.thumbstickSize/2, 1, -self.thumbstickSize * 1.75)
			
		self.thumbstickFrame = Instance.new("Frame")
		self.thumbstickFrame.Name = "ThumbstickFrame"
		self.thumbstickFrame.Active = true
		self.thumbstickFrame.Visible = false
		self.thumbstickFrame.Size = UDim2.new(0, self.thumbstickSize, 0, self.thumbstickSize)
		self.thumbstickFrame.Position = self.screenPos
		self.thumbstickFrame.BackgroundTransparency = 1
		
		local outerImage = Instance.new("ImageLabel")
		outerImage.Name = "OuterImage"
		outerImage.Image = TOUCH_CONTROL_SHEET
		outerImage.ImageRectOffset = Vector2.new()
		outerImage.ImageRectSize = Vector2.new(220, 220)
		outerImage.BackgroundTransparency = 1
		outerImage.Size = UDim2.new(0, self.thumbstickSize, 0, self.thumbstickSize)
		outerImage.Position = UDim2.new(0, 0, 0, 0)
		outerImage.Parent = self.thumbstickFrame
		
		self.stickImage = Instance.new("ImageLabel")
		self.stickImage.Name = "StickImage"
		self.stickImage.Image = TOUCH_CONTROL_SHEET
		self.stickImage.ImageRectOffset = Vector2.new(220, 0)
		self.stickImage.ImageRectSize = Vector2.new(111, 111)
		self.stickImage.BackgroundTransparency = 1
		self.stickImage.Size = UDim2.new(0, self.thumbstickSize/2, 0, self.thumbstickSize/2)
		self.stickImage.Position = UDim2.new(0, self.thumbstickSize/2 - self.thumbstickSize/4, 0, self.thumbstickSize/2 - self.thumbstickSize/4)
		self.stickImage.ZIndex = 2
		self.stickImage.Parent = self.thumbstickFrame
		
		local centerPosition = nil
		local deadZone = 0.05
		
		local function DoMove(direction)
			
			local currentMoveVector = direction / (self.thumbstickSize/2)
			
			-- Scaled Radial Dead Zone
			local inputAxisMagnitude = currentMoveVector.magnitude
			if inputAxisMagnitude < deadZone then
				currentMoveVector = Vector3.new()
			else
				currentMoveVector = currentMoveVector.unit * ((inputAxisMagnitude - deadZone) / (1 - deadZone))
				-- NOTE: Making currentMoveVector a unit vector will cause the player to instantly go max speed
				-- must check for zero length vector is using unit
				currentMoveVector = Vector3.new(currentMoveVector.x, 0, currentMoveVector.y)
			end
			
			self.moveVector = currentMoveVector
		end
		
		local function MoveStick(pos)
			local relativePosition = Vector2.new(pos.x - centerPosition.x, pos.y - centerPosition.y)
			local length = relativePosition.magnitude
			local maxLength = self.thumbstickFrame.AbsoluteSize.x/2
			if self.isFollowStick and length > maxLength then
				local offset = relativePosition.unit * maxLength
				self.thumbstickFrame.Position = UDim2.new(
					0, pos.x - self.thumbstickFrame.AbsoluteSize.x/2 - offset.x,
					0, pos.y - self.thumbstickFrame.AbsoluteSize.y/2 - offset.y)
			else
				length = math.min(length, maxLength)
				relativePosition = relativePosition.unit * length
			end
			self.stickImage.Position = UDim2.new(0, relativePosition.x + self.stickImage.AbsoluteSize.x/2, 0, relativePosition.y + self.stickImage.AbsoluteSize.y/2)
		end
		
		-- input connections
		self.thumbstickFrame.InputBegan:Connect(function(inputObject)
			--A touch that starts elsewhere on the screen will be sent to a frame's InputBegan event
			--if it moves over the frame. So we check that this is actually a new touch (inputObject.UserInputState ~= Enum.UserInputState.Begin)
			if self.moveTouchObject or inputObject.UserInputType ~= Enum.UserInputType.Touch
				or inputObject.UserInputState ~= Enum.UserInputState.Begin then
				return
			end
			
			self.moveTouchObject = inputObject
			self.thumbstickFrame.Position = UDim2.new(0, inputObject.Position.x - self.thumbstickFrame.Size.X.Offset/2, 0, inputObject.Position.y - self.thumbstickFrame.Size.Y.Offset/2)
			centerPosition = Vector2.new(self.thumbstickFrame.AbsolutePosition.x + self.thumbstickFrame.AbsoluteSize.x/2,
				self.thumbstickFrame.AbsolutePosition.y + self.thumbstickFrame.AbsoluteSize.y/2)
			local direction = Vector2.new(inputObject.Position.x - centerPosition.x, inputObject.Position.y - centerPosition.y)
		end)
		
		self.onTouchMovedConn = UserInputService.TouchMoved:Connect(function(inputObject, isProcessed)
			if inputObject == self.moveTouchObject then
				centerPosition = Vector2.new(self.thumbstickFrame.AbsolutePosition.x + self.thumbstickFrame.AbsoluteSize.x/2,
					self.thumbstickFrame.AbsolutePosition.y + self.thumbstickFrame.AbsoluteSize.y/2)
				local direction = Vector2.new(inputObject.Position.x - centerPosition.x, inputObject.Position.y - centerPosition.y)
				DoMove(direction)
				MoveStick(inputObject.Position)
			end
		end)
		
		self.onTouchEndedConn = UserInputService.TouchEnded:Connect(function(inputObject, isProcessed)
			if inputObject == self.moveTouchObject then
				self:OnInputEnded()
			end
		end)
		
		GuiService.MenuOpened:Connect(function()
			if self.moveTouchObject then
				self:OnInputEnded()
			end
		end)	
		
		self.thumbstickFrame.Parent = parentFrame
	end
	return TouchThumbstick
end

function _DynamicThumbstick()
	local ZERO_VECTOR3 = Vector3.new(0,0,0)
	local TOUCH_CONTROLS_SHEET = "rbxasset://textures/ui/Input/TouchControlsSheetV2.png"
	
	local DYNAMIC_THUMBSTICK_ACTION_NAME = "DynamicThumbstickAction"
	local DYNAMIC_THUMBSTICK_ACTION_PRIORITY = Enum.ContextActionPriority.High.Value
	
	local MIDDLE_TRANSPARENCIES = {
		1 - 0.89,
		1 - 0.70,
		1 - 0.60,
		1 - 0.50,
		1 - 0.40,
		1 - 0.30,
		1 - 0.25
	}
	local NUM_MIDDLE_IMAGES = #MIDDLE_TRANSPARENCIES
	
	local FADE_IN_OUT_BACKGROUND = true
	local FADE_IN_OUT_MAX_ALPHA = 0.35
	
	local FADE_IN_OUT_HALF_DURATION_DEFAULT = 0.3
	local FADE_IN_OUT_BALANCE_DEFAULT = 0.5
	local ThumbstickFadeTweenInfo = TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut)
	
	local Players = game:GetService("Players")
	local GuiService = game:GetService("GuiService")
	local UserInputService = game:GetService("UserInputService")
	local ContextActionService = game:GetService("ContextActionService")
	local RunService = game:GetService("RunService")
	local TweenService = game:GetService("TweenService")
	
	local LocalPlayer = Players.LocalPlayer
	if not LocalPlayer then
		Players:GetPropertyChangedSignal("LocalPlayer"):Wait()
		LocalPlayer = Players.LocalPlayer
	end
	
	--[[ The Module ]]--
	local BaseCharacterController = _BaseCharacterController()
	local DynamicThumbstick = setmetatable({}, BaseCharacterController)
	DynamicThumbstick.__index = DynamicThumbstick
	
	function DynamicThumbstick.new()
		local self = setmetatable(BaseCharacterController.new(), DynamicThumbstick)
	
		self.moveTouchObject = nil
		self.moveTouchLockedIn = false
		self.moveTouchFirstChanged = false
		self.moveTouchStartPosition = nil
	
		self.startImage = nil
		self.endImage = nil
		self.middleImages = {}
	
		self.startImageFadeTween = nil
		self.endImageFadeTween = nil
		self.middleImageFadeTweens = {}
	
		self.isFirstTouch = true
	
		self.thumbstickFrame = nil
	
		self.onRenderSteppedConn = nil
	
		self.fadeInAndOutBalance = FADE_IN_OUT_BALANCE_DEFAULT
		self.fadeInAndOutHalfDuration = FADE_IN_OUT_HALF_DURATION_DEFAULT
		self.hasFadedBackgroundInPortrait = false
		self.hasFadedBackgroundInLandscape = false
	
		self.tweenInAlphaStart = nil
		self.tweenOutAlphaStart = nil
	
		return self
	end
	
	-- Note: Overrides base class GetIsJumping with get-and-clear behavior to do a single jump
	-- rather than sustained jumping. This is only to preserve the current behavior through the refactor.
	function DynamicThumbstick:GetIsJumping()
		local wasJumping = self.isJumping
		self.isJumping = false
		return wasJumping
	end
	
	function DynamicThumbstick:Enable(enable, uiParentFrame)
		if enable == nil then return false end			-- If nil, return false (invalid argument)
		enable = enable and true or false				-- Force anything non-nil to boolean before comparison
		if self.enabled == enable then return true end	-- If no state change, return true indicating already in requested state
	
		if enable then
			-- Enable
			if not self.thumbstickFrame then
				self:Create(uiParentFrame)
			end
	
			self:BindContextActions()
		else
			ContextActionService:UnbindAction(DYNAMIC_THUMBSTICK_ACTION_NAME)
			-- Disable
			self:OnInputEnded() -- Cleanup
		end
	
		self.enabled = enable
		self.thumbstickFrame.Visible = enable
	end
	
	-- Was called OnMoveTouchEnded in previous version
	function DynamicThumbstick:OnInputEnded()
		self.moveTouchObject = nil
		self.moveVector = ZERO_VECTOR3
		self:FadeThumbstick(false)
	end
	
	function DynamicThumbstick:FadeThumbstick(visible)
		if not visible and self.moveTouchObject then
			return
		end
		if self.isFirstTouch then return end
	
		if self.startImageFadeTween then
			self.startImageFadeTween:Cancel()
		end
		if self.endImageFadeTween then
			self.endImageFadeTween:Cancel()
		end
		for i = 1, #self.middleImages do
			if self.middleImageFadeTweens[i] then
				self.middleImageFadeTweens[i]:Cancel()
			end
		end
	
		if visible then
			self.startImageFadeTween = TweenService:Create(self.startImage, ThumbstickFadeTweenInfo, { ImageTransparency = 0 })
			self.startImageFadeTween:Play()
	
			self.endImageFadeTween = TweenService:Create(self.endImage, ThumbstickFadeTweenInfo, { ImageTransparency = 0.2 })
			self.endImageFadeTween:Play()
	
			for i = 1, #self.middleImages do
				self.middleImageFadeTweens[i] = TweenService:Create(self.middleImages[i], ThumbstickFadeTweenInfo, { ImageTransparency = MIDDLE_TRANSPARENCIES[i] })
				self.middleImageFadeTweens[i]:Play()
			end
		else
			self.startImageFadeTween = TweenService:Create(self.startImage, ThumbstickFadeTweenInfo, { ImageTransparency = 1 })
			self.startImageFadeTween:Play()
	
			self.endImageFadeTween = TweenService:Create(self.endImage, ThumbstickFadeTweenInfo, { ImageTransparency = 1 })
			self.endImageFadeTween:Play()
	
			for i = 1, #self.middleImages do
				self.middleImageFadeTweens[i] = TweenService:Create(self.middleImages[i], ThumbstickFadeTweenInfo, { ImageTransparency = 1 })
				self.middleImageFadeTweens[i]:Play()
			end
		end
	end
	
	function DynamicThumbstick:FadeThumbstickFrame(fadeDuration, fadeRatio)
		self.fadeInAndOutHalfDuration = fadeDuration * 0.5
		self.fadeInAndOutBalance = fadeRatio
		self.tweenInAlphaStart = tick()
	end
	
	function DynamicThumbstick:InputInFrame(inputObject)
		local frameCornerTopLeft = self.thumbstickFrame.AbsolutePosition
		local frameCornerBottomRight = frameCornerTopLeft + self.thumbstickFrame.AbsoluteSize
		local inputPosition = inputObject.Position
		if inputPosition.X >= frameCornerTopLeft.X and inputPosition.Y >= frameCornerTopLeft.Y then
			if inputPosition.X <= frameCornerBottomRight.X and inputPosition.Y <= frameCornerBottomRight.Y then
				return true
			end
		end
		return false
	end
	
	function DynamicThumbstick:DoFadeInBackground()
		local playerGui = LocalPlayer:FindFirstChildOfClass("PlayerGui")
		local hasFadedBackgroundInOrientation = false
	
		-- only fade in/out the background once per orientation
		if playerGui then
			if playerGui.CurrentScreenOrientation == Enum.ScreenOrientation.LandscapeLeft or
				playerGui.CurrentScreenOrientation == Enum.ScreenOrientation.LandscapeRight then
					hasFadedBackgroundInOrientation = self.hasFadedBackgroundInLandscape
					self.hasFadedBackgroundInLandscape = true
			elseif playerGui.CurrentScreenOrientation == Enum.ScreenOrientation.Portrait then
					hasFadedBackgroundInOrientation = self.hasFadedBackgroundInPortrait
					self.hasFadedBackgroundInPortrait = true
			end
		end
	
		if not hasFadedBackgroundInOrientation then
			self.fadeInAndOutHalfDuration = FADE_IN_OUT_HALF_DURATION_DEFAULT
			self.fadeInAndOutBalance = FADE_IN_OUT_BALANCE_DEFAULT
			self.tweenInAlphaStart = tick()
		end
	end
	
	function DynamicThumbstick:DoMove(direction)
		local currentMoveVector = direction
	
		-- Scaled Radial Dead Zone
		local inputAxisMagnitude = currentMoveVector.magnitude
		if inputAxisMagnitude < self.radiusOfDeadZone then
			currentMoveVector = ZERO_VECTOR3
		else
			currentMoveVector = currentMoveVector.unit*(
				1 - math.max(0, (self.radiusOfMaxSpeed - currentMoveVector.magnitude)/self.radiusOfMaxSpeed)
			)
			currentMoveVector = Vector3.new(currentMoveVector.x, 0, currentMoveVector.y)
		end
	
		self.moveVector = currentMoveVector
	end
	
	
	function DynamicThumbstick:LayoutMiddleImages(startPos, endPos)
		local startDist = (self.thumbstickSize / 2) + self.middleSize
		local vector = endPos - startPos
		local distAvailable = vector.magnitude - (self.thumbstickRingSize / 2) - self.middleSize
		local direction = vector.unit
	
		local distNeeded = self.middleSpacing * NUM_MIDDLE_IMAGES
		local spacing = self.middleSpacing
	
		if distNeeded < distAvailable then
			spacing = distAvailable / NUM_MIDDLE_IMAGES
		end
	
		for i = 1, NUM_MIDDLE_IMAGES do
			local image = self.middleImages[i]
			local distWithout = startDist + (spacing * (i - 2))
			local currentDist = startDist + (spacing * (i - 1))
	
			if distWithout < distAvailable then
				local pos = endPos - direction * currentDist
				local exposedFraction = math.clamp(1 - ((currentDist - distAvailable) / spacing), 0, 1)
	
				image.Visible = true
				image.Position = UDim2.new(0, pos.X, 0, pos.Y)
				image.Size = UDim2.new(0, self.middleSize * exposedFraction, 0, self.middleSize * exposedFraction)
			else
				image.Visible = false
			end
		end
	end
	
	function DynamicThumbstick:MoveStick(pos)
		local vector2StartPosition = Vector2.new(self.moveTouchStartPosition.X, self.moveTouchStartPosition.Y)
		local startPos = vector2StartPosition - self.thumbstickFrame.AbsolutePosition
		local endPos = Vector2.new(pos.X, pos.Y) - self.thumbstickFrame.AbsolutePosition
		self.endImage.Position = UDim2.new(0, endPos.X, 0, endPos.Y)
		self:LayoutMiddleImages(startPos, endPos)
	end
	
	function DynamicThumbstick:BindContextActions()
		local function inputBegan(inputObject)
			if self.moveTouchObject then
				return Enum.ContextActionResult.Pass
			end
	
			if not self:InputInFrame(inputObject) then
				return Enum.ContextActionResult.Pass
			end
	
			if self.isFirstTouch then
				self.isFirstTouch = false
				local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out,0,false,0)
				TweenService:Create(self.startImage, tweenInfo, {Size = UDim2.new(0, 0, 0, 0)}):Play()
				TweenService:Create(
					self.endImage,
					tweenInfo,
					{Size = UDim2.new(0, self.thumbstickSize, 0, self.thumbstickSize), ImageColor3 = Color3.new(0,0,0)}
				):Play()
			end
	
			self.moveTouchLockedIn = false
			self.moveTouchObject = inputObject
			self.moveTouchStartPosition = inputObject.Position
			self.moveTouchFirstChanged = true
	
			if FADE_IN_OUT_BACKGROUND then
				self:DoFadeInBackground()
			end
	
			return Enum.ContextActionResult.Pass
		end
	
		local function inputChanged(inputObject)
			if inputObject == self.moveTouchObject then
				if self.moveTouchFirstChanged then
					self.moveTouchFirstChanged = false
	
					local startPosVec2 = Vector2.new(
						inputObject.Position.X - self.thumbstickFrame.AbsolutePosition.X,
						inputObject.Position.Y - self.thumbstickFrame.AbsolutePosition.Y
					)
					self.startImage.Visible = true
					self.startImage.Position = UDim2.new(0, startPosVec2.X, 0, startPosVec2.Y)
					self.endImage.Visible = true
					self.endImage.Position = self.startImage.Position
	
					self:FadeThumbstick(true)
					self:MoveStick(inputObject.Position)
				end
	
				self.moveTouchLockedIn = true
	
				local direction = Vector2.new(
					inputObject.Position.x - self.moveTouchStartPosition.x,
					inputObject.Position.y - self.moveTouchStartPosition.y
				)
				if math.abs(direction.x) > 0 or math.abs(direction.y) > 0 then
					self:DoMove(direction)
					self:MoveStick(inputObject.Position)
				end
				return Enum.ContextActionResult.Sink
			end
			return Enum.ContextActionResult.Pass
		end
	
		local function inputEnded(inputObject)
			if inputObject == self.moveTouchObject then
				self:OnInputEnded()
				if self.moveTouchLockedIn then
					return Enum.ContextActionResult.Sink
				end
			end
			return Enum.ContextActionResult.Pass
		end
	
		local function handleInput(actionName, inputState, inputObject)
			if inputState == Enum.UserInputState.Begin then
				return inputBegan(inputObject)
			elseif inputState == Enum.UserInputState.Change then
				return inputChanged(inputObject)
			elseif inputState == Enum.UserInputState.End then
				return inputEnded(inputObject)
			elseif inputState == Enum.UserInputState.Cancel then
				self:OnInputEnded()
			end
		end
	
		ContextActionService:BindActionAtPriority(
			DYNAMIC_THUMBSTICK_ACTION_NAME,
			handleInput,
			false,
			DYNAMIC_THUMBSTICK_ACTION_PRIORITY,
			Enum.UserInputType.Touch)
	end
	
	function DynamicThumbstick:Create(parentFrame)
		if self.thumbstickFrame then
			self.thumbstickFrame:Destroy()
			self.thumbstickFrame = nil
			if self.onRenderSteppedConn then
				self.onRenderSteppedConn:Disconnect()
				self.onRenderSteppedConn = nil
			end
		end
	
		self.thumbstickSize = 45
		self.thumbstickRingSize = 20
		self.middleSize = 10
		self.middleSpacing = self.middleSize + 4
		self.radiusOfDeadZone = 2
		self.radiusOfMaxSpeed = 20
	
		local screenSize = parentFrame.AbsoluteSize
		local isBigScreen = math.min(screenSize.x, screenSize.y) > 500
		if isBigScreen then
			self.thumbstickSize = self.thumbstickSize * 2
			self.thumbstickRingSize = self.thumbstickRingSize * 2
			self.middleSize = self.middleSize * 2
			self.middleSpacing = self.middleSpacing * 2
			self.radiusOfDeadZone = self.radiusOfDeadZone * 2
			self.radiusOfMaxSpeed = self.radiusOfMaxSpeed * 2
		end
	
		local function layoutThumbstickFrame(portraitMode)
			if portraitMode then
				self.thumbstickFrame.Size = UDim2.new(1, 0, 0.4, 0)
				self.thumbstickFrame.Position = UDim2.new(0, 0, 0.6, 0)
			else
				self.thumbstickFrame.Size = UDim2.new(0.4, 0, 2/3, 0)
				self.thumbstickFrame.Position = UDim2.new(0, 0, 1/3, 0)
			end
		end
	
		self.thumbstickFrame = Instance.new("Frame")
		self.thumbstickFrame.BorderSizePixel = 0
		self.thumbstickFrame.Name = "DynamicThumbstickFrame"
		self.thumbstickFrame.Visible = false
		self.thumbstickFrame.BackgroundTransparency = 1.0
		self.thumbstickFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		self.thumbstickFrame.Active = false
		layoutThumbstickFrame(false)
	
		self.startImage = Instance.new("ImageLabel")
		self.startImage.Name = "ThumbstickStart"
		self.startImage.Visible = true
		self.startImage.BackgroundTransparency = 1
		self.startImage.Image = TOUCH_CONTROLS_SHEET
		self.startImage.ImageRectOffset = Vector2.new(1,1)
		self.startImage.ImageRectSize = Vector2.new(144, 144)
		self.startImage.ImageColor3 = Color3.new(0, 0, 0)
		self.startImage.AnchorPoint = Vector2.new(0.5, 0.5)
		self.startImage.Position = UDim2.new(0, self.thumbstickRingSize * 3.3, 1, -self.thumbstickRingSize  * 2.8)
		self.startImage.Size = UDim2.new(0, self.thumbstickRingSize  * 3.7, 0, self.thumbstickRingSize  * 3.7)
		self.startImage.ZIndex = 10
		self.startImage.Parent = self.thumbstickFrame
	
		self.endImage = Instance.new("ImageLabel")
		self.endImage.Name = "ThumbstickEnd"
		self.endImage.Visible = true
		self.endImage.BackgroundTransparency = 1
		self.endImage.Image = TOUCH_CONTROLS_SHEET
		self.endImage.ImageRectOffset = Vector2.new(1,1)
		self.endImage.ImageRectSize =  Vector2.new(144, 144)
		self.endImage.AnchorPoint = Vector2.new(0.5, 0.5)
		self.endImage.Position = self.startImage.Position
		self.endImage.Size = UDim2.new(0, self.thumbstickSize * 0.8, 0, self.thumbstickSize * 0.8)
		self.endImage.ZIndex = 10
		self.endImage.Parent = self.thumbstickFrame
	
		for i = 1, NUM_MIDDLE_IMAGES do
			self.middleImages[i] = Instance.new("ImageLabel")
			self.middleImages[i].Name = "ThumbstickMiddle"
			self.middleImages[i].Visible = false
			self.middleImages[i].BackgroundTransparency = 1
			self.middleImages[i].Image = TOUCH_CONTROLS_SHEET
			self.middleImages[i].ImageRectOffset = Vector2.new(1,1)
			self.middleImages[i].ImageRectSize = Vector2.new(144, 144)
			self.middleImages[i].ImageTransparency = MIDDLE_TRANSPARENCIES[i]
			self.middleImages[i].AnchorPoint = Vector2.new(0.5, 0.5)
			self.middleImages[i].ZIndex = 9
			self.middleImages[i].Parent = self.thumbstickFrame
		end
	
		local CameraChangedConn = nil
		local function onCurrentCameraChanged()
			if CameraChangedConn then
				CameraChangedConn:Disconnect()
				CameraChangedConn = nil
			end
			local newCamera = workspace.CurrentCamera
			if newCamera then
				local function onViewportSizeChanged()
					local size = newCamera.ViewportSize
					local portraitMode = size.X < size.Y
					layoutThumbstickFrame(portraitMode)
				end
				CameraChangedConn = newCamera:GetPropertyChangedSignal("ViewportSize"):Connect(onViewportSizeChanged)
				onViewportSizeChanged()
			end
		end
		workspace:GetPropertyChangedSignal("CurrentCamera"):Connect(onCurrentCameraChanged)
		if workspace.CurrentCamera then
			onCurrentCameraChanged()
		end
	
		self.moveTouchStartPosition = nil
	
		self.startImageFadeTween = nil
		self.endImageFadeTween = nil
		self.middleImageFadeTweens = {}
	
		self.onRenderSteppedConn = RunService.RenderStepped:Connect(function()
			if self.tweenInAlphaStart ~= nil then
				local delta = tick() - self.tweenInAlphaStart
				local fadeInTime = (self.fadeInAndOutHalfDuration * 2 * self.fadeInAndOutBalance)
				self.thumbstickFrame.BackgroundTransparency = 1 - FADE_IN_OUT_MAX_ALPHA*math.min(delta/fadeInTime, 1)
				if delta > fadeInTime then
					self.tweenOutAlphaStart = tick()
					self.tweenInAlphaStart = nil
				end
			elseif self.tweenOutAlphaStart ~= nil then
				local delta = tick() - self.tweenOutAlphaStart
				local fadeOutTime = (self.fadeInAndOutHalfDuration * 2) - (self.fadeInAndOutHalfDuration * 2 * self.fadeInAndOutBalance)
				self.thumbstickFrame.BackgroundTransparency = 1 - FADE_IN_OUT_MAX_ALPHA + FADE_IN_OUT_MAX_ALPHA*math.min(delta/fadeOutTime, 1)
				if delta > fadeOutTime  then
					self.tweenOutAlphaStart = nil
				end
			end
		end)
	
		self.onTouchEndedConn = UserInputService.TouchEnded:connect(function(inputObject)
			if inputObject == self.moveTouchObject then
				self:OnInputEnded()
			end
		end)
	
		GuiService.MenuOpened:connect(function()
			if self.moveTouchObject then
				self:OnInputEnded()
			end
		end)
	
		local playerGui = LocalPlayer:FindFirstChildOfClass("PlayerGui")
		while not playerGui do
			LocalPlayer.ChildAdded:wait()
			playerGui = LocalPlayer:FindFirstChildOfClass("PlayerGui")
		end
	
		local playerGuiChangedConn = nil
		local originalScreenOrientationWasLandscape =	playerGui.CurrentScreenOrientation == Enum.ScreenOrientation.LandscapeLeft or
														playerGui.CurrentScreenOrientation == Enum.ScreenOrientation.LandscapeRight
	
		local function longShowBackground()
			self.fadeInAndOutHalfDuration = 2.5
			self.fadeInAndOutBalance = 0.05
			self.tweenInAlphaStart = tick()
		end
	
		playerGuiChangedConn = playerGui:GetPropertyChangedSignal("CurrentScreenOrientation"):Connect(function()
			if (originalScreenOrientationWasLandscape and playerGui.CurrentScreenOrientation == Enum.ScreenOrientation.Portrait) or
				(not originalScreenOrientationWasLandscape and playerGui.CurrentScreenOrientation ~= Enum.ScreenOrientation.Portrait) then
	
				playerGuiChangedConn:disconnect()
				longShowBackground()
	
				if originalScreenOrientationWasLandscape then
					self.hasFadedBackgroundInPortrait = true
				else
					self.hasFadedBackgroundInLandscape = true
				end
			end
		end)
	
		self.thumbstickFrame.Parent = parentFrame
	
		if game:IsLoaded() then
			longShowBackground()
		else
			coroutine.wrap(function()
				game.Loaded:Wait()
				longShowBackground()
			end)()
		end
	end
	
	return DynamicThumbstick
end

function _Gamepad()
	local UserInputService = game:GetService("UserInputService")
	local ContextActionService = game:GetService("ContextActionService")
	
	--[[ Constants ]]--
	local ZERO_VECTOR3 = Vector3.new(0,0,0)
	local NONE = Enum.UserInputType.None
	local thumbstickDeadzone = 0.2
	
	--[[ The Module ]]--
	local BaseCharacterController = _BaseCharacterController()
	local Gamepad = setmetatable({}, BaseCharacterController)
	Gamepad.__index = Gamepad
	
	function Gamepad.new(CONTROL_ACTION_PRIORITY)
		local self = setmetatable(BaseCharacterController.new(), Gamepad)
	
		self.CONTROL_ACTION_PRIORITY = CONTROL_ACTION_PRIORITY
	
		self.forwardValue  = 0
		self.backwardValue = 0
		self.leftValue = 0
		self.rightValue = 0
	
		self.activeGamepad = NONE	-- Enum.UserInputType.Gamepad1, 2, 3...
		self.gamepadConnectedConn = nil
		self.gamepadDisconnectedConn = nil
		return self
	end
	
	function Gamepad:Enable(enable)
		if not UserInputService.GamepadEnabled then
			return false
		end
	
		if enable == self.enabled then
			-- Module is already in the state being requested. True is returned here since the module will be in the state
			-- expected by the code that follows the Enable() call. This makes more sense than returning false to indicate
			-- no action was necessary. False indicates failure to be in requested/expected state.
			return true
		end
	
		self.forwardValue  = 0
		self.backwardValue = 0
		self.leftValue = 0
		self.rightValue = 0
		self.moveVector = ZERO_VECTOR3
		self.isJumping = false
	
		if enable then
			self.activeGamepad = self:GetHighestPriorityGamepad()
			if self.activeGamepad ~= NONE then
				self:BindContextActions()
				self:ConnectGamepadConnectionListeners()
			else
				-- No connected gamepads, failure to enable
				return false
			end
		else
			self:UnbindContextActions()
			self:DisconnectGamepadConnectionListeners()
			self.activeGamepad = NONE
		end
	
		self.enabled = enable
		return true
	end
	
	-- This function selects the lowest number gamepad from the currently-connected gamepad
	-- and sets it as the active gamepad
	function Gamepad:GetHighestPriorityGamepad()
		local connectedGamepads = UserInputService:GetConnectedGamepads()
		local bestGamepad = NONE -- Note that this value is higher than all valid gamepad values
		for _, gamepad in pairs(connectedGamepads) do
			if gamepad.Value < bestGamepad.Value then
				bestGamepad = gamepad
			end
		end
		return bestGamepad
	end
	
	function Gamepad:BindContextActions()
	
		if self.activeGamepad == NONE then
			-- There must be an active gamepad to set up bindings
			return false
		end
	
		local handleJumpAction = function(actionName, inputState, inputObject)
			self.isJumping = (inputState == Enum.UserInputState.Begin)
			return Enum.ContextActionResult.Sink
		end
	
		local handleThumbstickInput = function(actionName, inputState, inputObject)
	
			if inputState == Enum.UserInputState.Cancel then
				self.moveVector = ZERO_VECTOR3
				return Enum.ContextActionResult.Sink
			end
	
			if self.activeGamepad ~= inputObject.UserInputType then
				return Enum.ContextActionResult.Pass
			end
			if inputObject.KeyCode ~= Enum.KeyCode.Thumbstick1 then return end
	
			if inputObject.Position.magnitude > thumbstickDeadzone then
				self.moveVector  =  Vector3.new(inputObject.Position.X, 0, -inputObject.Position.Y)
			else
				self.moveVector = ZERO_VECTOR3
			end
			return Enum.ContextActionResult.Sink
		end
	
		ContextActionService:BindActivate(self.activeGamepad, Enum.KeyCode.ButtonR2)
		ContextActionService:BindActionAtPriority("jumpAction", handleJumpAction, false,
			self.CONTROL_ACTION_PRIORITY, Enum.KeyCode.ButtonA)
		ContextActionService:BindActionAtPriority("moveThumbstick", handleThumbstickInput, false,
			self.CONTROL_ACTION_PRIORITY, Enum.KeyCode.Thumbstick1)
	
		return true
	end
	
	function Gamepad:UnbindContextActions()
		if self.activeGamepad ~= NONE then
			ContextActionService:UnbindActivate(self.activeGamepad, Enum.KeyCode.ButtonR2)
		end
		ContextActionService:UnbindAction("moveThumbstick")
		ContextActionService:UnbindAction("jumpAction")
	end
	
	function Gamepad:OnNewGamepadConnected()
		-- A new gamepad has been connected.
		local bestGamepad = self:GetHighestPriorityGamepad()
	
		if bestGamepad == self.activeGamepad then
			-- A new gamepad was connected, but our active gamepad is not changing
			return
		end
	
		if bestGamepad == NONE then
			-- There should be an active gamepad when GamepadConnected fires, so this should not
			-- normally be hit. If there is no active gamepad, unbind actions but leave
			-- the module enabled and continue to listen for a new gamepad connection.
			warn("Gamepad:OnNewGamepadConnected found no connected gamepads")
			self:UnbindContextActions()
			return
		end
	
		if self.activeGamepad ~= NONE then
			-- Switching from one active gamepad to another
			self:UnbindContextActions()
		end
	
		self.activeGamepad = bestGamepad
		self:BindContextActions()
	end
	
	function Gamepad:OnCurrentGamepadDisconnected()
		if self.activeGamepad ~= NONE then
			ContextActionService:UnbindActivate(self.activeGamepad, Enum.KeyCode.ButtonR2)
		end
	
		local bestGamepad = self:GetHighestPriorityGamepad()
	
		if self.activeGamepad ~= NONE and bestGamepad == self.activeGamepad then
			warn("Gamepad:OnCurrentGamepadDisconnected found the supposedly disconnected gamepad in connectedGamepads.")
			self:UnbindContextActions()
			self.activeGamepad = NONE
			return
		end
	
		if bestGamepad == NONE then
			-- No active gamepad, unbinding actions but leaving gamepad connection listener active
			self:UnbindContextActions()
			self.activeGamepad = NONE
		else
			-- Set new gamepad as active and bind to tool activation
			self.activeGamepad = bestGamepad
			ContextActionService:BindActivate(self.activeGamepad, Enum.KeyCode.ButtonR2)
		end
	end
	
	function Gamepad:ConnectGamepadConnectionListeners()
		self.gamepadConnectedConn = UserInputService.GamepadConnected:Connect(function(gamepadEnum)
			self:OnNewGamepadConnected()
		end)
	
		self.gamepadDisconnectedConn = UserInputService.GamepadDisconnected:Connect(function(gamepadEnum)
			if self.activeGamepad == gamepadEnum then
				self:OnCurrentGamepadDisconnected()
			end
		end)
	
	end
	
	function Gamepad:DisconnectGamepadConnectionListeners()
		if self.gamepadConnectedConn then
			self.gamepadConnectedConn:Disconnect()
			self.gamepadConnectedConn = nil
		end
	
		if self.gamepadDisconnectedConn then
			self.gamepadDisconnectedConn:Disconnect()
			self.gamepadDisconnectedConn = nil
		end
	end
	
	return Gamepad
end

function _Keyboard()
	
	--[[ Roblox Services ]]--
	local UserInputService = game:GetService("UserInputService")
	local ContextActionService = game:GetService("ContextActionService")
	
	--[[ Constants ]]--
	local ZERO_VECTOR3 = Vector3.new(0,0,0)
	
	--[[ The Module ]]--
	local BaseCharacterController = _BaseCharacterController()
	local Keyboard = setmetatable({}, BaseCharacterController)
	Keyboard.__index = Keyboard
	
	function Keyboard.new(CONTROL_ACTION_PRIORITY)
		local self = setmetatable(BaseCharacterController.new(), Keyboard)
	
		self.CONTROL_ACTION_PRIORITY = CONTROL_ACTION_PRIORITY
	
		self.textFocusReleasedConn = nil
		self.textFocusGainedConn = nil
		self.windowFocusReleasedConn = nil
	
		self.forwardValue  = 0
		self.backwardValue = 0
		self.leftValue = 0
		self.rightValue = 0
	
		self.jumpEnabled = true
	
		return self
	end
	
	function Keyboard:Enable(enable)
		if not UserInputService.KeyboardEnabled then
			return false
		end
	
		if enable == self.enabled then
			-- Module is already in the state being requested. True is returned here since the module will be in the state
			-- expected by the code that follows the Enable() call. This makes more sense than returning false to indicate
			-- no action was necessary. False indicates failure to be in requested/expected state.
			return true
		end
	
		self.forwardValue  = 0
		self.backwardValue = 0
		self.leftValue = 0
		self.rightValue = 0
		self.moveVector = ZERO_VECTOR3
		self.jumpRequested = false
		self:UpdateJump()
	
		if enable then
			self:BindContextActions()
			self:ConnectFocusEventListeners()
		else
			self:UnbindContextActions()
			self:DisconnectFocusEventListeners()
		end
	
		self.enabled = enable
		return true
	end
	
	function Keyboard:UpdateMovement(inputState)
		if inputState == Enum.UserInputState.Cancel then
			self.moveVector = ZERO_VECTOR3
		else
			self.moveVector = Vector3.new(self.leftValue + self.rightValue, 0, self.forwardValue + self.backwardValue)
		end
	end
	
	function Keyboard:UpdateJump()
		self.isJumping = self.jumpRequested
	end
	
	function Keyboard:BindContextActions()
	
		-- Note: In the previous version of this code, the movement values were not zeroed-out on UserInputState. Cancel, now they are,
		-- which fixes them from getting stuck on.
		-- We return ContextActionResult.Pass here for legacy reasons.
		-- Many games rely on gameProcessedEvent being false on UserInputService.InputBegan for these control actions.
		local handleMoveForward = function(actionName, inputState, inputObject)
			self.forwardValue = (inputState == Enum.UserInputState.Begin) and -1 or 0
			self:UpdateMovement(inputState)
			return Enum.ContextActionResult.Pass
		end
	
		local handleMoveBackward = function(actionName, inputState, inputObject)
			self.backwardValue = (inputState == Enum.UserInputState.Begin) and 1 or 0
			self:UpdateMovement(inputState)
			return Enum.ContextActionResult.Pass
		end
	
		local handleMoveLeft = function(actionName, inputState, inputObject)
			self.leftValue = (inputState == Enum.UserInputState.Begin) and -1 or 0
			self:UpdateMovement(inputState)
			return Enum.ContextActionResult.Pass
		end
	
		local handleMoveRight = function(actionName, inputState, inputObject)
			self.rightValue = (inputState == Enum.UserInputState.Begin) and 1 or 0
			self:UpdateMovement(inputState)
			return Enum.ContextActionResult.Pass
		end
	
		local handleJumpAction = function(actionName, inputState, inputObject)
			self.jumpRequested = self.jumpEnabled and (inputState == Enum.UserInputState.Begin)
			self:UpdateJump()
			return Enum.ContextActionResult.Pass
		end
	
		-- TODO: Revert to KeyCode bindings so that in the future the abstraction layer from actual keys to
		-- movement direction is done in Lua
		ContextActionService:BindActionAtPriority("moveForwardAction", handleMoveForward, false,
			self.CONTROL_ACTION_PRIORITY, Enum.PlayerActions.CharacterForward)
		ContextActionService:BindActionAtPriority("moveBackwardAction", handleMoveBackward, false,
			self.CONTROL_ACTION_PRIORITY, Enum.PlayerActions.CharacterBackward)
		ContextActionService:BindActionAtPriority("moveLeftAction", handleMoveLeft, false,
			self.CONTROL_ACTION_PRIORITY, Enum.PlayerActions.CharacterLeft)
		ContextActionService:BindActionAtPriority("moveRightAction", handleMoveRight, false,
			self.CONTROL_ACTION_PRIORITY, Enum.PlayerActions.CharacterRight)
		ContextActionService:BindActionAtPriority("jumpAction", handleJumpAction, false,
			self.CONTROL_ACTION_PRIORITY, Enum.PlayerActions.CharacterJump)
	end
	
	function Keyboard:UnbindContextActions()
		ContextActionService:UnbindAction("moveForwardAction")
		ContextActionService:UnbindAction("moveBackwardAction")
		ContextActionService:UnbindAction("moveLeftAction")
		ContextActionService:UnbindAction("moveRightAction")
		ContextActionService:UnbindAction("jumpAction")
	end
	
	function Keyboard:ConnectFocusEventListeners()
		local function onFocusReleased()
			self.moveVector = ZERO_VECTOR3
			self.forwardValue  = 0
			self.backwardValue = 0
			self.leftValue = 0
			self.rightValue = 0
			self.jumpRequested = false
			self:UpdateJump()
		end
	
		local function onTextFocusGained(textboxFocused)
			self.jumpRequested = false
			self:UpdateJump()
		end
	
		self.textFocusReleasedConn = UserInputService.TextBoxFocusReleased:Connect(onFocusReleased)
		self.textFocusGainedConn = UserInputService.TextBoxFocused:Connect(onTextFocusGained)
		self.windowFocusReleasedConn = UserInputService.WindowFocused:Connect(onFocusReleased)
	end
	
	function Keyboard:DisconnectFocusEventListeners()
		if self.textFocusReleasedCon then
			self.textFocusReleasedCon:Disconnect()
			self.textFocusReleasedCon = nil
		end
		if self.textFocusGainedConn then
			self.textFocusGainedConn:Disconnect()
			self.textFocusGainedConn = nil
		end
		if self.windowFocusReleasedConn then
			self.windowFocusReleasedConn:Disconnect()
			self.windowFocusReleasedConn = nil
		end
	end
	
	return Keyboard
end

function _ControlModule()
	local ControlModule = {}
	ControlModule.__index = ControlModule
	
	--[[ Roblox Services ]]--
	local Players = game:GetService("Players")
	local RunService = game:GetService("RunService")
	local UserInputService = game:GetService("UserInputService")
	local Workspace = game:GetService("Workspace")
	local UserGameSettings = UserSettings():GetService("UserGameSettings")
	
	-- Roblox User Input Control Modules - each returns a new() constructor function used to create controllers as needed
	local Keyboard = _Keyboard()
	local Gamepad = _Gamepad()
	local DynamicThumbstick = _DynamicThumbstick()
	
	local FFlagUserMakeThumbstickDynamic do
		local success, value = pcall(function()
			return UserSettings():IsUserFeatureEnabled("UserMakeThumbstickDynamic")
		end)
		FFlagUserMakeThumbstickDynamic = success and value
	end
	
	local TouchThumbstick = FFlagUserMakeThumbstickDynamic and DynamicThumbstick or _TouchThumbstick()
	
	-- These controllers handle only walk/run movement, jumping is handled by the
	-- TouchJump controller if any of these are active
	local ClickToMove = _ClickToMoveController()
	local TouchJump = _TouchJump()
	
	local VehicleController = _VehicleController()
	
	local CONTROL_ACTION_PRIORITY = Enum.ContextActionPriority.Default.Value
	
	-- Mapping from movement mode and lastInputType enum values to control modules to avoid huge if elseif switching
	local movementEnumToModuleMap = {
		[Enum.TouchMovementMode.DPad] = DynamicThumbstick,
		[Enum.DevTouchMovementMode.DPad] = DynamicThumbstick,
		[Enum.TouchMovementMode.Thumbpad] = DynamicThumbstick,
		[Enum.DevTouchMovementMode.Thumbpad] = DynamicThumbstick,
		[Enum.TouchMovementMode.Thumbstick] = TouchThumbstick,
		[Enum.DevTouchMovementMode.Thumbstick] = TouchThumbstick,
		[Enum.TouchMovementMode.DynamicThumbstick] = DynamicThumbstick,
		[Enum.DevTouchMovementMode.DynamicThumbstick] = DynamicThumbstick,
		[Enum.TouchMovementMode.ClickToMove] = ClickToMove,
		[Enum.DevTouchMovementMode.ClickToMove] = ClickToMove,
	
		-- Current default
		[Enum.TouchMovementMode.Default] = DynamicThumbstick,
	
		[Enum.ComputerMovementMode.Default] = Keyboard,
		[Enum.ComputerMovementMode.KeyboardMouse] = Keyboard,
		[Enum.DevComputerMovementMode.KeyboardMouse] = Keyboard,
		[Enum.DevComputerMovementMode.Scriptable] = nil,
		[Enum.ComputerMovementMode.ClickToMove] = ClickToMove,
		[Enum.DevComputerMovementMode.ClickToMove] = ClickToMove,
	}
	
	-- Keyboard controller is really keyboard and mouse controller
	local computerInputTypeToModuleMap = {
		[Enum.UserInputType.Keyboard] = Keyboard,
		[Enum.UserInputType.MouseButton1] = Keyboard,
		[Enum.UserInputType.MouseButton2] = Keyboard,
		[Enum.UserInputType.MouseButton3] = Keyboard,
		[Enum.UserInputType.MouseWheel] = Keyboard,
		[Enum.UserInputType.MouseMovement] = Keyboard,
		[Enum.UserInputType.Gamepad1] = Gamepad,
		[Enum.UserInputType.Gamepad2] = Gamepad,
		[Enum.UserInputType.Gamepad3] = Gamepad,
		[Enum.UserInputType.Gamepad4] = Gamepad,
	}
	
	local lastInputType
	
	function ControlModule.new()
		local self = setmetatable({},ControlModule)
	
		-- The Modules above are used to construct controller instances as-needed, and this
		-- table is a map from Module to the instance created from it
		self.controllers = {}
	
		self.activeControlModule = nil	-- Used to prevent unnecessarily expensive checks on each input event
		self.activeController = nil
		self.touchJumpController = nil
		self.moveFunction = Players.LocalPlayer.Move
		self.humanoid = nil
		self.lastInputType = Enum.UserInputType.None
	
		-- For Roblox self.vehicleController
		self.humanoidSeatedConn = nil
		self.vehicleController = nil
	
		self.touchControlFrame = nil
	
		self.vehicleController = VehicleController.new(CONTROL_ACTION_PRIORITY)
	
		Players.LocalPlayer.CharacterAdded:Connect(function(char) self:OnCharacterAdded(char) end)
		Players.LocalPlayer.CharacterRemoving:Connect(function(char) self:OnCharacterRemoving(char) end)
		if Players.LocalPlayer.Character then
			self:OnCharacterAdded(Players.LocalPlayer.Character)
		end
	
		RunService:BindToRenderStep("ControlScriptRenderstep", Enum.RenderPriority.Input.Value, function(dt)
			self:OnRenderStepped(dt)
		end)
	
		UserInputService.LastInputTypeChanged:Connect(function(newLastInputType)
			self:OnLastInputTypeChanged(newLastInputType)
		end)
	
	
		UserGameSettings:GetPropertyChangedSignal("TouchMovementMode"):Connect(function()
			self:OnTouchMovementModeChange()
		end)
		Players.LocalPlayer:GetPropertyChangedSignal("DevTouchMovementMode"):Connect(function()
			self:OnTouchMovementModeChange()
		end)
	
		UserGameSettings:GetPropertyChangedSignal("ComputerMovementMode"):Connect(function()
			self:OnComputerMovementModeChange()
		end)
		Players.LocalPlayer:GetPropertyChangedSignal("DevComputerMovementMode"):Connect(function()
			self:OnComputerMovementModeChange()
		end)
	
		--[[ Touch Device UI ]]--
		self.playerGui = nil
		self.touchGui = nil
		self.playerGuiAddedConn = nil
	
		if UserInputService.TouchEnabled then
			self.playerGui = Players.LocalPlayer:FindFirstChildOfClass("PlayerGui")
			if self.playerGui then
				self:CreateTouchGuiContainer()
				self:OnLastInputTypeChanged(UserInputService:GetLastInputType())
			else
				self.playerGuiAddedConn = Players.LocalPlayer.ChildAdded:Connect(function(child)
					if child:IsA("PlayerGui") then
						self.playerGui = child
						self:CreateTouchGuiContainer()
						self.playerGuiAddedConn:Disconnect()
						self.playerGuiAddedConn = nil
						self:OnLastInputTypeChanged(UserInputService:GetLastInputType())
					end
				end)
			end
		else
			self:OnLastInputTypeChanged(UserInputService:GetLastInputType())
		end
	
		return self
	end
	
	-- Convenience function so that calling code does not have to first get the activeController
	-- and then call GetMoveVector on it. When there is no active controller, this function returns
	-- nil so that this case can be distinguished from no current movement (which returns zero vector).
	function ControlModule:GetMoveVector()
		if self.activeController then
			return self.activeController:GetMoveVector()
		end
		return Vector3.new(0,0,0)
	end
	
	function ControlModule:GetActiveController()
		return self.activeController
	end
	
	function ControlModule:EnableActiveControlModule()
		if self.activeControlModule == ClickToMove then
			-- For ClickToMove, when it is the player's choice, we also enable the full keyboard controls.
			-- When the developer is forcing click to move, the most keyboard controls (WASD) are not available, only jump.
			self.activeController:Enable(
				true,
				Players.LocalPlayer.DevComputerMovementMode == Enum.DevComputerMovementMode.UserChoice,
				self.touchJumpController
			)
		elseif self.touchControlFrame then
			self.activeController:Enable(true, self.touchControlFrame)
		else
			self.activeController:Enable(true)
		end
	end
	
	function ControlModule:Enable(enable)
		if not self.activeController then
			return
		end
	
		if enable == nil then
			enable = true
		end
		if enable then
			self:EnableActiveControlModule()
		else
			self:Disable()
		end
	end
	
	-- For those who prefer distinct functions
	function ControlModule:Disable()
		if self.activeController then
			self.activeController:Enable(false)
	
			if self.moveFunction then
				self.moveFunction(Players.LocalPlayer, Vector3.new(0,0,0), true)
			end
		end
	end
	
	
	-- Returns module (possibly nil) and success code to differentiate returning nil due to error vs Scriptable
	function ControlModule:SelectComputerMovementModule()
		if not (UserInputService.KeyboardEnabled or UserInputService.GamepadEnabled) then
			return nil, false
		end
	
		local computerModule
		local DevMovementMode = Players.LocalPlayer.DevComputerMovementMode
	
		if DevMovementMode == Enum.DevComputerMovementMode.UserChoice then
			computerModule = computerInputTypeToModuleMap[lastInputType]
			if UserGameSettings.ComputerMovementMode == Enum.ComputerMovementMode.ClickToMove and computerModule == Keyboard then
				-- User has ClickToMove set in Settings, prefer ClickToMove controller for keyboard and mouse lastInputTypes
				computerModule = ClickToMove
			end
		else
			-- Developer has selected a mode that must be used.
			computerModule = movementEnumToModuleMap[DevMovementMode]
	
			-- computerModule is expected to be nil here only when developer has selected Scriptable
			if (not computerModule) and DevMovementMode ~= Enum.DevComputerMovementMode.Scriptable then
				warn("No character control module is associated with DevComputerMovementMode ", DevMovementMode)
			end
		end
	
		if computerModule then
			return computerModule, true
		elseif DevMovementMode == Enum.DevComputerMovementMode.Scriptable then
			-- Special case where nil is returned and we actually want to set self.activeController to nil for Scriptable
			return nil, true
		else
			-- This case is for when computerModule is nil because of an error and no suitable control module could
			-- be found.
			return nil, false
		end
	end
	
	-- Choose current Touch control module based on settings (user, dev)
	-- Returns module (possibly nil) and success code to differentiate returning nil due to error vs Scriptable
	function ControlModule:SelectTouchModule()
		if not UserInputService.TouchEnabled then
			return nil, false
		end
		local touchModule
		local DevMovementMode = Players.LocalPlayer.DevTouchMovementMode
		if DevMovementMode == Enum.DevTouchMovementMode.UserChoice then
			touchModule = movementEnumToModuleMap[UserGameSettings.TouchMovementMode]
		elseif DevMovementMode == Enum.DevTouchMovementMode.Scriptable then
			return nil, true
		else
			touchModule = movementEnumToModuleMap[DevMovementMode]
		end
		return touchModule, true
	end
	
	local function calculateRawMoveVector(humanoid, cameraRelativeMoveVector)
		local camera = Workspace.CurrentCamera
		if not camera then
			return cameraRelativeMoveVector
		end
	
		if humanoid:GetState() == Enum.HumanoidStateType.Swimming then
			return camera.CFrame:VectorToWorldSpace(cameraRelativeMoveVector)
		end
	
		local c, s
		local _, _, _, R00, R01, R02, _, _, R12, _, _, R22 = camera.CFrame:GetComponents()
		if R12 < 1 and R12 > -1 then
			-- X and Z components from back vector.
			c = R22
			s = R02
		else
			-- In this case the camera is looking straight up or straight down.
			-- Use X components from right and up vectors.
			c = R00
			s = -R01*math.sign(R12)
		end
		local norm = math.sqrt(c*c + s*s)
		return Vector3.new(
			(c*cameraRelativeMoveVector.x + s*cameraRelativeMoveVector.z)/norm,
			0,
			(c*cameraRelativeMoveVector.z - s*cameraRelativeMoveVector.x)/norm
		)
	end
	
	function ControlModule:OnRenderStepped(dt)
		if self.activeController and self.activeController.enabled and self.humanoid then
			-- Give the controller a chance to adjust its state
			self.activeController:OnRenderStepped(dt)
	
			-- Now retrieve info from the controller
			local moveVector = self.activeController:GetMoveVector()
			local cameraRelative = self.activeController:IsMoveVectorCameraRelative()
	
			local clickToMoveController = self:GetClickToMoveController()
			if self.activeController ~= clickToMoveController then
				if moveVector.magnitude > 0 then
					-- Clean up any developer started MoveTo path
					clickToMoveController:CleanupPath()
				else
					-- Get move vector for developer started MoveTo
					clickToMoveController:OnRenderStepped(dt)
					moveVector = clickToMoveController:GetMoveVector()
					cameraRelative = clickToMoveController:IsMoveVectorCameraRelative()
				end
			end
	
			-- Are we driving a vehicle ?
			local vehicleConsumedInput = false
			if self.vehicleController then
				moveVector, vehicleConsumedInput = self.vehicleController:Update(moveVector, cameraRelative, self.activeControlModule==Gamepad)
			end
	
			-- If not, move the player
			-- Verification of vehicleConsumedInput is commented out to preserve legacy behavior,
			-- in case some game relies on Humanoid.MoveDirection still being set while in a VehicleSeat
			--if not vehicleConsumedInput then
				if cameraRelative then
					moveVector = calculateRawMoveVector(self.humanoid, moveVector)
				end
				self.moveFunction(Players.LocalPlayer, moveVector, false)
			--end
	
			-- And make them jump if needed
			self.humanoid.Jump = self.activeController:GetIsJumping() or (self.touchJumpController and self.touchJumpController:GetIsJumping())
		end
	end
	
	function ControlModule:OnHumanoidSeated(active, currentSeatPart)
		if active then
			if currentSeatPart and currentSeatPart:IsA("VehicleSeat") then
				if not self.vehicleController then
					self.vehicleController = self.vehicleController.new(CONTROL_ACTION_PRIORITY)
				end
				self.vehicleController:Enable(true, currentSeatPart)
			end
		else
			if self.vehicleController then
				self.vehicleController:Enable(false, currentSeatPart)
			end
		end
	end
	
	function ControlModule:OnCharacterAdded(char)
		self.humanoid = char:FindFirstChildOfClass("Humanoid")
		while not self.humanoid do
			char.ChildAdded:wait()
			self.humanoid = char:FindFirstChildOfClass("Humanoid")
		end
	
		if self.touchGui then
			self.touchGui.Enabled = true
		end
	
		if self.humanoidSeatedConn then
			self.humanoidSeatedConn:Disconnect()
			self.humanoidSeatedConn = nil
		end
		self.humanoidSeatedConn = self.humanoid.Seated:Connect(function(active, currentSeatPart)
			self:OnHumanoidSeated(active, currentSeatPart)
		end)
	end
	
	function ControlModule:OnCharacterRemoving(char)
		self.humanoid = nil
	
		if self.touchGui then
			self.touchGui.Enabled = false
		end
	end
	
	-- Helper function to lazily instantiate a controller if it does not yet exist,
	-- disable the active controller if it is different from the on being switched to,
	-- and then enable the requested controller. The argument to this function must be
	-- a reference to one of the control modules, i.e. Keyboard, Gamepad, etc.
	function ControlModule:SwitchToController(controlModule)
		if not controlModule then
			if self.activeController then
				self.activeController:Enable(false)
			end
			self.activeController = nil
			self.activeControlModule = nil
		else
			if not self.controllers[controlModule] then
				self.controllers[controlModule] = controlModule.new(CONTROL_ACTION_PRIORITY)
			end
	
			if self.activeController ~= self.controllers[controlModule] then
				if self.activeController then
					self.activeController:Enable(false)
				end
				self.activeController = self.controllers[controlModule]
				self.activeControlModule = controlModule -- Only used to check if controller switch is necessary
	
				if self.touchControlFrame and (self.activeControlModule == ClickToMove
							or self.activeControlModule == TouchThumbstick
							or self.activeControlModule == DynamicThumbstick) then
					if not self.controllers[TouchJump] then
						self.controllers[TouchJump] = TouchJump.new()
					end
					self.touchJumpController = self.controllers[TouchJump]
					self.touchJumpController:Enable(true, self.touchControlFrame)
				else
					if self.touchJumpController then
						self.touchJumpController:Enable(false)
					end
				end
	
				self:EnableActiveControlModule()
			end
		end
	end
	
	function ControlModule:OnLastInputTypeChanged(newLastInputType)
		if lastInputType == newLastInputType then
			warn("LastInputType Change listener called with current type.")
		end
		lastInputType = newLastInputType
	
		if lastInputType == Enum.UserInputType.Touch then
			-- TODO: Check if touch module already active
			local touchModule, success = self:SelectTouchModule()
			if success then
				while not self.touchControlFrame do
					wait()
				end
				self:SwitchToController(touchModule)
			end
		elseif computerInputTypeToModuleMap[lastInputType] ~= nil then
			local computerModule = self:SelectComputerMovementModule()
			if computerModule then
				self:SwitchToController(computerModule)
			end
		end
	end
	
	-- Called when any relevant values of GameSettings or LocalPlayer change, forcing re-evalulation of
	-- current control scheme
	function ControlModule:OnComputerMovementModeChange()
		local controlModule, success =  self:SelectComputerMovementModule()
		if success then
			self:SwitchToController(controlModule)
		end
	end
	
	function ControlModule:OnTouchMovementModeChange()
		local touchModule, success = self:SelectTouchModule()
		if success then
			while not self.touchControlFrame do
				wait()
			end
			self:SwitchToController(touchModule)
		end
	end
	
	function ControlModule:CreateTouchGuiContainer()
		if self.touchGui then self.touchGui:Destroy() end
	
		-- Container for all touch device guis
		self.touchGui = Instance.new("ScreenGui")
		self.touchGui.Name = "TouchGui"
		self.touchGui.ResetOnSpawn = false
		self.touchGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
		self.touchGui.Enabled = self.humanoid ~= nil
	
		self.touchControlFrame = Instance.new("Frame")
		self.touchControlFrame.Name = "TouchControlFrame"
		self.touchControlFrame.Size = UDim2.new(1, 0, 1, 0)
		self.touchControlFrame.BackgroundTransparency = 1
		self.touchControlFrame.Parent = self.touchGui
	
		self.touchGui.Parent = self.playerGui
	end
	
	function ControlModule:GetClickToMoveController()
		if not self.controllers[ClickToMove] then
			self.controllers[ClickToMove] = ClickToMove.new(CONTROL_ACTION_PRIORITY)
		end
		return self.controllers[ClickToMove]
	end
	
	function ControlModule:IsJumping()
		if self.activeController then
			return self.activeController:GetIsJumping() or (self.touchJumpController and self.touchJumpController:GetIsJumping())
		end
		return false
	end
	
	return ControlModule.new()
end

function _PlayerModule()
	local PlayerModule = {}
	PlayerModule.__index = PlayerModule
	function PlayerModule.new()
		local self = setmetatable({},PlayerModule)
		self.cameras = _CameraModule()
		self.controls = _ControlModule()
		return self
	end
	function PlayerModule:GetCameras()
		return self.cameras
	end
	function PlayerModule:GetControls()
		return self.controls
	end
	function PlayerModule:GetClickToMoveController()
		return self.controls:GetClickToMoveController()
	end
	return PlayerModule.new()
end

function _sounds()
	
	local SetState = Instance.new("BindableEvent",script)
	
	local Players = game:GetService("Players")
	local RunService = game:GetService("RunService")
	
	local SOUND_DATA = {
		Climbing = {
			SoundId = "rbxasset://sounds/action_footsteps_plastic.mp3",
			Looped = true,
		},
		Died = {
			SoundId = "rbxasset://sounds/uuhhh.mp3",
		},
		FreeFalling = {
			SoundId = "rbxasset://sounds/action_falling.mp3",
			Looped = true,
		},
		GettingUp = {
			SoundId = "rbxasset://sounds/action_get_up.mp3",
		},
		Jumping = {
			SoundId = "rbxasset://sounds/action_jump.mp3",
		},
		Landing = {
			SoundId = "rbxasset://sounds/action_jump_land.mp3",
		},
		Running = {
			SoundId = "rbxasset://sounds/action_footsteps_plastic.mp3",
			Looped = true,
			Pitch = 1.85,
		},
		Splash = {
			SoundId = "rbxasset://sounds/impact_water.mp3",
		},
		Swimming = {
			SoundId = "rbxasset://sounds/action_swim.mp3",
			Looped = true,
			Pitch = 1.6,
		},
	}
	
	 -- wait for the first of the passed signals to fire
	local function waitForFirst(...)
		local shunt = Instance.new("BindableEvent")
		local slots = {...}
	
		local function fire(...)
			for i = 1, #slots do
				slots[i]:Disconnect()
			end
	
			return shunt:Fire(...)
		end
	
		for i = 1, #slots do
			slots[i] = slots[i]:Connect(fire)
		end
	
		return shunt.Event:Wait()
	end
	
	-- map a value from one range to another
	local function map(x, inMin, inMax, outMin, outMax)
		return (x - inMin)*(outMax - outMin)/(inMax - inMin) + outMin
	end
	
	local function playSound(sound)
		sound.TimePosition = 0
		sound.Playing = true
	end
	
	local function stopSound(sound)
		sound.Playing = false
		sound.TimePosition = 0
	end
	
	local function shallowCopy(t)
		local out = {}
		for k, v in pairs(t) do
			out[k] = v
		end
		return out
	end
	
	local function initializeSoundSystem(player, humanoid, rootPart)
		local sounds = {}
	
		-- initialize sounds
		for name, props in pairs(SOUND_DATA) do
			local sound = Instance.new("Sound")
			sound.Name = name
	
			-- set default values
			sound.Archivable = false
			sound.EmitterSize = 5
			sound.MaxDistance = 150
			sound.Volume = 0.65
	
			for propName, propValue in pairs(props) do
				sound[propName] = propValue
			end
	
			sound.Parent = rootPart
			sounds[name] = sound
		end
	
		local playingLoopedSounds = {}
	
		local function stopPlayingLoopedSounds(except)
			for sound in pairs(shallowCopy(playingLoopedSounds)) do
				if sound ~= except then
					sound.Playing = false
					playingLoopedSounds[sound] = nil
				end
			end
		end
	
		-- state transition callbacks
		local stateTransitions = {
			[Enum.HumanoidStateType.FallingDown] = function()
				stopPlayingLoopedSounds()
			end,
	
			[Enum.HumanoidStateType.GettingUp] = function()
				stopPlayingLoopedSounds()
				playSound(sounds.GettingUp)
			end,
	
			[Enum.HumanoidStateType.Jumping] = function()
				stopPlayingLoopedSounds()
				playSound(sounds.Jumping)
			end,
	
			[Enum.HumanoidStateType.Swimming] = function()
				local verticalSpeed = math.abs(rootPart.Velocity.Y)
				if verticalSpeed > 0.1 then
					sounds.Splash.Volume = math.clamp(map(verticalSpeed, 100, 350, 0.28, 1), 0, 1)
					playSound(sounds.Splash)
				end
				stopPlayingLoopedSounds(sounds.Swimming)
				sounds.Swimming.Playing = true
				playingLoopedSounds[sounds.Swimming] = true
			end,
	
			[Enum.HumanoidStateType.Freefall] = function()
				sounds.FreeFalling.Volume = 0
				stopPlayingLoopedSounds(sounds.FreeFalling)
				playingLoopedSounds[sounds.FreeFalling] = true
			end,
	
			[Enum.HumanoidStateType.Landed] = function()
				stopPlayingLoopedSounds()
				local verticalSpeed = math.abs(rootPart.Velocity.Y)
				if verticalSpeed > 75 then
					sounds.Landing.Volume = math.clamp(map(verticalSpeed, 50, 100, 0, 1), 0, 1)
					playSound(sounds.Landing)
				end
			end,
	
			[Enum.HumanoidStateType.Running] = function()
				stopPlayingLoopedSounds(sounds.Running)
				sounds.Running.Playing = true
				playingLoopedSounds[sounds.Running] = true
			end,
	
			[Enum.HumanoidStateType.Climbing] = function()
				local sound = sounds.Climbing
				if math.abs(rootPart.Velocity.Y) > 0.1 then
					sound.Playing = true
					stopPlayingLoopedSounds(sound)
				else
					stopPlayingLoopedSounds()
				end
				playingLoopedSounds[sound] = true
			end,
	
			[Enum.HumanoidStateType.Seated] = function()
				stopPlayingLoopedSounds()
			end,
	
			[Enum.HumanoidStateType.Dead] = function()
				stopPlayingLoopedSounds()
				playSound(sounds.Died)
			end,
		}
	
		-- updaters for looped sounds
		local loopedSoundUpdaters = {
			[sounds.Climbing] = function(dt, sound, vel)
				sound.Playing = vel.Magnitude > 0.1
			end,
	
			[sounds.FreeFalling] = function(dt, sound, vel)
				if vel.Magnitude > 75 then
					sound.Volume = math.clamp(sound.Volume + 0.9*dt, 0, 1)
				else
					sound.Volume = 0
				end
			end,
	
			[sounds.Running] = function(dt, sound, vel)
				sound.Playing = vel.Magnitude > 0.5 and humanoid.MoveDirection.Magnitude > 0.5
			end,
		}
	
		-- state substitutions to avoid duplicating entries in the state table
		local stateRemap = {
			[Enum.HumanoidStateType.RunningNoPhysics] = Enum.HumanoidStateType.Running,
		}
	
		local activeState = stateRemap[humanoid:GetState()] or humanoid:GetState()
		local activeConnections = {}
	
		local stateChangedConn = humanoid.StateChanged:Connect(function(_, state)
			state = stateRemap[state] or state
	
			if state ~= activeState then
				local transitionFunc = stateTransitions[state]
	
				if transitionFunc then
					transitionFunc()
				end
	
				activeState = state
			end
		end)
		
		local customStateChangedConn = SetState.Event:Connect(function(state)
			state = stateRemap[state] or state
	
			if state ~= activeState then
				local transitionFunc = stateTransitions[state]
	
				if transitionFunc then
					transitionFunc()
				end
	
				activeState = state
			end
		end)
	
		local steppedConn = RunService.Stepped:Connect(function(_, worldDt)
			-- update looped sounds on stepped
			for sound in pairs(playingLoopedSounds) do
				local updater = loopedSoundUpdaters[sound]
	
				if updater then
					updater(worldDt, sound, rootPart.Velocity)
				end
			end
		end)
	
		local humanoidAncestryChangedConn
		local rootPartAncestryChangedConn
		local characterAddedConn
	
		local function terminate()
			stateChangedConn:Disconnect()
			customStateChangedConn:Disconnect()
			steppedConn:Disconnect()
			humanoidAncestryChangedConn:Disconnect()
			rootPartAncestryChangedConn:Disconnect()
			characterAddedConn:Disconnect()
		end
	
		humanoidAncestryChangedConn = humanoid.AncestryChanged:Connect(function(_, parent)
			if not parent then
				terminate()
			end
		end)
	
		rootPartAncestryChangedConn = rootPart.AncestryChanged:Connect(function(_, parent)
			if not parent then
				terminate()
			end
		end)
	
		characterAddedConn = player.CharacterAdded:Connect(terminate)
	end
	
	local function playerAdded(player)
		local function characterAdded(character)
			-- Avoiding memory leaks in the face of Character/Humanoid/RootPart lifetime has a few complications:
			-- * character deparenting is a Remove instead of a Destroy, so signals are not cleaned up automatically.
			-- ** must use a waitForFirst on everything and listen for hierarchy changes.
			-- * the character might not be in the dm by the time CharacterAdded fires
			-- ** constantly check consistency with player.Character and abort if CharacterAdded is fired again
			-- * Humanoid may not exist immediately, and by the time it's inserted the character might be deparented.
			-- * RootPart probably won't exist immediately.
			-- ** by the time RootPart is inserted and Humanoid.RootPart is set, the character or the humanoid might be deparented.
	
			if not character.Parent then
				waitForFirst(character.AncestryChanged, player.CharacterAdded)
			end
	
			if player.Character ~= character or not character.Parent then
				return
			end
	
			local humanoid = character:FindFirstChildOfClass("Humanoid")
			while character:IsDescendantOf(game) and not humanoid do
				waitForFirst(character.ChildAdded, character.AncestryChanged, player.CharacterAdded)
				humanoid = character:FindFirstChildOfClass("Humanoid")
			end
	
			if player.Character ~= character or not character:IsDescendantOf(game) then
				return
			end
	
			-- must rely on HumanoidRootPart naming because Humanoid.RootPart does not fire changed signals
			local rootPart = character:FindFirstChild("HumanoidRootPart")
			while character:IsDescendantOf(game) and not rootPart do
				waitForFirst(character.ChildAdded, character.AncestryChanged, humanoid.AncestryChanged, player.CharacterAdded)
				rootPart = character:FindFirstChild("HumanoidRootPart")
			end
	
			if rootPart and humanoid:IsDescendantOf(game) and character:IsDescendantOf(game) and player.Character == character then
				initializeSoundSystem(player, humanoid, rootPart)
			end
		end
	
		if player.Character then
			characterAdded(player.Character)
		end
		player.CharacterAdded:Connect(characterAdded)
	end
	
	Players.PlayerAdded:Connect(playerAdded)
	for _, player in ipairs(Players:GetPlayers()) do
		playerAdded(player)
	end
	return SetState
end

function _StateTracker()
	local EPSILON = 0.1
	
	local SPEED = {
		["onRunning"] = true,
		["onClimbing"] = true 
	}
	
	local INAIR = {
		["onFreeFall"] = true,
		["onJumping"] = true
	}
	
	local STATEMAP = {
		["onRunning"] = Enum.HumanoidStateType.Running,
		["onJumping"] = Enum.HumanoidStateType.Jumping,
		["onFreeFall"] = Enum.HumanoidStateType.Freefall
	}
	
	local StateTracker = {}
	StateTracker.__index = StateTracker
	
	function StateTracker.new(humanoid, soundState)
		local self = setmetatable({}, StateTracker)
		
		self.Humanoid = humanoid
		self.HRP = humanoid.RootPart
		
		self.Speed = 0
		self.State = "onRunning"
		self.Jumped = false
		self.JumpTick = tick()
		
		self.SoundState = soundState
		
		self._ChangedEvent = Instance.new("BindableEvent")
		self.Changed = self._ChangedEvent.Event
		
		return self
	end
	
	function StateTracker:Destroy()
		self._ChangedEvent:Destroy()
	end
	
	function StateTracker:RequestedJump()
		self.Jumped = true
		self.JumpTick = tick()
	end
	
	function StateTracker:OnStep(gravityUp, grounded, isMoving)
		local cVelocity = self.HRP.Velocity
		local gVelocity = cVelocity:Dot(gravityUp)
		
		local oldState, oldSpeed = self.State, self.Speed
		
		local newState
		local newSpeed = cVelocity.Magnitude
	
		if (not grounded) then
			if (gVelocity > 0) then
				if (self.Jumped) then
					newState = "onJumping"
				else
					newState = "onFreeFall"
				end
			else
				if (self.Jumped) then
					self.Jumped = false
				end
				newState = "onFreeFall"
			end
		else
			if (self.Jumped and tick() - self.JumpTick > 0.1) then
				self.Jumped = false
			end
			newSpeed = (cVelocity - gVelocity*gravityUp).Magnitude
			newState = "onRunning"
		end
		
		newSpeed = isMoving and newSpeed or 0
		
		if (oldState ~= newState or (SPEED[newState] and math.abs(oldSpeed - newSpeed) > EPSILON)) then
			self.State = newState
			self.Speed = newSpeed
			self.SoundState:Fire(STATEMAP[newState])
			self._ChangedEvent:Fire(self.State, self.Speed)
		end
	end
	
	return StateTracker
end
function _InitObjects()
	local model = workspace:FindFirstChild("objects") or game:GetObjects("rbxassetid://5045408489")[1]
	local SPHERE = model:WaitForChild("Sphere")
	local FLOOR = model:WaitForChild("Floor")
	local VFORCE = model:WaitForChild("VectorForce")
	local BGYRO = model:WaitForChild("BodyGyro")
	local function initObjects(self)
		local hrp = self.HRP
		local humanoid = self.Humanoid
		local sphere = SPHERE:Clone()
		sphere.Parent = self.Character
		local floor = FLOOR:Clone()
		floor.Parent = self.Character
		local isR15 = (humanoid.RigType == Enum.HumanoidRigType.R15)
		local height = isR15 and (humanoid.HipHeight + 0.05) or 2
		local weld = Instance.new("Weld")
		weld.C0 = CFrame.new(0, -height, 0.1)
		weld.Part0 = hrp
		weld.Part1 = sphere
		weld.Parent = sphere
		local weld2 = Instance.new("Weld")
		weld2.C0 = CFrame.new(0, -(height + 1.5), 0)
		weld2.Part0 = hrp
		weld2.Part1 = floor
		weld2.Parent = floor
		local gyro = BGYRO:Clone()
		gyro.CFrame = hrp.CFrame
		gyro.Parent = hrp
		local vForce = VFORCE:Clone()
		vForce.Attachment0 = isR15 and hrp:WaitForChild("RootRigAttachment") or hrp:WaitForChild("RootAttachment")
		vForce.Parent = hrp
		return sphere, gyro, vForce, floor
	end
	return initObjects
end
local plr = game.Players.LocalPlayer
local ms = plr:GetMouse()
local char
plr.CharacterAdded:Connect(function(c)
	char = c
end)
function _R6()
	function r6()
	local Figure = char
	local Torso = Figure:WaitForChild("Torso")
	local RightShoulder = Torso:WaitForChild("Right Shoulder")
	local LeftShoulder = Torso:WaitForChild("Left Shoulder")
	local RightHip = Torso:WaitForChild("Right Hip")
	local LeftHip = Torso:WaitForChild("Left Hip")
	local Neck = Torso:WaitForChild("Neck")
	local Humanoid = Figure:WaitForChild("Humanoid")
	local pose = "Standing"
	local currentAnim = ""
	local currentAnimInstance = nil
	local currentAnimTrack = nil
	local currentAnimKeyframeHandler = nil
	local currentAnimSpeed = 1.0
	local animTable = {}
	local animNames = { 
		idle = 	{	
					{ id = "http://www.roblox.com/asset/?id=180435571", weight = 9 },
					{ id = "http://www.roblox.com/asset/?id=180435792", weight = 1 }
				},
		walk = 	{ 	
					{ id = "http://www.roblox.com/asset/?id=180426354", weight = 10 } 
				}, 
		run = 	{
					{ id = "run.xml", weight = 10 } 
				}, 
		jump = 	{
					{ id = "http://www.roblox.com/asset/?id=125750702", weight = 10 } 
				}, 
		fall = 	{
					{ id = "http://www.roblox.com/asset/?id=180436148", weight = 10 } 
				}, 
		climb = {
					{ id = "http://www.roblox.com/asset/?id=180436334", weight = 10 } 
				}, 
		sit = 	{
					{ id = "http://www.roblox.com/asset/?id=178130996", weight = 10 } 
				},	
		toolnone = {
					{ id = "http://www.roblox.com/asset/?id=182393478", weight = 10 } 
				},
		toolslash = {
					{ id = "http://www.roblox.com/asset/?id=129967390", weight = 10 } 
	--				{ id = "slash.xml", weight = 10 } 
				},
		toollunge = {
					{ id = "http://www.roblox.com/asset/?id=129967478", weight = 10 } 
				},
		wave = {
					{ id = "http://www.roblox.com/asset/?id=128777973", weight = 10 } 
				},
		point = {
					{ id = "http://www.roblox.com/asset/?id=128853357", weight = 10 } 
				},
		dance1 = {
					{ id = "http://www.roblox.com/asset/?id=182435998", weight = 10 }, 
					{ id = "http://www.roblox.com/asset/?id=182491037", weight = 10 }, 
					{ id = "http://www.roblox.com/asset/?id=182491065", weight = 10 } 
				},
		dance2 = {
					{ id = "http://www.roblox.com/asset/?id=182436842", weight = 10 }, 
					{ id = "http://www.roblox.com/asset/?id=182491248", weight = 10 }, 
					{ id = "http://www.roblox.com/asset/?id=182491277", weight = 10 } 
				},
		dance3 = {
					{ id = "http://www.roblox.com/asset/?id=182436935", weight = 10 }, 
					{ id = "http://www.roblox.com/asset/?id=182491368", weight = 10 }, 
					{ id = "http://www.roblox.com/asset/?id=182491423", weight = 10 } 
				},
		laugh = {
					{ id = "http://www.roblox.com/asset/?id=129423131", weight = 10 } 
				},
		cheer = {
					{ id = "http://www.roblox.com/asset/?id=129423030", weight = 10 } 
				},
	}
	local dances = {"dance1", "dance2", "dance3"}
	-- Existance in this list signifies that it is an emote, the value indicates if it is a looping emote
	local emoteNames = { wave = false, point = false, dance1 = true, dance2 = true, dance3 = true, laugh = false, cheer = false}
	function configureAnimationSet(name, fileList)
		if (animTable[name] ~= nil) then
			for _, connection in pairs(animTable[name].connections) do
				connection:disconnect()
			end
		end
		animTable[name] = {}
		animTable[name].count = 0
		animTable[name].totalWeight = 0	
		animTable[name].connections = {}
		-- check for config values
		local config = script:FindFirstChild(name)
		if (config ~= nil) then
	--		print("Loading anims " .. name)
			table.insert(animTable[name].connections, config.ChildAdded:connect(function(child) configureAnimationSet(name, fileList) end))
			table.insert(animTable[name].connections, config.ChildRemoved:connect(function(child) configureAnimationSet(name, fileList) end))
			local idx = 1
			for _, childPart in pairs(config:GetChildren()) do
				if (childPart:IsA("Animation")) then
					table.insert(animTable[name].connections, childPart.Changed:connect(function(property) configureAnimationSet(name, fileList) end))
					animTable[name][idx] = {}
					animTable[name][idx].anim = childPart
					local weightObject = childPart:FindFirstChild("Weight")
					if (weightObject == nil) then
						animTable[name][idx].weight = 1
					else
						animTable[name][idx].weight = weightObject.Value
					end
					animTable[name].count = animTable[name].count + 1
					animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight
		--			print(name .. " [" .. idx .. "] " .. animTable[name][idx].anim.AnimationId .. " (" .. animTable[name][idx].weight .. ")")
					idx = idx + 1
				end
			end
		end
		-- fallback to defaults
		if (animTable[name].count <= 0) then
			for idx, anim in pairs(fileList) do
				animTable[name][idx] = {}
				animTable[name][idx].anim = Instance.new("Animation")
				animTable[name][idx].anim.Name = name
				animTable[name][idx].anim.AnimationId = anim.id
				animTable[name][idx].weight = anim.weight
				animTable[name].count = animTable[name].count + 1
				animTable[name].totalWeight = animTable[name].totalWeight + anim.weight
	--			print(name .. " [" .. idx .. "] " .. anim.id .. " (" .. anim.weight .. ")")
			end
		end
	end
	-- Setup animation objects
	function scriptChildModified(child)
		local fileList = animNames[child.Name]
		if (fileList ~= nil) then
			configureAnimationSet(child.Name, fileList)
		end	
	end
	
	script.ChildAdded:connect(scriptChildModified)
	script.ChildRemoved:connect(scriptChildModified)
	
	
	for name, fileList in pairs(animNames) do 
		configureAnimationSet(name, fileList)
	end	
	
	-- ANIMATION
	
	-- declarations
	local toolAnim = "None"
	local toolAnimTime = 0
	
	local jumpAnimTime = 0
	local jumpAnimDuration = 0.3
	
	local toolTransitionTime = 0.1
	local fallTransitionTime = 0.3
	local jumpMaxLimbVelocity = 0.75
	
	-- functions
	
	function stopAllAnimations()
		local oldAnim = currentAnim
	
		-- return to idle if finishing an emote
		if (emoteNames[oldAnim] ~= nil and emoteNames[oldAnim] == false) then
			oldAnim = "idle"
		end
	
		currentAnim = ""
		currentAnimInstance = nil
		if (currentAnimKeyframeHandler ~= nil) then
			currentAnimKeyframeHandler:disconnect()
		end
	
		if (currentAnimTrack ~= nil) then
			currentAnimTrack:Stop()
			currentAnimTrack:Destroy()
			currentAnimTrack = nil
		end
		return oldAnim
	end
	
	function setAnimationSpeed(speed)
		if speed ~= currentAnimSpeed then
			currentAnimSpeed = speed
			currentAnimTrack:AdjustSpeed(currentAnimSpeed)
		end
	end
	
	function keyFrameReachedFunc(frameName)
		if (frameName == "End") then
	
			local repeatAnim = currentAnim
			-- return to idle if finishing an emote
			if (emoteNames[repeatAnim] ~= nil and emoteNames[repeatAnim] == false) then
				repeatAnim = "idle"
			end
			
			local animSpeed = currentAnimSpeed
			playAnimation(repeatAnim, 0.0, Humanoid)
			setAnimationSpeed(animSpeed)
		end
	end
	
	-- Preload animations
	function playAnimation(animName, transitionTime, humanoid) 
			
		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
	--		print(animName .. " " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim
	
		-- switch animation		
		if (anim ~= currentAnimInstance) then
			
			if (currentAnimTrack ~= nil) then
				currentAnimTrack:Stop(transitionTime)
				currentAnimTrack:Destroy()
			end
	
			currentAnimSpeed = 1.0
		
			-- load it to the humanoid; get AnimationTrack
			currentAnimTrack = humanoid:LoadAnimation(anim)
			currentAnimTrack.Priority = Enum.AnimationPriority.Core
			 
			-- play the animation
			currentAnimTrack:Play(transitionTime)
			currentAnim = animName
			currentAnimInstance = anim
	
			-- set up keyframe name triggers
			if (currentAnimKeyframeHandler ~= nil) then
				currentAnimKeyframeHandler:disconnect()
			end
			currentAnimKeyframeHandler = currentAnimTrack.KeyframeReached:connect(keyFrameReachedFunc)
			
		end
	
	end
	
	-------------------------------------------------------------------------------------------
	-------------------------------------------------------------------------------------------
	
	local toolAnimName = ""
	local toolAnimTrack = nil
	local toolAnimInstance = nil
	local currentToolAnimKeyframeHandler = nil
	
	function toolKeyFrameReachedFunc(frameName)
		if (frameName == "End") then
	--		print("Keyframe : ".. frameName)	
			playToolAnimation(toolAnimName, 0.0, Humanoid)
		end
	end
	
	
	function playToolAnimation(animName, transitionTime, humanoid, priority)	 
			
			local roll = math.random(1, animTable[animName].totalWeight) 
			local origRoll = roll
			local idx = 1
			while (roll > animTable[animName][idx].weight) do
				roll = roll - animTable[animName][idx].weight
				idx = idx + 1
			end
	--		print(animName .. " * " .. idx .. " [" .. origRoll .. "]")
			local anim = animTable[animName][idx].anim
	
			if (toolAnimInstance ~= anim) then
				
				if (toolAnimTrack ~= nil) then
					toolAnimTrack:Stop()
					toolAnimTrack:Destroy()
					transitionTime = 0
				end
						
				-- load it to the humanoid; get AnimationTrack
				toolAnimTrack = humanoid:LoadAnimation(anim)
				if priority then
					toolAnimTrack.Priority = priority
				end
				 
				-- play the animation
				toolAnimTrack:Play(transitionTime)
				toolAnimName = animName
				toolAnimInstance = anim
	
				currentToolAnimKeyframeHandler = toolAnimTrack.KeyframeReached:connect(toolKeyFrameReachedFunc)
			end
	end
	
	function stopToolAnimations()
		local oldAnim = toolAnimName
	
		if (currentToolAnimKeyframeHandler ~= nil) then
			currentToolAnimKeyframeHandler:disconnect()
		end
	
		toolAnimName = ""
		toolAnimInstance = nil
		if (toolAnimTrack ~= nil) then
			toolAnimTrack:Stop()
			toolAnimTrack:Destroy()
			toolAnimTrack = nil
		end
	
	
		return oldAnim
	end
	
	-------------------------------------------------------------------------------------------
	-------------------------------------------------------------------------------------------
	
	
	function onRunning(speed)
		if speed > 0.01 then
			playAnimation("walk", 0.1, Humanoid)
			if currentAnimInstance and currentAnimInstance.AnimationId == "http://www.roblox.com/asset/?id=180426354" then
				setAnimationSpeed(speed / 14.5)
			end
			pose = "Running"
		else
			if emoteNames[currentAnim] == nil then
				playAnimation("idle", 0.1, Humanoid)
				pose = "Standing"
			end
		end
	end
	
	function onDied()
		pose = "Dead"
	end
	
	function onJumping()
		playAnimation("jump", 0.1, Humanoid)
		jumpAnimTime = jumpAnimDuration
		pose = "Jumping"
	end
	
	function onClimbing(speed)
		playAnimation("climb", 0.1, Humanoid)
		setAnimationSpeed(speed / 12.0)
		pose = "Climbing"
	end
	
	function onGettingUp()
		pose = "GettingUp"
	end
	
	function onFreeFall()
		if (jumpAnimTime <= 0) then
			playAnimation("fall", fallTransitionTime, Humanoid)
		end
		pose = "FreeFall"
	end
	
	function onFallingDown()
		pose = "FallingDown"
	end
	
	function onSeated()
		pose = "Seated"
	end
	
	function onPlatformStanding()
		pose = "PlatformStanding"
	end
	
	function onSwimming(speed)
		if speed > 0 then
			pose = "Running"
		else
			pose = "Standing"
		end
	end
	
	function getTool()	
		for _, kid in ipairs(Figure:GetChildren()) do
			if kid.className == "Tool" then return kid end
		end
		return nil
	end
	
	function getToolAnim(tool)
		for _, c in ipairs(tool:GetChildren()) do
			if c.Name == "toolanim" and c.className == "StringValue" then
				return c
			end
		end
		return nil
	end
	
	function animateTool()
		
		if (toolAnim == "None") then
			playToolAnimation("toolnone", toolTransitionTime, Humanoid, Enum.AnimationPriority.Idle)
			return
		end
	
		if (toolAnim == "Slash") then
			playToolAnimation("toolslash", 0, Humanoid, Enum.AnimationPriority.Action)
			return
		end
	
		if (toolAnim == "Lunge") then
			playToolAnimation("toollunge", 0, Humanoid, Enum.AnimationPriority.Action)
			return
		end
	end
	
	function moveSit()
		RightShoulder.MaxVelocity = 0.15
		LeftShoulder.MaxVelocity = 0.15
		RightShoulder:SetDesiredAngle(3.14 /2)
		LeftShoulder:SetDesiredAngle(-3.14 /2)
		RightHip:SetDesiredAngle(3.14 /2)
		LeftHip:SetDesiredAngle(-3.14 /2)
	end
	
	local lastTick = 0
	
	function move(time)
		local amplitude = 1
		local frequency = 1
	  	local deltaTime = time - lastTick
	  	lastTick = time
	
		local climbFudge = 0
		local setAngles = false
	
	  	if (jumpAnimTime > 0) then
	  		jumpAnimTime = jumpAnimTime - deltaTime
	  	end
	
		if (pose == "FreeFall" and jumpAnimTime <= 0) then
			playAnimation("fall", fallTransitionTime, Humanoid)
		elseif (pose == "Seated") then
			playAnimation("sit", 0.5, Humanoid)
			return
		elseif (pose == "Running") then
			playAnimation("walk", 0.1, Humanoid)
		elseif (pose == "Dead" or pose == "GettingUp" or pose == "FallingDown" or pose == "Seated" or pose == "PlatformStanding") then
	--		print("Wha " .. pose)
			stopAllAnimations()
			amplitude = 0.1
			frequency = 1
			setAngles = true
		end
	
		if (setAngles) then
			local desiredAngle = amplitude * math.sin(time * frequency)
	
			RightShoulder:SetDesiredAngle(desiredAngle + climbFudge)
			LeftShoulder:SetDesiredAngle(desiredAngle - climbFudge)
			RightHip:SetDesiredAngle(-desiredAngle)
			LeftHip:SetDesiredAngle(-desiredAngle)
		end
	
		-- Tool Animation handling
		local tool = getTool()
		if tool and tool:FindFirstChild("Handle") then
		
			local animStringValueObject = getToolAnim(tool)
	
			if animStringValueObject then
				toolAnim = animStringValueObject.Value
				-- message recieved, delete StringValue
				animStringValueObject.Parent = nil
				toolAnimTime = time + .3
			end
	
			if time > toolAnimTime then
				toolAnimTime = 0
				toolAnim = "None"
			end
	
			animateTool()		
		else
			stopToolAnimations()
			toolAnim = "None"
			toolAnimInstance = nil
			toolAnimTime = 0
		end
	end
	
	
	local events = {}
	local eventHum = Humanoid
	
	local function onUnhook()
		for i = 1, #events do
			events[i]:Disconnect()
		end
		events = {}
	end
	
	local function onHook()
		onUnhook()
		
		pose = eventHum.Sit and "Seated" or "Standing"
		
		events = {
			eventHum.Died:connect(onDied),
			eventHum.Running:connect(onRunning),
			eventHum.Jumping:connect(onJumping),
			eventHum.Climbing:connect(onClimbing),
			eventHum.GettingUp:connect(onGettingUp),
			eventHum.FreeFalling:connect(onFreeFall),
			eventHum.FallingDown:connect(onFallingDown),
			eventHum.Seated:connect(onSeated),
			eventHum.PlatformStanding:connect(onPlatformStanding),
			eventHum.Swimming:connect(onSwimming)
		}
	end
	
	
	onHook()
	
	-- setup emote chat hook
	game:GetService("Players").LocalPlayer.Chatted:connect(function(msg)
		local emote = ""
		if msg == "/e dance" then
			emote = dances[math.random(1, #dances)]
		elseif (string.sub(msg, 1, 3) == "/e ") then
			emote = string.sub(msg, 4)
		elseif (string.sub(msg, 1, 7) == "/emote ") then
			emote = string.sub(msg, 8)
		end
		
		if (pose == "Standing" and emoteNames[emote] ~= nil) then
			playAnimation(emote, 0.1, Humanoid)
		end
	
	end)
	
	
	-- main program
	
	-- initialize to idle
	playAnimation("idle", 0.1, Humanoid)
	pose = "Standing"
	
	spawn(function()
		while Figure.Parent ~= nil do
			local _, time = wait(0.1)
			move(time)
		end
	end)
	
	return {
		onRunning = onRunning, 
		onDied = onDied, 
		onJumping = onJumping, 
		onClimbing = onClimbing, 
		onGettingUp = onGettingUp, 
		onFreeFall = onFreeFall, 
		onFallingDown = onFallingDown, 
		onSeated = onSeated, 
		onPlatformStanding = onPlatformStanding,
		onHook = onHook,
		onUnhook = onUnhook
	}
	
	end
	return r6()
end

function _R15()
	local function r15()
		
	local Character = char
	local Humanoid = Character:WaitForChild("Humanoid")
	local pose = "Standing"
	
	local userNoUpdateOnLoopSuccess, userNoUpdateOnLoopValue = pcall(function() return UserSettings():IsUserFeatureEnabled("UserNoUpdateOnLoop") end)
	local userNoUpdateOnLoop = userNoUpdateOnLoopSuccess and userNoUpdateOnLoopValue
	local userAnimationSpeedDampeningSuccess, userAnimationSpeedDampeningValue = pcall(function() return UserSettings():IsUserFeatureEnabled("UserAnimationSpeedDampening") end)
	local userAnimationSpeedDampening = userAnimationSpeedDampeningSuccess and userAnimationSpeedDampeningValue
	
	local animateScriptEmoteHookFlagExists, animateScriptEmoteHookFlagEnabled = pcall(function()
		return UserSettings():IsUserFeatureEnabled("UserAnimateScriptEmoteHook")
	end)
	local FFlagAnimateScriptEmoteHook = animateScriptEmoteHookFlagExists and animateScriptEmoteHookFlagEnabled
	
	local AnimationSpeedDampeningObject = script:FindFirstChild("ScaleDampeningPercent")
	local HumanoidHipHeight = 2
	
	local EMOTE_TRANSITION_TIME = 0.1
	
	local currentAnim = ""
	local currentAnimInstance = nil
	local currentAnimTrack = nil
	local currentAnimKeyframeHandler = nil
	local currentAnimSpeed = 1.0
	
	local runAnimTrack = nil
	local runAnimKeyframeHandler = nil
	
	local animTable = {}
	local animNames = { 
		idle = 	{	
					{ id = "http://www.roblox.com/asset/?id=507766666", weight = 1 },
					{ id = "http://www.roblox.com/asset/?id=507766951", weight = 1 },
					{ id = "http://www.roblox.com/asset/?id=507766388", weight = 9 }
				},
		walk = 	{ 	
					{ id = "http://www.roblox.com/asset/?id=507777826", weight = 10 } 
				}, 
		run = 	{
					{ id = "http://www.roblox.com/asset/?id=507767714", weight = 10 } 
				}, 
		swim = 	{
					{ id = "http://www.roblox.com/asset/?id=507784897", weight = 10 } 
				}, 
		swimidle = 	{
					{ id = "http://www.roblox.com/asset/?id=507785072", weight = 10 } 
				}, 
		jump = 	{
					{ id = "http://www.roblox.com/asset/?id=507765000", weight = 10 } 
				}, 
		fall = 	{
					{ id = "http://www.roblox.com/asset/?id=507767968", weight = 10 } 
				}, 
		climb = {
					{ id = "http://www.roblox.com/asset/?id=507765644", weight = 10 } 
				}, 
		sit = 	{
					{ id = "http://www.roblox.com/asset/?id=2506281703", weight = 10 } 
				},	
		toolnone = {
					{ id = "http://www.roblox.com/asset/?id=507768375", weight = 10 } 
				},
		toolslash = {
					{ id = "http://www.roblox.com/asset/?id=522635514", weight = 10 } 
				},
		toollunge = {
					{ id = "http://www.roblox.com/asset/?id=522638767", weight = 10 } 
				},
		wave = {
					{ id = "http://www.roblox.com/asset/?id=507770239", weight = 10 } 
				},
		point = {
					{ id = "http://www.roblox.com/asset/?id=507770453", weight = 10 } 
				},
		dance = {
					{ id = "http://www.roblox.com/asset/?id=507771019", weight = 10 }, 
					{ id = "http://www.roblox.com/asset/?id=507771955", weight = 10 }, 
					{ id = "http://www.roblox.com/asset/?id=507772104", weight = 10 } 
				},
		dance2 = {
					{ id = "http://www.roblox.com/asset/?id=507776043", weight = 10 }, 
					{ id = "http://www.roblox.com/asset/?id=507776720", weight = 10 }, 
					{ id = "http://www.roblox.com/asset/?id=507776879", weight = 10 } 
				},
		dance3 = {
					{ id = "http://www.roblox.com/asset/?id=507777268", weight = 10 }, 
					{ id = "http://www.roblox.com/asset/?id=507777451", weight = 10 }, 
					{ id = "http://www.roblox.com/asset/?id=507777623", weight = 10 } 
				},
		laugh = {
					{ id = "http://www.roblox.com/asset/?id=507770818", weight = 10 } 
				},
		cheer = {
					{ id = "http://www.roblox.com/asset/?id=507770677", weight = 10 } 
				},
	}
	
	-- Existance in this list signifies that it is an emote, the value indicates if it is a looping emote
	local emoteNames = { wave = false, point = false, dance = true, dance2 = true, dance3 = true, laugh = false, cheer = false}
	
	local PreloadAnimsUserFlag = false
	local PreloadedAnims = {}
	local successPreloadAnim, msgPreloadAnim = pcall(function()
		PreloadAnimsUserFlag = UserSettings():IsUserFeatureEnabled("UserPreloadAnimations")
	end)
	if not successPreloadAnim then
		PreloadAnimsUserFlag = false
	end
	
	math.randomseed(tick())
	
	function findExistingAnimationInSet(set, anim)
		if set == nil or anim == nil then
			return 0
		end
		
		for idx = 1, set.count, 1 do 
			if set[idx].anim.AnimationId == anim.AnimationId then
				return idx
			end
		end
		
		return 0
	end
	
	function configureAnimationSet(name, fileList)
		if (animTable[name] ~= nil) then
			for _, connection in pairs(animTable[name].connections) do
				connection:disconnect()
			end
		end
		animTable[name] = {}
		animTable[name].count = 0
		animTable[name].totalWeight = 0	
		animTable[name].connections = {}
	
		local allowCustomAnimations = true
	
		local success, msg = pcall(function() allowCustomAnimations = game:GetService("StarterPlayer").AllowCustomAnimations end)
		if not success then
			allowCustomAnimations = true
		end
	
		-- check for config values
		local config = script:FindFirstChild(name)
		if (allowCustomAnimations and config ~= nil) then
			table.insert(animTable[name].connections, config.ChildAdded:connect(function(child) configureAnimationSet(name, fileList) end))
			table.insert(animTable[name].connections, config.ChildRemoved:connect(function(child) configureAnimationSet(name, fileList) end))
			
			local idx = 0
			for _, childPart in pairs(config:GetChildren()) do
				if (childPart:IsA("Animation")) then
					local newWeight = 1
					local weightObject = childPart:FindFirstChild("Weight")
					if (weightObject ~= nil) then
						newWeight = weightObject.Value
					end
					animTable[name].count = animTable[name].count + 1
					idx = animTable[name].count
					animTable[name][idx] = {}
					animTable[name][idx].anim = childPart
					animTable[name][idx].weight = newWeight
					animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight
					table.insert(animTable[name].connections, childPart.Changed:connect(function(property) configureAnimationSet(name, fileList) end))
					table.insert(animTable[name].connections, childPart.ChildAdded:connect(function(property) configureAnimationSet(name, fileList) end))
					table.insert(animTable[name].connections, childPart.ChildRemoved:connect(function(property) configureAnimationSet(name, fileList) end))
				end
			end
		end
		
		-- fallback to defaults
		if (animTable[name].count <= 0) then
			for idx, anim in pairs(fileList) do
				animTable[name][idx] = {}
				animTable[name][idx].anim = Instance.new("Animation")
				animTable[name][idx].anim.Name = name
				animTable[name][idx].anim.AnimationId = anim.id
				animTable[name][idx].weight = anim.weight
				animTable[name].count = animTable[name].count + 1
				animTable[name].totalWeight = animTable[name].totalWeight + anim.weight
			end
		end
		
		-- preload anims
		if PreloadAnimsUserFlag then
			for i, animType in pairs(animTable) do
				for idx = 1, animType.count, 1 do
					if PreloadedAnims[animType[idx].anim.AnimationId] == nil then
						Humanoid:LoadAnimation(animType[idx].anim)
						PreloadedAnims[animType[idx].anim.AnimationId] = true
					end				
				end
			end
		end
	end
	
	------------------------------------------------------------------------------------------------------------
	
	function configureAnimationSetOld(name, fileList)
		if (animTable[name] ~= nil) then
			for _, connection in pairs(animTable[name].connections) do
				connection:disconnect()
			end
		end
		animTable[name] = {}
		animTable[name].count = 0
		animTable[name].totalWeight = 0	
		animTable[name].connections = {}
	
		local allowCustomAnimations = true
	
		local success, msg = pcall(function() allowCustomAnimations = game:GetService("StarterPlayer").AllowCustomAnimations end)
		if not success then
			allowCustomAnimations = true
		end
	
		-- check for config values
		local config = script:FindFirstChild(name)
		if (allowCustomAnimations and config ~= nil) then
			table.insert(animTable[name].connections, config.ChildAdded:connect(function(child) configureAnimationSet(name, fileList) end))
			table.insert(animTable[name].connections, config.ChildRemoved:connect(function(child) configureAnimationSet(name, fileList) end))
			local idx = 1
			for _, childPart in pairs(config:GetChildren()) do
				if (childPart:IsA("Animation")) then
					table.insert(animTable[name].connections, childPart.Changed:connect(function(property) configureAnimationSet(name, fileList) end))
					animTable[name][idx] = {}
					animTable[name][idx].anim = childPart
					local weightObject = childPart:FindFirstChild("Weight")
					if (weightObject == nil) then
						animTable[name][idx].weight = 1
					else
						animTable[name][idx].weight = weightObject.Value
					end
					animTable[name].count = animTable[name].count + 1
					animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight
					idx = idx + 1
				end
			end
		end
	
		-- fallback to defaults
		if (animTable[name].count <= 0) then
			for idx, anim in pairs(fileList) do
				animTable[name][idx] = {}
				animTable[name][idx].anim = Instance.new("Animation")
				animTable[name][idx].anim.Name = name
				animTable[name][idx].anim.AnimationId = anim.id
				animTable[name][idx].weight = anim.weight
				animTable[name].count = animTable[name].count + 1
				animTable[name].totalWeight = animTable[name].totalWeight + anim.weight
				-- print(name .. " [" .. idx .. "] " .. anim.id .. " (" .. anim.weight .. ")")
			end
		end
		
		-- preload anims
		if PreloadAnimsUserFlag then
			for i, animType in pairs(animTable) do
				for idx = 1, animType.count, 1 do 
					Humanoid:LoadAnimation(animType[idx].anim)
				end
			end
		end
	end
	
	-- Setup animation objects
	function scriptChildModified(child)
		local fileList = animNames[child.Name]
		if (fileList ~= nil) then
			configureAnimationSet(child.Name, fileList)
		end	
	end
	
	script.ChildAdded:connect(scriptChildModified)
	script.ChildRemoved:connect(scriptChildModified)
	
	
	for name, fileList in pairs(animNames) do 
		configureAnimationSet(name, fileList)
	end	
	
	-- ANIMATION
	
	-- declarations
	local toolAnim = "None"
	local toolAnimTime = 0
	
	local jumpAnimTime = 0
	local jumpAnimDuration = 0.31
	
	local toolTransitionTime = 0.1
	local fallTransitionTime = 0.2
	
	local currentlyPlayingEmote = false
	
	-- functions
	
	function stopAllAnimations()
		local oldAnim = currentAnim
	
		-- return to idle if finishing an emote
		if (emoteNames[oldAnim] ~= nil and emoteNames[oldAnim] == false) then
			oldAnim = "idle"
		end
		
		if FFlagAnimateScriptEmoteHook and currentlyPlayingEmote then
			oldAnim = "idle"
			currentlyPlayingEmote = false
		end
	
		currentAnim = ""
		currentAnimInstance = nil
		if (currentAnimKeyframeHandler ~= nil) then
			currentAnimKeyframeHandler:disconnect()
		end
	
		if (currentAnimTrack ~= nil) then
			currentAnimTrack:Stop()
			currentAnimTrack:Destroy()
			currentAnimTrack = nil
		end
	
		-- clean up walk if there is one
		if (runAnimKeyframeHandler ~= nil) then
			runAnimKeyframeHandler:disconnect()
		end
		
		if (runAnimTrack ~= nil) then
			runAnimTrack:Stop()
			runAnimTrack:Destroy()
			runAnimTrack = nil
		end
		
		return oldAnim
	end
	
	function getHeightScale()
		if Humanoid then
			if not Humanoid.AutomaticScalingEnabled then
				return 1
			end
			
			local scale = Humanoid.HipHeight / HumanoidHipHeight
			if userAnimationSpeedDampening then
				if AnimationSpeedDampeningObject == nil then
					AnimationSpeedDampeningObject = script:FindFirstChild("ScaleDampeningPercent")
				end
				if AnimationSpeedDampeningObject ~= nil then
					scale = 1 + (Humanoid.HipHeight - HumanoidHipHeight) * AnimationSpeedDampeningObject.Value / HumanoidHipHeight
				end
			end
			return scale
		end	
		return 1
	end
	
	local smallButNotZero = 0.0001
	function setRunSpeed(speed)
		local speedScaled = speed * 1.25
		local heightScale = getHeightScale()
		local runSpeed = speedScaled / heightScale
	
		if runSpeed ~= currentAnimSpeed then
			if runSpeed < 0.33 then
				currentAnimTrack:AdjustWeight(1.0)		
				runAnimTrack:AdjustWeight(smallButNotZero)
			elseif runSpeed < 0.66 then
				local weight = ((runSpeed - 0.33) / 0.33)
				currentAnimTrack:AdjustWeight(1.0 - weight + smallButNotZero)
				runAnimTrack:AdjustWeight(weight + smallButNotZero)
			else
				currentAnimTrack:AdjustWeight(smallButNotZero)
				runAnimTrack:AdjustWeight(1.0)
			end
			currentAnimSpeed = runSpeed
			runAnimTrack:AdjustSpeed(runSpeed)
			currentAnimTrack:AdjustSpeed(runSpeed)
		end	
	end
	
	function setAnimationSpeed(speed)
		if currentAnim == "walk" then
				setRunSpeed(speed)
		else
			if speed ~= currentAnimSpeed then
				currentAnimSpeed = speed
				currentAnimTrack:AdjustSpeed(currentAnimSpeed)
			end
		end
	end
	
	function keyFrameReachedFunc(frameName)
		if (frameName == "End") then
			if currentAnim == "walk" then
				if userNoUpdateOnLoop == true then
					if runAnimTrack.Looped ~= true then
						runAnimTrack.TimePosition = 0.0
					end
					if currentAnimTrack.Looped ~= true then
						currentAnimTrack.TimePosition = 0.0
					end
				else
					runAnimTrack.TimePosition = 0.0
					currentAnimTrack.TimePosition = 0.0
				end
			else
				local repeatAnim = currentAnim
				-- return to idle if finishing an emote
				if (emoteNames[repeatAnim] ~= nil and emoteNames[repeatAnim] == false) then
					repeatAnim = "idle"
				end
				
				if FFlagAnimateScriptEmoteHook and currentlyPlayingEmote then
					if currentAnimTrack.Looped then
						-- Allow the emote to loop
						return
					end
					
					repeatAnim = "idle"
					currentlyPlayingEmote = false
				end
				
				local animSpeed = currentAnimSpeed
				playAnimation(repeatAnim, 0.15, Humanoid)
				setAnimationSpeed(animSpeed)
			end
		end
	end
	
	function rollAnimation(animName)
		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
		return idx
	end
	
	local function switchToAnim(anim, animName, transitionTime, humanoid)
		-- switch animation		
		if (anim ~= currentAnimInstance) then
			
			if (currentAnimTrack ~= nil) then
				currentAnimTrack:Stop(transitionTime)
				currentAnimTrack:Destroy()
			end
	
			if (runAnimTrack ~= nil) then
				runAnimTrack:Stop(transitionTime)
				runAnimTrack:Destroy()
				if userNoUpdateOnLoop == true then
					runAnimTrack = nil
				end
			end
	
			currentAnimSpeed = 1.0
		
			-- load it to the humanoid; get AnimationTrack
			currentAnimTrack = humanoid:LoadAnimation(anim)
			currentAnimTrack.Priority = Enum.AnimationPriority.Core
			 
			-- play the animation
			currentAnimTrack:Play(transitionTime)
			currentAnim = animName
			currentAnimInstance = anim
	
			-- set up keyframe name triggers
			if (currentAnimKeyframeHandler ~= nil) then
				currentAnimKeyframeHandler:disconnect()
			end
			currentAnimKeyframeHandler = currentAnimTrack.KeyframeReached:connect(keyFrameReachedFunc)
			
			-- check to see if we need to blend a walk/run animation
			if animName == "walk" then
				local runAnimName = "run"
				local runIdx = rollAnimation(runAnimName)
	
				runAnimTrack = humanoid:LoadAnimation(animTable[runAnimName][runIdx].anim)
				runAnimTrack.Priority = Enum.AnimationPriority.Core
				runAnimTrack:Play(transitionTime)		
				
				if (runAnimKeyframeHandler ~= nil) then
					runAnimKeyframeHandler:disconnect()
				end
				runAnimKeyframeHandler = runAnimTrack.KeyframeReached:connect(keyFrameReachedFunc)	
			end
		end
	end
	
	function playAnimation(animName, transitionTime, humanoid) 	
		local idx = rollAnimation(animName)
		local anim = animTable[animName][idx].anim
	
		switchToAnim(anim, animName, transitionTime, humanoid)
		currentlyPlayingEmote = false
	end
	
	function playEmote(emoteAnim, transitionTime, humanoid)
		switchToAnim(emoteAnim, emoteAnim.Name, transitionTime, humanoid)
		currentlyPlayingEmote = true
	end
	
	-------------------------------------------------------------------------------------------
	-------------------------------------------------------------------------------------------
	
	local toolAnimName = ""
	local toolAnimTrack = nil
	local toolAnimInstance = nil
	local currentToolAnimKeyframeHandler = nil
	
	function toolKeyFrameReachedFunc(frameName)
		if (frameName == "End") then
			playToolAnimation(toolAnimName, 0.0, Humanoid)
		end
	end
	
	
	function playToolAnimation(animName, transitionTime, humanoid, priority)	 		
			local idx = rollAnimation(animName)
			local anim = animTable[animName][idx].anim
	
			if (toolAnimInstance ~= anim) then
				
				if (toolAnimTrack ~= nil) then
					toolAnimTrack:Stop()
					toolAnimTrack:Destroy()
					transitionTime = 0
				end
						
				-- load it to the humanoid; get AnimationTrack
				toolAnimTrack = humanoid:LoadAnimation(anim)
				if priority then
					toolAnimTrack.Priority = priority
				end
				 
				-- play the animation
				toolAnimTrack:Play(transitionTime)
				toolAnimName = animName
				toolAnimInstance = anim
	
				currentToolAnimKeyframeHandler = toolAnimTrack.KeyframeReached:connect(toolKeyFrameReachedFunc)
			end
	end
	
	function stopToolAnimations()
		local oldAnim = toolAnimName
	
		if (currentToolAnimKeyframeHandler ~= nil) then
			currentToolAnimKeyframeHandler:disconnect()
		end
	
		toolAnimName = ""
		toolAnimInstance = nil
		if (toolAnimTrack ~= nil) then
			toolAnimTrack:Stop()
			toolAnimTrack:Destroy()
			toolAnimTrack = nil
		end
	
		return oldAnim
	end
	
	-------------------------------------------------------------------------------------------
	-------------------------------------------------------------------------------------------
	-- STATE CHANGE HANDLERS
	
	function onRunning(speed)
		if speed > 0.75 then
			local scale = 16.0
			playAnimation("walk", 0.2, Humanoid)
			setAnimationSpeed(speed / scale)
			pose = "Running"
		else
			if emoteNames[currentAnim] == nil and not currentlyPlayingEmote then
				playAnimation("idle", 0.2, Humanoid)
				pose = "Standing"
			end
		end
	end
	
	function onDied()
		pose = "Dead"
	end
	
	function onJumping()
		playAnimation("jump", 0.1, Humanoid)
		jumpAnimTime = jumpAnimDuration
		pose = "Jumping"
	end
	
	function onClimbing(speed)
		local scale = 5.0
		playAnimation("climb", 0.1, Humanoid)
		setAnimationSpeed(speed / scale)
		pose = "Climbing"
	end
	
	function onGettingUp()
		pose = "GettingUp"
	end
	
	function onFreeFall()
		if (jumpAnimTime <= 0) then
			playAnimation("fall", fallTransitionTime, Humanoid)
		end
		pose = "FreeFall"
	end
	
	function onFallingDown()
		pose = "FallingDown"
	end
	
	function onSeated()
		pose = "Seated"
	end
	
	function onPlatformStanding()
		pose = "PlatformStanding"
	end
	
	-------------------------------------------------------------------------------------------
	-------------------------------------------------------------------------------------------
	
	function onSwimming(speed)
		if speed > 1.00 then
			local scale = 10.0
			playAnimation("swim", 0.4, Humanoid)
			setAnimationSpeed(speed / scale)
			pose = "Swimming"
		else
			playAnimation("swimidle", 0.4, Humanoid)
			pose = "Standing"
		end
	end
	
	function animateTool()
		if (toolAnim == "None") then
			playToolAnimation("toolnone", toolTransitionTime, Humanoid, Enum.AnimationPriority.Idle)
			return
		end
	
		if (toolAnim == "Slash") then
			playToolAnimation("toolslash", 0, Humanoid, Enum.AnimationPriority.Action)
			return
		end
	
		if (toolAnim == "Lunge") then
			playToolAnimation("toollunge", 0, Humanoid, Enum.AnimationPriority.Action)
			return
		end
	end
	
	function getToolAnim(tool)
		for _, c in ipairs(tool:GetChildren()) do
			if c.Name == "toolanim" and c.className == "StringValue" then
				return c
			end
		end
		return nil
	end
	
	local lastTick = 0
	
	function stepAnimate(currentTime)
		local amplitude = 1
		local frequency = 1
	  	local deltaTime = currentTime - lastTick
	  	lastTick = currentTime
	
		local climbFudge = 0
		local setAngles = false
	
	  	if (jumpAnimTime > 0) then
	  		jumpAnimTime = jumpAnimTime - deltaTime
	  	end
	
		if (pose == "FreeFall" and jumpAnimTime <= 0) then
			playAnimation("fall", fallTransitionTime, Humanoid)
		elseif (pose == "Seated") then
			playAnimation("sit", 0.5, Humanoid)
			return
		elseif (pose == "Running") then
			playAnimation("walk", 0.2, Humanoid)
		elseif (pose == "Dead" or pose == "GettingUp" or pose == "FallingDown" or pose == "Seated" or pose == "PlatformStanding") then
			stopAllAnimations()
			amplitude = 0.1
			frequency = 1
			setAngles = true
		end
	
		-- Tool Animation handling
		local tool = Character:FindFirstChildOfClass("Tool")
		if tool and tool:FindFirstChild("Handle") then
			local animStringValueObject = getToolAnim(tool)
	
			if animStringValueObject then
				toolAnim = animStringValueObject.Value
				-- message recieved, delete StringValue
				animStringValueObject.Parent = nil
				toolAnimTime = currentTime + .3
			end
	
			if currentTime > toolAnimTime then
				toolAnimTime = 0
				toolAnim = "None"
			end
	
			animateTool()		
		else
			stopToolAnimations()
			toolAnim = "None"
			toolAnimInstance = nil
			toolAnimTime = 0
		end
	end
	
	-- connect events
	
	local events = {}
	local eventHum = Humanoid
	
	local function onUnhook()
		for i = 1, #events do
			events[i]:Disconnect()
		end
		events = {}
	end
	
	local function onHook()
		onUnhook()
		
		pose = eventHum.Sit and "Seated" or "Standing"
		
		events = {
			eventHum.Died:connect(onDied),
			eventHum.Running:connect(onRunning),
			eventHum.Jumping:connect(onJumping),
			eventHum.Climbing:connect(onClimbing),
			eventHum.GettingUp:connect(onGettingUp),
			eventHum.FreeFalling:connect(onFreeFall),
			eventHum.FallingDown:connect(onFallingDown),
			eventHum.Seated:connect(onSeated),
			eventHum.PlatformStanding:connect(onPlatformStanding),
			eventHum.Swimming:connect(onSwimming)
		}
	end
	
	
	onHook()
	
	-- setup emote chat hook
	game:GetService("Players").LocalPlayer.Chatted:connect(function(msg)
		local emote = ""
		if (string.sub(msg, 1, 3) == "/e ") then
			emote = string.sub(msg, 4)
		elseif (string.sub(msg, 1, 7) == "/emote ") then
			emote = string.sub(msg, 8)
		end
		
		if (pose == "Standing" and emoteNames[emote] ~= nil) then
			playAnimation(emote, EMOTE_TRANSITION_TIME, Humanoid)
		end
	end)
	
	--[[ emote bindable hook
	if FFlagAnimateScriptEmoteHook then
		script:WaitForChild("PlayEmote").OnInvoke = function(emote)
			-- Only play emotes when idling
			if pose ~= "Standing" then
				return
			end
			if emoteNames[emote] ~= nil then
				-- Default emotes
				playAnimation(emote, EMOTE_TRANSITION_TIME, Humanoid)
				return true
			elseif typeof(emote) == "Instance" and emote:IsA("Animation") then
				-- Non-default emotes
				playEmote(emote, EMOTE_TRANSITION_TIME, Humanoid)
				return true
			end
			-- Return false to indicate that the emote could not be played
			return false
		end
	end
	]]
	-- initialize to idle
	playAnimation("idle", 0.1, Humanoid)
	pose = "Standing"
	-- loop to handle timed state transitions and tool animations
	spawn(function()
		while Character.Parent ~= nil do
			local _, currentGameTime = wait(0.1)
			stepAnimate(currentGameTime)
		end
	end)
	return {
		onRunning = onRunning, 
		onDied = onDied, 
		onJumping = onJumping, 
		onClimbing = onClimbing, 
		onGettingUp = onGettingUp, 
		onFreeFall = onFreeFall, 
		onFallingDown = onFallingDown, 
		onSeated = onSeated, 
		onPlatformStanding = onPlatformStanding,
		onHook = onHook,
		onUnhook = onUnhook
	}
	end
	return r15()
end
while true do
	wait(.1)
	if plr.Character ~= nil then
		char = plr.Character
		break
	end
end
function _Controller()
	local humanoid = char:WaitForChild("Humanoid")
	local animFuncs = {}
	if (humanoid.RigType == Enum.HumanoidRigType.R6) then
		animFuncs = _R6()
	else
		animFuncs = _R15()
	end
	print("Animation succes")
	return animFuncs
end
function _AnimationHandler()
local AnimationHandler = {}
AnimationHandler.__index = AnimationHandler

function AnimationHandler.new(humanoid, animate)
	local self = setmetatable({}, AnimationHandler)
	
	self._AnimFuncs = _Controller()
	self.Humanoid = humanoid
	
	return self
end

function AnimationHandler:EnableDefault(bool)
	if (bool) then
		self._AnimFuncs.onHook()
	else
		self._AnimFuncs.onUnhook()
	end
end

function AnimationHandler:Run(name, ...)
	self._AnimFuncs[name](...)
end

return AnimationHandler
end

function _GravityController()

local ZERO = Vector3.new(0, 0, 0)
local UNIT_X = Vector3.new(1, 0, 0)
local UNIT_Y = Vector3.new(0, 1, 0)
local UNIT_Z = Vector3.new(0, 0, 1)
local VEC_XY = Vector3.new(1, 0, 1)

local IDENTITYCF = CFrame.new()

local JUMPMODIFIER = 1.2
local TRANSITION = 0.15
local WALKF = 200 / 3

local UIS = game:GetService("UserInputService")
local RUNSERVICE = game:GetService("RunService")

local InitObjects = _InitObjects()
local AnimationHandler = _AnimationHandler()
local StateTracker = _StateTracker()

-- Class

local GravityController = {}
GravityController.__index = GravityController

-- Private Functions

local function getRotationBetween(u, v, axis)
	local dot, uxv = u:Dot(v), u:Cross(v)
	if (dot < -0.99999) then return CFrame.fromAxisAngle(axis, math.pi) end
	return CFrame.new(0, 0, 0, uxv.x, uxv.y, uxv.z, 1 + dot)
end

local function lookAt(pos, forward, up)
	local r = forward:Cross(up)
	local u = r:Cross(forward)
	return CFrame.fromMatrix(pos, r.Unit, u.Unit)
end

local function getMass(array)
	local mass = 0
	for _, part in next, array do
		if (part:IsA("BasePart")) then
			mass = mass + part:GetMass()
		end
	end
	return mass
end

-- Public Constructor
local ExecutedPlayerModule = _PlayerModule()
local ExecutedSounds = _sounds()
function GravityController.new(player)
	local self = setmetatable({}, GravityController)

	--[[ Camera
	local loaded = player.PlayerScripts:WaitForChild("PlayerScriptsLoader"):WaitForChild("Loaded")
	if (not loaded.Value) then
		--loaded.Changed:Wait()
	end
	]]
	local playerModule = ExecutedPlayerModule
	self.Controls = playerModule:GetControls()
	self.Camera = playerModule:GetCameras()
	
	-- Player and character
	self.Player = player
	self.Character = player.Character
	self.Humanoid = player.Character:WaitForChild("Humanoid")
	self.HRP = player.Character:WaitForChild("HumanoidRootPart")
	
	-- Animation
	self.AnimationHandler = AnimationHandler.new(self.Humanoid, self.Character:WaitForChild("Animate"))
	self.AnimationHandler:EnableDefault(false)
	local ssss = game:GetService("Players").LocalPlayer.PlayerScripts:FindFirstChild("SetState") or Instance.new("BindableEvent",game:GetService("Players").LocalPlayer.PlayerScripts)
	local soundState = ExecutedSounds
	ssss.Name = "SetState"
	
	self.StateTracker = StateTracker.new(self.Humanoid, soundState)
	self.StateTracker.Changed:Connect(function(name, speed)
		self.AnimationHandler:Run(name, speed)
	end)
	
	-- Collider and forces
	local collider, gyro, vForce, floor = InitObjects(self)
	
	floor.Touched:Connect(function() end)
	collider.Touched:Connect(function() end)
	
	self.Collider = collider
	self.VForce = vForce
	self.Gyro = gyro
	self.Floor = floor
	
	-- Attachment to parts
	self.LastPart = workspace.Terrain
	self.LastPartCFrame = IDENTITYCF
	
	-- Gravity properties
	self.GravityUp = UNIT_Y
	self.Ignores = {self.Character}
	
	function self.Camera.GetUpVector(this, oldUpVector)
		return self.GravityUp
	end
	
	-- Events etc
	self.Humanoid.PlatformStand = true
	
	self.CharacterMass = getMass(self.Character:GetDescendants())
	self.Character.AncestryChanged:Connect(function() self.CharacterMass = getMass(self.Character:GetDescendants()) end)
	
	self.JumpCon = RUNSERVICE.RenderStepped:Connect(function(dt) 
		if (self.Controls:IsJumping()) then
			self:OnJumpRequest()
		end
	end)
	
	self.DeathCon = self.Humanoid.Died:Connect(function() self:Destroy() end)
	self.SeatCon = self.Humanoid.Seated:Connect(function(active) if (active) then self:Destroy() end end)
	self.HeartCon = RUNSERVICE.Heartbeat:Connect(function(dt) self:OnHeartbeatStep(dt) end)
	RUNSERVICE:BindToRenderStep("GravityStep", Enum.RenderPriority.Input.Value + 1, function(dt) self:OnGravityStep(dt) end)
	
	
	return self
end

-- Public Methods

function GravityController:Destroy()
	self.JumpCon:Disconnect()
	self.DeathCon:Disconnect()
	self.SeatCon:Disconnect()
	self.HeartCon:Disconnect()
	
	RUNSERVICE:UnbindFromRenderStep("GravityStep")
	
	self.Collider:Destroy()
	self.VForce:Destroy()
	self.Gyro:Destroy()
	self.StateTracker:Destroy()
	
	self.Humanoid.PlatformStand = false
	self.AnimationHandler:EnableDefault(true)
	
	self.GravityUp = UNIT_Y
end

function GravityController:GetGravityUp(oldGravity)
	return oldGravity
end

function GravityController:IsGrounded(isJumpCheck)
	if (not isJumpCheck) then
		local parts = self.Floor:GetTouchingParts()
		for _, part in next, parts do
			if (not part:IsDescendantOf(self.Character)) then
				return true
			end
		end
	else
		if (self.StateTracker.Jumped) then
			return false
		end
	
		-- 1. check we are touching something with the collider
		local valid = {}
		local parts = self.Collider:GetTouchingParts()
		for _, part in next, parts do
			if (not part:IsDescendantOf(self.Character)) then
				table.insert(valid, part)
			end
		end
		
		if (#valid > 0) then
			-- 2. do a decently long downwards raycast
			local max = math.cos(self.Humanoid.MaxSlopeAngle)
			local ray = Ray.new(self.Collider.Position, -10 * self.GravityUp)
			local hit, pos, normal = workspace:FindPartOnRayWithWhitelist(ray, valid, true)
			
			-- 3. use slope to decide on jump
			if (hit and max <= self.GravityUp:Dot(normal)) then
				return true
			end
		end
	end
	return false
end

function GravityController:OnJumpRequest()
	if (not self.StateTracker.Jumped and self:IsGrounded(true)) then
		local hrpVel = self.HRP.Velocity
		self.HRP.Velocity = hrpVel + self.GravityUp*self.Humanoid.JumpPower*JUMPMODIFIER
		self.StateTracker:RequestedJump()
	end
end

function GravityController:GetMoveVector()
	return self.Controls:GetMoveVector()
end

function GravityController:OnHeartbeatStep(dt)
	local ray = Ray.new(self.Collider.Position, -1.1*self.GravityUp)
	local hit, pos, normal = workspace:FindPartOnRayWithIgnoreList(ray, self.Ignores)
	local lastPart = self.LastPart
	
	if (hit and lastPart and lastPart == hit) then
		local offset = self.LastPartCFrame:ToObjectSpace(self.HRP.CFrame)
		self.HRP.CFrame = hit.CFrame:ToWorldSpace(offset)
	end
	
	self.LastPart = hit
	self.LastPartCFrame = hit and hit.CFrame
end

function GravityController:OnGravityStep(dt)
	-- update gravity up vector
	local oldGravity = self.GravityUp
	local newGravity = self:GetGravityUp(oldGravity)
	
	local rotation = getRotationBetween(oldGravity, newGravity, workspace.CurrentCamera.CFrame.RightVector)
	rotation = IDENTITYCF:Lerp(rotation, TRANSITION)
	
	self.GravityUp = rotation * oldGravity
	
	-- get world move vector
	local camCF = workspace.CurrentCamera.CFrame
	local fDot = camCF.LookVector:Dot(newGravity)
	local cForward = math.abs(fDot) > 0.5 and -math.sign(fDot)*camCF.UpVector or camCF.LookVector
	
	local left = cForward:Cross(-newGravity).Unit
	local forward = -left:Cross(newGravity).Unit
	
	local move = self:GetMoveVector()
	local worldMove = forward*move.z - left*move.x
	worldMove = worldMove:Dot(worldMove) > 1 and worldMove.Unit or worldMove
	
	local isInputMoving = worldMove:Dot(worldMove) > 0
	
	-- get the desired character cframe
	local hrpCFLook = self.HRP.CFrame.LookVector
	local charF = hrpCFLook:Dot(forward)*forward + hrpCFLook:Dot(left)*left
	local charR = charF:Cross(newGravity).Unit
	local newCharCF = CFrame.fromMatrix(ZERO, charR, newGravity, -charF)
	
	local newCharRotation = IDENTITYCF
	if (isInputMoving) then
		newCharRotation = IDENTITYCF:Lerp(getRotationBetween(charF, worldMove, newGravity), 0.7)	
	end
	
	-- calculate forces
	local g = workspace.Gravity
	local gForce = g * self.CharacterMass * (UNIT_Y - newGravity)
	
	local cVelocity = self.HRP.Velocity
	local tVelocity = self.Humanoid.WalkSpeed * worldMove
	local gVelocity = cVelocity:Dot(newGravity)*newGravity
	local hVelocity = cVelocity - gVelocity
	
	if (hVelocity:Dot(hVelocity) < 1) then
		hVelocity = ZERO
	end
	
	local dVelocity = tVelocity - hVelocity
	local walkForceM = math.min(10000, WALKF * self.CharacterMass * dVelocity.Magnitude / (dt*60))
	local walkForce = walkForceM > 0 and dVelocity.Unit*walkForceM or ZERO
	
	-- mouse lock
	local charRotation = newCharRotation * newCharCF
	
	if (self.Camera:IsCamRelative()) then
		local lv = workspace.CurrentCamera.CFrame.LookVector
		local hlv = lv - charRotation.UpVector:Dot(lv)*charRotation.UpVector
		charRotation = lookAt(ZERO, hlv, charRotation.UpVector)
	end
	
	-- get state
	self.StateTracker:OnStep(self.GravityUp, self:IsGrounded(), isInputMoving)

	-- update values
	self.VForce.Force = walkForce + gForce
	self.Gyro.CFrame = charRotation
end
return GravityController
end
function _Draw3D()
	local module = {}
	
	-- Style Guide
	
	module.StyleGuide = {
		Point = {
			Thickness = 0.5;
			Color = Color3.new(0, 1, 0);
		},
		
		Line = {
			Thickness = 0.1;
			Color = Color3.new(1, 1, 0);
		},
		
		Ray = {
			Thickness = 0.1;
			Color = Color3.new(1, 0, 1);
		},
		
		Triangle = {
			Thickness = 0.05;
		};
		
		CFrame = {
			Thickness = 0.1;
			RightColor3 = Color3.new(1, 0, 0);
			UpColor3 = Color3.new(0, 1, 0);
			BackColor3 = Color3.new(0, 0, 1);
			PartProperties = {
				Material = Enum.Material.SmoothPlastic;
			};
		}
	}
	
	-- CONSTANTS
	
	local WEDGE = Instance.new("WedgePart")
	WEDGE.Material = Enum.Material.SmoothPlastic
	WEDGE.Anchored = true
	WEDGE.CanCollide = false
	
	local PART = Instance.new("Part")
	PART.Size = Vector3.new(0.1, 0.1, 0.1)
	PART.Anchored = true
	PART.CanCollide = false
	PART.TopSurface = Enum.SurfaceType.Smooth
	PART.BottomSurface = Enum.SurfaceType.Smooth
	PART.Material = Enum.Material.SmoothPlastic
	
	-- Functions
	
	local function draw(properties, style)
		local part = PART:Clone()
		for k, v in next, properties do
			part[k] = v
		end
		if (style) then
			for k, v in next, style do
				if (k ~= "Thickness") then
					part[k] = v
				end
			end
		end
		return part
	end
	
	function module.Draw(parent, properties)
		properties.Parent = parent
		return draw(properties, nil)
	end
	
	function module.Point(parent, cf_v3)
		local thickness = module.StyleGuide.Point.Thickness
		return draw({
			Size = Vector3.new(thickness, thickness, thickness);
			CFrame = (typeof(cf_v3) == "CFrame" and cf_v3 or CFrame.new(cf_v3));
			Parent = parent;
		}, module.StyleGuide.Point)
	end
	
	function module.Line(parent, a, b)
		local thickness = module.StyleGuide.Line.Thickness
		return draw({
			CFrame = CFrame.new((a + b)/2, b);
			Size = Vector3.new(thickness, thickness, (b - a).Magnitude);
			Parent = parent;
		}, module.StyleGuide.Line)
	end
	
	function module.Ray(parent, origin, direction)
		local thickness = module.StyleGuide.Ray.Thickness
		return draw({
			CFrame = CFrame.new(origin + direction/2, origin + direction);
			Size = Vector3.new(thickness, thickness, direction.Magnitude);
			Parent = parent;
		}, module.StyleGuide.Ray)
	end
	
	function module.Triangle(parent, a, b, c)
		local ab, ac, bc = b - a, c - a, c - b
		local abd, acd, bcd = ab:Dot(ab), ac:Dot(ac), bc:Dot(bc)
		
		if (abd > acd and abd > bcd) then
			c, a = a, c
		elseif (acd > bcd and acd > abd) then
			a, b = b, a
		end
		
		ab, ac, bc = b - a, c - a, c - b
		
		local right = ac:Cross(ab).Unit
		local up = bc:Cross(right).Unit
		local back = bc.Unit
		
		local height = math.abs(ab:Dot(up))
		local width1 = math.abs(ab:Dot(back))
		local width2 = math.abs(ac:Dot(back))
		
		local thickness = module.StyleGuide.Triangle.Thickness
		
		local w1 = WEDGE:Clone()
		w1.Size = Vector3.new(thickness, height, width1)
		w1.CFrame = CFrame.fromMatrix((a + b)/2, right, up, back)
		w1.Parent = parent
		
		local w2 = WEDGE:Clone()
		w2.Size = Vector3.new(thickness, height, width2)
		w2.CFrame = CFrame.fromMatrix((a + c)/2, -right, up, -back)
		w2.Parent = parent
		
		for k, v in next, module.StyleGuide.Triangle do
			if (k ~= "Thickness") then
				w1[k] = v
				w2[k] = v
			end
		end
		
		return w1, w2
	end
	
	function module.CFrame(parent, cf)
		local origin = cf.Position
		local r = cf.RightVector
		local u = cf.UpVector
		local b = -cf.LookVector
		
		local thickness = module.StyleGuide.CFrame.Thickness
		
		local right = draw({
			CFrame = CFrame.new(origin + r/2, origin + r);
			Size = Vector3.new(thickness, thickness, r.Magnitude);
			Color = module.StyleGuide.CFrame.RightColor3;
			Parent = parent;
		}, module.StyleGuide.CFrame.PartProperties)
		
		local up = draw({
			CFrame = CFrame.new(origin + u/2, origin + u);
			Size = Vector3.new(thickness, thickness, r.Magnitude);
			Color = module.StyleGuide.CFrame.UpColor3;
			Parent = parent;
		}, module.StyleGuide.CFrame.PartProperties)
		
		local back = draw({
			CFrame = CFrame.new(origin + b/2, origin + b);
			Size = Vector3.new(thickness, thickness, u.Magnitude);
			Color = module.StyleGuide.CFrame.BackColor3;
			Parent = parent;
		}, module.StyleGuide.CFrame.PartProperties)
		
		return right, up, back
	end
	
	-- Return
	
	return module
end
function _Draw2D()
	local module = {}
	
	-- Style Guide
	
	module.StyleGuide = {
		Point = {
			BorderSizePixel = 0;
			Size = UDim2.new(0, 4, 0, 4);
			BorderColor3 = Color3.new(0, 0, 0);
			BackgroundColor3 = Color3.new(0, 1, 0);
		},
		
		Line = {
			Thickness = 1;
			BorderSizePixel = 0;
			BorderColor3 = Color3.new(0, 0, 0);
			BackgroundColor3 = Color3.new(0, 1, 0);
		},
		
		Ray = {
			Thickness = 1;
			BorderSizePixel = 0;
			BorderColor3 = Color3.new(0, 0, 0);
			BackgroundColor3 = Color3.new(0, 1, 0);
		},
		
		Triangle = {
			ImageTransparency = 0;
			ImageColor3 = Color3.new(0, 1, 0);
		}
	}
	
	-- CONSTANTS
	
	local HALF = Vector2.new(0.5, 0.5)
	
	local RIGHT = "rbxassetid://2798177521"
	local LEFT = "rbxassetid://2798177955"
	
	local IMG = Instance.new("ImageLabel")
	IMG.BackgroundTransparency = 1
	IMG.AnchorPoint = HALF
	IMG.BorderSizePixel = 0
	
	local FRAME = Instance.new("Frame")
	FRAME.BorderSizePixel = 0
	FRAME.Size = UDim2.new(0, 0, 0, 0)
	FRAME.BackgroundColor3 = Color3.new(1, 1, 1)
	
	-- Functions
	
	function draw(properties, style)
		local frame = FRAME:Clone()
		for k, v in next, properties do
			frame[k] = v
		end
		if (style) then
			for k, v in next, style do
				if (k ~= "Thickness") then
					frame[k] = v
				end
			end
		end
		return frame
	end
	
	function module.Draw(parent, properties)
		properties.Parent = parent
		return draw(properties, nil)
	end
	
	function module.Point(parent, v2)
		return draw({
			AnchorPoint = HALF;
			Position = UDim2.new(0, v2.x, 0, v2.y);
			Parent = parent;
		}, module.StyleGuide.Point)
	end
	
	function module.Line(parent, a, b)
		local v = (b - a)
		local m = (a + b)/2
		
		return draw({
			AnchorPoint = HALF;
			Position = UDim2.new(0, m.x, 0, m.y);
			Size = UDim2.new(0, module.StyleGuide.Line.Thickness, 0, v.magnitude);
			Rotation = math.deg(math.atan2(v.y, v.x)) - 90;
			BackgroundColor3 = Color3.new(1, 1, 0);
			Parent = parent;
		}, module.StyleGuide.Line)
	end
	
	function module.Ray(parent, origin, direction)
		local a, b = origin, origin + direction
		local v = (b - a)
		local m = (a + b)/2
		
		return draw({
			AnchorPoint = HALF;
			Position = UDim2.new(0, m.x, 0, m.y);
			Size = UDim2.new(0, module.StyleGuide.Ray.Thickness, 0, v.magnitude);
			Rotation = math.deg(math.atan2(v.y, v.x)) - 90;
			Parent = parent;
		}, module.StyleGuide.Ray)
	end
	
	function module.Triangle(parent, a, b, c)
		local ab, ac, bc = b - a, c - a, c - b
		local abd, acd, bcd = ab:Dot(ab), ac:Dot(ac), bc:Dot(bc)
		
		if (abd > acd and abd > bcd) then
			c, a = a, c
		elseif (acd > bcd and acd > abd) then
			a, b = b, a
		end
		
		ab, ac, bc = b - a, c - a, c - b
		
		local unit = bc.unit
		local height = unit:Cross(ab)
		local flip = (height >= 0)
		local theta = math.deg(math.atan2(unit.y, unit.x)) + (flip and 0 or 180)
		
		local m1 = (a + b)/2
		local m2 = (a + c)/2
		
		local w1 = IMG:Clone()
		w1.Image = flip and RIGHT or LEFT
		w1.AnchorPoint = HALF
		w1.Size = UDim2.new(0, math.abs(unit:Dot(ab)), 0, height)
		w1.Position = UDim2.new(0, m1.x, 0, m1.y)
		w1.Rotation = theta
		w1.Parent = parent
		
		local w2 = IMG:Clone()
		w2.Image = flip and LEFT or RIGHT
		w2.AnchorPoint = HALF
		w2.Size = UDim2.new(0, math.abs(unit:Dot(ac)), 0, height)
		w2.Position = UDim2.new(0, m2.x, 0, m2.y)
		w2.Rotation = theta
		w2.Parent = parent
		
		for k, v in next, module.StyleGuide.Triangle do
			w1[k] = v
			w2[k] = v
		end
		
		return w1, w2
	end
	
	-- Return
	
	return module
end
function _DrawClass()
	local Draw2DModule = _Draw2D()
	local Draw3DModule = _Draw3D()
	
	--
	
	local DrawClass = {}
	local DrawClassStorage = setmetatable({}, {__mode = "k"})
	DrawClass.__index = DrawClass
	
	function DrawClass.new(parent)
		local self = setmetatable({}, DrawClass)
		
		self.Parent = parent
		DrawClassStorage[self] = {}
		
		self.Draw3D = {}
		for key, func in next, Draw3DModule do
			self.Draw3D[key] = function(...)
				local returns = {func(self.Parent, ...)}
				for i = 1, #returns do
					table.insert(DrawClassStorage[self], returns[i])
				end
				return unpack(returns)
			end
		end
		
		self.Draw2D = {}
		for key, func in next, Draw2DModule do
			self.Draw2D[key] = function(...)
				local returns = {func(self.Parent, ...)}
				for i = 1, #returns do
					table.insert(DrawClassStorage[self], returns[i])
				end
				return unpack(returns)
			end
		end
		
		return self
	end
	
	--
	
	function DrawClass:Clear()
		local t = DrawClassStorage[self]
		while (#t > 0) do
			local part = table.remove(t)
			if (part) then
				part:Destroy()
			end
		end
		DrawClassStorage[self] = {}
	end
	
	--
	
	return DrawClass
end


--END TEST
